/*!
 *
 * Bryntum Scheduler Pro 5.3.7
 *
 * Copyright(c) 2023 Bryntum AB
 * https://bryntum.com/contact
 * https://bryntum.com/license
 *
 */
var F=Object.defineProperty;var S=(f,e,t)=>e in f?F(f,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):f[e]=t;var v=(f,e,t)=>(S(f,typeof e!="symbol"?e+"":e,t),t);import{DomHelper as R,InstancePlugin as P,Delayable as K}from"./Editor.js";import{ColumnStore as k,Column as H,GridFeatureManager as B}from"./GridBase.js";let N=!1;class h extends H{static get defaults(){return{tree:!0,hideable:!1,minWidth:150}}static get fields(){return[{name:"expandIconCls",defaultValue:"b-icon b-icon-tree-expand"},{name:"collapseIconCls",defaultValue:"b-icon b-icon-tree-collapse"},{name:"collapsedFolderIconCls"},{name:"expandedFolderIconCls"},{name:"indentSize",defaultValue:1.7},{name:"leafIconCls",defaultValue:"b-icon b-icon-tree-leaf"},{name:"editTargetSelector",defaultValue:".b-tree-cell-value"},"renderer"]}constructor(e,t){super(...arguments);const l=this;l.shouldHtmlEncode=l.htmlEncode,l.setData("htmlEncode",!1),l.renderer&&(l.originalRenderer=l.renderer),l.renderer=l.treeRenderer.bind(l)}treeRenderer(e){const t=this,{grid:l,column:n,cellElement:o,row:s,record:r,isExport:c}=e,g=r.instanceMeta(l.store),p=!r.isLeaf&&g.collapsed,a={className:"b-tree-cell-value"},i=[a],y={className:{"b-tree-cell-inner":1},tag:r.href?"a":"div",href:r.href,target:r.target,children:i},b={"b-tree-parent-row":0,"b-tree-collapsed":0,"b-tree-expanded":0,"b-loading-children":0};let w,x,{value:u}=e;if(t.originalRenderer){var A;const d=t.originalRenderer(e),m=(A=l.hasFrameworkRenderer)===null||A===void 0?void 0:A.call(l,{cellContent:d,column:n});w=typeof d=="object"&&!m,u=m?"":d===!1?o.innerHTML:d,e.rendererHtml=d}if(w||(u=String(u!=null?u:"")),c)return u;if(r.isLeaf)o.classList.add("b-tree-leaf-cell"),x=e.iconCls||r.iconCls||t.leafIconCls;else{var E;const d=!r.isExpanded(l.store),m=d?t.expandIconCls:t.collapseIconCls,T=d?t.collapsedFolderIconCls:t.expandedFolderIconCls;b["b-tree-parent-row"]=1,b["b-tree-collapsed"]=d,b["b-tree-expanded"]=!d,b["b-loading-children"]=g.isLoadingChildren,o.classList.add("b-tree-parent-cell"),i.unshift({tag:"i",className:{"b-tree-expander":1,[m]:1,"b-empty-parent":!g.isLoadingChildren&&r.children!==!0&&!((E=r.children)!==null&&E!==void 0&&E.length)}}),N=x=e.iconCls||r.iconCls||T}if(x&&i.splice(i.length-1,0,{tag:"i",className:{"b-tree-icon":1,[x]:1}}),s.isRow&&(s.assignCls(b),!r.isLeaf))if(s.setAttribute("aria-expanded",!p),p)s.removeAttribute("aria-owns");else for(const d in l.subGrids){var I,L;const m=s.elements[d];R.setAttributes(m,{"aria-owns":(I=r.children)!==null&&I!==void 0&&I.length?(L=r.children)===null||L===void 0?void 0:L.map(T=>`${l.id}-${d}-${T.id}`).join(" "):null})}Array.isArray(u)?a.children=u:w?Object.assign(a,u):t.shouldHtmlEncode||!u.includes("<")?(y.className["b-text-value"]=1,a.text=u):a.html=u;const M=r.childLevel*t.indentSize+(r.isLeaf?N?2:x?.5:.4:0);return y.style=`padding-inline-start:${M}em`,y}getCurrentConfig(e){const t=super.getCurrentConfig(e);return t.renderer=this.originalRenderer,t}}v(h,"$name","TreeColumn"),v(h,"type","tree"),k.registerColumnType(h,!0),h.exposeProperties(),h._$name="TreeColumn";const V=Promise.resolve();class C extends P.mixin(K){static get pluginConfig(){return{assign:["collapseAll","expandAll","collapse","expand","expandTo","toggleCollapse"],chain:["onElementPointerUp","onElementClick","bindStore"]}}construct(e,t){super.construct(e,t),this.treeColumn||console.info("To use the tree feature, one column should be configured with `type: 'tree'`"),e.store&&this.bindStore(e.store)}doDisable(e){if(e)throw new Error("Tree feature cannot be disabled")}get store(){return this.client.store}get treeColumn(){const e=this,{columns:t}=e.client;return(!e._treeColumn||!t.includes(e._treeColumn))&&(e._treeColumn=t.find(l=>l.isTreeColumn)),e._treeColumn}bindStore(e){this.detachListeners("store"),e.ion({name:"store",beforeLoadChildren:"onBeforeLoadChildren",loadChildren:"onLoadChildren",loadChildrenException:"onLoadChildrenException",beforeToggleNode:"onBeforeToggleNode",thisObj:this})}async toggleCollapse(e,t){if(e==null)throw new Error("Tree#toggleCollapse must be passed a record");const l=this,{store:n,client:o}=l,{rowManager:s}=o,r=n.getById(e),c=r.instanceMeta(n);if(await n.toggleCollapse(r,t)){const g=s.getRowFor(r);if(g&&r.ancestorsExpanded()){const p=l.treeColumn&&!l.treeColumn.subGrid.collapsed&&g.getCell(l.treeColumn.id);p&&g.renderCell(p)}l.isTogglingNode||(o.element.classList.add("b-toggling-node"),l.isTogglingNode=!0,l.requestAnimationFrame(()=>{o.element.classList.remove("b-toggling-node"),l.isTogglingNode=!1})),o.trigger(c.collapsed?"collapseNode":"expandNode",{record:r}),o.trigger("toggleNode",{record:r,collapse:c.collapsed})}}async collapse(e){return this.toggleCollapse(e,!0)}async expand(e){return this.toggleCollapse(e,!1)}onBeforeToggleNode({record:e,collapse:t}){this.client.trigger("beforeToggleNode",{record:e,collapse:t})}onBeforeLoadChildren({source:e,params:t}){const l=e.getById(t[e.modelClass.idField]),n=this.client.rowManager.getRowFor(l);n==null||n.addCls("b-loading-children")}onLoadChildren({source:e,params:t}){const l=e.getById(t[e.modelClass.idField]),n=this.client.rowManager.getRowFor(l);n==null||n.removeCls("b-loading-children")}onLoadChildrenException({record:e}){const t=this.client.rowManager.getRowFor(e);t==null||t.removeCls("b-loading-children")}async expandOrCollapseAll(e=!0,t=this.store.rootNode){const{client:l,store:n}=this,o=[],s=[];return l.trigger("beforeToggleAllNodes",{collapse:e}),n.suspendEvents(),n.traverse(r=>{const c=r.instanceMeta(n);r.isLeaf||(e&&!c.collapsed?(this.toggleCollapse(r,!0),s.push(...r.children)):!e&&c.collapsed&&(Array.isArray(r.children)&&s.push(...r.children),o.push(this.toggleCollapse(r,!1))))},t,t===n.rootNode),n.resumeEvents(),(e?V:Promise.all(o)).then(()=>{l.refreshRows(e),s.length&&(e?n.trigger("remove",{records:s,isCollapse:!0,isCollapseAll:!0}):n.trigger("add",{records:s,isExpand:!0,isExpandAll:!0})),l.trigger("toggleAllNodes",{collapse:e})})}async collapseAll(){return this.expandOrCollapseAll(!0)}async expandAll(){return this.expandOrCollapseAll(!1)}async expandTo(e,t=!0){const l=this,{store:n,client:o}=l;if(Array.isArray(e)){if(e.length>0){o.suspendRefresh();for(let a=e.length-1;a>=0;a--){var s;const i=n.getById(e[a]);if(a===0){var r;(r=o.resumeRefresh)===null||r===void 0||r.call(o),o.rowManager.refresh()}await((s=l.expandTo)===null||s===void 0?void 0:s.call(l,i,a===0))}}return}const c=n.getById(e);if(c.instanceMeta(l.store).hiddenByCollapse!==!1){if(!c.ancestorsExpanded()){var g,p;const a=[];for(let i=c.parent;i&&!i.isRoot;i=i.parent)i.isExpanded(n)||a.unshift(i);o.suspendRefresh();for(const i of a)l.isDestroyed||await l.toggleCollapse(i,!1);(g=o.resumeRefresh)===null||g===void 0||g.call(o),(p=o.refreshRows)===null||p===void 0||p.call(o)}!l.isDestroyed&&t&&await o.scrollRowIntoView(c)}}onElementPointerUp(e){const t=this,l=e.target,n=t.client.getCellDataFromEvent(e);(l.closest(".b-tree-expander")||t.expandOnCellClick&&n!==null&&n!==void 0&&n.record.isParent)&&t.toggleCollapse(n.record)}onElementClick(e){e.target.closest(".b-tree-expander")&&e.preventDefault()}toggleCollapseByKey(){const{focusedCell:e}=this.client;return(e==null?void 0:e.rowIndex)>-1&&!e.isActionable?(this.toggleCollapse(e.id),!0):!1}expandIfSingleColumn(){return this.client.columns.count===1?this.expandByKey():!1}expandByKey(){const e=this,{client:t}=e,{focusedCell:l}=t,n=l==null?void 0:l.record;return n&&l!==null&&l!==void 0&&l.column.tree&&n.isParent&&n.instanceMeta(t.store).collapsed?(e.expand(n),!0):!1}collapseIfSingleColumn(){return this.client.columns.count===1?this.collapseByKey():!1}collapseByKey(){const e=this,{client:t}=e,{focusedCell:l}=t,n=l==null?void 0:l.record;if(l!=null&&l.column.tree&&n){if(n.isParent&&!n.instanceMeta(t.store).collapsed)return e.collapse(n),!0;if(n.parent&&!n.parent.isRoot)return t.deselectAll(),t.focusCell({record:n.parent,column:l.column}),!0}return!1}}v(C,"$name","Tree"),v(C,"configurable",{expandOnCellClick:!1,keyMap:{" ":"toggleCollapseByKey",ArrowRight:"expandIfSingleColumn","Shift+ArrowRight":"expandByKey",ArrowLeft:"collapseIfSingleColumn","Shift+ArrowLeft":"collapseByKey"}}),C.featureClass="b-tree",C._$name="Tree",B.registerFeature(C,!1,"Grid"),B.registerFeature(C,!0,"TreeGrid");export{C as Tree,h as TreeColumn};
//# sourceMappingURL=Tree.js.map
