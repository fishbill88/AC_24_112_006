/*!
 *
 * Bryntum Scheduler Pro 5.3.7
 *
 * Copyright(c) 2023 Bryntum AB
 * https://bryntum.com/contact
 * https://bryntum.com/license
 *
 */
import{Widget as S,Tooltip as C,StringHelper as E,DomSync as w}from"./Editor.js";const m="http://www.w3.org/2000/svg",z={bar:1,outline:2,text:3},_=($,e)=>parseInt($.dataset.order,10)-parseInt(e.dataset.order,10),L=$=>$.field,V=()=>!1;class y extends S{static get type(){return"histogram"}static get $name(){return"Histogram"}static get defaultConfig(){return{data:null,values:null,series:null,topValue:null,element:{children:[{ns:m,tag:"svg",reference:"svgElement",width:"100%",height:"100%",preserveAspectRatio:"none",children:[{ns:m,tag:"g",reference:"scaledSvgGroup"},{ns:m,tag:"g",reference:"unscaledSvgGroup"}]}]},omitZeroHeightBars:null,monitorResize:!0,getRectClass:null,getBarTip:null,getBarText:null,getBarTextRenderData:null,getBarTextTip:null}}construct(e){super.construct(e),this.scheduleRefresh=this.createOnFrame(this.refresh,[],this,!0),this.refresh()}set tip(e){var t;const a=this;(t=a.tip)===null||t===void 0||t.destroy(),e?a._tip=C.new({owner:a,forElement:a.svgElement,forSelector:"rect",internalListeners:{beforeShow:"up.onBeforeTipShow"}},e):a._tip=null}onElementResize(){super.onElementResize(...arguments);const e=this.svgElement.getBoundingClientRect();this.scaledSvgGroup.setAttribute("transform",`scale(${e.width} ${e.height})`)}onBeforeTipShow({source:e}){const t=parseInt(e.activeTarget.dataset.index);e.html=e.contentTemplate({histogram:this,index:t})}set series(e){const t=this,a=t._series={};for(const s in e)if(e[s]!==!1){const i=a[s]=Object.assign({},e[s]);!i.type&&e[s].type&&(i.type=e[s].type),!i.field&&e[s].field&&(i.field=e[s].field),"order"in a||(i.order=z[i.type]),i.id=s}t.scheduleRefresh()}get series(){return this._series}set data(e){const t=this;if(t._data=e,!t.topValue){const a=Object.values(t.series).map(L);for(let s=0,{length:i}=e;s<i;s++)for(let r=0,{length:l}=a;r<l;r++)t.topValue=Math.max(t.topValue||0,e[s][a[r]])}t.scheduleRefresh()}get data(){return this._data}set topValue(e){this._topValue=e,this.scheduleRefresh()}get topValue(){return this._topValue}scheduleRefresh(){}refresh(){const e=this,{series:t,_tip:a}=e,s=[];for(const i in t){const r=t[i],l=e[`draw${E.capitalize(r.type)}`](r);Array.isArray(l)?s.push.apply(s,l):s.push(l)}s.sort(_),w.syncChildren({domConfig:{children:s},configEquality:V},e.scaledSvgGroup),w.syncChildren({domConfig:{children:e.drawText()}},e.unscaledSvgGroup),a&&a.isVisible&&e.onBeforeTipShow({source:a})}drawBar(e){const t=this,{topValue:a,data:s,omitZeroHeightBars:i,barStyle:r}=t,{field:l,order:p}=e,g=1/s.length,u=[];let d;for(let n=0,h=0,{length:o}=s;n<o;n++,h+=d){const c=s[n],b=c[l],v=c.height||(b>a?a:b)/a,B=1-v,f=c.rectConfig={ns:m,tag:"rect",dataset:{}},R=t.callback("getBarTip",t,[e,f,c,n]);d=c.width||g,r?f.style=r:delete f.style,Object.assign(f.dataset,{index:n,order:p}),Object.assign(f,{x:h,y:B,width:d,height:v,class:t.callback("getRectClass",t,[e,f,c,n])}),R?f.dataset.btip=R:delete f.dataset.btip,(v||!i)&&u.push(f)}return u}drawOutline(e){const t=this,{topValue:a,data:s}=t,{field:i,order:r}=e,l=1/s.length,p=["M 0,1"],g=e.outlineElement||(e.outlineElement={ns:m,tag:"path",dataset:{order:r}});let u,d="M",n="L";for(let h=0,o=0,{length:c}=s;h<c;h++){const b=1-s[h][i]/a;u=s[h].width||l,p.push(`${d} ${o},${b} ${n} ${o+=u},${b}`),d=n=""}return g.d=p.join(" "),g}drawText(){const e=this,{data:t}=e,a=1/t.length,s="100%",i=[];for(let r=0,l,p=0,{length:g}=t;r<g;r++,p+=l){l=t[r].width||a;const u=e.callback("getBarText",e,[t[r],r]);if(u){const d=e.callback("getBarTextRenderData",e,[{ns:m,tag:"text",className:"b-bar-legend",html:u,x:`${(p+l/2)*100}%`,y:t[r].y!==void 0?t[r].y:s,dataset:{index:r}},t[r],r]),n=e.callback("getBarTextTip",e,[d,t[r],r]);n?d.dataset.btip=n:delete d.dataset.btip,i.push(d)}}return i}getBarText(e,t){return""}getBarTextRenderData(e,t,a){return e}getBarTip(e,t,a,s){}getBarTextTip(e,t,a){}getRectClass(e,t,a,s){return""}}y.initClass(),y._$name="Histogram";const x="http://www.w3.org/2000/svg";class T extends S{static get type(){return"scale"}static get $name(){return"Scale"}static get configurable(){return{scalePoints:null,scaleMaxPadding:.1,horizontal:!1,align:{value:!1,$config:{merge:"replace"}},element:{children:[{ns:x,tag:"svg",reference:"svgElement",width:"100%",height:"100%",preserveAspectRatio:"none",children:[{ns:x,tag:"g",reference:"scaledSvgGroup",children:[{ns:x,tag:"path",reference:"pathElement"}]},{ns:x,tag:"g",reference:"unscaledSvgGroup"}]}]},monitorResize:!0}}construct(e){super.construct(e),this.scheduleRefresh=this.createOnFrame(this.refresh,[],this,!0),this.refresh()}changeAlign(e){return e||(e=this.horizontal?"bottom":"right"),e}updateAlign(e,t){this.element.classList.remove(`b-align-${t}`),this.element.classList.add(`b-align-${e}`)}updateHorizontal(e,t){this.element.classList.remove(`b-scale-${t?"horizontal":"vertical"}`),this.element.classList.add(`b-scale-${e?"horizontal":"vertical"}`)}onElementResize(){super.onElementResize(...arguments),this.scheduleRefresh()}scheduleRefresh(){}refresh(){const e=this,{horizontal:t,width:a,height:s,align:i,scalePoints:r,scaleMaxPadding:l}=e,p=r[r.length-1].value,g=[],u=[],d=1/(p+l*p);e.scaledSvgGroup.setAttribute("transform",`scale(${t?a:1} ${t?1:s})`);for(const n of r){const h=!!n.text,o=d*n.value;if(h){const c={ns:x,tag:"text",className:"b-scale-tick-label",html:n.text,dataset:{tick:n.value}};t?(c.x=`${o*100}%`,c.y=i==="top"?"1.6em":s-12):(c.x=i==="left"?"12":`${a-12}`,c.y=`${(1-o)*100}%`),u.push(c)}t?i==="top"?g.push(`M${o},0 L${o},${h?10:5}`):g.push(`M${o},${s} L${o},${s-(h?10:5)}`):i==="left"?g.push(`M0,${1-o} L${h?10:5},${1-o}`):g.push(`M${a},${1-o} L${a-(h?10:5)},${1-o}`)}e.pathElement.setAttribute("d",g.join("")),w.syncChildren({domConfig:{children:u}},e.unscaledSvgGroup)}}T.initClass(),T._$name="Scale";export{y as Histogram,T as Scale};
//# sourceMappingURL=Scale.js.map
