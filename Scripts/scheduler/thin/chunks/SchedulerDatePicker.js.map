{"version":3,"file":"SchedulerDatePicker.js","sources":["../../../../Scheduler/lib/Scheduler/data/util/recurrence/RecurrenceLegend.js","../../../../Scheduler/lib/Scheduler/feature/base/EditBase.js","../../../../Scheduler/lib/Scheduler/view/EventEditor.js","../../../../Scheduler/lib/Scheduler/view/recurrence/field/RecurrenceCombo.js","../../../../Scheduler/lib/Scheduler/view/recurrence/RecurrenceLegendButton.js","../../../../Scheduler/lib/Scheduler/view/recurrence/RecurrenceEditor.js","../../../../Scheduler/lib/Scheduler/feature/mixin/RecurringEventEdit.js","../../../../Scheduler/lib/Scheduler/widget/ResourceCombo.js","../../../../Scheduler/lib/Scheduler/feature/EventEdit.js","../../../../Scheduler/lib/Scheduler/widget/ResourceFilter.js","../../../../Scheduler/lib/Scheduler/widget/SchedulerDatePicker.js"],"sourcesContent":["import Localizable from '../../../../Core/localization/Localizable.js';\nimport DayRuleEncoder from './RecurrenceDayRuleEncoder.js';\nimport DateHelper from '../../../../Core/helper/DateHelper.js';\n\n/**\n * @module Scheduler/data/util/recurrence/RecurrenceLegend\n */\n\n/**\n * A static class allowing to get a human readable description of the provided recurrence.\n *\n * ```javascript\n * const event = new EventModel({\n *      startDate : new Date(2018, 6, 3),\n *      endDate   : new Date(2018, 6, 4)\n * });\n * const recurrence = new RecurrenceModel({\n *      frequency : 'WEEKLY',\n *      days : ['MO', 'TU', 'WE']\n * });\n * event.recurrence = recurrence;\n * // \"Weekly on Mon, Tue and Wed\"\n * RecurrenceLegend.getLegend(recurrence);\n * ```\n *\n * @mixes Core/localization/Localizable\n */\nexport default class RecurrenceLegend extends Localizable() {\n\n    // <debug>\n    // region Localization test\n    static localization = [\n        'L{position1}',\n        'L{position2}',\n        'L{position3}',\n        'L{position4}',\n        'L{position5}',\n        'L{position-1}'\n    ];\n    // endregion\n    // </debug>\n\n    static get $name() {\n        return 'RecurrenceLegend';\n    }\n\n    static get allDaysValueAsArray() {\n        return ['SU', 'MO', 'TU', 'WE', 'TH', 'FR', 'SA'];\n    }\n\n    static get allDaysValue() {\n        return this.allDaysValueAsArray.join(',');\n    }\n\n    static get workingDaysValue() {\n        return this.allDaysValueAsArray.filter((day, index) => !DateHelper.nonWorkingDays[index]).join(',');\n    }\n\n    static get nonWorkingDaysValue() {\n        return this.allDaysValueAsArray.filter((day, index) => DateHelper.nonWorkingDays[index]).join(',');\n    }\n\n    /**\n     * Returns the provided recurrence description. The recurrence might be assigned to a timespan model,\n     * in this case the timespan start date should be provided in the second argument.\n     * @param {Scheduler.model.RecurrenceModel} recurrenceRecurrence model.\n     * @param {Date} [timeSpanStartDate] The recurring timespan start date. Can be omitted if the recurrence is assigned\n     * to a timespan model (and the timespan has {@link Scheduler.model.TimeSpan#field-startDate} filled). Then start\n     * date will be retrieved from the model.\n     * @returns {String} The recurrence description.\n     */\n    static getLegend(recurrence, timeSpanStartDate) {\n        const\n            me                                                         = this,\n            { timeSpan, interval, days, monthDays, months, positions } = recurrence,\n            startDate                                                  = timeSpanStartDate || timeSpan.startDate,\n            tplData                                                    = { interval };\n\n        let fn;\n\n        switch (recurrence.frequency) {\n            case 'DAILY':\n                return interval === 1 ? me.L('L{Daily}') : me.L('L{Every {0} days}', tplData);\n\n            case 'WEEKLY':\n                if (days && days.length) {\n                    tplData.days = me.getDaysLegend(days);\n                }\n                else if (startDate) {\n                    tplData.days = DateHelper.getDayName(startDate.getDay());\n                }\n\n                return me.L(interval === 1 ? 'L{Weekly on {1}}' : 'L{Every {0} weeks on {1}}', tplData);\n\n            case 'MONTHLY':\n                if (days && days.length && positions && positions.length) {\n                    tplData.days = me.getDaysLegend(days, positions);\n                }\n                else if (monthDays && monthDays.length) {\n                    // sort dates to output in a proper order\n                    monthDays.sort((a, b) => a - b);\n\n                    tplData.days = me.arrayToText(monthDays);\n                }\n                else if (startDate) {\n                    tplData.days = startDate.getDate();\n                }\n\n                return me.L(interval === 1 ? 'L{Monthly on {1}}' : 'L{Every {0} months on {1}}', tplData);\n\n            case 'YEARLY':\n\n                if (days && days.length && positions && positions.length) {\n                    tplData.days = me.getDaysLegend(days, positions);\n                }\n                else {\n                    tplData.days = startDate.getDate();\n                }\n\n                if (months && months.length) {\n                    // sort months to output in a proper order\n                    months.sort((a, b) => a - b);\n\n                    if (months.length > 2) {\n                        fn = month => DateHelper.getMonthShortName(month - 1);\n                    }\n                    else {\n                        fn = month => DateHelper.getMonthName(month - 1);\n                    }\n\n                    tplData.months = me.arrayToText(months, fn);\n                }\n                else {\n                    tplData.months = DateHelper.getMonthName(startDate.getMonth());\n                }\n\n                return me.L(interval === 1 ? 'L{Yearly on {1} of {2}}' : 'L{Every {0} years on {1} of {2}}', tplData);\n        }\n    }\n\n    static getDaysLegend(days, positions) {\n        const\n            me      = this,\n            tplData = { position : '' };\n        let fn;\n\n        if (positions && positions.length) {\n            tplData.position = me.arrayToText(positions, position => me.L(`L{position${position}}`));\n        }\n\n        if (days.length) {\n            days.sort((a, b) => DayRuleEncoder.decodeDay(a)[0] - DayRuleEncoder.decodeDay(b)[0]);\n\n            switch (days.join(',')) {\n                case me.allDaysValue :\n                    tplData.days = me.L('L{day}');\n                    break;\n\n                case me.workingDaysValue :\n                    tplData.days = me.L('L{weekday}');\n                    break;\n\n                case me.nonWorkingDaysValue :\n                    tplData.days = me.L('L{weekend day}');\n                    break;\n\n                default :\n                    if (days.length > 2) {\n                        fn = day => DateHelper.getDayShortName(DayRuleEncoder.decodeDay(day)[0]);\n                    }\n                    else {\n                        fn = day => DateHelper.getDayName(DayRuleEncoder.decodeDay(day)[0]);\n                    }\n\n                    tplData.days = me.arrayToText(days, fn);\n            }\n        }\n\n        return me.L('L{daysFormat}', tplData);\n    }\n\n    // Converts array of items to a human readable list.\n    // For example: [1,2,3,4]\n    // to: \"1, 2, 3 and 4\"\n    static arrayToText(array, fn) {\n        if (fn) {\n            array = array.map(fn);\n        }\n\n        return array.join(', ').replace(/,(?=[^,]*$)/, this.L('L{ and }'));\n    }\n\n}\n","import InstancePlugin from '../../../Core/mixin/InstancePlugin.js';\nimport DateField from '../../../Core/widget/DateField.js';\nimport DateHelper from '../../../Core/helper/DateHelper.js';\nimport ObjectHelper from '../../../Core/helper/ObjectHelper.js';\nimport Config from '../../../Core/Config.js';\nimport Objects from '../../../Core/helper/util/Objects.js';\n\n/**\n * @module Scheduler/feature/base/EditBase\n */\n\nconst\n    DH             = DateHelper,\n    scheduleFields = ['startDate', 'endDate', 'resource', 'recurrenceRule'],\n    makeDate       = (fields) => {\n        // single field, update record directly\n        if (fields.length === 1) return fields[0].value;\n        // two fields, date + time\n        else if (fields.length === 2) {\n            const\n                [date, time] = fields[0] instanceof DateField ? fields : fields.reverse(),\n                dateValue    = DH.parse(date.value);\n\n            if (dateValue && time.value) {\n                dateValue.setHours(\n                    time.value.getHours(),\n                    time.value.getMinutes(),\n                    time.value.getSeconds(),\n                    time.value.getMilliseconds()\n                );\n            }\n\n            // Clone to not end up sharing dates\n            return dateValue ? DateHelper.clone(dateValue) : null;\n        }\n        // shouldn't happen...\n        return null;\n    },\n    copyTime       = (dateTo, dateFrom) => {\n        const d = new Date(dateTo.getTime());\n        d.setHours(dateFrom.getHours(), dateFrom.getMinutes());\n        return d;\n    },\n    adjustEndDate  = (startDate, startTime, me) => {\n        // The end datetime just moves in response to the changed start datetime, keeping the same duration.\n        if (startDate && startTime && me.endDateField && me.endTimeField) {\n            const newEndDate = DH.add(copyTime(me.startDateField.value, me.startTimeField.value), me.eventRecord.durationMS, 'milliseconds');\n            me.endDateField.value = newEndDate;\n            me.endTimeField.value = DH.clone(newEndDate);\n        }\n    };\n\n/**\n * Base class for EventEdit. Not to be used directly.\n *\n * @extends Core/mixin/InstancePlugin\n */\nexport default class EditBase extends InstancePlugin {\n    //region Config\n\n    static get configurable() {\n        return {\n            /**\n             * True to save and close this panel if ENTER is pressed in one of the input fields inside the panel.\n             * @config {Boolean}\n             * @default\n             * @category Editor\n             */\n            saveAndCloseOnEnter : true,\n\n            triggerEvent : null,\n\n            /**\n             * This config parameter is passed to the `startDateField` and `endDateField` constructor.\n             * @config {String}\n             * @default\n             * @category Editor widgets\n             */\n            dateFormat : 'L', // date format that uses browser locale\n\n            /**\n             * This config parameter is passed to the `startTimeField` and `endTimeField` constructor.\n             * @config {String}\n             * @default\n             * @category Editor widgets\n             */\n            timeFormat : 'LT', // date format that uses browser locale\n\n            /**\n             * Default editor configuration, which widgets it shows etc.\n             *\n             * This is the entry point into configuring any aspect of the editor.\n             *\n             * The {@link Core.widget.Container#config-items} configuration of a Container\n             * is *deeply merged* with its default `items` value. This means that you can specify\n             * an `editorConfig` object which configures the editor, or widgets inside the editor:\n             * ```javascript\n             * const scheduler = new Scheduler({\n             *     features : {\n             *         eventEdit  : {\n             *             editorConfig : {\n             *                 autoClose : false,\n             *                 modal     : true,\n             *                 cls       : 'editor-widget-cls',\n             *                 items : {\n             *                     resourceField : {\n             *                         hidden : true\n             *                     },\n             *                     // Add our own event owner field at the top of the form.\n             *                     // Weight -100 will make it sort top the top.\n             *                     ownerField : {\n             *                         weight : -100,\n             *                         type   : 'usercombo',\n             *                         name   : 'owner',\n             *                         label  : 'Owner'\n             *                     }\n             *                 },\n             *                 bbar : {\n             *                     items : {\n             *                         deleteButton : false\n             *                     }\n             *                 }\n             *             }\n             *         }\n             *     }\n             * });\n             * ```\n             * @config {PopupConfig}\n             * @category Editor\n             */\n            editorConfig : null,\n\n            /**\n             * An object to merge with the provided items config of the editor to override the\n             * configuration of provided fields, or add new fields.\n             *\n             * To remove existing items, set corresponding keys to `null`:\n             *\n             * ```javascript\n             * const scheduler = new Scheduler({\n             *     features : {\n             *         eventEdit  : {\n             *             items : {\n             *                 // Merged with provided config of the resource field\n             *                 resourceField : {\n             *                     label : 'Calendar'\n             *                 },\n             *                 recurrenceCombo : null,\n             *                 owner : {\n             *                     weight : -100, // Will sort above system-supplied fields which are weight 0\n             *                     type   : 'usercombo',\n             *                     name   : 'owner',\n             *                     label  : 'Owner'\n             *                 }\n             *             }\n             *         }\n             *     }\n             * });\n             *```\n             *\n             * The provided fields are called\n             *  - `nameField`\n             *  - `resourceField`\n             *  - `startDateField`\n             *  - `startTimeField`\n             *  - `endDateField`\n             *  - `endTimeField`\n             *  - `recurrenceCombo`\n             *  - `editRecurrenceButton`\n             * @config {Object<String,ContainerItemConfig|Boolean|null>}\n             * @category Editor widgets\n             */\n            items : null,\n\n            /**\n             * The week start day used in all date fields of the feature editor form by default.\n             * 0 means Sunday, 6 means Saturday.\n             * Defaults to the locale's week start day.\n             * @config {Number}\n             */\n            weekStartDay : null\n        };\n    }\n\n    //endregion\n\n    //region Init & destroy\n\n    construct(client, config) {\n        const me = this;\n\n        client.eventEdit = me;\n\n        super.construct(client, ObjectHelper.assign({\n            weekStartDay : client.weekStartDay\n        }, config));\n\n        me.clientListenersDetacher = client.ion({\n            [me.triggerEvent] : 'onActivateEditor',\n            dragCreateEnd     : 'onDragCreateEnd',\n\n            // Not fired at the Scheduler level.\n            // Calendar, which inherits this, implements this event.\n            eventAutoCreated : 'onEventAutoCreated',\n            thisObj          : me\n        });\n    }\n\n    doDestroy() {\n        this.clientListenersDetacher();\n\n        this._editor?.destroy();\n\n        super.doDestroy();\n    }\n\n    //endregion\n\n    //region Editing\n\n    // Not implemented at this level.\n    // Scheduler Editing relies on being called at point of event creation.\n    onEventAutoCreated() {}\n\n    changeEditorConfig(editorConfig) {\n        const { items } = this;\n\n        // Merge items which is an Object with the default editorConfig's items\n        if (items) {\n            editorConfig = Objects.clone(editorConfig);\n            editorConfig.items = Config.merge(items, editorConfig.items);\n        }\n\n        return editorConfig;\n    }\n\n    changeItems(items) {\n        this.cleanItemsConfig(items);\n        return items;\n    }\n\n    // Remove any items configured as === true which just means default config options\n    cleanItemsConfig(items) {\n        for (const ref in items) {\n            const itemCfg = items[ref];\n\n            if (itemCfg === true) {\n                delete items[ref];\n            }\n            else if (itemCfg?.items) {\n                this.cleanItemsConfig(itemCfg.items);\n            }\n        }\n    }\n\n    onDatesChange(params) {\n        const\n            me    = this,\n            field = params.source,\n            value = params.value;\n\n        // End date can never be less than start date\n        if (me.startDateField && me.endDateField) {\n            me.endDateField.min = me.startDateField.value;\n        }\n\n        if (me.endTimeField) {\n            // If the event starts and ends on the same day, the time fields need\n            // to have their min and max set against each other.\n            if (DH.isEqual(DH.clearTime(me.startDateField?.value), DH.clearTime(me.endDateField?.value))) {\n                me.endTimeField.min = me.startTimeField.value;\n            }\n            else {\n                me.endTimeField.min = null;\n            }\n        }\n\n        switch (field.ref) {\n            case 'startDateField':\n                me.startTimeField?.value && adjustEndDate(value, me.startTimeField.value, me);\n                break;\n\n            case 'startTimeField':\n                me.startDateField?.value && adjustEndDate(me.startDateField.value, value, me);\n                break;\n        }\n    }\n\n    //endregion\n\n    //region Save\n\n    async save() {\n        throw new Error('Implement in subclass');\n    }\n\n    get values() {\n        const\n            me          = this,\n            { editor }  = me,\n            startFields = [],\n            endFields   = [],\n            { values }  = editor;\n\n        // The standard values getter will produce (almost) what we want, however, there are some special fields that\n        // we need to take over. Remove those fields:\n        scheduleFields.forEach(f => delete values[f]);\n\n        editor.eachWidget(widget => {\n            const { name } = widget;\n\n            // If the widget is part of the recurrence editor, we don't gather it.\n            if (!name || widget.hidden || widget.up(w => w === me.recurrenceEditor)) {\n                delete values[name];\n                return;\n            }\n\n            switch (name) {\n                case 'startDate':\n                    startFields.push(widget);\n                    break;\n                case 'endDate':\n                    endFields.push(widget);\n                    break;\n                case 'resource':\n                    values[name] = widget.record;\n                    break;\n                case 'recurrenceRule':\n                    // If recurrence set to null, completely clear the recurrenceRule.\n                    // Otherwise it will still be perceived as recurring with the rule 'FREQ=none'\n                    values[name] = editor.widgetMap.recurrenceCombo?.value === 'none' ? '' : widget.value;\n                    break;\n                // Ignore other widgets and allow the standard values getter to provide them:\n                // default:\n                //     values[name] = widget.value;\n            }\n        }, true);\n\n        // if is changing from not allDay to allDay should consider time fields to not change them on makeDate\n        if (values.allDay && !me.eventRecord.allDay) {\n            startFields.push(me.startTimeField);\n            endFields.push(me.endTimeField);\n        }\n\n        // Handle fields being configured away\n        if (startFields.length) {\n            values.startDate = makeDate(startFields);\n        }\n        if (endFields.length) {\n            values.endDate = makeDate(endFields);\n        }\n\n        // Since there is no duration field in the editor,\n        // we don't need to recalc duration value on each date change.\n        // It's enough to return correct duration value in `values`,\n        // so the record will get updated with the correct data.\n        if (('startDate' in values) && ('endDate' in values)) {\n            values.duration = DH.diff(values.startDate, values.endDate, me.editor.record.durationUnit, true);\n        }\n\n        return values;\n    }\n\n    /**\n     * Template method, intended to be overridden. Called before the event record has been updated.\n     * @param {Scheduler.model.EventModel} eventRecord The event record\n     *\n     **/\n    onBeforeSave(eventRecord) {}\n\n    /**\n     * Template method, intended to be overridden. Called after the event record has been updated.\n     * @param {Scheduler.model.EventModel} eventRecord The event record\n     *\n     **/\n    onAfterSave(eventRecord) {}\n\n    /**\n     * Updates record being edited with values from the editor\n     * @private\n     */\n    updateRecord(record) {\n        const { values } = this;\n\n        // Clean resourceId / resources out of values when using assignment store, it will handle the assignment\n        if (this.assignmentStore) {\n            delete values.resource;\n        }\n\n        return record.set(values);\n    }\n\n    //endregion\n\n    //region Events\n\n    onBeforeEditorShow() {\n        const\n            { eventRecord, editor } = this.editingContext,\n            { nameField } = editor.widgetMap;\n\n        // Editing new event. Make sure user doesn't have to clear the input field.\n        // Record field value still should be there because a rendered event block\n        // looks bad with no text in it.\n        // nameField may have been configured away.\n        if (nameField && eventRecord.isCreating) {\n            // Avoid initial invalid because required state.\n            editor.assigningValues = true;\n            nameField.value = '';\n            editor.assigningValues = false;\n\n            // Show new event text as a placeholder\n            nameField._configuredPlaceholder = nameField.placeholder;\n            nameField.placeholder = eventRecord.name;\n        }\n    }\n\n    resetEditingContext() {\n        const me = this;\n\n        if (!me.editingContext) {\n            return;\n        }\n\n        const\n            { client }              = me,\n            { editor, eventRecord } = me.editingContext,\n            { eventStore }          = client,\n            { nameField }           = editor.widgetMap;\n\n        // This will remove the record from the store, *and* from the added bag, so no sync will take place.\n        if (eventRecord.isCreating) {\n            // Ensure that during the engine's async processing of the remove, the element is non-interactive.\n            // Mousedown on the just-created element itself passes through here, and the immediate mouseup\n            // after that instigates a click which will find no corresponding event.\n            if (client.isTimelineBase) {\n                me.editingContext.eventElement?.closest('[data-event-id]').classList.add('b-released');\n            }\n\n            eventStore.remove(eventRecord);\n\n            // Clear isCreating *after* removal.\n            // Store doesn't register as a removed record if isCreating is set\n            eventRecord.isCreating = false;\n        }\n\n        // Revert any placeholder that we may have set\n        // nameField may have been configured away.\n        if (nameField) {\n            nameField.placeholder = nameField._configuredPlaceholder;\n        }\n\n        client.element.classList.remove('b-eventeditor-editing');\n\n        // Reset context\n        me.targetEventElement = me.editingContext = editor._record = null;\n    }\n\n    onPopupKeyDown({ event }) {\n        const me = this;\n\n        if (!me.readOnly && event.key === 'Enter' && me.saveAndCloseOnEnter && event.target.tagName.toLowerCase() === 'input') {\n            // Need to prevent this key events from being fired on whatever receives focus after the editor is hidden\n            event.preventDefault();\n\n            // If enter key was hit in an input element of a start field, need to adjust end date fields (the same way as if #onDatesChange handler was called)\n            if (event.target.name === 'startDate') {\n                me.startTimeField && adjustEndDate(me.startDateField.value, me.startTimeField.value, me);\n            }\n\n            me.onSaveClick();\n        }\n    }\n\n    async finalizeStmCapture(saved) {\n    }\n\n    async onSaveClick() {\n        // <remove-on-release>\n        // TODO: add new API on Container: blurFocusedField which manages this scenario\n        //  of blurring active field just before hiding\n        // </remove-on-release>\n        this.editor.focus();\n\n        this.isFinalizingEventSave = true;\n\n        const saved = await this.save();\n\n        this.isFinalizingEventSave = false;\n\n        if (saved) {\n            await this.finalizeStmCapture(false);\n\n            this.editor.close();\n\n            /**\n             * Fires on the owning Scheduler after editor is closed by any action - save, delete or cancel\n             * @event afterEventEdit\n             * @on-owner\n             * @param {Scheduler.view.Scheduler} source The scheduler\n             */\n            this.client.trigger('afterEventEdit');\n        }\n        return saved;\n    }\n\n    async onDeleteClick() {\n        // `deleteEvent` call actually additionally closes the editor for some reason\n        // see the comment for `editor.revertFocus();` call in EventEdit.js feature\n        // that triggers `resetEditingContext` in which by default we assume canceling flow\n        // so we need to detect that context is being reset for delete action somehow\n        this.isDeletingEvent = true;\n\n        const removed = await this.deleteEvent();\n\n        this.isDeletingEvent = false;\n\n        if (removed) {\n            await this.finalizeStmCapture(false);\n\n            const { editor } = this;\n            // We expect deleteEvent will trigger close if autoClose is true and focus has moved out,\n            // otherwise need to call it manually\n            if (!editor.autoClose || editor.containsFocus) {\n                editor.close();\n            }\n            this.client.trigger('afterEventEdit');\n        }\n    }\n\n    async onCancelClick() {\n        this.isCancelingEdit = true;\n\n        this.editor.close();\n\n        this.isCancelingEdit = false;\n\n        if (this.hasStmCapture) {\n            await this.finalizeStmCapture(true);\n        }\n\n        this.client.trigger('afterEventEdit');\n    }\n\n    //endregion\n}\n","import Store from '../../Core/data/Store.js';\nimport Popup from '../../Core/widget/Popup.js';\n\n/**\n * @module Scheduler/view/EventEditor\n */\n\n/**\n * Provided event editor dialog.\n *\n * @extends Core/widget/Popup\n * @private\n */\nexport default class EventEditor extends Popup {\n    // Factoryable type name\n    static get type() {\n        return 'eventeditor';\n    }\n\n    static get $name() {\n        return 'EventEditor';\n    }\n\n    static get configurable() {\n        return {\n            items     : [],\n            draggable : {\n                handleSelector : ':not(button,.b-field-inner)' // Ignore buttons and field inners\n            },\n            axisLock : 'flexible',\n\n            scrollable : {\n                // In case editor is very tall or window is small, make it scrollable\n                overflowY : true\n            },\n            readOnly : null,\n\n            /**\n             * A Function (or *name* of a function) which produces a customized Panel header based upon the event being edited.\n             * @config {Function|String}\n             * @param {Scheduler.model.EventModel} eventRecord The record being edited\n             * @returns {String} The Panel title.\n             */\n            titleRenderer : null\n        };\n    }\n\n    updateLocalization() {\n        super.updateLocalization(...arguments);\n\n        // Use this if there's no titleRenderer\n        this.initialTitle = this.title || '';\n    }\n\n    chainResourceStore() {\n        return this.eventEditFeature.resourceStore.chain(\n            record => !record.isSpecialRow,\n            null,\n            {\n                // It doesn't need to be a Project-based Store\n                storeClass              : Store,\n                // Need to show all records in the combo. Required in case resource store is a tree.\n                excludeCollapsedRecords : false\n            }\n        );\n    }\n\n    processWidgetConfig(widget) {\n        if (widget.type?.includes('date') && widget.weekStartDay == null) {\n            widget.weekStartDay = this.weekStartDay;\n        }\n\n        if (widget.type === 'extraItems') {\n            return false;\n        }\n\n        const\n            { eventEditFeature } = this,\n            fieldConfig          = {};\n\n        if (widget.ref === 'resourceField') {\n            const { store } = widget;\n\n            // Can't use store directly since it may be grouped and then contains irrelevant group records\n            widget.store = this.chainResourceStore();\n\n            // Allow the incoming widget's config to augment its store\n            if (store) {\n                widget.store.setConfig(store);\n            }\n\n            // When events are loaded with resourceId, we should only support single select.\n            // Only override this if the widget has not been explicitly configured\n            // with multiSelect.\n            if (!('multiSelect' in widget)) {\n                widget.multiSelect = !eventEditFeature.eventStore.usesSingleAssignment;\n            }\n        }\n\n        if ((widget.name === 'startDate' || widget.name === 'endDate') && widget.type === 'date') {\n            fieldConfig.format = eventEditFeature.dateFormat;\n        }\n\n        if ((widget.name === 'startDate' || widget.name === 'endDate') && widget.type === 'time') {\n            fieldConfig.format = eventEditFeature.timeFormat;\n        }\n\n        Object.assign(widget, fieldConfig);\n\n        return super.processWidgetConfig(widget);\n    }\n\n    onBeforeShow(...args) {\n        const\n            me               = this,\n            {\n                record,\n                titleRenderer\n            }                = me,\n            { deleteButton } = me.widgetMap;\n\n        // Hide delete button if we are readOnly or the event is in a create phase\n        // which means we are editing a dblclick-created or drag-created event.\n        if (deleteButton) {\n            deleteButton.hidden = me.readOnly || record.isCreating;\n        }\n\n        if (titleRenderer) {\n            me.title = me.callback(titleRenderer, me, [record]);\n        }\n        else {\n            me.title = me.initialTitle;\n        }\n\n        super.onBeforeShow?.(...args);\n    }\n\n    onInternalKeyDown(event) {\n        this.trigger('keyDown', { event });\n        super.onInternalKeyDown(event);\n    }\n\n    updateReadOnly(readOnly) {\n        const\n            {\n                deleteButton,\n                saveButton,\n                cancelButton\n            } = this.widgetMap;\n\n        super.updateReadOnly(readOnly);\n\n        if (deleteButton) {\n            deleteButton.hidden = readOnly;\n        }\n\n        if (saveButton) {\n            saveButton.hidden = readOnly;\n        }\n\n        if (cancelButton) {\n            cancelButton.hidden = readOnly;\n        }\n    }\n}\n\n// Register this widget type with its Factory\nEventEditor.initClass();\n","import RecurrenceFrequencyCombo from './RecurrenceFrequencyCombo.js';\n\n/**\n * @module Scheduler/view/recurrence/field/RecurrenceCombo\n */\n\n/**\n * A combobox field for selecting a recurrence pattern: `Daily`, `Weekly`, `Monthly` or `Yearly` if the recurrence\n * has no other non-default settings, or `Custom...` if the recurrence has custom setting applied.\n *\n * {@inlineexample Scheduler/view/RecurrenceCombo.js}\n *\n * @extends Scheduler/view/recurrence/field/RecurrenceFrequencyCombo\n * @classType recurrencecombo\n */\nexport default class RecurrenceCombo extends RecurrenceFrequencyCombo {\n\n    static get $name() {\n        return 'RecurrenceCombo';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'recurrencecombo';\n    }\n\n    static get defaultConfig() {\n        return {\n            customValue             : 'custom',\n            placeholder             : 'None',\n            // <remove-on-release>\n            // TODO: draw a splitting line\n            // </remove-on-release>\n            splitCls                : 'b-recurrencecombo-split',\n            items                   : true,\n            highlightExternalChange : false\n        };\n    }\n\n    buildItems() {\n        const me = this;\n\n        return [\n            { value : 'none', text : 'L{None}' },\n            ...super.buildItems(),\n            { value : me.customValue, text : 'L{Custom}', cls : me.splitCls }\n        ];\n    }\n\n    set value(value) {\n        // Use 'none' instead of falsy value\n        value = value || 'none';\n\n        super.value = value;\n    }\n\n    get value() {\n        return super.value;\n    }\n\n    set recurrence(recurrence) {\n        const me = this;\n\n        if (recurrence) {\n            me.value = me.isCustomRecurrence(recurrence) ? me.customValue : recurrence.frequency;\n        }\n        else {\n            me.value = null;\n        }\n    }\n\n    isCustomRecurrence(recurrence) {\n        const { interval, days, monthDays, months } = recurrence;\n\n        return Boolean(interval > 1 || (days && days.length) || (monthDays && monthDays.length) || (months && months.length));\n    }\n};\n\n// Register this widget type with its Factory\nRecurrenceCombo.initClass();\n","import Button from '../../../Core/widget/Button.js';\nimport RecurrenceLegend from '../../data/util/recurrence/RecurrenceLegend.js';\n\n/**\n * @module Scheduler/view/recurrence/RecurrenceLegendButton\n */\n\n/**\n * A button which displays the associated {@link #property-recurrence} info in a human readable form.\n * @extends Core/widget/Button\n * @classType recurrencelegendbutton\n */\nexport default class RecurrenceLegendButton extends Button {\n\n    static get $name() {\n        return 'RecurrenceLegendButton';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'recurrencelegendbutton';\n    }\n\n    static get defaultConfig() {\n        return {\n            localizableProperties : [],\n            recurrence            : null\n        };\n    }\n\n    /**\n     * Sets / gets the recurrence to display description for.\n     * @property {Scheduler.model.RecurrenceModel}\n     */\n    set recurrence(recurrence) {\n        this._recurrence = recurrence;\n        this.updateLegend();\n    }\n\n    get recurrence() {\n        return this._recurrence;\n    }\n\n    set eventStartDate(eventStartDate) {\n        this._eventStartDate = eventStartDate;\n        this.updateLegend();\n    }\n\n    get eventStartDate() {\n        return this._eventStartDate;\n    }\n\n    updateLegend() {\n        const { recurrence } = this;\n\n        this.text = recurrence ? RecurrenceLegend.getLegend(recurrence, this.eventStartDate) : '';\n    }\n\n    onLocaleChange() {\n        // on locale switch we update the button text to use proper language\n        this.updateLegend();\n    }\n\n    updateLocalization() {\n        this.onLocaleChange();\n        super.updateLocalization();\n    }\n}\n\n// Register this widget type with its Factory\nRecurrenceLegendButton.initClass();\n","import Popup from '../../../Core/widget/Popup.js';\nimport './RecurrenceEditorPanel.js';\n\n/**\n * @module Scheduler/view/recurrence/RecurrenceEditor\n */\n\n/**\n * Class implementing a dialog to edit a {@link Scheduler.model.RecurrenceModel recurrence model}. The class is used by\n * the {@link Scheduler.view.mixin.RecurringEvents recurring events} feature, and you normally don't need to instantiate\n * it.\n *\n * Before showing the dialog need to use {@link Core.widget.Container#property-record} to load a\n * {@link Scheduler.model.RecurrenceModel recurrence model} data into the editor fields. For example:\n *\n * ```javascript\n * // make the editor instance\n * const editor = new RecurrenceEditor();\n * // load recurrence model into it\n * editor.record = new RecurrenceModel({ frequency : \"WEEKLY\" });\n * // display the editor\n * editor.show();\n * ```\n *\n * @extends Core/widget/Popup\n * @classType recurrenceeditor\n */\nexport default class RecurrenceEditor extends Popup {\n\n    // <debug>\n    // region Localization test\n    static localization = [\n        'L{DAILYintervalUnit}',\n        'L{WEEKLYintervalUnit}',\n        'L{MONTHLYintervalUnit}',\n        'L{YEARLYintervalUnit}'\n    ];\n    // endregion\n    // </debug>\n\n    static get $name() {\n        return 'RecurrenceEditor';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'recurrenceeditor';\n    }\n\n    static get configurable() {\n        return {\n            draggable : true,\n            closable  : true,\n            floating  : true,\n            cls       : 'b-recurrenceeditor',\n            title     : 'L{Repeat event}',\n            autoClose : true,\n            width     : 470,\n            items     : {\n                recurrenceEditorPanel : {\n                    type  : 'recurrenceeditorpanel',\n                    title : null\n                }\n            },\n            bbar : {\n                defaults : {\n                    localeClass : this\n                },\n                items : {\n                    foo : {\n                        type   : 'widget',\n                        cls    : 'b-label-filler',\n                        weight : 100\n                    },\n                    saveButton : {\n                        color   : 'b-green',\n                        text    : 'L{Save}',\n                        onClick : 'up.onSaveClick',\n                        weight  : 200\n                    },\n                    cancelButton : {\n                        color   : 'b-gray',\n                        text    : 'L{Object.Cancel}',\n                        onClick : 'up.onCancelClick',\n                        weight  : 300\n                    }\n                }\n            },\n            scrollable : {\n                overflowY : true\n            }\n        };\n    }\n\n    updateReadOnly(readOnly) {\n        super.updateReadOnly(readOnly);\n\n        // No save or cancel buttons. It's purely for information display when in readOnly mode\n        this.bbar.hidden = readOnly;\n    }\n\n    get recurrenceEditorPanel() {\n        return this.widgetMap.recurrenceEditorPanel;\n    }\n\n    updateRecord(record) {\n        this.recurrenceEditorPanel.record = record;\n    }\n\n    onSaveClick() {\n        const me = this;\n\n        if (me.saveHandler) {\n            me.saveHandler.call(me.thisObj || me, me, me.record);\n        }\n        else {\n            me.recurrenceEditorPanel.syncEventRecord();\n            me.close();\n        }\n    }\n\n    onCancelClick() {\n        const me = this;\n\n        if (me.cancelHandler) {\n            me.cancelHandler.call(me.thisObj || me, me, me.record);\n        }\n        else {\n            me.close();\n        }\n    }\n\n}\n\n// Register this widget type with its Factory\nRecurrenceEditor.initClass();\n","import Widget from '../../../Core/widget/Widget.js';\nimport Base from '../../../Core/Base.js';\nimport '../../view/recurrence/RecurrenceConfirmationPopup.js';\nimport '../../view/recurrence/field/RecurrenceCombo.js';\nimport '../../view/recurrence/RecurrenceLegendButton.js';\nimport '../../view/recurrence/RecurrenceEditor.js';\n\n/**\n * @module Scheduler/feature/mixin/RecurringEventEdit\n */\n\n/**\n * This mixin class provides recurring events functionality to the {@link Scheduler.feature.EventEdit event editor}.\n * @mixin\n */\nexport default Target => class RecurringEventEdit extends (Target || Base) {\n    static get $name() {\n        return 'RecurringEventEdit';\n    }\n\n    static get configurable() {\n        return {\n            recurringEventsItems : {\n                /**\n                 * Reference to the `Repeat` event field, if used\n                 * @member {Scheduler.view.recurrence.field.RecurrenceCombo} recurrenceCombo\n                 * @readonly\n                 */\n                recurrenceCombo : {\n                    type   : 'recurrencecombo',\n                    label  : 'L{EventEdit.Repeat}',\n                    ref    : 'recurrenceCombo',\n                    weight : 700\n                },\n                /**\n                 * Reference to the button that opens the event repeat settings dialog, if used\n                 * @member {Scheduler.view.recurrence.RecurrenceLegendButton} editRecurrenceButton\n                 * @readonly\n                 */\n                editRecurrenceButton : {\n                    type                 : 'recurrencelegendbutton',\n                    ref                  : 'editRecurrenceButton',\n                    name                 : 'recurrenceRule',\n                    color                : 'b-gray',\n                    menuIcon             : null,\n                    flex                 : 1,\n                    weight               : 800,\n                    ignoreParentReadOnly : true\n                }\n            },\n\n            /**\n             * Set to `false` to hide recurring fields in event editor, even if the\n             * {@link Scheduler.view.mixin.RecurringEvents#config-enableRecurringEvents Recurring Events} is `true`\n             * and a recurring event is being edited.\n             * @config {Boolean}\n             * @category Recurring\n             */\n            showRecurringUI : null\n        };\n    }\n\n    changeEditorConfig(editorConfig) {\n        editorConfig.items = { ...editorConfig.items, ...this.recurringEventsItems };\n\n        // EditBase inserts extraItems *after* all default items are in\n        editorConfig = super.changeEditorConfig(editorConfig);\n\n        return editorConfig;\n    }\n\n    construct(scheduler, config) {\n        super.construct(scheduler, config);\n\n        this.scheduler.ion({\n            beforeEventSave : 'onRecurrableEventBeforeSave',\n            thisObj         : this\n        });\n    }\n\n    doDestroy() {\n        this._recurrenceConfirmation?.destroy();\n        this._recurrenceEditor?.destroy();\n\n        super.doDestroy();\n    }\n\n    onEditorConstructed(editor) {\n        const me = this;\n\n        editor.ion({\n            hide    : me.onRecurringEventEditorHide,\n            thisObj : me\n        });\n\n        if (me.editRecurrenceButton) {\n            me.editRecurrenceButton.menu = me.recurrenceEditor;\n        }\n\n        me.recurrenceCombo?.ion({\n            change  : me.onRecurrenceComboChange,\n            thisObj : me\n        });\n    }\n\n    updateReadOnly(readOnly) {\n        if (this._recurrenceEditor) {\n            this._recurrenceEditor.readOnly = readOnly;\n        }\n    }\n\n    internalShowEditor() {\n        this.toggleRecurringFieldsVisibility(this.client.enableRecurringEvents && this.showRecurringUI !== false);\n    }\n\n    toggleRecurringFieldsVisibility(show = true) {\n        const methodName = show ? 'show' : 'hide';\n\n        this.editRecurrenceButton?.[methodName]?.();\n        this.recurrenceCombo?.[methodName]?.();\n    }\n\n    onRecurringEventEditorHide() {\n        if (this.recurrenceEditor?.isVisible) {\n            this.recurrenceEditor.hide();\n        }\n\n        if (this.recurrenceConfirmation?.isVisible) {\n            this.recurrenceConfirmation.hide();\n        }\n    }\n\n    // Builds RecurrenceModel to load into the recurrenceEditor\n    // It builds the model based on either:\n    // - recurrence rule string (if provided)\n    // - or the event being edited recurrence (if the event is repeating)\n    // - or simply make a recurrence model w/ default state (by default means: Frequency=Daily, Interval=1)\n    makeRecurrence(rule) {\n        const\n            event     = this.eventRecord,\n            eventCopy = event.copy();\n\n        let recurrence = event.recurrence;\n\n        if (!rule && recurrence) {\n            recurrence = recurrence.copy();\n        }\n        else {\n            recurrence = new event.recurrenceModel(rule ? { rule } : {});\n        }\n\n        // bind cloned recurrence to the cloned event\n        recurrence.timeSpan = eventCopy;\n        // update cloned event w/ start date from the UI field\n        eventCopy.setStartDate(this.values.startDate);\n\n        recurrence.suspendTimeSpanNotifying();\n\n        return recurrence;\n    }\n\n    onRecurrableEventBeforeSave({ eventRecord, context }) {\n        const me = this;\n\n        // Other views features may trigger beforeEventSave, so only react when *we* are editing.\n        if (me.isEditing && !eventRecord.isCreating && eventRecord.supportsRecurring &&\n                (eventRecord.isRecurring || eventRecord.isOccurrence)) {\n            me.recurrenceConfirmation.confirm({\n                actionType : 'update',\n                eventRecord,\n                changerFn() {\n                    context.finalize(true);\n                },\n                cancelFn() {\n                    context.finalize(false);\n                }\n            });\n\n            // signalizes that we plan to decide save or not asynchronously\n            context.async = true;\n        }\n    }\n\n    set recurrenceConfirmation(recurrenceConfirmation) {\n        this._recurrenceConfirmation = recurrenceConfirmation;\n    }\n\n    get recurrenceConfirmation() {\n        const me = this;\n\n        let recurrenceConfirmation = me._recurrenceConfirmation;\n\n        if (!recurrenceConfirmation || !recurrenceConfirmation.$$name) {\n            recurrenceConfirmation = Widget.create({\n                type  : 'recurrenceconfirmation',\n                owner : me.editor,\n                ...recurrenceConfirmation\n            });\n\n            me._recurrenceConfirmation = recurrenceConfirmation;\n        }\n\n        return recurrenceConfirmation;\n    }\n\n    set recurrenceEditor(recurrenceEditor) {\n        this._recurrenceEditor = recurrenceEditor;\n    }\n\n    get recurrenceEditor() {\n        const me = this;\n\n        let recurrenceEditor = me._recurrenceEditor;\n\n        // Recurrence editor is centered and modal.\n        if (!recurrenceEditor || !recurrenceEditor.$$name) {\n            me._recurrenceEditor = recurrenceEditor = Widget.create({\n                type         : 'recurrenceeditor',\n                autoShow     : false,\n                centered     : true,\n                modal        : true,\n                constrainTo  : globalThis,\n                anchor       : false,\n                rootElement  : me.rootElement,\n                saveHandler  : me.recurrenceEditorSaveHandler,\n                onBeforeShow : me.onBeforeShowRecurrenceEditor.bind(me),\n                thisObj      : me,\n                ...recurrenceEditor\n            });\n\n            // Must set *after* construction, otherwise it becomes the default state\n            // to reset readOnly back to.  Must use direct property access because\n            // getter consults state of editor.\n            recurrenceEditor.readOnly = me._readOnly;\n        }\n\n        return recurrenceEditor;\n    }\n\n    onBeforeShowRecurrenceEditor() {\n        const\n            me                                = this,\n            { recurrenceEditor, eventRecord } = me;\n\n        if (recurrenceEditor && eventRecord?.supportsRecurring) {\n            // if the event has no recurrence yet ..initialize it before showing recurrence editor\n            if (!me.recurrence) {\n                me.recurrence = me.makeRecurrence();\n            }\n\n            // update the cloned recurrence w/ up to date start date value\n            me.recurrence.timeSpan.setStartDate(me.values.startDate);\n\n            // load RecurrenceModel record into the recurrence editor\n            recurrenceEditor.record = me.recurrence;\n\n            // In case they drag it. Centered falls off if the widget has position set.\n            recurrenceEditor.centered = true;\n        }\n    }\n\n    loadRecurrenceData(recurrence) {\n        this.recurrence = recurrence;\n\n        this.updateRecurrenceFields(recurrence);\n    }\n\n    updateRecurrenceFields(recurrence) {\n        const\n            me                       = this,\n            { editRecurrenceButton } = me;\n\n        if (me.recurrenceCombo) {\n            me.recurrenceCombo.recurrence = recurrence;\n        }\n\n        // update the recurrence legend\n        if (editRecurrenceButton) {\n            editRecurrenceButton.recurrence = recurrence;\n            editRecurrenceButton.value = recurrence ? recurrence.rule : null;\n\n            if (recurrence && me.client.enableRecurringEvents && me.showRecurringUI !== false) {\n                editRecurrenceButton.show();\n            }\n            else {\n                editRecurrenceButton.hide();\n            }\n        }\n    }\n\n    onRecurrenceComboChange({ source, value, userAction }) {\n        if (userAction) {\n            const\n                me                   = this,\n                { recurrenceEditor } = me;\n\n            if (value === source.customValue) {\n                // if user picked \"Custom\" - show recurrence editor\n                // This will recurse through the change event into the opposite side\n                // of the value test which will call updateRecurrenceFields, where the\n                // assignment to the value of the recurrenceCombo will be a non-change.\n                // That will sync the state of the recurrenceButton.\n                me.recurrenceCombo.recurrence = me.makeRecurrence();\n\n                if (recurrenceEditor.centered) {\n                    recurrenceEditor.show();\n                }\n                else {\n                    recurrenceEditor.show((me.editRecurrenceButton || source).element);\n                }\n            }\n            // user has picked some frequency -> make a new recurrence based on it\n            else {\n                me.loadRecurrenceData(value && value !== 'none' ? me.makeRecurrence(`FREQ=${value}`) : null);\n            }\n        }\n    }\n\n    recurrenceEditorSaveHandler(editor, recurrence) {\n        // apply changes to the kept recurrence\n        editor.recurrenceEditorPanel.syncEventRecord(recurrence);\n\n        // update the recurrence related UI\n        this.updateRecurrenceFields(recurrence);\n\n        editor.close();\n    }\n\n    onDatesChange(...args) {\n        super.onDatesChange(...args);\n\n        if (!this.loadingRecord && this.editRecurrenceButton) {\n            const { startDate } = this.values;\n\n            if (startDate) {\n                this.editRecurrenceButton.eventStartDate = startDate;\n            }\n        }\n    }\n\n    internalLoadRecord(eventRecord) {\n        if (eventRecord?.supportsRecurring) {\n            this.loadRecurrenceData(eventRecord.recurrence ? this.makeRecurrence() : null);\n        }\n    }\n\n    updateRecord(record) {\n        // Special handling for when setting recurrence to \"None\". Since button gets hidden its value is not picked up\n        // by the normal flow.\n        if (record.recurrenceRule && !this.recurrence) {\n            record.recurrenceRule = null;\n        }\n\n        return super.updateRecord(record);\n    }\n};\n","import Combo from '../../Core/widget/Combo.js';\nimport DomHelper from '../../Core/helper/DomHelper.js';\n\n/**\n * @module Scheduler/widget/ResourceCombo\n */\n\n/**\n * A Combo subclass which selects resources, optionally displaying the {@link Scheduler.model.ResourceModel#field-eventColor}\n * of each resource in the picker and in the input area.\n *\n * {@inlineexample Scheduler/widget/ResourceCombo.js}\n *\n * @extends Core/widget/Combo\n * @classType resourcecombo\n * @inputfield\n */\nexport default class ResourceCombo extends Combo {\n    static get $name() {\n        return 'ResourceCombo';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'resourcecombo';\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * Show the {@link Scheduler.model.ResourceModel#field-eventColor event color} for each resource\n             * @config {Boolean}\n             * @default\n             */\n            showEventColor : false,\n\n            displayField : 'name',\n            valueField   : 'id',\n\n            picker : {\n                cls : 'b-resourcecombo-picker',\n\n                itemIconTpl(record) {\n                    const\n                        { eventColor } = record,\n                        isStyleColor   = !DomHelper.isNamedColor(eventColor),\n                        style          = eventColor ? (isStyleColor ? ` style=\"color:${eventColor}\"` : '') : ' style=\"display:none\"',\n                        colorClass     = !eventColor || isStyleColor ? '' : ` b-sch-foreground-${eventColor}`;\n\n                    return `<div class=\"b-icon b-icon-square${colorClass}\"${style}></div>`;\n                }\n            }\n        };\n    }\n\n    changeShowEventColor(showEventColor) {\n        return Boolean(showEventColor);\n    }\n\n    updateShowEventColor(showEventColor) {\n        const\n            { _picker } = this,\n            methodName  = showEventColor ? 'add' : 'remove';\n\n        this.element.classList[methodName]('b-show-event-color');\n        _picker?.element.classList[methodName]('b-show-event-color');\n    }\n\n    changePicker(picker, oldPicker) {\n        picker = super.changePicker(picker, oldPicker);\n        picker?.element.classList[this.showEventColor ? 'add' : 'remove']('b-show-event-color');\n        return picker;\n    }\n\n    // Implementation needed at this level because it has two inner elements in its inputWrap\n    get innerElements() {\n        return [\n            {\n                class     : 'b-icon b-resource-icon b-icon-square b-hide-display',\n                reference : 'resourceIcon'\n            },\n            this.inputElement\n        ];\n    }\n\n    syncInputFieldValue() {\n        const\n            me            = this,\n            {\n                resourceIcon,\n                lastResourceIconCls\n            }             = me,\n            { classList } = resourceIcon,\n            eventColor    = me.selected?.eventColor ?? '';\n\n        super.syncInputFieldValue();\n\n        // Remove last colour whichever way it was done\n        resourceIcon.style.color = '';\n        lastResourceIconCls && classList.remove(lastResourceIconCls);\n        me.lastResourceIconCls = null;\n\n        if (eventColor) {\n            if (DomHelper.isNamedColor(eventColor)) {\n                me.lastResourceIconCls = `b-sch-foreground-${eventColor}`;\n                classList.add(me.lastResourceIconCls);\n            }\n            else {\n                resourceIcon.style.color = eventColor;\n            }\n            classList.remove('b-hide-display');\n        }\n        else {\n            classList.add('b-hide-display');\n        }\n    }\n}\n\n// Register this widget type with its Factory\nResourceCombo.initClass();\n","import EditBase from './base/EditBase.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport ObjectHelper from '../../Core/helper/ObjectHelper.js';\nimport '../view/EventEditor.js';\nimport Delayable from '../../Core/mixin/Delayable.js';\nimport RecurringEventEdit from './mixin/RecurringEventEdit.js';\nimport '../../Core/widget/TextField.js';\nimport '../../Scheduler/widget/ResourceCombo.js';\nimport TimeSpan from '../../Scheduler/model/TimeSpan.js';\nimport '../../Core/widget/DateField.js';\nimport '../../Core/widget/TimeField.js';\nimport '../../Core/widget/Button.js';\nimport Widget from '../../Core/widget/Widget.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\nimport TaskEditStm from './mixin/TaskEditStm.js';\n\n/**\n * @module Scheduler/feature/EventEdit\n */\n\nconst punctuation = /[^\\w\\d]/g;\n\n/**\n * Feature that displays a popup containing widgets for editing event data.\n *\n * {@inlineexample Scheduler/feature/EventEdit.js}\n *\n * To customize its contents you can:\n *\n * * Reconfigure built in widgets by providing override configs in the {@link Scheduler.feature.base.EditBase#config-items} config.\n * * Change the date format of the date & time fields: {@link Scheduler.feature.base.EditBase#config-dateFormat} and {@link Scheduler.feature.base.EditBase#config-timeFormat }\n * * Configure provided widgets in the editor and add your own in the {@link Scheduler.feature.base.EditBase#config-items} config.\n * * Remove fields related to recurring events configuration (such as `recurrenceCombo`) by setting {@link Scheduler.feature.mixin.RecurringEventEdit#config-showRecurringUI} config to `false`.\n * * Advanced: Reconfigure the whole editor widget using {@link #config-editorConfig}\n *\n * ## Built in widgets\n *\n * The built in widgets are:\n *\n * | Widget ref             | Type                                                     | Weight | Description                                                    |\n * |------------------------|----------------------------------------------------------|--------|----------------------------------------------------------------|\n * | `nameField`            | {@link Core.widget.TextField}                            | 100    | Edit name                                                      |\n * | `resourceField`        | {@link Scheduler.widget.ResourceCombo}                   | 200    | Pick resource(s)                                               |\n * | `startDateField`       | {@link Core.widget.DateField}                            | 300    | Edit startDate (date part)                                     |\n * | `startTimeField`       | {@link Core.widget.TimeField}                            | 400    | Edit startDate (time part)                                     |\n * | `endDateField`         | {@link Core.widget.DateField}                            | 500    | Edit endDate (date part)                                       |\n * | `endTimeField`         | {@link Core.widget.TimeField}                            | 600    | Edit endDate (time part)                                       |\n * | `recurrenceCombo`      | {@link Scheduler.view.recurrence.field.RecurrenceCombo}  | 700    | Select recurrence rule (only visible if recurrence is used)    |\n * | `editRecurrenceButton` | {@link Scheduler.view.recurrence.RecurrenceLegendButton} | 800    | Edit the recurrence rule  (only visible if recurrence is used) |\n *\n * The built in buttons are:\n *\n * | Widget ref             | Type                                                                     | Weight | Description                                                    |\n * |------------------------|--------------------------------------------------------------------------|--------|----------------------------------------------------------------|\n * | `saveButton`           | {@link Core.widget.Button}                                               | 100    | Save event button on the bbar                                  |\n * | `deleteButton`         | {@link Core.widget.Button}                                               | 200    | Delete event button on the bbar                                |\n * | `cancelButton`         | {@link Core.widget.Button}                                               | 300    | Cancel event editing button on the bbar                        |\n *\n * ## Removing a built in item\n *\n * To remove a built in widget, specify its `ref` as `null` in the `items` config:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         eventEdit : {\n *             items : {\n *                 // Remove the start time field\n *                 startTimeField : null\n *             }\n *         }\n *     }\n * })\n * ```\n *\n * Bottom buttons may be hidden using `bbar` config passed to `editorConfig`:\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         eventEdit : {\n *             editorConfig : {\n *                 bbar : {\n *                     items : {\n *                         deleteButton : null\n *                     }\n *                 }\n *             }\n *         }\n *     }\n * })\n * ```\n *\n * To remove fields related to recurring events configuration (such as `recurrenceCombo`), set {@link Scheduler.feature.mixin.RecurringEventEdit#config-showRecurringUI} config to `false`.\n *\n * ## Customizing a built in widget\n *\n * To customize a built in widget, use its `ref` as the key in the `items` config and specify the configs you want\n * to change (they will merge with the widgets default configs):\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         eventEdit : {\n *             items : {\n *                 // ref for an existing field\n *                 nameField : {\n *                     // Change its label\n *                     label : 'Description'\n *                 }\n *             }\n *         }\n *     }\n * })\n * ```\n *\n * ## Adding custom widgets\n *\n * To add a custom widget, add an entry to the `items` config. The `name` property links the input field to a field in\n * the loaded event record:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         eventEdit : {\n *             items : {\n *                 // Key to use as fields ref (for easier retrieval later)\n *                 color : {\n *                     type  : 'combo',\n *                     label : 'Color',\n *                     items : ['red', 'green', 'blue'],\n *                     // name will be used to link to a field in the event record when loading and saving in the editor\n *                     name  : 'eventColor'\n *                 }\n *             }\n *         }\n *     }\n * })\n * ```\n *\n * For more info on customizing the event editor, please see \"Customize event editor\" guide.\n *\n * This feature is **enabled** by default\n *\n * @mixes Scheduler/feature/mixin/RecurringEventEdit\n * @extends Scheduler/feature/base/EditBase\n * @demo Scheduler/eventeditor\n * @classtype eventEdit\n * @feature\n */\nexport default class EventEdit extends EditBase.mixin(TaskEditStm, RecurringEventEdit, Delayable) {\n    //region Config\n\n    static get $name() {\n        return 'EventEdit';\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * The event that shall trigger showing the editor. Defaults to `eventdblclick`, set to `''` or null to\n             * disable editing of existing events.\n             * @config {String}\n             * @default\n             * @category Editor\n             */\n            triggerEvent : 'eventdblclick',\n\n            /**\n             * The data field in the model that defines the eventType.\n             * Applied as class (b-eventtype-xx) to the editors element, to allow showing/hiding fields depending on\n             * eventType. Dynamic toggling of fields in the editor is activated by adding an `eventTypeField` field to\n             * your widget:\n             *\n             * ```javascript\n             * const scheduler = new Scheduler({\n             *    features : {\n             *       eventEdit : {\n             *           items : {\n             *               eventTypeField : {\n             *                  type  : 'combo',\n             *                  name  : 'eventType',\n             *                  label : 'Type',\n             *                  items : ['Appointment', 'Internal', 'Meeting']\n             *               }\n             *           }\n             *        }\n             *     }\n             * });\n             * ```\n             * Note, your event model class also must declare this field:\n             * ```javascript\n             *  class MyEvent extends EventModel {\n             *      static get fields() {\n             *          return [\n             *              { name : 'eventType' }\n             *          ];\n             *      }\n             *  }\n             * ```\n             * @config {String}\n             * @default\n             * @category Editor\n             */\n            typeField : 'eventType',\n\n            /**\n             * The current {@link Scheduler.model.EventModel} record, which is being edited by the event editor.\n             * @property {Scheduler.model.EventModel}\n             * @readonly\n             */\n            eventRecord : null,\n\n            /**\n             * Specify `true` to put the editor in read only mode.\n             * @config {Boolean}\n             * @default false\n             */\n            readOnly : null,\n\n            /**\n             * The configuration for the internal editor widget. With this config you can control the *type*\n             * of editor (defaults to `Popup`) and which widgets to show,\n             * change the items in the `bbar`, or change whether the popup should be modal etc.\n             *\n             * ```javascript\n             * const scheduler = new Scheduler({\n             *     features : {\n             *         eventEdit  : {\n             *             editorConfig : {\n             *                 modal  : true,\n             *                 cls    : 'my-editor' // A CSS class,\n             *                 items  : {\n             *                     owner : {\n             *                         weight : -100, // Will sort above system-supplied fields which are weight 100 to 800\n             *                         type   : 'usercombo',\n             *                         name   : 'owner',\n             *                         label  : 'Owner'\n             *                     },\n             *                     agreement : {\n             *                         weight : 1000, // Will sort below system-supplied fields which are weight 100 to 800\n             *                         type   : 'checkbox',\n             *                         name   : 'agreement',\n             *                         label  : 'Agree to terms'\n             *                     },\n             *                     resourceField : {\n             *                         // Apply a special filter to limit the Combo's access\n             *                         // to resources.\n             *                         store  {\n             *                             filters : [{\n             *                                 filterBy(resource) {\n             *                                     return shouldShowResource(record);\n             *                                 }\n             *                             }]\n             *                         }\n             *                     }\n             *                 },\n             *                 bbar : {\n             *                     items : {\n             *                         deleteButton : {\n             *                             hidden : true\n             *                         }\n             *                     }\n             *                 }\n             *             }\n             *         }\n             *     }\n             * });\n             * ```\n             *\n             * Or to use your own custom editor:\n             *\n             * ```javascript\n             * const scheduler = new Scheduler({\n             *     features : {\n             *         eventEdit  : {\n             *             editorConfig : {\n             *                 type : 'myCustomEditorType'\n             *             }\n             *         }\n             *     }\n             * });\n             * ```\n             * @config {Object}\n             * @category Editor\n             */\n            editorConfig : {\n                type        : 'eventeditor',\n                title       : 'L{EventEdit.Edit event}',\n                closable    : true,\n                localeClass : this,\n\n                defaults : {\n                    localeClass : this\n                },\n                items : {\n                    /**\n                     * Reference to the name field, if used\n                     * @member {Core.widget.TextField} nameField\n                     * @readonly\n                     */\n                    nameField : {\n                        type      : 'text',\n                        label     : 'L{Name}',\n                        clearable : true,\n                        name      : 'name',\n                        weight    : 100,\n                        required  : true\n                    },\n                    /**\n                     * Reference to the resource field, if used\n                     * @member {Core.widget.Combo} resourceField\n                     * @readonly\n                     */\n                    resourceField : {\n                        type                    : 'resourcecombo',\n                        label                   : 'L{Resource}',\n                        name                    : 'resource',\n                        editable                : true,\n                        valueField              : 'id',\n                        displayField            : 'name',\n                        highlightExternalChange : false,\n                        destroyStore            : true,\n                        weight                  : 200\n                    },\n                    /**\n                     * Reference to the start date field, if used\n                     * @member {Core.widget.DateField} startDateField\n                     * @readonly\n                     */\n                    startDateField : {\n                        type             : 'date',\n                        cls              : 'b-inline',\n                        clearable        : false,\n                        required         : true,\n                        label            : 'L{Start}',\n                        name             : 'startDate',\n                        validateDateOnly : true,\n                        weight           : 300\n                    },\n                    /**\n                     * Reference to the start time field, if used\n                     * @member {Core.widget.TimeField} startTimeField\n                     * @readonly\n                     */\n                    startTimeField : {\n                        type      : 'time',\n                        clearable : false,\n                        required  : true,\n                        name      : 'startDate',\n                        cls       : 'b-match-label',\n                        weight    : 400\n                    },\n                    /**\n                     * Reference to the end date field, if used\n                     * @member {Core.widget.DateField} endDateField\n                     * @readonly\n                     */\n                    endDateField : {\n                        type             : 'date',\n                        cls              : 'b-inline',\n                        clearable        : false,\n                        required         : true,\n                        label            : 'L{End}',\n                        name             : 'endDate',\n                        validateDateOnly : true,\n                        weight           : 500\n                    },\n                    /**\n                     * Reference to the end time field, if used\n                     * @member {Core.widget.TimeField} endTimeField\n                     * @readonly\n                     */\n                    endTimeField : {\n                        type      : 'time',\n                        clearable : false,\n                        required  : true,\n                        name      : 'endDate',\n                        cls       : 'b-match-label',\n                        weight    : 600\n                    }\n                },\n\n                bbar : {\n                    // When readOnly, child buttons are hidden\n                    hideWhenEmpty : true,\n\n                    defaults : {\n                        localeClass : this\n                    },\n                    items : {\n                        /**\n                         * Reference to the save button, if used\n                         * @member {Core.widget.Button} saveButton\n                         * @readonly\n                         */\n                        saveButton : {\n                            color  : 'b-blue',\n                            cls    : 'b-raised',\n                            text   : 'L{Save}',\n                            weight : 100\n                        },\n                        /**\n                         * Reference to the delete button, if used\n                         * @member {Core.widget.Button} deleteButton\n                         * @readonly\n                         */\n                        deleteButton : {\n                            text   : 'L{Delete}',\n                            weight : 200\n                        },\n                        /**\n                         * Reference to the cancel button, if used\n                         * @member {Core.widget.Button} cancelButton\n                         * @readonly\n                         */\n                        cancelButton : {\n                            text   : 'L{Object.Cancel}',\n                            weight : 300\n                        }\n                    }\n                }\n            },\n\n            targetEventElement : null\n        };\n    }\n\n    static get pluginConfig() {\n        return {\n            chain : [\n                'populateEventMenu',\n                'onEventEnterKey',\n                'editEvent'\n            ]\n        };\n    }\n\n    //endregion\n\n    //region Init & destroy\n\n    construct(scheduler, config) {\n        // Default to the scheduler's state, but configs may override\n        this.readOnly = scheduler.readOnly;\n\n        super.construct(scheduler, config);\n\n        scheduler.ion({\n            projectChange : 'onChangeProject',\n            readOnly      : 'onClientReadOnlyToggle',\n            thisObj       : this\n        });\n    }\n\n    get scheduler() {\n        return this.client;\n    }\n\n    get project() {\n        return this.client.project;\n    }\n    //endregion\n\n    //region Editing\n\n    /**\n     * Get/set readonly state\n     * @property {Boolean}\n     */\n    get readOnly() {\n        return this._editor ? this.editor.readOnly : this._readOnly;\n    }\n\n    updateReadOnly(readOnly) {\n        super.updateReadOnly(readOnly);\n\n        if (this._editor) {\n            this.editor.readOnly = readOnly;\n        }\n    }\n\n    onClientReadOnlyToggle({ readOnly }) {\n        this.readOnly = readOnly;\n    }\n\n    /**\n     * Returns the editor widget representing this feature\n     * @member {Core.widget.Popup}\n     */\n    get editor() {\n        const\n            me              = this,\n            editorListeners = {\n                beforehide : 'resetEditingContext',\n                beforeshow : 'onBeforeEditorShow',\n                keydown    : 'onPopupKeyDown',\n                thisObj    : me\n            };\n\n        let { _editor : editor } = me;\n\n        if (editor) {\n            return editor;\n        }\n\n        editor = me._editor = Widget.create(me.getEditorConfig());\n\n        const {\n            startDateField,\n            startTimeField,\n            endDateField,\n            endTimeField\n        } = editor.widgetMap;\n\n        // If the date field doesn't exist, the time field must encapsulate the\n        // date component of the start/end points and must lay out right.\n        if (!startDateField && startTimeField) {\n            startTimeField.keepDate = true;\n            startTimeField.label = me.L('Start');\n            startTimeField.flex = '1 0 100%';\n        }\n        if (!endDateField && endTimeField) {\n            endTimeField.keepDate = true;\n            endTimeField.label = me.L('End');\n            endTimeField.flex = '1 0 100%';\n        }\n\n        // If the default Popup has been reconfigured to be static, add it as a child of our client.\n        if (!editor.floating && !editor.positioned) {\n            // If not configured with an appendTo, we add it as a child of our client.\n            if (!editor.element.parentNode) {\n                me.client.add(editor);\n            }\n            delete editorListeners.beforehide;\n            delete editorListeners.beforShow;\n            editorListeners.beforeToggleReveal = 'onBeforeEditorToggleReveal';\n        }\n\n        // Must set *after* construction, otherwise it becomes the default state\n        // to reset readOnly back to. Must use direct property access because\n        // getter consults state of editor.\n        editor.readOnly = me._readOnly;\n\n        if (editor.items.length === 0) {\n            console.warn('Event Editor configured without any `items`');\n        }\n\n        // add listeners programmatically so users cannot override them accidentally\n        editor.ion(editorListeners);\n\n        /**\n         * Fired before the editor will load the event record data into its input fields. This is useful if you\n         * want to modify the fields before data is loaded (e.g. set some input field to be readonly)\n         * @on-owner\n         * @event eventEditBeforeSetRecord\n         * @param {Core.widget.Container} source The editor widget\n         * @param {Scheduler.model.EventModel} record The record\n         */\n        me.scheduler.relayEvents(editor, ['beforeSetRecord'], 'eventEdit');\n\n        // assign widget variables, using widget name: startDate -> me.startDateField\n        // widgets with id set use that instead, id -> me.idField\n        Object.values(editor.widgetMap).forEach(widget => {\n            const ref = widget.ref || widget.id;\n            // don't overwrite if already defined\n            if (ref && !me[ref]) {\n                me[ref] = widget;\n\n                switch (widget.name) {\n                    case 'startDate':\n                    case 'endDate':\n                        widget.ion({ change : 'onDatesChange', thisObj : me });\n                        break;\n                }\n            }\n        });\n\n        // launch onEditorConstructed hook if provided\n        me.onEditorConstructed?.(editor);\n\n        me.eventTypeField?.ion({ change : 'onEventTypeChange', thisObj : me });\n\n        me.saveButton?.ion({ click : 'onSaveClick', thisObj : me });\n        me.deleteButton?.ion({ click : 'onDeleteClick', thisObj : me });\n        me.cancelButton?.ion({ click : 'onCancelClick', thisObj : me });\n\n        return editor;\n    }\n\n    getEditorConfig() {\n        const\n            me                 = this,\n            // must result in longest format, ie 2 digits for date and all time parts.\n            time               = new Date(2000, 12, 31, 23, 55, 55),\n            dateLength         = DateHelper.format(time, me.dateFormat).replace(punctuation, '').length,\n            timeLength         = DateHelper.format(time, me.timeFormat).replace(punctuation, '').length,\n            dateTimeLength     = dateLength + timeLength,\n            { cls, scheduler } = me,\n            result             = ObjectHelper.assign({\n                owner            : scheduler,\n                eventEditFeature : me,\n                weekStartDay     : me.weekStartDay,\n                align            : 'b-t',\n                id               : `${scheduler.id}-event-editor`,\n                autoShow         : false,\n                anchor           : true,\n                scrollAction     : 'realign',\n                constrainTo      : globalThis,\n                cls\n            }, me.editorConfig);\n\n        // User configuration may have included a render target which means the editor\n        // will not be floating.\n        if (Widget.prototype.getRenderContext(result)[0]) {\n            result.floating = false;\n        }\n\n        // If the default Popup has been reconfigured to be static, ensure it starts\n        // life as a visible but collapsed panel.\n        if (result.floating === false && !result.positioned) {\n            result.collapsible = {\n                type           : 'overlay',\n                direction      : 'right',\n                autoClose      : false,\n                tool           : null,\n                recollapseTool : null\n            };\n            result.collapsed = true;\n            result.hidden = result.anchor = false;\n            result.hide = function() {\n                this.collapsible.toggleReveal(false);\n            };\n        }\n\n        // Layout-affecting props must be available early so that appendTo ends up with\n        // correct layout.\n        result.onElementCreated = function({ element }) {\n            element.style.setProperty('--date-time-length', `${dateTimeLength}em`);\n            element.style.setProperty('--date-width-difference', `${(dateLength - timeLength) / 2}em`);\n        };\n        return result;\n    }\n\n    // Called from editEvent() to actually show the editor\n    internalShowEditor(eventRecord, resourceRecord, align = null) {\n        const\n            me            = this,\n            { scheduler } = me,\n            // Align to the element (b-sch-event) and not the wrapper\n            eventElement = align?.target?.nodeType === Element.ELEMENT_NODE\n                ? align.target\n                : scheduler.getElementFromEventRecord(eventRecord, resourceRecord),\n            isPartOfStore = eventRecord.isPartOfStore(scheduler.eventStore);\n\n        align = align ?? {\n            // Align to the element (b-sch-event) and not the wrapper\n            target : eventElement,\n            anchor : true\n        };\n\n        // Event not in current TimeAxis - cannot be edited without extending the TimeAxis.\n        // If there's no event element and the eventRecord is not in the store, we still\n        // edit centered on the Scheduler - we're adding a new event\n        if (align.target || !isPartOfStore || eventRecord.isCreating) {\n            /**\n             * Fires on the owning Scheduler before an event is displayed in an editor.\n             * This may be listened for to allow an application to take over event editing duties. Returning `false`\n             * stops the default editing UI from being shown.\n             * @event beforeEventEdit\n             * @on-owner\n             * @param {Scheduler.view.Scheduler} source The scheduler\n             * @param {Scheduler.feature.EventEdit} eventEdit The eventEdit feature\n             * @param {Scheduler.model.EventModel} eventRecord The record about to be shown in the event editor.\n             * @param {Scheduler.model.ResourceModel} resourceRecord The Resource record for the event. If the event\n             * is being created, it will not contain a resource, so this parameter specifies the resource the\n             * event is being created for.\n             * @param {HTMLElement} eventElement The element which represents the event in the scheduler display.\n             * @preventable\n             */\n            if (scheduler.trigger('beforeEventEdit', {\n                eventEdit : me,\n                eventRecord,\n                resourceRecord,\n                eventElement\n            }) === false) {\n                scheduler.element.classList.remove('b-eventeditor-editing');\n                return false;\n            }\n\n            // need to add this css class as early as possible to prevent\n            // the event tooltip from appearing\n            me.scheduler.element.classList.add('b-eventeditor-editing');\n\n            me.resourceRecord = resourceRecord;\n\n            const { editor } = me;\n\n            me.editingContext = {\n                eventRecord,\n                resourceRecord,\n                eventElement,\n                editor,\n                isPartOfStore\n            };\n\n            super.internalShowEditor?.(eventRecord, resourceRecord, align);\n\n            if (me.typeField) {\n                me.toggleEventType(eventRecord.get(me.typeField));\n            }\n\n            me.loadRecord(eventRecord, resourceRecord);\n\n            // If it's a static child of the client which is collapsed, expand it.\n            // Floating components focusOnShow by default, this will need to be focused.\n            if (editor.collapsed) {\n                // The *initial* reveal does not animate unless the toggleReveal call is delayed.\n                editor.setTimeout(async() => {\n                    await editor.collapsible.toggleReveal(true);\n                    editor.focus();\n                }, 100);\n            }\n            // Honour alignment settings \"anchor\" and \"centered\" which may be injected from editorConfig.\n            else if (editor.centered || !editor.anchor || !editor.floating) {\n                editor.show();\n            }\n            else if (eventElement) {\n                me.targetEventElement = eventElement;\n                editor.showBy(align);\n            }\n            // We are adding an unrendered event. Display the editor centered\n            else {\n                editor.show();\n\n                // Must be done after show because show always reverts to its configured centered setting.\n                editor.updateCentered(true);\n            }\n\n            // Adjust time field step increment based on timeAxis resolution\n            const timeResolution = scheduler.timeAxisViewModel.timeResolution;\n\n            if (timeResolution.unit === 'hour' || timeResolution.unit === 'minute') {\n                const step = `${timeResolution.increment}${timeResolution.unit}`;\n                if (me.startTimeField) {\n                    me.startTimeField.step = step;\n                }\n                if (me.endTimeField) {\n                    me.endTimeField.step = step;\n                }\n            }\n\n            // Might end up here with the old listener still around in monkey test for stress demo in turbo mode.\n            // Some action happening during edit, but cannot track down what is going on\n            me.detachListeners('changesWhileEditing');\n\n            scheduler.eventStore.ion({\n                change  : me.onChangeWhileEditing,\n                refresh : me.onChangeWhileEditing,\n                thisObj : me,\n                name    : 'changesWhileEditing'\n            });\n        }\n    }\n\n    onChangeWhileEditing() {\n        const me = this;\n        // If event was removed, cancel editing\n        // however, there's one valid case when even can be removed during save finalization - that is when\n        // all its assignments has been removed - in such case ignore the removal and do not call the `onCancelClick`\n        // because that will reject the STM transaction and revert all changes\n        if (!me.isFinalizingEventSave && me.isEditing && me.editingContext.isPartOfStore && !me.eventRecord.isPartOfStore(me.scheduler.eventStore)) {\n            me.onCancelClick();\n        }\n    }\n\n    // Fired in a listener so that it's after the auto-called onBeforeShow listeners so that\n    // subscribers to the beforeEventEditShow are called at exactly the correct lifecycle point.\n    onBeforeEditorShow() {\n        super.onBeforeEditorShow(...arguments);\n\n        /**\n         * Fires on the owning Scheduler when the editor for an event is available but before it is populated with\n         * data and shown. Allows manipulating fields etc.\n         * @event beforeEventEditShow\n         * @on-owner\n         * @param {Scheduler.view.Scheduler} source The scheduler\n         * @param {Scheduler.feature.EventEdit} eventEdit The eventEdit feature\n         * @param {Scheduler.model.EventModel} eventRecord The record about to be shown in the event editor.\n         * @param {Scheduler.model.ResourceModel} resourceRecord The Resource record for the event. If the event\n         * is being created, it will not contain a resource, so this parameter specifies the resource the\n         * event is being created for.\n         * @param {HTMLElement} eventElement The element which represents the event in the scheduler display.\n         * @param {Core.widget.Popup} editor The editor\n         */\n        this.scheduler.trigger('beforeEventEditShow', {\n            eventEdit : this,\n            ...this.editingContext\n        });\n    }\n\n    updateTargetEventElement(targetEventElement, oldTargetEventElement) {\n        targetEventElement?.classList.add('b-editing');\n        oldTargetEventElement?.classList.remove('b-editing');\n    }\n\n    /**\n     * Opens an editor for the passed event. This function is exposed on Scheduler and can be called as\n     * `scheduler.editEvent()`.\n     * @param {Scheduler.model.EventModel} eventRecord Event to edit\n     * @param {Scheduler.model.ResourceModel} [resourceRecord] The Resource record for the event.\n     * This parameter is needed if the event is newly created for a resource and has not been assigned, or when using\n     * multi assignment.\n     * @param {HTMLElement} [element] Element to anchor editor to (defaults to events element)\n     * @on-owner\n     */\n    editEvent(eventRecord, resourceRecord, element = null, stmCapture = null) {\n        const\n            me                  = this,\n            { simpleEventEdit } = me.client.features;\n\n        if (me.isEditing) {\n            // old editing flow already running, clean it up\n            me.resetEditingContext();\n        }\n\n        // If simple edit feature is active, use it when a new event is created\n        if (me.disabled || eventRecord.readOnly || (eventRecord.isCreating && simpleEventEdit?.enabled)) {\n            return;\n        }\n\n        if (stmCapture) {\n            me.stmInitiallyAutoRecord = stmCapture.stmInitiallyAutoRecord;\n            me.stmInitiallyDisabled = stmCapture.stmInitiallyDisabled;\n            me.hasStmCapture = true;\n\n            // indicate that editor has been opened, and is now managing the \"stm capture\"\n            stmCapture.transferred = true;\n        }\n        // it is set to `false` by calendar, to ignore the STM mechanism\n        else if (stmCapture !== false && !me.client.isCalendar && !me.hasStmCapture) {\n            me.captureStm(true);\n        }\n\n        return me.doEditEvent(...arguments).then(result => {\n            if (!me.isDestroying) {\n                // The Promise being async allows a mouseover to trigger the event tip\n                // unless we add the editing class immediately (But only if we actually began editing).\n                if (!me.isEditing && !me.client.isCalendar) {\n                    // probably a custom event editor was used or editing was vetoed for some other reason\n                    if (result !== false) {\n                        // Skip stm rejection if built-in editor is disabled in beforeEventEdit (using of custom event editor)\n                        me.rejectStmTransaction();\n                    }\n                    me.freeStm();\n                }\n            }\n        });\n    }\n\n    /**\n     * Returns true if the editor is currently active\n     * @readonly\n     * @property {Boolean}\n     */\n    get isEditing() {\n        const { _editor } = this;\n\n        return Boolean(\n            // Editor is not visible if it is collapsed and not expanded\n            _editor?.isVisible && !(_editor.collapsed && !_editor.revealed)\n        );\n    }\n\n    // editEvent is the single entry point in the base class.\n    // Subclass implementations of the action may differ, so are implemented in doEditEvent\n    async doEditEvent(eventRecord, resourceRecord, element = null) {\n        const\n            me            = this,\n            { scheduler } = me,\n            isNewRecord   = eventRecord.isCreating;\n\n        if (!resourceRecord) {\n            // Need to handle resourceId for edge case when creating an event with resourceId and editing it before\n            // adding it to the EventStore\n            resourceRecord = eventRecord.resource || me.resourceStore.getById(eventRecord.resourceId);\n        }\n\n        if (isNewRecord) {\n            // Ensure temporal data fields are ready when the editor is shown\n            TimeSpan.prototype.normalize.call(eventRecord);\n        }\n\n        // If element is specified (call triggered by EventDragCreate)\n        // Then we can align to that, and no scrolling is necessary.\n        // If we are simply being asked to edit a new event which is not\n        // yet added, the editor is centered, and no scroll is necessary\n        if (element || isNewRecord) {\n            return me.internalShowEditor(eventRecord, resourceRecord, element ? {\n                target : element\n            } : null);\n        }\n        else {\n            // Ensure event is in view before showing the editor.\n            // Note that we first need to extend the time axis to include\n            // currently out of range events.\n            return scheduler.scrollResourceEventIntoView(resourceRecord, eventRecord, {\n                animate        : true,\n                edgeOffset     : 0,\n                extendTimeAxis : false\n            }).then(() => me.internalShowEditor(eventRecord, resourceRecord), () => scheduler.element.classList.remove('b-eventeditor-editing'));\n        }\n    }\n\n    /**\n     * Sets fields values from record being edited\n     * @private\n     */\n    loadRecord(eventRecord, resourceRecord) {\n        this.loadingRecord = true;\n\n        this.internalLoadRecord(eventRecord, resourceRecord);\n\n        this.loadingRecord = false;\n    }\n\n    get eventRecord() {\n        return this._editor?.record;\n    }\n\n    internalLoadRecord(eventRecord, resourceRecord) {\n        const\n            me                        = this,\n            { eventStore }            = me.client,\n            { editor, resourceField } = me;\n\n        me.resourceRecord = resourceRecord;\n\n        // Update chained store early, to have records in place when setting value below (avoids adding the resource to\n        // empty combo store, https://github.com/bryntum/support/issues/5378). It is not done automatically for\n        // grouping/trees or when project is replaced\n        if (resourceField && resourceField.store?.masterStore !== me.resourceStore) {\n            resourceField.store = editor.chainResourceStore();\n        }\n\n        editor.record = eventRecord;\n\n        if (resourceField) {\n            const resources = eventStore.assignmentStore.getResourcesForEvent(eventRecord);\n\n            // Flag on parent Container to indicate that initially blank fields are valid\n            editor.assigningValues = true;\n\n            // If this is an unassigned event, select the resource we've been provided\n            if (!eventRecord.isOccurrence && !eventStore.storage.includes(eventRecord, true) && resourceRecord) {\n                me.resourceField.value = resourceRecord[me.resourceField.valueField];\n            }\n            else if (me.assignmentStore) {\n                me.resourceField.value = resources.map((resource) => resource[me.resourceField.valueField]);\n            }\n            editor.assigningValues = false;\n        }\n\n        super.internalLoadRecord(eventRecord, resourceRecord);\n    }\n\n    toggleEventType(eventType) {\n        // expose eventType in dataset, for querying and styling\n        this.editor.element.dataset.eventType = eventType || '';\n\n        this.editor.eachWidget(widget => { // need {}'s here so we don't return false and end iteration\n            widget.dataset?.eventType && (widget.hidden = widget.dataset.eventType !== eventType);\n        });\n    }\n\n    //endregion\n\n    //region Save\n\n    async finalizeEventSave(eventRecord, resourceRecords, resolve, reject) {\n        const\n            me = this,\n            {\n                scheduler,\n                assignmentStore\n            }  = me;\n\n        const aborted = false;\n\n        // Prevent multiple commits from this flow\n        assignmentStore.suspendAutoCommit();\n\n        // Avoid multiple redraws, from event changes + assignment changes\n        scheduler.suspendRefresh();\n\n        me.onBeforeSave(eventRecord);\n\n        eventRecord.beginBatch();\n        me.updateRecord(eventRecord);\n        eventRecord.endBatch();\n\n        if (!eventRecord.isOccurrence) {\n            if (me.resourceField) {\n                assignmentStore.assignEventToResource(eventRecord, resourceRecords, null, true);\n            }\n        }\n        // An occurrence event record may have changed only resources value. In that case we'll never get into afterChange() method that\n        // apply changed data and make an event \"real\", because resources is not a field and a record won't be marked as dirty.\n        // We used temporary field to save updated resources list and get into afterChange() method.\n        else if (resourceRecords) {\n            eventRecord.set('resourceRecords', resourceRecords);\n        }\n\n        // If it was a provisional event, passed in here from drag-create or dblclick or contextmenu,\n        // it's now it's no longer a provisional event and will not be removed in resetEditingContext\n        // Also, when promoted to be permanent, auto syncing will kick in if configured.\n        eventRecord.isCreating = false;\n\n        if (!aborted) {\n            await scheduler.project.commitAsync();\n        }\n\n        assignmentStore.resumeAutoCommit();\n\n        // Redraw once\n        scheduler.resumeRefresh(true);\n\n        if (!aborted) {\n            /**\n             * Fires on the owning Scheduler after an event is successfully saved\n             * @event afterEventSave\n             * @on-owner\n             * @param {Scheduler.view.Scheduler} source The scheduler instance\n             * @param {Scheduler.model.EventModel} eventRecord The record about to be saved\n             */\n            scheduler.trigger('afterEventSave', { eventRecord });\n            me.onAfterSave(eventRecord);\n        }\n        resolve(aborted ? false : eventRecord);\n    }\n\n    /**\n     * Saves the changes (applies them to record if valid, if invalid editor stays open)\n     * @private\n     * @fires beforeEventSave\n     * @fires beforeEventAdd\n     * @fires afterEventSave\n     * @async\n     */\n    save() {\n        return new Promise((resolve, reject) => {\n            const\n                me                         = this,\n                { scheduler, eventRecord } = me;\n\n            if (!eventRecord || !me.editor.isValid) {\n                resolve(false);\n                return;\n            }\n\n            const\n                { eventStore, values } = me,\n                resourceRecords        = me.resourceField?.records || (me.resourceRecord ? [me.resourceRecord] : []);\n\n            // Check for potential overlap scenarios before saving\n            // <remove-on-release>\n            // TODO: needs to be indicated in the UI\n            // </remove-on-release>\n            if (!me.scheduler.allowOverlap && eventStore) {\n                let { startDate, endDate } = values;\n\n                // Should support using a duration field instead of the end date field\n                if (!endDate) {\n                    if ('duration' in values) {\n                        endDate = DateHelper.add(startDate, values.duration, values.durationUnit || eventRecord.durationUnit);\n                    }\n                    else if ('fullDuration' in values) {\n                        endDate = DateHelper.add(startDate, values.fullDuration);\n                    }\n                    else {\n                        endDate = eventRecord.endDate;\n                    }\n                }\n\n                const abort = resourceRecords.some(resource => {\n                    return !eventStore.isDateRangeAvailable(startDate, endDate, eventRecord, resource);\n                });\n\n                if (abort) {\n                    resolve(false);\n                    return;\n                }\n            }\n\n            const context = {\n                finalize(saveEvent) {\n                    try {\n                        if (saveEvent !== false) {\n                            me.finalizeEventSave(eventRecord, resourceRecords, resolve, reject);\n                        }\n                        else {\n                            resolve(false);\n                        }\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n            };\n\n            /**\n             * Fires on the owning Scheduler before an event is saved, return `false` to prevent the save.\n             * @event beforeEventSave\n             * @on-owner\n             * @param {Scheduler.view.Scheduler} source The scheduler instance\n             * @param {Scheduler.model.EventModel} eventRecord The record about to be saved\n             * @param {Scheduler.model.ResourceModel[]} resourceRecords The resources to which the event is assigned\n             * @param {Object} values The new values\n             * @param {Object} context Extended save context:\n             * @param {Boolean} [context.async] Set this to `true` in a listener to indicate that the listener will asynchronously decide to prevent or not the event save.\n             * @param {Function} context.finalize Function to call to finalize the save. Used when `async` is `true`. Provide `false` to the function to prevent the save.\n             * @preventable\n             */\n            if (scheduler.trigger('beforeEventSave', { eventRecord, resourceRecords, values, context }) === false) {\n                resolve(false);\n                return;\n            }\n            // truthy context.async means than a listener will decide to approve saving asynchronously\n            if (!context.async) {\n                context.finalize();\n            }\n        });\n    }\n\n    //endregion\n\n    //region Delete\n\n    /**\n     * Delete event being edited\n     * @fires beforeEventDelete\n     * @private\n     * @async\n     */\n    deleteEvent() {\n        this.detachListeners('changesWhileEditing');\n\n        return new Promise((resolve, reject) => {\n            const\n                me                      = this,\n                { eventRecord, editor } = me;\n\n            me.scheduler.removeEvents([eventRecord], removeRecord => {\n                // The reason it does it here is to move focus *before* it gets deleted,\n                // and then there's code in the delete to see that it's deleting the focused one,\n                // and jump forwards or backwards to move to the next or previous event\n                // See 'Should allow key activation' test in tests/view/mixins/EventNavigation.t.js\n                if (removeRecord && editor.containsFocus) {\n                    editor.revertFocus();\n                }\n\n                resolve(removeRecord);\n            }, editor);\n        });\n    }\n\n    //endregion\n\n    //region Stores\n\n    onChangeProject() {\n        // Release resource store on project change, it will be re-chained on next show\n        if (this.resourceField) {\n            this.resourceField.store = {}; // Cannot use null\n        }\n    }\n\n    get eventStore() {\n        return this.scheduler.project.eventStore;\n    }\n\n    get resourceStore() {\n        return this.scheduler.project.resourceStore;\n    }\n\n    get assignmentStore() {\n        return this.scheduler.project.assignmentStore;\n    }\n\n    //endregion\n\n    //endregion\n\n    //region Events\n\n    onActivateEditor({ eventRecord, resourceRecord, eventElement }) {\n        this.editEvent(eventRecord, resourceRecord, eventElement);\n    }\n\n    onDragCreateEnd({ eventRecord, resourceRecord, proxyElement, stmCapture }) {\n        this.editEvent(eventRecord, resourceRecord, proxyElement, stmCapture);\n    }\n\n    // chained from EventNavigation\n    onEventEnterKey({ assignmentRecord, eventRecord, target }) {\n        const\n            { client }  = this,\n            // Event can arrive from the wrap element in some products (such as Calendar)\n            // so in these cases, we must use querySelector to look *inside* the element.\n            element     = target[target.matches(client.eventSelector) ? 'querySelector' : 'closest'](client.eventInnerSelector);\n\n        if (assignmentRecord) {\n            this.editEvent(eventRecord, assignmentRecord.resource, element);\n        }\n        else if (eventRecord) {\n            this.editEvent(eventRecord, eventRecord.resource, element);\n        }\n    }\n\n    // Toggle fields visibility when changing eventType\n    onEventTypeChange({ value }) {\n        this.toggleEventType(value);\n    }\n\n    //endregion\n\n    //region Context menu\n\n    populateEventMenu({ eventRecord, resourceRecord, items }) {\n        if (!this.scheduler.readOnly && !this.disabled) {\n            items.editEvent = {\n                text        : 'L{EventEdit.Edit event}',\n                localeClass : this,\n                icon        : 'b-icon b-icon-edit',\n                weight      : 100,\n                disabled    : eventRecord.readOnly,\n                onItem      : () => {\n                    this.editEvent(eventRecord, resourceRecord);\n                }\n            };\n        }\n    }\n\n    //endregion\n\n    onBeforeEditorToggleReveal({ reveal }) {\n        // reveal true/false is analogous to show/hide\n        this[reveal ? 'onBeforeEditorShow' : 'resetEditingContext']();\n    }\n\n    resetEditingContext() {\n        const me = this;\n\n        me.detachListeners('changesWhileEditing');\n\n        // super call has to go before the `me.rejectStmTransaction();` below\n        // because it can be removing an event manually, bypassing the stm\n        super.resetEditingContext();\n\n        // client does not use STM for task editing (at least yet)\n        if (me.hasStmCapture && !me.isDeletingEvent && !me.isCancelingEdit) {\n            me.freeStm(false);\n        }\n\n        // Clear to prevent retaining project\n        me.resourceRecord = null;\n    }\n\n    async finalizeStmCapture(shouldReject) {\n        if (shouldReject) {\n            await this.rejectStmTransaction();\n        }\n        else {\n            this.commitStmTransaction();\n        }\n\n        this.freeStm();\n    }\n}\n\nGridFeatureManager.registerFeature(EventEdit, true, 'Scheduler');\nGridFeatureManager.registerFeature(EventEdit, false, ['SchedulerPro', 'ResourceHistogram']);\n\nEventEdit.initClass();\n","import List from '../../Core/widget/List.js';\nimport DomHelper from '../../Core/helper/DomHelper.js';\nimport StringHelper from '../../Core/helper/StringHelper.js';\nimport ArrayHelper from '../../Core/helper/ArrayHelper.js';\n\n/**\n * @module Scheduler/widget/ResourceFilter\n */\n\n/**\n * A List which allows selection of resources to filter a specified eventStore to only show\n * events for the selected resources.\n *\n * Because this widget maintains a state that can be changed through the UI, it offers some of the\n * API of an input field. It has a read only {@link #property-value} property, and it fires a\n * {@link #event-change} event.\n *\n * @extends Core/widget/List\n * @classType resourceFilter\n * @widget\n */\nexport default class ResourceFilter extends List {\n    static get $name() {\n        return 'ResourceFilter';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'resourcefilter';\n    }\n\n    static get delayable() {\n        return {\n            applyFilters : 'raf'\n        };\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * The {@link Scheduler.data.EventStore EventStore} to filter.\n             * Events for resources which are deselected in this List will be filtered out.\n             * @config {Scheduler.data.EventStore}\n             */\n            eventStore : null,\n\n            multiSelect            : true,\n            toggleAllIfCtrlPressed : true,\n            itemTpl                : record => StringHelper.encodeHtml(record.name || ''),\n\n            /**\n             * An optional filter function to apply when loading resources from the project's\n             * resource store. Defaults to loading all resources.\n             *\n             * **This is called using this `ResourceFilter` as the `this` object.**\n             * @config {Function|String}\n             * @default\n             */\n            masterFilter : () => true,\n\n            /**\n             * By default, deselecting list items filters only the {@link #config-eventStore} so that\n             * events for the deselected resources are hidden from view. The `resourceStore` is __not__\n             * filtered.\n             *\n             * Configure this as `true` to also filter the `resourceStore` so that deselected resources\n             * are also hidden from view (They will remain in this `List`)\n             * @config {Boolean}\n             * @default false\n             */\n            filterResources : null\n        };\n    }\n\n    itemIconTpl(record, i) {\n        const\n            { eventColor } = record,\n            // Named colors are applied using CSS\n            cls            = DomHelper.isNamedColor(eventColor) ? ` b-sch-foreground-${eventColor}` : '',\n            // CSS style color is used as is\n            style          = !cls && eventColor ? ` style=\"color:${eventColor}\"` : '';\n\n        return this.multiSelect ? `<div class=\"b-selected-icon b-icon${cls}\"${style}></div>` : '';\n    }\n\n    updateEventStore(eventStore) {\n        const\n            me                 = this,\n            // HACK: Temp workaround until List's store is dynamically updatable.\n            chainedStoreConfig = me.initialConfig.store?.isStore ? me.initialConfig.store.initialConfig : me.store?.config,\n            // Allow configuration of the filter for loading records from the master store.\n            { resourceStore }  = eventStore,\n            store              = me.store = resourceStore.chain(me.masterFilter, null, {\n                ...chainedStoreConfig,\n                syncOrder : true\n            }),\n            changeListeners    = {\n                change  : 'onStoreChange',\n                thisObj : me\n            };\n\n        // We need to sync selection and rendering on changes fired from master store\n        store.un(changeListeners);\n        resourceStore.ion(changeListeners);\n\n        if (!resourceStore.count) {\n            resourceStore.project.ion({\n                name    : 'project',\n                refresh : 'initFilter',\n                thisObj : me\n            });\n        }\n        else {\n            me.initFilter();\n        }\n    }\n\n    changeMasterFilter(masterFilter) {\n        // Cannot use bind, otherwise fillFromMaster's check for whether its a filter function fails.\n        const me = this;\n\n        // If we are filtering the resource store, we cannot now fill ourselves from the filtered\n        // view of the resource store. Otherwise the list would hide the list items as they are deselected.\n        if (!me.filterResources) {\n            return function(r) {\n                return me.callback(masterFilter, me, [r]);\n            };\n        }\n    }\n\n    initFilter() {\n        const { eventStore, selected } = this;\n\n        if (eventStore.count && eventStore.resourceStore.count) {\n            // We default to all resources selected unless this was configured with\n            // an initialSelection. See List#changeSelection\n            if (!this.initialSelection) {\n                selected.add(this.store.getRange());\n            }\n            this.detachListeners('project');\n        }\n    }\n\n    onStoreRefresh({ source : store, action }) {\n        // We need to re-enable the filter if the store becomes filtered.\n        // We only disable the filter if we know that we have selected all available\n        // resources.\n        if (action === 'filter' && this.eventStoreFilter) {\n            const\n                { eventStoreFilter } = this,\n                { disabled }       = eventStoreFilter,\n                newDisabled        = !store.isFiltered && this.allSelected;\n\n            if (newDisabled !== disabled) {\n                eventStoreFilter.disabled = newDisabled;\n                this.applyFilters();\n            }\n        }\n        super.onStoreRefresh(...arguments);\n    }\n\n    onSelectionChange({ source : selected, added, removed }) {\n        // Filter disabled if all resources selected\n        const\n            me       = this,\n            // Only disable the filter if the allSelected method is seeing *all* of the\n            // records from its masterStore with no filtering.\n            disabled = !me.store.isFiltered && me.allSelected;\n\n        super.onSelectionChange(...arguments);\n\n        let filtersAdded = false;\n\n        // If this is the first selection change triggered from the first project refresh\n        // in which all the resources are selected, then we ony need to apply the filters.\n        // if *not* all resources are selected, ie if added.length !== entire store length.\n        if (!me.eventStoreFilter) {\n            // Our client EventStore is filtered to only show events for our selected resources.\n            // Events without an associated resource are filtered into visibility.\n            // The addFilter function with silent param adds the filter but don't reevaluate filtering.\n            me.eventStoreFilter = me.eventStore.addFilter({\n                id       : `${me.id}-filter-instance`,\n                filterBy : e => !e.resource || me.selected.includes(e.resources),\n                disabled\n            }, added?.length === me.store.count);\n\n            filtersAdded = true;\n        }\n\n        if (me.filterResources && !me.resourceStoreFilter) {\n            // Our client EventStore is filtered to only show events for our selected resources.\n            // Events without an associated resource are filtered into visibility.\n            // The addFilter function with silent param adds the filter but don't reevaluate filtering.\n            me.resourceStoreFilter = me.eventStore.resourceStore.addFilter({\n                id       : `${me.id}-filter-instance`,\n                filterBy : r => me.selected.includes(r),\n                disabled\n            }, added?.length === me.store.count);\n\n            filtersAdded = true;\n        }\n\n        // The filters have been just added and so will take effect. No need to call applyFilter.\n        if (filtersAdded) {\n            return;\n        }\n\n        // Filter disabled if all resources selected\n        me.eventStoreFilter.disabled = disabled;\n        me.resourceStoreFilter && (me.resourceStoreFilter.disabled = disabled);\n\n        // Have the client EventStore refresh its filtering but after a small delay so the List UI updates immediately.\n        me.applyFilters();\n\n        if (me.eventListeners.change) {\n            const\n                value    = selected.values,\n                oldValue = value.concat(removed);\n\n            ArrayHelper.remove(oldValue, added);\n\n            /**\n             * Fired when this widget's selection changes\n             * @event change\n             * @param {String} value - This field's value\n             * @param {String} oldValue - This field's previous value\n             * @param {Core.widget.Field} source - This ResourceFilter\n             */\n            me.triggerFieldChange({\n                value,\n                oldValue\n            });\n        }\n    }\n\n    /**\n     * An array encapsulating the currently selected resources.\n     * @member {Scheduler.model.ResourceModel[]}\n     * @readonly\n     */\n    get value() {\n        return this.selected.values;\n    }\n\n    applyFilters() {\n        this.eventStore.filter();\n        this.filterResources && this.eventStore.resourceStore.filter();\n    }\n\n    doDestroy() {\n        this.store?.destroy();\n        super.doDestroy();\n    }\n}\n\n// Register this widget type with its Factory\nResourceFilter.initClass();\n","import DatePicker from '../../Core/widget/DatePicker.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\nimport DomHelper from '../../Core/helper/DomHelper.js';\nimport VersionHelper from '../../Core/helper/VersionHelper.js';\n\n/**\n * @module Scheduler/widget/SchedulerDatePicker\n */\n\n/**\n * A subclass of {@link Core.widget.DatePicker} which is able to show the presence of\n * events in its cells if configured with an {@link #config-eventStore}, and\n * {@link #config-showEvents} is set to a truthy value.\n *\n * The `datepicker` Widget type is implemented by this class when this class is imported, or built\n * into a bundle, and so any {@link Core.widget.DateField} may have its\n * {@link Core.widget.PickerField#config-picker} configured to use its capabilities of showing\n * the presence of events in its date cells.\n *\n * @classtype datepicker\n * @extends Core/widget/DatePicker\n * @inlineexample Scheduler/widget/SchedulerDatePicker.js\n * @widget\n */\nexport default class SchedulerDatePicker extends DatePicker {\n    static get $name() {\n        return 'SchedulerDatePicker';\n    }\n\n    static get type() {\n        return 'datepicker';\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * How to show presence of events in the configured {@link #config-eventStore} in the\n             * day cells. Values may be:\n             *\n             * * `false` - Do not show events in cells.\n             * * `true` - Show a themeable bullet to indicate the presence of events for a date.\n             * * `'count'` - Show a themeable badge containing the event count for a date.\n             * @config {Boolean|'count'}\n             * @default false\n             */\n            showEvents : null,\n\n            /**\n             * The {@link Scheduler.data.EventStore event store} from which the in-cell event presence\n             * indicators are drawn.\n             * @config {Scheduler.data.EventStore}\n             */\n            eventStore : null,\n\n            /**\n             * A function, or the name of a function in the ownership hierarchy to filter which events\n             * are collected into the day cell data blocks.\n             *\n             * Return `true` to include the passed event, or a *falsy* value to exclude the event.\n             * @config {Function|String}\n             */\n            eventFilter : {\n                $config : 'lazy',\n                value   : null\n            }\n        };\n    }\n\n    construct(config) {\n        // Handle deprecated events config. It is now showEvents.\n        // events conflicts with the events data which may be passed in\n        if ('events' in config) {\n            config = {\n                ...config,\n                showEvents : config.events\n            };\n            delete config.events;\n\n            VersionHelper.deprecate(VersionHelper['calendar'] ? 'Calendar' : 'Scheduler', '6.0.0', 'DatePicker#events should be configured as showEvents');\n        }\n        super.construct(config);\n    }\n\n    changeEventFilter(eventFilter) {\n        if (typeof eventFilter === 'string') {\n            const { handler, thisObj } = this.resolveCallback(eventFilter);\n            eventFilter = handler.bind(thisObj);\n        }\n        return eventFilter;\n    }\n\n    doRefresh() {\n        // Hidden widgets must not query the EventStore for loading on demand to be able to use\n        // the EventStore's dateRangeRequested event.\n        if (this.isVisible || !this.showEvents) {\n            this.refreshEventsMap();\n            return super.doRefresh(...arguments);\n        }\n        else {\n            this.whenVisible('doRefresh');\n        }\n    }\n\n    updateShowEvents(showEvents, oldShowEvents) {\n        const\n            me            = this,\n            { classList } = me.contentElement;\n\n        let { eventStore } = me;\n\n        // Begin any animations in the next AF\n        me.requestAnimationFrame(() => {\n            me.element.classList.toggle('b-datepicker-with-events', Boolean(showEvents));\n            me.owner?.element.classList.toggle('b-datepicker-with-events', Boolean(showEvents));\n            showEvents && classList.add(`b-show-events-${showEvents}`);\n            classList.remove(`b-show-events-${oldShowEvents}`);\n        });\n\n        if (showEvents) {\n            if (!eventStore) {\n                const eventStoreOwner = me.up(w => w.eventStore);\n\n                if (eventStoreOwner) {\n                    eventStore = eventStoreOwner.eventStore;\n                }\n                else {\n                    throw new Error('DatePicker configured with events but no eventStore');\n                }\n            }\n        }\n        else {\n            me.eventsMap = null;\n        }\n        if (!me.isConfiguring) {\n            me.updateEventStore(eventStore);\n            me.doRefresh();\n        }\n    }\n\n    refreshEventsMap() {\n        const me = this;\n\n        if (me.showEvents) {\n            me.eventsMap = me.eventStore.getEventCounts({\n                startDate : me.startDate,\n                endDate   : me.endDate,\n                dateMap   : me.eventsMap,\n                filter    : me.eventFilter\n            });\n        }\n    }\n\n    updateEventStore(eventStore) {\n        // Add a listener to refresh on any event change unless the listener is already added.\n        if (eventStore.findListener('change', 'refresh', this) === -1) {\n            eventStore?.[this.showEvents ? 'on' : 'un']?.({\n                change  : 'refresh',\n                thisObj : this\n            });\n        }\n    }\n\n    cellRenderer({ cell, date }) {\n        const\n            { showEvents } = this,\n            count          = this.eventCounts?.get?.(DateHelper.makeKey(date)),\n            isCount        = showEvents === 'count';\n\n        delete cell.dataset.btip;\n        if (count) {\n            if (!isCount && this.eventCountTip) {\n                cell.dataset.btip = this.L('L{ResourceInfoColumn.eventCountText}', count);\n            }\n            DomHelper.createElement({\n                dataset : {\n                    count\n                },\n                class : {\n                    [isCount ? 'b-cell-events-badge' : 'b-icon b-icon-circle'] : 1,\n                    [SchedulerDatePicker.getEventCountClass(count)]            : 1\n                },\n                parent                  : cell,\n                [isCount ? 'text' : ''] : count\n            });\n        }\n    }\n\n    static getEventCountClass(count) {\n        if (count) {\n            if (count < 4) {\n                return 'b-datepicker-1-to-3-events';\n            }\n            if (count < 7) {\n                return 'b-datepicker-4-to-6-events';\n            }\n            return 'b-calendar-7-or-more-events';\n        }\n        return '';\n    }\n\n    static setupClass(meta) {\n        // We take over the type name 'datepicker' when we are in the app\n        meta.replaceType = true;\n\n        super.setupClass(meta);\n    }\n}\n\n// Register this widget type with its Factory\nSchedulerDatePicker.initClass();\n"],"names":["RecurrenceLegend","Localizable","$name","allDaysValueAsArray","allDaysValue","join","workingDaysValue","filter","day","index","DateHelper","nonWorkingDays","nonWorkingDaysValue","getLegend","recurrence","timeSpanStartDate","me","timeSpan","interval","days","monthDays","months","positions","startDate","tplData","fn","frequency","L","length","getDaysLegend","getDayName","getDay","sort","a","b","arrayToText","getDate","month","getMonthShortName","getMonthName","getMonth","position","DayRuleEncoder","decodeDay","getDayShortName","array","map","replace","_$name","DH","scheduleFields","makeDate","fields","value","date","time","DateField","reverse","dateValue","parse","setHours","getHours","getMinutes","getSeconds","getMilliseconds","clone","copyTime","dateTo","dateFrom","d","Date","getTime","adjustEndDate","startTime","endDateField","endTimeField","newEndDate","add","startDateField","startTimeField","eventRecord","durationMS","EditBase","InstancePlugin","configurable","saveAndCloseOnEnter","triggerEvent","dateFormat","timeFormat","editorConfig","items","weekStartDay","construct","client","config","eventEdit","ObjectHelper","assign","clientListenersDetacher","ion","dragCreateEnd","eventAutoCreated","thisObj","doDestroy","_this$_editor","_editor","destroy","onEventAutoCreated","changeEditorConfig","Objects","Config","merge","changeItems","cleanItemsConfig","ref","itemCfg","onDatesChange","params","_me$startTimeField","_me$startDateField2","field","source","min","_me$startDateField","_me$endDateField","isEqual","clearTime","save","Error","values","editor","startFields","endFields","forEach","f","eachWidget","widget","_editor$widgetMap$rec","name","hidden","up","w","recurrenceEditor","push","record","widgetMap","recurrenceCombo","allDay","endDate","duration","diff","durationUnit","onBeforeSave","onAfterSave","updateRecord","assignmentStore","resource","set","onBeforeEditorShow","editingContext","nameField","isCreating","assigningValues","_configuredPlaceholder","placeholder","resetEditingContext","eventStore","isTimelineBase","_me$editingContext$ev","eventElement","closest","classList","remove","element","targetEventElement","_record","onPopupKeyDown","event","readOnly","key","target","tagName","toLowerCase","preventDefault","onSaveClick","finalizeStmCapture","saved","focus","isFinalizingEventSave","close","trigger","onDeleteClick","isDeletingEvent","removed","deleteEvent","autoClose","containsFocus","onCancelClick","isCancelingEdit","hasStmCapture","EventEditor","Popup","type","draggable","handleSelector","axisLock","scrollable","overflowY","titleRenderer","updateLocalization","arguments","initialTitle","title","chainResourceStore","eventEditFeature","resourceStore","chain","isSpecialRow","storeClass","Store","excludeCollapsedRecords","processWidgetConfig","_widget$type","includes","fieldConfig","store","setConfig","multiSelect","usesSingleAssignment","format","Object","onBeforeShow","args","_super$onBeforeShow","deleteButton","callback","call","onInternalKeyDown","updateReadOnly","saveButton","cancelButton","initClass","RecurrenceCombo","RecurrenceFrequencyCombo","defaultConfig","customValue","splitCls","highlightExternalChange","buildItems","text","cls","isCustomRecurrence","Boolean","RecurrenceLegendButton","Button","localizableProperties","_recurrence","updateLegend","eventStartDate","_eventStartDate","onLocaleChange","RecurrenceEditor","closable","floating","width","recurrenceEditorPanel","bbar","defaults","localeClass","foo","weight","color","onClick","saveHandler","syncEventRecord","cancelHandler","Target","RecurringEventEdit","Base","recurringEventsItems","label","editRecurrenceButton","menuIcon","flex","ignoreParentReadOnly","showRecurringUI","scheduler","beforeEventSave","_this$_recurrenceConf","_this$_recurrenceEdit","_recurrenceConfirmation","_recurrenceEditor","onEditorConstructed","_me$recurrenceCombo","hide","onRecurringEventEditorHide","menu","change","onRecurrenceComboChange","internalShowEditor","toggleRecurringFieldsVisibility","enableRecurringEvents","show","_this$editRecurrenceB","_this$editRecurrenceB2","_this$recurrenceCombo","_this$recurrenceCombo2","methodName","_this$recurrenceEdito","_this$recurrenceConfi","isVisible","recurrenceConfirmation","makeRecurrence","rule","eventCopy","copy","recurrenceModel","setStartDate","suspendTimeSpanNotifying","onRecurrableEventBeforeSave","context","isEditing","supportsRecurring","isRecurring","isOccurrence","confirm","actionType","changerFn","finalize","cancelFn","async","$$name","Widget","create","owner","autoShow","centered","modal","constrainTo","globalThis","anchor","rootElement","recurrenceEditorSaveHandler","onBeforeShowRecurrenceEditor","bind","_readOnly","loadRecurrenceData","updateRecurrenceFields","userAction","loadingRecord","internalLoadRecord","recurrenceRule","ResourceCombo","Combo","showEventColor","displayField","valueField","picker","itemIconTpl","eventColor","isStyleColor","DomHelper","isNamedColor","style","colorClass","changeShowEventColor","updateShowEventColor","_picker","changePicker","oldPicker","_picker2","innerElements","class","reference","inputElement","syncInputFieldValue","_me$selected","resourceIcon","lastResourceIconCls","selected","punctuation","EventEdit","mixin","TaskEditStm","Delayable","typeField","clearable","required","resourceField","editable","destroyStore","validateDateOnly","hideWhenEmpty","pluginConfig","projectChange","project","onClientReadOnlyToggle","_me$onEditorConstruct","_me$eventTypeField","_me$saveButton","_me$deleteButton","_me$cancelButton","editorListeners","beforehide","beforeshow","keydown","getEditorConfig","keepDate","positioned","parentNode","beforShow","beforeToggleReveal","console","warn","relayEvents","id","eventTypeField","click","dateLength","timeLength","dateTimeLength","result","align","scrollAction","prototype","getRenderContext","collapsible","direction","tool","recollapseTool","collapsed","toggleReveal","onElementCreated","setProperty","resourceRecord","_align","_align$target","nodeType","Element","ELEMENT_NODE","getElementFromEventRecord","isPartOfStore","_super$internalShowEd","toggleEventType","get","loadRecord","setTimeout","showBy","updateCentered","timeResolution","timeAxisViewModel","unit","step","increment","detachListeners","onChangeWhileEditing","refresh","updateTargetEventElement","oldTargetEventElement","editEvent","stmCapture","simpleEventEdit","features","disabled","enabled","stmInitiallyAutoRecord","stmInitiallyDisabled","transferred","isCalendar","captureStm","doEditEvent","then","isDestroying","rejectStmTransaction","freeStm","revealed","isNewRecord","getById","resourceId","TimeSpan","normalize","scrollResourceEventIntoView","animate","edgeOffset","extendTimeAxis","_resourceField$store","masterStore","resources","getResourcesForEvent","storage","eventType","dataset","_widget$dataset","finalizeEventSave","resourceRecords","resolve","reject","suspendAutoCommit","suspendRefresh","beginBatch","endBatch","assignEventToResource","commitAsync","resumeAutoCommit","resumeRefresh","Promise","_me$resourceField","isValid","records","allowOverlap","fullDuration","abort","some","isDateRangeAvailable","saveEvent","e","removeEvents","removeRecord","revertFocus","onChangeProject","onActivateEditor","onDragCreateEnd","proxyElement","onEventEnterKey","assignmentRecord","matches","eventSelector","eventInnerSelector","onEventTypeChange","populateEventMenu","icon","onItem","onBeforeEditorToggleReveal","reveal","shouldReject","commitStmTransaction","GridFeatureManager","registerFeature","ResourceFilter","List","delayable","applyFilters","toggleAllIfCtrlPressed","itemTpl","StringHelper","encodeHtml","masterFilter","filterResources","i","updateEventStore","_me$initialConfig$sto","_me$store","chainedStoreConfig","initialConfig","isStore","syncOrder","changeListeners","un","count","initFilter","changeMasterFilter","r","initialSelection","getRange","onStoreRefresh","action","eventStoreFilter","newDisabled","isFiltered","allSelected","onSelectionChange","added","filtersAdded","addFilter","filterBy","resourceStoreFilter","eventListeners","oldValue","concat","ArrayHelper","triggerFieldChange","_this$store","SchedulerDatePicker","DatePicker","showEvents","eventFilter","$config","events","VersionHelper","deprecate","changeEventFilter","handler","resolveCallback","doRefresh","refreshEventsMap","whenVisible","updateShowEvents","oldShowEvents","contentElement","requestAnimationFrame","_me$owner","toggle","eventStoreOwner","eventsMap","isConfiguring","getEventCounts","dateMap","findListener","_eventStore","cellRenderer","cell","_this$eventCounts","_this$eventCounts$get","eventCounts","makeKey","isCount","btip","eventCountTip","createElement","getEventCountClass","parent","setupClass","meta","replaceType"],"mappings":"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AgB,CAAC,CAAA;AACtC,KAAC,MACI;AACDD,MAAAA,SAAS,CAAC9F,GAAG,CAAC,gBAAgB,CAAC,CAAA;AACnC,KAAA;AACJ,GAAA;AACJ,CAAA;AACA;AACAmR,aAAa,CAAC/G,SAAS,EAAE,CAAA;AACzB+G,aAAa,CAAChT,MAAM,GAAG,eAAe;;ACvFte,MAAMC,SAAS,SAAS3S,QAAQ,CAAC4S,KAAK,CAACC,WAAW,EAAE1G,kBAAkB,EAAE2G,SAAS,CAAC,CAAC;AAC9F;EACA,WAAW9X,KAAKA,GAAG;AACf,IAAA,OAAO,WAAW,CAAA;AACtB,GAAA;EACA,WAAWkF,YAAYA,GAAG;IACtB,OAAO;AACH;AACZ;AACA;AACA;AACA;AACA;AACA;AACYE,MAAAA,YAAY,EAAG,eAAe;AAC9B;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY2S,MAAAA,SAAS,EAAG,WAAW;AACvB;AACZ;AACA;AACA;AACA;AACYjT,MAAAA,WAAW,EAAG,IAAI;AAClB;AACZ;AACA;AACA;AACA;AACYkG,MAAAA,QAAQ,EAAG,IAAI;AACf;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYzF,MAAAA,YAAY,EAAG;AACXiH,QAAAA,IAAI,EAAU,aAAa;AAC3BU,QAAAA,KAAK,EAAS,yBAAyB;AACvCkD,QAAAA,QAAQ,EAAM,IAAI;AAClBM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"}