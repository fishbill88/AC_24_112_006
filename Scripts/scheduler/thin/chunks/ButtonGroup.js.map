{"version":3,"file":"ButtonGroup.js","sources":["../../../../Core/lib/Core/widget/ButtonGroup.js"],"sourcesContent":["import Container from './Container.js';\nimport Rotatable from './mixin/Rotatable.js';\n\nimport './Button.js';\n\n/**\n * @module Core/widget/ButtonGroup\n */\n\n/**\n * A specialized container that holds buttons, displaying them in a horizontal group with borders adjusted to make them\n * stick together.\n *\n * Trying to add other widgets than buttons will throw an exception.\n *\n * ```javascript\n * new ButtonGroup({\n *     items : [\n *         { icon : 'b-fa b-fa-kiwi-bird' },\n *         { icon : 'b-fa b-fa-kiwi-otter' },\n *         { icon : 'b-fa b-fa-kiwi-rabbit' },\n *         ...\n *     ]\n * });\n * ```\n *\n * @inlineexample Core/widget/ButtonGroup.js\n * @classType buttonGroup\n * @extends Core/widget/Container\n * @widget\n */\nexport default class ButtonGroup extends Container.mixin(Rotatable) {\n\n    /**\n     * Fires when a button in the group is clicked\n     * @event click\n     * @param {Core.widget.Button} source Clicked button\n     * @param {Event} event DOM event\n     */\n\n    /**\n     * Fires when the default action is performed on a button in the group (the button is clicked)\n     * @event action\n     * @param {Core.widget.Button} source Clicked button\n     * @param {Event} event DOM event\n     */\n\n    /**\n     * Fires when a button in the group is toggled (the {@link Core.widget.Button#property-pressed} state is changed).\n     * If you need to process the pressed button only, consider using {@link #event-click} event or {@link #event-action} event.\n     * @event toggle\n     * @param {Core.widget.Button} source Toggled button\n     * @param {Boolean} pressed New pressed state\n     * @param {Event} event DOM event\n     */\n\n    static $name = 'ButtonGroup';\n\n    static type = 'buttongroup';\n\n    static configurable = {\n        defaultType : 'button',\n\n        /**\n         * Custom CSS class to add to element. When using raised buttons (cls 'b-raised' on the buttons), the group\n         * will look nicer if you also set that cls on the group.\n         *\n         * ```\n         * new ButtonGroup({\n         *   cls : 'b-raised,\n         *   items : [\n         *       { icon : 'b-fa b-fa-unicorn', cls : 'b-raised' },\n         *       ...\n         *   ]\n         * });\n         * ```\n         *\n         * @config {String}\n         * @category CSS\n         */\n        cls : null,\n\n        /**\n         * An array of Buttons or typed Button config objects.\n         * @config {ButtonConfig[]|Core.widget.Button[]}\n         */\n        items : null,\n\n        /**\n         * Default color to apply to all contained buttons, see {@link Core.widget.Button#config-color Button#color}.\n         * Individual buttons can override the default.\n         * @config {String}\n         */\n        color : null,\n\n        /**\n         * Set to `true` to turn the ButtonGroup into a toggle group, assigning a generated value to each contained\n         * buttons {@link Core.widget.Button#config-toggleGroup toggleGroup config}. Individual buttons can\n         * override the default.\n         * @config {Boolean}\n         */\n        toggleGroup : null,\n\n        valueSeparator : ',',\n\n        columns : null,\n\n        hideWhenEmpty : true,\n\n        defaultBindProperty : 'value'\n    };\n\n    onChildAdd(item) {\n        super.onChildAdd(item);\n\n        item.ion({\n            click   : 'resetValueCache',\n            toggle  : 'onItemToggle',\n            thisObj : this,\n            // This needs to run before the 'click' event is relayed by this button group, in such listener\n            // the `value` must already be updated\n            prio    : 10000\n        });\n    }\n\n    onChildRemove(item) {\n        item.un({\n            toggle  : 'resetValueCache',\n            click   : 'resetValueCache',\n            thisObj : this\n        });\n        super.onChildRemove(item);\n    }\n\n    onItemToggle(event) {\n        const me = this;\n\n        me.resetValueCache();\n\n        if (!me.isSettingValue && (!me.toggleGroup || event.pressed)) {\n            me.triggerFieldChange({ value : me.value, userAction : true, event });\n        }\n    }\n\n    resetValueCache() {\n        // reset cached value to revalidate next time it's requested\n        this._value = null;\n    }\n\n    createWidget(widget) {\n        const\n            me   = this,\n            type = me.constructor.resolveType(widget.type || 'button');\n\n        if (type.isButton) {\n            if (me.color && !widget.color) {\n                widget.color = me.color;\n            }\n\n            if (me.toggleGroup && !widget.toggleGroup) {\n                if (typeof me.toggleGroup === 'boolean') {\n                    me.toggleGroup = ButtonGroup.generateId('toggleGroup');\n                }\n\n                widget.toggleGroup = me.toggleGroup;\n            }\n        }\n\n        if (me.columns) {\n            widget.width = `${100 / me.columns}%`;\n        }\n\n        widget = super.createWidget(widget);\n\n        me.relayEvents(widget, ['click', 'action', 'toggle']);\n\n        return widget;\n    }\n\n    updateRotate(rotate) {\n        this.eachWidget(btn => {\n            if (btn.rotate !== false) {\n                btn.rotate = rotate;\n            }\n        });\n    }\n\n    get value() {\n        // if we don't have cached value\n        // let's calculate it based on item values\n        if (!this._value) {\n            const values = [];\n\n            // collect pressed item values\n            this.items.forEach(w => {\n                if (w.pressed && w.value !== undefined) {\n                    values.push(w.value);\n                }\n            });\n\n            // build a string\n            this._value = values.join(this.valueSeparator);\n        }\n\n        return this._value;\n    }\n\n    set value(value) {\n        const\n            me       = this,\n            oldValue = me.value;\n\n        if (!Array.isArray(value)) {\n            if (value === undefined || value === null) {\n                value = [];\n            }\n            else if (typeof value == 'string') {\n                value = value.split(me.valueSeparator);\n            }\n            else {\n                value = [value];\n            }\n        }\n\n        me._value = value.join(me.valueSeparator);\n\n        me.isSettingValue = true;\n\n        // Reflect value on items\n        me.items.forEach(w => {\n            if (w.value !== undefined) {\n                w.pressed = value.includes(w.value);\n            }\n        });\n\n        me.isSettingValue = false;\n\n        if (!me.isConfiguring && oldValue !== me.value) {\n            me.triggerFieldChange({ value : me.value, userAction : false });\n        }\n    }\n\n    updateDisabled(disabled) {\n        this.items.forEach(button => button.disabled = disabled || (!button.ignoreParentReadOnly && this.readOnly));\n    }\n\n    updateReadOnly(readOnly) {\n        super.updateReadOnly(readOnly);\n\n        this.updateDisabled(this.disabled);\n    }\n\n    get widgetClassList() {\n        const classList = super.widgetClassList;\n        // if the buttons should be shown in rows\n        this.columns && classList.push('b-columned');\n        return classList;\n    }\n}\n\n// Register this widget type with its Factory\nButtonGroup.initClass();\n"],"names":["ButtonGroup","Container","mixin","Rotatable","$name","type","configurable","defaultType","cls","items","color","toggleGroup","valueSeparator","columns","hideWhenEmpty","defaultBindProperty","onChildAdd","item","ion","click","toggle","thisObj","prio","onChildRemove","un","onItemToggle","event","me","resetValueCache","isSettingValue","pressed","triggerFieldChange","value","userAction","_value","createWidget","widget","constructor","resolveType","isButton","generateId","width","relayEvents","updateRotate","rotate","eachWidget","btn","values","forEach","w","undefined","push","join","oldValue","Array","isArray","split","includes","isConfiguring","updateDisabled","disabled","button","ignoreParentReadOnly","readOnly","updateReadOnly","widgetClassList","classList","initClass","_$name"],"mappings":"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"}