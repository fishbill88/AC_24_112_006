{"version":3,"file":"EventNavigation.js","sources":["../../../../Scheduler/lib/Scheduler/localization/En.js","../../../../Scheduler/lib/Scheduler/data/mixin/AttachToProjectMixin.js","../../../../Scheduler/lib/Scheduler/data/mixin/ProjectConsumer.js","../../../../Scheduler/lib/Scheduler/tooltip/ClockTemplate.js","../../../../Scheduler/lib/Scheduler/feature/mixin/TaskEditStm.js","../../../../Scheduler/lib/Scheduler/feature/base/TimeSpanMenuBase.js","../../../../Scheduler/lib/Scheduler/view/recurrence/RecurrenceConfirmationPopup.js","../../../../Scheduler/lib/Scheduler/view/recurrence/field/RecurrenceFrequencyCombo.js","../../../../Scheduler/lib/Scheduler/view/recurrence/field/RecurrenceDaysCombo.js","../../../../Scheduler/lib/Scheduler/view/recurrence/field/RecurrenceDaysButtonGroup.js","../../../../Scheduler/lib/Scheduler/view/recurrence/field/RecurrenceMonthDaysButtonGroup.js","../../../../Scheduler/lib/Scheduler/view/recurrence/field/RecurrenceMonthsButtonGroup.js","../../../../Scheduler/lib/Scheduler/view/recurrence/field/RecurrenceStopConditionCombo.js","../../../../Scheduler/lib/Scheduler/view/recurrence/field/RecurrencePositionsCombo.js","../../../../Scheduler/lib/Scheduler/view/recurrence/RecurrenceEditorPanel.js","../../../../Scheduler/lib/Scheduler/feature/EventMenu.js","../../../../Scheduler/lib/Scheduler/feature/ScheduleMenu.js","../../../../Scheduler/lib/Scheduler/view/mixin/RecurringEvents.js","../../../../Scheduler/lib/Scheduler/view/mixin/CurrentConfig.js","../../../../Scheduler/lib/Scheduler/view/mixin/EventNavigation.js"],"sourcesContent":["import LocaleHelper from '../../Core/localization/LocaleHelper.js';\nimport '../../Grid/localization/En.js';\n\nconst locale = {\n\n    localeName : 'En',\n    localeDesc : 'English (US)',\n    localeCode : 'en-US',\n\n    Object : {\n        newEvent : 'New event'\n    },\n\n    ResourceInfoColumn : {\n        eventCountText : data => data + ' event' + (data !== 1 ? 's' : '')\n    },\n\n    Dependencies : {\n        from    : 'From',\n        to      : 'To',\n        valid   : 'Valid',\n        invalid : 'Invalid'\n    },\n\n    DependencyType : {\n        SS           : 'SS',\n        SF           : 'SF',\n        FS           : 'FS',\n        FF           : 'FF',\n        StartToStart : 'Start-to-Start',\n        StartToEnd   : 'Start-to-Finish',\n        EndToStart   : 'Finish-to-Start',\n        EndToEnd     : 'Finish-to-Finish',\n        short        : [\n            'SS',\n            'SF',\n            'FS',\n            'FF'\n        ],\n        long : [\n            'Start-to-Start',\n            'Start-to-Finish',\n            'Finish-to-Start',\n            'Finish-to-Finish'\n        ]\n    },\n\n    DependencyEdit : {\n        From              : 'From',\n        To                : 'To',\n        Type              : 'Type',\n        Lag               : 'Lag',\n        'Edit dependency' : 'Edit dependency',\n        Save              : 'Save',\n        Delete            : 'Delete',\n        Cancel            : 'Cancel',\n        StartToStart      : 'Start to Start',\n        StartToEnd        : 'Start to End',\n        EndToStart        : 'End to Start',\n        EndToEnd          : 'End to End'\n    },\n\n    EventEdit : {\n        Name         : 'Name',\n        Resource     : 'Resource',\n        Start        : 'Start',\n        End          : 'End',\n        Save         : 'Save',\n        Delete       : 'Delete',\n        Cancel       : 'Cancel',\n        'Edit event' : 'Edit event',\n        Repeat       : 'Repeat'\n    },\n\n    EventDrag : {\n        eventOverlapsExisting : 'Event overlaps existing event for this resource',\n        noDropOutsideTimeline : 'Event may not be dropped completely outside the timeline'\n    },\n\n    SchedulerBase : {\n        'Add event'      : 'Add event',\n        'Delete event'   : 'Delete event',\n        'Unassign event' : 'Unassign event'\n    },\n\n    TimeAxisHeaderMenu : {\n        pickZoomLevel   : 'Zoom',\n        activeDateRange : 'Date range',\n        startText       : 'Start date',\n        endText         : 'End date',\n        todayText       : 'Today'\n    },\n\n    EventCopyPaste : {\n        copyEvent  : 'Copy event',\n        cutEvent   : 'Cut event',\n        pasteEvent : 'Paste event'\n    },\n\n    EventFilter : {\n        filterEvents : 'Filter tasks',\n        byName       : 'By name'\n    },\n\n    TimeRanges : {\n        showCurrentTimeLine : 'Show current timeline'\n    },\n\n    PresetManager : {\n        secondAndMinute : {\n            displayDateFormat : 'll LTS',\n            name              : 'Seconds'\n        },\n        minuteAndHour : {\n            topDateFormat     : 'ddd MM/DD, hA',\n            displayDateFormat : 'll LST'\n        },\n        hourAndDay : {\n            topDateFormat     : 'ddd MM/DD',\n            middleDateFormat  : 'LST',\n            displayDateFormat : 'll LST',\n            name              : 'Day'\n        },\n        day : {\n            name : 'Day/hours'\n        },\n        week : {\n            name : 'Week/hours'\n        },\n        dayAndWeek : {\n            displayDateFormat : 'll LST',\n            name              : 'Week/days'\n        },\n        dayAndMonth : {\n            name : 'Month'\n        },\n        weekAndDay : {\n            displayDateFormat : 'll LST',\n            name              : 'Week'\n        },\n        weekAndMonth : {\n            name : 'Weeks'\n        },\n        weekAndDayLetter : {\n            name : 'Weeks/weekdays'\n        },\n        weekDateAndMonth : {\n            name : 'Months/weeks'\n        },\n        monthAndYear : {\n            name : 'Months'\n        },\n        year : {\n            name : 'Years'\n        },\n        manyYears : {\n            name : 'Multiple years'\n        }\n    },\n\n    RecurrenceConfirmationPopup : {\n        'delete-title'              : 'You are deleting an event',\n        'delete-all-message'        : 'Do you want to delete all occurrences of this event?',\n        'delete-further-message'    : 'Do you want to delete this and all future occurrences of this event, or only the selected occurrence?',\n        'delete-further-btn-text'   : 'Delete All Future Events',\n        'delete-only-this-btn-text' : 'Delete Only This Event',\n        'update-title'              : 'You are changing a repeating event',\n        'update-all-message'        : 'Do you want to change all occurrences of this event?',\n        'update-further-message'    : 'Do you want to change only this occurrence of the event, or this and all future occurrences?',\n        'update-further-btn-text'   : 'All Future Events',\n        'update-only-this-btn-text' : 'Only This Event',\n        Yes                         : 'Yes',\n        Cancel                      : 'Cancel',\n        width                       : 600\n    },\n\n    RecurrenceLegend : {\n        ' and '                         : ' and ',\n        Daily                           : 'Daily',\n        'Weekly on {1}'                 : ({ days }) => `Weekly on ${days}`,\n        'Monthly on {1}'                : ({ days }) => `Monthly on ${days}`,\n        'Yearly on {1} of {2}'          : ({ days, months }) => `Yearly on ${days} of ${months}`,\n        'Every {0} days'                : ({ interval }) => `Every ${interval} days`,\n        'Every {0} weeks on {1}'        : ({ interval, days }) => `Every ${interval} weeks on ${days}`,\n        'Every {0} months on {1}'       : ({ interval, days }) => `Every ${interval} months on ${days}`,\n        'Every {0} years on {1} of {2}' : ({ interval, days, months }) => `Every ${interval} years on ${days} of ${months}`,\n        position1                       : 'the first',\n        position2                       : 'the second',\n        position3                       : 'the third',\n        position4                       : 'the fourth',\n        position5                       : 'the fifth',\n        'position-1'                    : 'the last',\n        day                             : 'day',\n        weekday                         : 'weekday',\n        'weekend day'                   : 'weekend day',\n        daysFormat                      : ({ position, days }) => `${position} ${days}`\n    },\n\n    RecurrenceEditor : {\n        'Repeat event'      : 'Repeat event',\n        Cancel              : 'Cancel',\n        Save                : 'Save',\n        Frequency           : 'Frequency',\n        Every               : 'Every',\n        DAILYintervalUnit   : 'day(s)',\n        WEEKLYintervalUnit  : 'week(s)',\n        MONTHLYintervalUnit : 'month(s)',\n        YEARLYintervalUnit  : 'year(s)',\n        Each                : 'Each',\n        'On the'            : 'On the',\n        'End repeat'        : 'End repeat',\n        'time(s)'           : 'time(s)'\n    },\n\n    RecurrenceDaysCombo : {\n        day           : 'day',\n        weekday       : 'weekday',\n        'weekend day' : 'weekend day'\n    },\n\n    RecurrencePositionsCombo : {\n        position1    : 'first',\n        position2    : 'second',\n        position3    : 'third',\n        position4    : 'fourth',\n        position5    : 'fifth',\n        'position-1' : 'last'\n    },\n\n    RecurrenceStopConditionCombo : {\n        Never     : 'Never',\n        After     : 'After',\n        'On date' : 'On date'\n    },\n\n    RecurrenceFrequencyCombo : {\n        None    : 'No repeat',\n        Daily   : 'Daily',\n        Weekly  : 'Weekly',\n        Monthly : 'Monthly',\n        Yearly  : 'Yearly'\n    },\n\n    RecurrenceCombo : {\n        None   : 'None',\n        Custom : 'Custom...'\n    },\n\n    Summary : {\n        'Summary for' : date => `Summary for ${date}`\n    },\n\n    ScheduleRangeCombo : {\n        completeview : 'Complete schedule',\n        currentview  : 'Visible schedule',\n        daterange    : 'Date range',\n        completedata : 'Complete schedule (for all events)'\n    },\n\n    SchedulerExportDialog : {\n        'Schedule range' : 'Schedule range',\n        'Export from'    : 'From',\n        'Export to'      : 'To'\n    },\n\n    ExcelExporter : {\n        'No resource assigned' : 'No resource assigned'\n    },\n\n    CrudManagerView : {\n        serverResponseLabel : 'Server response:'\n    },\n\n    DurationColumn : {\n        Duration : 'Duration'\n    }\n};\n\nexport default LocaleHelper.publishLocale(locale);\n","/**\n * @module Scheduler/data/mixin/AttachToProjectMixin\n */\n\n/**\n * Mixin that calls the target class `attachToProject()` function when a new project is assigned to Scheduler/Gantt.\n *\n * @mixin\n */\nexport default Target => class AttachToProjectMixin extends Target {\n    static get $name() {\n        return 'AttachToProjectMixin';\n    }\n\n    async afterConstruct() {\n        super.afterConstruct();\n\n        const\n            me            = this,\n            projectHolder = (me.client || me.grid),\n            { project }   = projectHolder;\n\n        projectHolder.projectSubscribers.push(me);\n\n        // Attach to already existing stores\n        if (project) {\n            me.attachToProject(project);\n            me.attachToResourceStore(project.resourceStore);\n            me.attachToEventStore(project.eventStore);\n            me.attachToAssignmentStore(project.assignmentStore);\n            me.attachToDependencyStore(project.dependencyStore);\n            me.attachToCalendarManagerStore(project.calendarManagerStore);\n        }\n    }\n\n    /**\n     * Override to take action when the project instance is replaced.\n     *\n     * @param {Scheduler.model.ProjectModel} project\n     */\n    attachToProject(project) {\n        this.detachListeners('project');\n\n        this._project = project;\n    }\n\n    /**\n     * Override to take action when the EventStore instance is replaced, either from being replaced on the project or\n     * from assigning a new project.\n     *\n     * @param {Scheduler.data.EventStore} store\n     */\n    attachToEventStore(store) {\n        this.detachListeners('eventStore');\n    }\n\n    /**\n     * Override to take action when the ResourceStore instance is replaced, either from being replaced on the project\n     * or from assigning a new project.\n     *\n     * @param {Scheduler.data.ResourceStore} store\n     */\n    attachToResourceStore(store) {\n        this.detachListeners('resourceStore');\n    }\n\n    /**\n     * Override to take action when the AssignmentStore instance is replaced, either from being replaced on the project\n     * or from assigning a new project.\n     *\n     * @param {Scheduler.data.AssignmentStore} store\n     */\n    attachToAssignmentStore(store) {\n        this.detachListeners('assignmentStore');\n    }\n\n    /**\n     * Override to take action when the DependencyStore instance is replaced, either from being replaced on the project\n     * or from assigning a new project.\n     *\n     * @param {Scheduler.data.DependencyStore} store\n     */\n    attachToDependencyStore(store) {\n        this.detachListeners('dependencyStore');\n    }\n\n    // <remove-on-release>\n    // TODO: Move attachToCalendarMangerStore to Pro somehow\n    // </remove-on-release>\n\n    /**\n     * Override to take action when the CalendarManagerStore instance is replaced, either from being replaced on the\n     * project or from assigning a new project.\n     *\n     * @param {Core.data.Store} store\n     */\n    attachToCalendarManagerStore(store) {\n        this.detachListeners('calendarManagerStore');\n    }\n\n    get project() {\n        return this._project;\n    }\n\n    get calendarManagerStore() {\n        return this.project.calendarManagerStore;\n    }\n\n    get assignmentStore() {\n        return this.project.assignmentStore;\n    }\n\n    get resourceStore() {\n        return this.project.resourceStore;\n    }\n\n    get eventStore() {\n        return this.project.eventStore;\n    }\n\n    get dependencyStore() {\n        return this.project.dependencyStore;\n    }\n};\n","import Base from '../../../Core/Base.js';\nimport ProjectModel from '../../model/ProjectModel.js';\nimport StringHelper from '../../../Core/helper/StringHelper.js';\nimport TimeZoneHelper from '../../../Core/helper/TimeZoneHelper.js';\n\n/**\n * @module Scheduler/data/mixin/ProjectConsumer\n */\n\nconst engineStoreNames = [\n    'assignmentStore',\n    'dependencyStore',\n    'eventStore',\n    'resourceStore'\n];\n\n/**\n * Creates a Project using any configured stores, and sets the stores configured into the project into\n * the host object.\n *\n * @mixin\n */\nexport default Target => class ProjectConsumer extends (Target || Base) {\n    static get $name() {\n        return 'ProjectConsumer';\n    }\n\n    //region Default config\n\n    static get declarable() {\n        return ['projectStores'];\n    }\n\n    static get configurable() {\n        return {\n            projectModelClass : ProjectModel,\n\n            // <remove-on-release>\n            //TODO: move to SchedulerProBase and SchedulerBase to specify different types\n            // </remove-on-release>\n            /**\n             * The {@link Scheduler.model.ProjectModel} instance, containing the data visualized by the Scheduler.\n             *\n             * **Note:** In SchedulerPro the project is instance of SchedulerPro.model.ProjectModel class.\n             * @member {Scheduler.model.ProjectModel} project\n             * @typings {ProjectModel}\n             * @category Data\n             */\n            /**\n             * A {@link Scheduler.model.ProjectModel} instance or a config object. The project holds all Scheduler data.\n             * Can be omitted in favor of individual store configs or {@link Scheduler.view.mixin.SchedulerStores#config-crudManager} config.\n             *\n             * **Note:** This config is **mandatory** in SchedulerPro. See SchedulerPro.model.ProjectModel class.\n             * @config {Scheduler.model.ProjectModel|ProjectModelConfig} project\n             * @category Data\n             */\n            project : {},\n\n            /**\n             * Configure as `true` to destroy the Project and stores when `this` is destroyed.\n             * @config {Boolean}\n             * @category Data\n             */\n            destroyStores : null,\n\n            // Will be populated by AttachToProjectMixin which features mix in\n            projectSubscribers : []\n        };\n    }\n\n    #suspendedByRestore;\n\n    //endregion\n\n    startConfigure(config) {\n        // process the project first which ingests any configured data sources,\n        this.getConfig('project');\n\n        super.startConfigure(config);\n    }\n\n    //region Project\n\n    // This is where all the ingestion happens.\n    // At config time, the changers inject incoming values into the project config object\n    // that we are building. At the end we instantiate the project with all incoming\n    // config values filled in.\n    changeProject(project, oldProject) {\n        const\n            me = this,\n            {\n                projectStoreNames,\n                projectDataNames\n            }  = me.constructor;\n\n        me.projectCallbacks = new Set();\n\n        if (project) {\n            // Flag for changes to know what stage we are at\n            me.buildingProjectConfig = true;\n\n            if (!project.isModel) {\n                // When configuring, prio order:\n                // 1. If using an already existing CrudManager, it is assumed to already have the stores we should use,\n                //    adopt them as ours.\n                // 2. If a supplied store already has a project, it is assumed to be shared with another scheduler and\n                //    that project is adopted as ours. Unless we are given some store not part of that project,\n                //    in which case we create a new project.\n                // 3. Use stores from a supplied project config.\n                // 4. Use stores configured on scheduler.\n                // + Pass on inline data (events, resources, dependencies, assignments -> xxData on the project config)\n                //\n                // What happens during project initialization is this:\n                // this._project is the project *config* object.\n                // changeXxxx methods put incoming values directly into it through this.project\n                // to be used as its configuration.\n                // So when it is instantiated, it has had all configs injected.\n                if (me.isConfiguring) {\n                    // Set property for changers to put incoming values into\n                    me._project = project;\n\n                    // crudManager will be a clone of the raw config if it is a raw config.\n                    const { crudManager } = me;\n\n                    // Pull in stores from the crudManager config first\n                    if (crudManager) {\n                        const { isCrudManager } = crudManager;\n\n                        for (const storeName of projectStoreNames) {\n                            if (crudManager[storeName]) {\n\n                                // We configure the project with the stores, and *not* the CrudManager.\n                                // The CrudManager ends up having its project set and thereby adopting ours.\n                                me[storeName] = crudManager[storeName];\n\n                                // If it's just a config, take the stores out.\n                                // We will *configure* it with this project and it will ingest\n                                // its stores from there.\n                                if (!isCrudManager) {\n                                    delete crudManager[storeName];\n                                }\n                            }\n                        }\n                    }\n\n                    // Pull in all our configured stores into the project config object.\n                    // That also extracts any project into this._sharedProject\n                    me.getConfig('projectStores');\n\n                    // Referencing these data configs causes them to be pulled into\n                    // the _project.xxxData config property if they are present.\n                    for (const dataName of projectDataNames) {\n                        me.getConfig(dataName);\n                    }\n                }\n\n                const { eventStore } = project;\n                let { _sharedProject : sharedProject } = me;\n\n                // Delay autoLoading until listeners are set up, to be able to inject params\n                if (eventStore && !eventStore.isEventStoreMixin && eventStore.autoLoad && !eventStore.count) {\n                    eventStore.autoLoad = false;\n                    me.delayAutoLoad = true;\n                }\n\n                // We should not adopt a project from a store if we are given any store not part of that project\n                if (sharedProject && engineStoreNames.some(store => project[store] && project[store] !== sharedProject[store])) {\n                    // We have to chain any store used by the other project, they can only belong to one\n                    for (const store of engineStoreNames) {\n                        if (project[store] && project[store] === sharedProject[store]) {\n                            project[store] = project[store].chain();\n                        }\n                    }\n\n                    sharedProject = null;\n                }\n\n                // Use sharedProject if found, else instantiate our config.\n                project = sharedProject || new me.projectModelClass(project);\n\n                // Clear the property so that the updater is called.\n                delete me._project;\n            }\n\n            // In the updater, configs are live\n            me.buildingProjectConfig = false;\n        }\n\n        return project;\n    }\n\n    /**\n     * Implement in subclass to take action when project is replaced.\n     *\n     * __`super.updateProject(...arguments)` must be called first.__\n     *\n     * @param {Scheduler.model.ProjectModel} project\n     * @category Data\n     */\n    updateProject(project, oldProject) {\n        const\n            me = this,\n            {\n                projectListeners,\n                crudManager\n            }  = me;\n\n        me.detachListeners('projectConsumer');\n\n        // When we set the crudManager now, it will go through to the CrudManagerVIew\n        delete me._crudManager;\n\n        if (project) {\n            projectListeners.thisObj = me;\n            project.ion(projectListeners);\n\n            // If the project is a CrudManager, use it as such.\n            if (project.isCrudManager) {\n                me.crudManager = project;\n            }\n            // Apply the project to CrudManager, making sure the same stores are used there and here\n            else if (crudManager) {\n                crudManager.project = project;\n\n                // CrudManager goes through the changer as usual and is initialized\n                // from the Project, not any stores it was originally configured with.\n                me.crudManager = crudManager;\n            }\n\n            // Notifies classes that mix AttachToProjectMixin that we have a new project\n            me.projectSubscribers.forEach(subscriber => subscriber.attachToProject(project));\n\n            // Sets the project's stores into the host object\n            for (const storeName of me.constructor.projectStoreNames) {\n                me[storeName] = project[storeName];\n            }\n\n            // Listeners are set up, if EventStore was configured with autoLoad now is the time to load\n            if (me.delayAutoLoad) {\n                // Restore the flag, not needed but to look good on inspection\n                project.eventStore.autoLoad = true;\n                project.eventStore.load();\n            }\n\n            project.stm?.ion({\n                name           : 'projectConsumer',\n                restoringStart : 'onProjectRestoringStart',\n                restoringStop  : 'onProjectRestoringStop',\n                thisObj        : me\n            });\n\n        }\n\n        me.trigger('projectChange', { project });\n    }\n\n    // Implementation here because we need to get first look at it to adopt its stores\n    changeCrudManager(crudManager) {\n        // Set the property to be scanned for incoming stores.\n        // If it's a config, it will be stripped of those stores prior to construction.\n        if (this.buildingProjectConfig) {\n            this._crudManager = crudManager.isCrudManager ? crudManager : Object.assign({}, crudManager);\n        }\n        else {\n            return super.changeCrudManager(crudManager);\n        }\n    }\n\n    // Called when project changes are committed, after data is written back to records\n    onProjectDataReady() {\n        const me = this;\n\n        // Only update the UI when we are visible\n        me.whenVisible(() => {\n            if (me.projectCallbacks.size) {\n                me.projectCallbacks.forEach(callback => callback());\n                me.projectCallbacks.clear();\n            }\n        }, null, null, 'onProjectDataReady');\n    }\n\n    onProjectRestoringStart({ stm }) {\n        const { rawQueue } = stm;\n        // Suspend refresh if undo/redo potentially leads to multiple refreshes\n        if (rawQueue.length && rawQueue[rawQueue.length - 1].length > 1) {\n            this.#suspendedByRestore = true;\n            this.suspendRefresh();\n        }\n    }\n\n    onProjectRestoringStop() {\n        if (this.#suspendedByRestore) {\n            this.#suspendedByRestore = false;\n            this.resumeRefresh(true);\n        }\n    }\n\n    // Overridden in CalendarStores.js\n    onBeforeTimeZoneChange() {}\n\n    // When project changes time zone, change start and end dates\n    onTimeZoneChange({ timeZone, oldTimeZone }) {\n        const me = this;\n\n        // The timeAxis timeZone could be equal to timeZone if we are a partnered scheduler\n        if (me.startDate && me.timeAxis.timeZone !== timeZone) {\n            const startDate = oldTimeZone != null ? TimeZoneHelper.fromTimeZone(me.startDate, oldTimeZone) : me.startDate;\n            me.startDate = timeZone != null ? TimeZoneHelper.toTimeZone(startDate, timeZone) : startDate;\n\n            // Saves the timeZone on the timeAxis as it is shared between partnered schedulers\n            me.timeAxis.timeZone = timeZone;\n        }\n    }\n\n    /**\n     * Accepts a callback that will be called when the underlying project is ready (no commit pending and current commit\n     * finalized)\n     * @param {Function} callback\n     * @category Data\n     */\n    whenProjectReady(callback) {\n        // Might already be ready, call directly\n        if (this.isEngineReady) {\n            callback();\n        }\n        else {\n            this.projectCallbacks.add(callback);\n        }\n    }\n\n    /**\n     * Returns `true` if engine is in a stable calculated state, `false` otherwise.\n     * @property {Boolean}\n     * @category Misc\n     */\n    get isEngineReady() {\n        // NonWorkingTime calls this during destruction, hence the ?.\n        return Boolean(this.project.isEngineReady?.());\n    }\n\n    //endregion\n\n    //region Destroy\n\n    // Cleanup, destroys stores if this.destroyStores is true.\n    doDestroy() {\n        super.doDestroy();\n\n        if (this.destroyStores) {\n            // Shared project might already be destroyed\n            !this.project.isDestroyed && this.project.destroy();\n        }\n    }\n\n    //endregion\n\n    get projectStores() {\n        const { projectStoreNames } = this.constructor;\n\n        return projectStoreNames.map(storeName => this[storeName]);\n    }\n\n    static get projectStoreNames() {\n        return Object.keys(this.projectStores);\n    }\n\n    static get projectDataNames() {\n        return this.projectStoreNames.reduce((result, storeName) => {\n            const { dataName } = this.projectStores[storeName];\n\n            if (dataName) {\n                result.push(dataName);\n            }\n            return result;\n        }, []);\n    }\n\n    static setupProjectStores(cls, meta) {\n        const { projectStores } = cls;\n\n        if (projectStores) {\n            const\n                projectListeners  = {\n                    name                 : 'projectConsumer',\n                    dataReady            : 'onProjectDataReady',\n                    change               : 'relayProjectDataChange',\n                    beforeTimeZoneChange : 'onBeforeTimeZoneChange',\n                    timeZoneChange       : 'onTimeZoneChange'\n                },\n                storeConfigs      = {\n                    projectListeners\n                };\n\n            let previousDataName;\n\n            // Create a property and updater for each dataName and a changer for each store\n            for (const storeName in projectStores) {\n                const { dataName } = projectStores[storeName];\n\n                // Define \"eventStore\" and \"events\" configs\n                storeConfigs[storeName] = storeConfigs[dataName] = null;\n\n                // Define up the \"events\" property\n                if (dataName) {\n                    // Getter to return store data\n                    Object.defineProperty(meta.class.prototype, dataName, {\n                        configurable : true, // So that Config can add its setter.\n                        get() {\n                            // get events() { return this.project.eventStore.records; }\n                            return this.project[storeName]?.records;\n                        }\n                    });\n\n                    // Create an updater for the data name;\n                    this.createDataUpdater(storeName, dataName, previousDataName, meta);\n                }\n\n                this.createStoreDescriptor(meta, storeName, projectStores[storeName], projectListeners);\n\n                // The next data updater must reference this data name\n                previousDataName = dataName;\n            }\n\n            // Create the projectListeners config.\n            this.setupConfigs(meta, storeConfigs);\n        }\n    }\n\n    static createDataUpdater(storeName, dataName, previousDataName, meta) {\n        // Create eg \"updateEvents(data)\".\n        // We need it to call this.getConfig('resources') so that ordering of\n        // data ingestion is corrected.\n        meta.class.prototype[`update${StringHelper.capitalize(dataName)}`] = function(data) {\n            const { project } = this;\n\n            // Ensure a dataName that we depend on is called in.\n            // For example dependencies must load in order after the events.\n            previousDataName && this.getConfig(previousDataName);\n\n            if (this.buildingProjectConfig) {\n                // Set the property in the project config object.\n                // eg project.eventsData = [...]\n                project[`${dataName}Data`] = data;\n            }\n            else {\n                // Live update the project when in use.\n                project[storeName].data = data;\n            }\n        };\n    }\n\n    // eslint-disable-next-line bryntum/no-listeners-in-lib\n    static createStoreDescriptor(meta, storeName, { listeners }, projectListeners) {\n        const\n            { prototype : clsProto } = meta.class,\n            storeNameCap             = StringHelper.capitalize(storeName);\n\n        // Set up onProjectEventStoreChange to set this.eventStore\n        projectListeners[`${storeName}Change`] = function({ store }) {\n            this[storeName] = store;\n        };\n\n        // create changeEventStore\n        clsProto[`change${storeNameCap}`] = function(store, oldStore) {\n            const\n                me           = this,\n                { project }  = me,\n                storeProject = store?.project;\n\n            if (me.buildingProjectConfig) {\n                // Capture any project found at project config time\n                // to use as our shared project\n                if (storeProject?.isProjectModel) {\n                    me._sharedProject = storeProject;\n                }\n\n                // Set the property in the project config object.\n                // Must not go through the updater. It's too early to\n                // inform host of store change.\n                project[storeName] = store;\n                return;\n            }\n\n            // Live update the project when in use.\n            if (!me.initializingProject) {\n                if (project[storeName] !== store) {\n                    project[`set${storeNameCap}`](store);\n                    store = project[storeName];\n                }\n            }\n\n            // Implement processing here instead of creating a separate updater.\n            // Subclasses can implement updaters.\n            if (store !== oldStore) {\n                if (listeners) {\n                    listeners.thisObj = me;\n                    listeners.name = `${storeName}Listeners`;\n\n                    me.detachListeners(listeners.name);\n\n                    store.ion(listeners);\n                }\n\n                // Set backing var temporarily, so it can be accessed from AttachToProjectMixin subscribers\n                me[`_${storeName}`] = store;\n\n                // Notifies classes that mix AttachToProjectMixin that we have a new XxxxxStore\n                me.projectSubscribers.forEach(subscriber => {\n                    subscriber[`attachTo${storeNameCap}`]?.(store);\n                });\n\n                me[`_${storeName}`] = null;\n            }\n            return store;\n        };\n    }\n\n    relayProjectDataChange(event) {\n        // Don't trigger change event for tree node collapse/expand\n        if ((event.isExpand || event.isCollapse) && !event.records[0].fieldMap.expanded.persist) {\n            return;\n        }\n\n        /**\n         * Fired when data in any of the projects stores changes.\n         *\n         * Basically a relayed version of each store's own change event, decorated with which store it originates from.\n         * See the {@link Core.data.Store#event-change store change event} documentation for more information.\n         *\n         * @event dataChange\n         * @param {Scheduler.data.mixin.ProjectConsumer} source Owning component\n         * @param {Scheduler.model.mixin.ProjectModelMixin} project Project model\n         * @param {Core.data.Store} store Affected store\n         * @param {'remove'|'removeAll'|'add'|'updatemultiple'|'clearchanges'|'filter'|'update'|'dataset'|'replace'} action\n         * Name of action which triggered the change. May be one of:\n         * * `'remove'`\n         * * `'removeAll'`\n         * * `'add'`\n         * * `'updatemultiple'`\n         * * `'clearchanges'`\n         * * `'filter'`\n         * * `'update'`\n         * * `'dataset'`\n         * * `'replace'`\n         * @param {Core.data.Model} record Changed record, for actions that affects exactly one record (`'update'`)\n         * @param {Core.data.Model[]} records Changed records, passed for all actions except `'removeAll'`\n         * @param {Object} changes Passed for the `'update'` action, info on which record fields changed\n         */\n        return this.trigger('dataChange', { project : event.source, ...event, source : this });\n    }\n\n    //region WidgetClass\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n\n    //endregion\n};\n","import Base from '../../Core/Base.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\nimport StringHelper from '../../Core/helper/StringHelper.js';\nimport BrowserHelper from '../../Core/helper/BrowserHelper.js';\n\n/**\n * @module Scheduler/tooltip/ClockTemplate\n */\n\n/**\n * A template showing a clock, it consumes an object containing a date and a text\n * @private\n */\nexport default class ClockTemplate extends Base {\n    static get defaultConfig() {\n        return {\n            minuteHeight : 8,\n            minuteTop    : 2,\n            hourHeight   : 8,\n            hourTop      : 2,\n            handLeft     : 10,\n            div          : document.createElement('div'),\n            scheduler    : null, // may be passed to the constructor if needed\n            // `b-sch-clock-day` for calendar icon\n            // `b-sch-clock-hour` for clock icon\n            template(data) {\n                return `<div class=\"b-sch-clockwrap b-sch-clock-${data.mode || this.mode} ${data.cls || ''}\">\n                    <div class=\"b-sch-clock\">\n                        <div class=\"b-sch-hour-indicator\">${DateHelper.format(data.date, 'MMM')}</div>\n                        <div class=\"b-sch-minute-indicator\">${DateHelper.format(data.date, 'D')}</div>\n                        <div class=\"b-sch-clock-dot\"></div>\n                    </div>\n                    <span class=\"b-sch-clock-text\">${StringHelper.encodeHtml(data.text)}</span>\n                </div>`;\n            }\n        };\n    }\n\n    generateContent(data) {\n        return this.div.innerHTML = this.template(data);\n    }\n\n    updateDateIndicator(el, date) {\n        const\n            hourIndicatorEl   = el?.querySelector('.b-sch-hour-indicator'),\n            minuteIndicatorEl = el?.querySelector('.b-sch-minute-indicator');\n\n        if (date && hourIndicatorEl && minuteIndicatorEl && BrowserHelper.isBrowserEnv) {\n            if (this.mode === 'hour') {\n                hourIndicatorEl.style.transform   = `rotate(${(date.getHours() % 12) * 30}deg)`;\n                minuteIndicatorEl.style.transform = `rotate(${date.getMinutes() * 6}deg)`;\n            }\n            else {\n                hourIndicatorEl.style.transform   = 'none';\n                minuteIndicatorEl.style.transform = 'none';\n            }\n        }\n    }\n\n    set mode(mode) {\n        this._mode = mode;\n    }\n\n    // `day` mode for calendar icon\n    // `hour` mode for clock icon\n    get mode() {\n        if (this._mode) {\n            return this._mode;\n        }\n\n        //<debug>\n        if (!this.scheduler) {\n            throw new Error('`scheduler` config has to be specified for the clock template');\n        }\n        //</debug>\n\n        const\n            unitLessThanDay        = DateHelper.compareUnits(this.scheduler.timeAxisViewModel.timeResolution.unit, 'day') < 0,\n            formatContainsHourInfo = DateHelper.formatContainsHourInfo(this.scheduler.displayDateFormat);\n\n        return unitLessThanDay && formatContainsHourInfo ? 'hour' : 'day';\n    }\n\n    set template(template) {\n        this._template = template;\n    }\n\n    /**\n     * Get the clock template, which accepts an object of format { date, text }\n     * @property {function(*): string}\n     */\n    get template() {\n        return this._template;\n    }\n}\n","import Base from '../../../Core/Base.js';\n\n/**\n * @module Scheduler/feature/mixin/TaskEditStm\n */\n\n/**\n * Mixin adding STM transactable behavior to TaskEdit feature.\n *\n * @mixin\n */\nexport default Target => class TaskEditStm extends (Target || Base) {\n    static get $name() {\n        return 'TaskEditStm';\n    }\n\n    captureStm(startTransaction = false) {\n        const\n            me      = this,\n            project = me.project,\n            stm     = project.getStm();\n\n        if (me.hasStmCapture) {\n            return;\n        }\n\n        me.hasStmCapture = true;\n        me.stmInitiallyDisabled = stm.disabled;\n        me.stmInitiallyAutoRecord = stm.autoRecord;\n\n        if (me.stmInitiallyDisabled) {\n            stm.enable();\n            // it seems this branch has never been exercised by tests\n            // but the intention is to stop the auto-recording while\n            // task editor is active (all editing is one manual transaction)\n            stm.autoRecord = false;\n        }\n        else {\n            if (me.stmInitiallyAutoRecord) {\n                stm.autoRecord = false;\n            }\n            if (stm.isRecording) {\n                stm.stopTransaction();\n            }\n        }\n\n        if (startTransaction) {\n            this.startStmTransaction();\n        }\n    }\n\n    startStmTransaction() {\n        this.project.getStm().startTransaction();\n    }\n\n    commitStmTransaction() {\n        const\n            me  = this,\n            stm = me.project.getStm();\n\n        if (!me.hasStmCapture) {\n            throw new Error('Does not have STM capture, no transaction to commit');\n        }\n\n        if (stm.enabled) {\n            stm.stopTransaction();\n\n            if (me.stmInitiallyDisabled) {\n                stm.resetQueue();\n            }\n        }\n    }\n\n    async rejectStmTransaction() {\n        const\n            stm        = this.project.getStm(),\n            { client } = this;\n\n        if (!this.hasStmCapture) {\n            throw new Error('Does not have STM capture, no transaction to reject');\n        }\n\n        if (stm.enabled) {\n            if (stm.transaction?.length) {\n                client.suspendRefresh();\n\n                stm.rejectTransaction();\n\n                await client.resumeRefresh(true);\n            }\n            else {\n                stm.stopTransaction();\n            }\n        }\n    }\n\n    enableStm() {\n        this.project.getStm().enable();\n    }\n\n    disableStm() {\n        this.project.getStm().disable();\n    }\n\n    freeStm(commitOrReject = null) {\n        if (commitOrReject === true) {\n            this.commitStmTransaction();\n        }\n        else if (commitOrReject === false) {\n            // Note - we don't wait for async to complete here\n            this.rejectStmTransaction();\n        }\n\n        const\n            me  = this,\n            stm = me.project.getStm();\n\n        if (!me.hasStmCapture) {\n            return;\n        }\n\n        stm.disabled = me.stmInitiallyDisabled;\n        stm.autoRecord = me.stmInitiallyAutoRecord;\n        me.hasStmCapture = false;\n    };\n};\n","import ContextMenuBase from '../../../Core/feature/base/ContextMenuBase.js';\n\n/**\n * @module Scheduler/feature/base/TimeSpanMenuBase\n */\n\n/**\n * Abstract base class used by other context menu features which show the context menu for TimeAxis.\n * Using this class you can make sure the menu expects the target to disappear,\n * since it can be scroll out of the scheduling zone.\n *\n * Features that extend this class are:\n *  * {@link Scheduler/feature/EventMenu};\n *  * {@link Scheduler/feature/ScheduleMenu};\n *  * {@link Scheduler/feature/TimeAxisHeaderMenu};\n *\n * @extends Core/feature/base/ContextMenuBase\n * @abstract\n */\nexport default class TimeSpanMenuBase extends ContextMenuBase {\n}\n","import Popup from '../../../Core/widget/Popup.js';\n\n/**\n * @module Scheduler/view/recurrence/RecurrenceConfirmationPopup\n */\n\n/**\n * A confirmation dialog shown when modifying a recurring event or some of its occurrences.\n * For recurring events, the dialog informs the user that the change will be applied to all occurrences.\n *\n * For occurrences, the dialog lets the user choose if the change should affect all future occurrences,\n * or this occurrence only.\n *\n * Usage example:\n *\n * ```javascript\n * const confirmation = new RecurrenceConfirmationPopup();\n *\n * confirmation.confirm({\n *     eventRecord : recurringEvent,\n *     actionType  : \"delete\",\n *     changerFn   : () => recurringEvent.remove(event)\n * });\n * ```\n *\n * @classType recurrenceconfirmation\n * @extends Core/widget/Popup\n */\nexport default class RecurrenceConfirmationPopup extends Popup {\n\n    // <debug>\n    // region Localization test\n    static localization = [\n        'L{delete-further-message}',\n        'L{update-further-message}',\n        'L{delete-all-message}',\n        'L{update-all-message}',\n        'L{delete-further-btn-text}',\n        'L{update-further-btn-text}',\n        'L{delete-only-this-btn-text}',\n        'L{update-only-this-btn-text}',\n        'L{delete-title}',\n        'L{update-title}'\n    ];\n    // endregion\n    // </debug>\n\n    static get $name() {\n        return 'RecurrenceConfirmationPopup';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'recurrenceconfirmation';\n    }\n\n    static get defaultConfig() {\n        return {\n            localizableProperties : [],\n            align                 : 'b-t',\n            autoShow              : false,\n            autoClose             : false,\n            closeAction           : 'onRecurrenceClose',\n            modal                 : true,\n            centered              : true,\n            scrollAction          : 'realign',\n            constrainTo           : globalThis,\n            draggable             : true,\n            closable              : true,\n            floating              : true,\n            eventRecord           : null,\n            cls                   : 'b-sch-recurrenceconfirmation',\n            bbar                  : {\n                defaults : {\n                    localeClass : this\n                },\n                items : {\n                    changeSingleButton : {\n                        weight  : 100,\n                        cls     : 'b-raised',\n                        color   : 'b-blue',\n                        text    : 'L{update-only-this-btn-text}',\n                        onClick : 'up.onChangeSingleButtonClick'\n                    },\n                    changeMultipleButton : {\n                        weight  : 200,\n                        color   : 'b-green',\n                        text    : 'L{Object.Yes}',\n                        onClick : 'up.onChangeMultipleButtonClick'\n                    },\n                    cancelButton : {\n                        weight  : 300,\n                        color   : 'b-gray',\n                        text    : 'L{Object.Cancel}',\n                        onClick : 'up.onCancelButtonClick'\n                    }\n                }\n            }\n        };\n    }\n\n    /**\n     * Reference to the \"Apply changes to multiple occurrences\" button, if used\n     * @property {Core.widget.Button}\n     * @readonly\n     */\n    get changeMultipleButton() {\n        return this.widgetMap.changeMultipleButton;\n    }\n\n    /**\n     * Reference to the button that causes changing of the event itself only, if used\n     * @property {Core.widget.Button}\n     * @readonly\n     */\n    get changeSingleButton() {\n        return this.widgetMap.changeSingleButton;\n    }\n\n    /**\n     * Reference to the cancel button, if used\n     * @property {Core.widget.Button}\n     * @readonly\n     */\n    get cancelButton() {\n        return this.widgetMap.cancelButton;\n    }\n\n    /**\n     * Handler for \"Apply changes to multiple occurrences\" {@link #property-changeMultipleButton button}.\n     * It calls {@link #function-processMultipleRecords} and then hides the dialog.\n     */\n    onChangeMultipleButtonClick() {\n        this.processMultipleRecords();\n        this.hide();\n    }\n\n    /**\n     * Handler for the {@link #property-changeSingleButton button} that causes changing of the event itself only.\n     * It calls {@link #function-processSingleRecord} and then hides the dialog.\n     */\n    onChangeSingleButtonClick() {\n        this.processSingleRecord();\n        this.hide();\n    }\n\n    /**\n     * Handler for {@link #property-cancelButton cancel button}.\n     * It calls `cancelFn` provided to {@link #function-confirm} call and then hides the dialog.\n     */\n    onCancelButtonClick() {\n        this.cancelFn && this.cancelFn.call(this.thisObj);\n        this.hide();\n    }\n\n    onRecurrenceClose() {\n        if (this.cancelFn) {\n            this.cancelFn.call(this.thisObj);\n        }\n        this.hide();\n    }\n\n    /**\n     * Displays the confirmation.\n     * Usage example:\n     *\n     * ```javascript\n     * const popup = new RecurrenceConfirmationPopup();\n     *\n     * popup.confirm({\n     *     eventRecord,\n     *     actionType : \"delete\",\n     *     changerFn  : () => eventStore.remove(record)\n     * });\n     * ```\n     *\n     * @param {Object} config The following config options are supported:\n     * @param {Scheduler.model.EventModel} config.eventRecord   Event being modified.\n     * @param {'update'|'delete'} config.actionType Type of modification to be applied to the event. Can be\n     * either \"update\" or \"delete\".\n     * @param {Function} config.changerFn A function that should be called to apply the change to the event upon user\n     * choice.\n     * @param {Function} [config.thisObj] `changerFn` and `cancelFn` functions scope.\n     * @param {Function} [config.cancelFn] Function called on `Cancel` button click.\n     */\n    confirm(config = {}) {\n        const me = this;\n\n        //<debug>\n        if (!config || !config.actionType || !config.eventRecord) {\n            throw new Error('actionType and eventRecord must be specified for Scheduler.view.recurrence.RecurrenceConfirmationPopup');\n        }\n        //</debug>\n\n        [\n            'actionType',\n            'eventRecord',\n            'title',\n            'html',\n            'changerFn',\n            'cancelFn',\n            'finalizerFn',\n            'thisObj'\n        ].forEach(prop => {\n            if (prop in config) me[prop] = config[prop];\n        });\n\n        me.updatePopupContent();\n\n        return super.show(config);\n    }\n\n    updatePopupContent() {\n        const\n            me                                                         = this,\n            { changeMultipleButton, changeSingleButton, cancelButton } = me.widgetMap,\n            { eventRecord, actionType = 'update' }                     = me,\n            isMaster                                                   = eventRecord?.isRecurring;\n\n        if (isMaster) {\n            changeMultipleButton.text = me.L('L{Object.Yes}');\n            me.html = me.L(`${actionType}-all-message`);\n        }\n        else {\n            changeMultipleButton.text = me.L(`${actionType}-further-btn-text`);\n            me.html = me.L(`${actionType}-further-message`);\n        }\n\n        changeSingleButton.text = me.L(`${actionType}-only-this-btn-text`);\n        cancelButton.text = me.L('L{Object.Cancel}');\n\n        me.width = me.L('L{width}');\n\n        me.title = me.L(`${actionType}-title`);\n    }\n\n    /**\n     * Applies changes to multiple occurrences as reaction on \"Apply changes to multiple occurrences\"\n     * {@link #property-changeMultipleButton button} click.\n     */\n    processMultipleRecords() {\n        const { eventRecord, changerFn, thisObj, finalizerFn } = this;\n\n        eventRecord.beginBatch();\n        // Apply changes to the occurrence.\n        // It is not joined to any stores, so this has no consequence.\n        changerFn && this.callback(changerFn, thisObj, [eventRecord]);\n\n        // afterChange will promote it to being an new recurring base because there's still recurrence\n        eventRecord.endBatch();\n\n        finalizerFn && this.callback(finalizerFn, thisObj, [eventRecord]);\n    }\n\n    /**\n     * Applies changes to a single record by making it a \"real\" event and adding an exception to the recurrence.\n     * The method is called as reaction on clicking the {@link #property-changeSingleButton button} that causes changing of the event itself only.\n     */\n    processSingleRecord() {\n        const { eventRecord, changerFn, thisObj, finalizerFn } = this;\n\n        eventRecord.beginBatch();\n\n        let firstOccurrence;\n\n        // If that's a master event get its very first occurrence\n        if (eventRecord?.isRecurring) {\n            eventRecord.recurrence.forEachOccurrence(eventRecord.startDate, null, (occurrence, isFirst, index) => {\n                // index 1 is used by to the event itself, > 1 since there might be exceptions\n                if (index > 1) {\n                    firstOccurrence = occurrence;\n                    return false;\n                }\n            });\n        }\n\n        // turn the 1st occurrence into a new \"master\" event\n        firstOccurrence?.convertToRealEvent();\n\n        // When the changes apply, because there's no recurrence, it will become an exception\n        eventRecord.recurrence = null;\n\n        // Apply changes to the occurrence.\n        // It is not joined to any stores, so this has no consequence.\n        changerFn && this.callback(changerFn, thisObj, [eventRecord]);\n\n        // Must also change after the callback in case the callback sets the rule.\n        // This will update the batch update data block to prevent it being set back to recurring.\n        eventRecord.recurrenceRule = null;\n\n        // afterChange will promote it to being an exception because there's no recurrence\n        eventRecord.endBatch();\n\n        finalizerFn && this.callback(finalizerFn, thisObj, [eventRecord]);\n    }\n\n    updateLocalization() {\n        this.updatePopupContent();\n        super.updateLocalization();\n    }\n\n};\n\n// Register this widget type with its Factory\nRecurrenceConfirmationPopup.initClass();\n","import Combo from '../../../../Core/widget/Combo.js';\n\n/**\n * @module Scheduler/view/recurrence/field/RecurrenceFrequencyCombo\n */\n\n/**\n * A combobox field allowing to pick frequency in the {@link Scheduler.view.recurrence.RecurrenceEditor recurrence dialog}.\n *\n * @extends Core/widget/Combo\n * @classType recurrencefrequencycombo\n */\nexport default class RecurrenceFrequencyCombo extends Combo {\n\n    static $name = 'RecurrenceFrequencyCombo';\n\n    // Factoryable type name\n    static type = 'recurrencefrequencycombo';\n\n    static configurable = {\n        editable              : false,\n        displayField          : 'text',\n        valueField            : 'value',\n        localizeDisplayFields : true,\n        addNone               : false\n    };\n\n    buildItems() {\n        return [\n            ...(this.addNone ? [{ text : 'L{None}', value : 'NONE' }] : []),\n            { value : 'DAILY',   text : 'L{Daily}' },\n            { value : 'WEEKLY',  text : 'L{Weekly}' },\n            { value : 'MONTHLY', text : 'L{Monthly}' },\n            { value : 'YEARLY',  text : 'L{Yearly}' }\n        ];\n    }\n};\n\n// Register this widget type with its Factory\nRecurrenceFrequencyCombo.initClass();\n","import DateHelper from '../../../../Core/helper/DateHelper.js';\nimport Combo from '../../../../Core/widget/Combo.js';\nimport RecurrenceDayRuleEncoder from '../../../data/util/recurrence/RecurrenceDayRuleEncoder.js';\n\n/**\n * @module Scheduler/view/recurrence/field/RecurrenceDaysCombo\n */\n\n/**\n * A combobox field allowing to pick days for the `Monthly` and `Yearly` mode in the {@link Scheduler.view.recurrence.RecurrenceEditor recurrence dialog}.\n *\n * @extends Core/widget/Combo\n * @classType recurrencedayscombo\n */\nexport default class RecurrenceDaysCombo extends Combo {\n\n    static get $name() {\n        return 'RecurrenceDaysCombo';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'recurrencedayscombo';\n    }\n\n    static get defaultConfig() {\n        const\n            allDaysValueAsArray = ['SU', 'MO', 'TU', 'WE', 'TH', 'FR', 'SA'],\n            allDaysValue        = allDaysValueAsArray.join(',');\n\n        return {\n            allDaysValue,\n            editable            : false,\n            defaultValue        : allDaysValue,\n            workingDaysValue    : allDaysValueAsArray.filter((day, index) => !DateHelper.nonWorkingDays[index]).join(','),\n            nonWorkingDaysValue : allDaysValueAsArray.filter((day, index) => DateHelper.nonWorkingDays[index]).join(','),\n            splitCls            : 'b-recurrencedays-split',\n            displayField        : 'text',\n            valueField          : 'value'\n        };\n    }\n\n    buildItems() {\n        const me = this;\n\n        me._weekDays = null;\n\n        return me.weekDays.concat([\n            { value : me.allDaysValue,        text : me.L('L{day}'), cls : me.splitCls },\n            { value : me.workingDaysValue,    text : me.L('L{weekday}') },\n            { value : me.nonWorkingDaysValue, text : me.L('L{weekend day}') }\n        ]);\n    }\n\n    get weekDays() {\n        const me = this;\n\n        if (!me._weekDays) {\n            const weekStartDay = DateHelper.weekStartDay;\n\n            const dayNames = DateHelper.getDayNames().map((text, index) => ({ text, value : RecurrenceDayRuleEncoder.encodeDay(index) }));\n\n            // we should start week w/ weekStartDay\n            me._weekDays = dayNames.slice(weekStartDay).concat(dayNames.slice(0, weekStartDay));\n        }\n\n        return me._weekDays;\n    }\n\n    set value(value) {\n        const me = this;\n\n        if (value && Array.isArray(value)) {\n            value = value.join(',');\n        }\n\n        // if the value has no matching option in the store we need to use default value\n        if (!value || !me.store.findRecord('value', value)) {\n            value = me.defaultValue;\n        }\n\n        super.value = value;\n    }\n\n    get value() {\n        let value = super.value;\n\n        if (value && Array.isArray(value)) {\n            value = value.join(',');\n        }\n\n        return value;\n    }\n}\n\n// Register this widget type with its Factory\nRecurrenceDaysCombo.initClass();\n","import DateHelper from '../../../../Core/helper/DateHelper.js';\nimport ButtonGroup from '../../../../Core/widget/ButtonGroup.js';\nimport RecurrenceDayRuleEncoder from '../../../data/util/recurrence/RecurrenceDayRuleEncoder.js';\n\n/**\n * @module Scheduler/view/recurrence/field/RecurrenceDaysButtonGroup\n */\n\n/**\n * A segmented button field allowing to pick days for the \"Weekly\" mode in the {@link Scheduler.view.recurrence.RecurrenceEditor recurrence dialog}.\n *\n * {@inlineexample Scheduler/view/RecurrenceDaysButtonGroup.js}\n *\n * @extends Core/widget/ButtonGroup\n */\nexport default class RecurrenceDaysButtonGroup extends ButtonGroup {\n\n    static get $name() {\n        return 'RecurrenceDaysButtonGroup';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'recurrencedaysbuttongroup';\n    }\n\n    static get defaultConfig() {\n        return {\n            defaults : {\n                cls        : 'b-raised',\n                toggleable : true\n            }\n        };\n    }\n\n    construct(config = {}) {\n        const me = this;\n\n        config.columns = 7;\n        config.items   = me.buildItems();\n\n        super.construct(config);\n    }\n\n    updateItemText(item) {\n        const day = RecurrenceDayRuleEncoder.decodeDay(item.value)[0];\n\n        item.text = DateHelper.getDayName(day).substring(0, 3);\n    }\n\n    buildItems() {\n        const me = this;\n\n        if (!me.__items) {\n            const weekStartDay = DateHelper.weekStartDay;\n\n            const dayNames = DateHelper.getDayNames().map((text, index) => ({\n                text  : text.substring(0, 3),\n                value : RecurrenceDayRuleEncoder.encodeDay(index)\n            }));\n\n            // we should start week w/ weekStartDay\n            me.__items = dayNames.slice(weekStartDay).concat(dayNames.slice(0, weekStartDay));\n        }\n\n        return me.__items;\n    }\n\n    set value(value) {\n        if (value && Array.isArray(value)) {\n            value = value.join(',');\n        }\n\n        super.value = value;\n    }\n\n    get value() {\n        let value = super.value;\n\n        if (value && Array.isArray(value)) {\n            value = value.join(',');\n        }\n\n        return value;\n    }\n\n    onLocaleChange() {\n        // update button texts on locale switch\n        this.items.forEach(this.updateItemText, this);\n    }\n\n    updateLocalization() {\n        this.onLocaleChange();\n        super.updateLocalization();\n    }\n\n    get widgetClassList() {\n        const classList = super.widgetClassList;\n        // to look more like a real field\n        classList.push('b-field');\n        return classList;\n    }\n};\n\n// Register this widget type with its Factory\nRecurrenceDaysButtonGroup.initClass();\n","import ButtonGroup from '../../../../Core/widget/ButtonGroup.js';\n\n/**\n * A segmented button field allowing to pick month days for the `Monthly` mode in the {@link Scheduler.view.recurrence.RecurrenceEditor recurrence dialog}.\n *\n * @extends Core/widget/ButtonGroup\n */\nexport default class RecurrenceMonthDaysButtonGroup extends ButtonGroup {\n\n    static get $name() {\n        return 'RecurrenceMonthDaysButtonGroup';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'recurrencemonthdaysbuttongroup';\n    }\n\n    static get defaultConfig() {\n        return {\n            defaults : {\n                toggleable : true,\n                cls        : 'b-raised'\n            }\n        };\n    }\n\n    get minValue() {\n        return 1;\n    }\n\n    get maxValue() {\n        return 31;\n    }\n\n    construct(config = {}) {\n        const me = this;\n\n        config.columns = 7;\n        config.items   = me.buildItems();\n\n        super.construct(config);\n    }\n\n    buildItems() {\n        const\n            me    = this,\n            items = [];\n\n        for (let value = me.minValue; value <= me.maxValue; value++) {\n            // button config\n            items.push({\n                text : value + '',\n                value\n            });\n        }\n\n        return items;\n    }\n\n    get widgetClassList() {\n        const classList = super.widgetClassList;\n        // to look more like a real field\n        classList.push('b-field');\n        return classList;\n    }\n\n};\n\n// Register this widget type with its Factory\nRecurrenceMonthDaysButtonGroup.initClass();\n","import DateHelper from '../../../../Core/helper/DateHelper.js';\nimport ButtonGroup from '../../../../Core/widget/ButtonGroup.js';\n\n/**\n * A segmented button field allowing to pick months for the `Yearly` mode in the {@link Scheduler.view.recurrence.RecurrenceEditor recurrence dialog}.\n *\n * @extends Core/widget/ButtonGroup\n */\nexport default class RecurrenceMonthsButtonGroup extends ButtonGroup {\n\n    static get $name() {\n        return 'RecurrenceMonthsButtonGroup';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'recurrencemonthsbuttongroup';\n    }\n\n    static get defaultConfig() {\n        return {\n            defaults : {\n                toggleable : true,\n                cls        : 'b-raised'\n            }\n        };\n    }\n\n    construct(config = {}) {\n        const me = this;\n\n        config.columns = 4;\n        config.items   = me.buildItems();\n\n        super.construct(config);\n    }\n\n    buildItems() {\n        return DateHelper.getMonthNames().map((item, index) => ({\n            text  : item.substring(0, 3),\n            value : index + 1 // 1-based\n        }));\n    }\n\n    updateItemText(item) {\n        item.text = DateHelper.getMonthName(item.value - 1).substring(0, 3);\n    }\n\n    onLocaleChange() {\n        // update button texts on locale switch\n        this.items.forEach(this.updateItemText, this);\n    }\n\n    updateLocalization() {\n        this.onLocaleChange();\n        super.updateLocalization();\n    }\n\n    get widgetClassList() {\n        const classList = super.widgetClassList;\n        // to look more like a real field\n        classList.push('b-field');\n        return classList;\n    }\n\n};\n\n// Register this widget type with its Factory\nRecurrenceMonthsButtonGroup.initClass();\n","import Combo from '../../../../Core/widget/Combo.js';\n\n/**\n * @module Scheduler/view/recurrence/field/RecurrenceStopConditionCombo\n */\n\n/**\n * A combobox field allowing to choose stop condition for the recurrence in the {@link Scheduler.view.recurrence.RecurrenceEditor recurrence dialog}.\n *\n * @extends Core/widget/Combo\n * @classType recurrencestopconditioncombo\n */\nexport default class RecurrenceStopConditionCombo extends Combo {\n\n    static get $name() {\n        return 'RecurrenceStopConditionCombo';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'recurrencestopconditioncombo';\n    }\n\n    static get defaultConfig() {\n        return {\n            editable     : false,\n            placeholder  : 'Never',\n            displayField : 'text',\n            valueField   : 'value'\n        };\n    }\n\n    buildItems() {\n        return [\n            { value : 'never', text : this.L('L{Never}') },\n            { value : 'count', text : this.L('L{After}') },\n            { value : 'date',  text : this.L('L{On date}') }\n        ];\n    }\n\n    set value(value) {\n        // Use 'never' instead of falsy value\n        value = value || 'never';\n\n        super.value = value;\n    }\n\n    get value() {\n        return super.value;\n    }\n\n    get recurrence() {\n        return this._recurrence;\n    }\n\n    set recurrence(recurrence) {\n        let value = null;\n\n        if (recurrence.endDate) {\n            value = 'date';\n        }\n        else if (recurrence.count) {\n            value = 'count';\n        }\n\n        this._recurrence = recurrence;\n\n        this.value = value;\n    }\n};\n\n// Register this widget type with its Factory\nRecurrenceStopConditionCombo.initClass();\n","import ArrayHelper from '../../../../Core/helper/ArrayHelper.js';\nimport Combo from '../../../../Core/widget/Combo.js';\n\n/**\n * @module Scheduler/view/recurrence/field/RecurrencePositionsCombo\n */\n\n/**\n * A combobox field allowing to specify day positions in the {@link Scheduler.view.recurrence.RecurrenceEditor recurrence editor}.\n *\n * @extends Core/widget/Combo\n * @classType recurrencepositionscombo\n */\nexport default class RecurrencePositionsCombo extends Combo {\n\n    // <debug>\n    // region Localization test\n    static localization = [\n        'L{position1}',\n        'L{position2}',\n        'L{position3}',\n        'L{position4}',\n        'L{position5}'\n    ];\n    // endregion\n    // </debug>\n\n    static get $name() {\n        return 'RecurrencePositionsCombo';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'recurrencepositionscombo';\n    }\n\n    static get defaultConfig() {\n        return {\n            editable     : false,\n            splitCls     : 'b-sch-recurrencepositions-split',\n            displayField : 'text',\n            valueField   : 'value',\n            defaultValue : 1,\n            maxPosition  : 5\n        };\n    }\n\n    buildItems() {\n        return this.buildDayNumbers().concat([\n            { value : '-1', text : this.L('L{position-1}'), cls : this.splitCls }\n        ]);\n    }\n\n    buildDayNumbers() {\n        return ArrayHelper.populate(this.maxPosition, i => (\n            { value : i + 1, text : this.L(`position${i + 1}`) }\n        ));\n    }\n\n    set value(value) {\n        const me = this;\n\n        if (value && Array.isArray(value)) {\n            value = value.join(',');\n        }\n\n        // if the value has no matching option in the store we need to use default value\n        if (!value || !me.store.findRecord('value', value)) {\n            value = me.defaultValue;\n        }\n\n        super.value = value;\n    }\n\n    get value() {\n        const value = super.value;\n\n        return value ? `${value}`.split(',').map(item => parseInt(item, 10)) : [];\n    }\n\n};\n\n// Register this widget type with its Factory\nRecurrencePositionsCombo.initClass();\n","import RecurrenceDayRuleEncoder from '../../data/util/recurrence/RecurrenceDayRuleEncoder.js';\nimport Panel from '../../../Core/widget/Panel.js';\nimport '../../../Core/widget/Widget.js';\nimport '../../../Core/widget/Button.js';\nimport '../../../Core/widget/Checkbox.js';\nimport '../../../Core/widget/DateField.js';\nimport '../../../Core/widget/NumberField.js';\nimport './field/RecurrenceFrequencyCombo.js';\nimport './field/RecurrenceDaysCombo.js';\nimport './field/RecurrenceDaysButtonGroup.js';\nimport './field/RecurrenceMonthDaysButtonGroup.js';\nimport './field/RecurrenceMonthsButtonGroup.js';\nimport './field/RecurrenceStopConditionCombo.js';\nimport './field/RecurrencePositionsCombo.js';\n\n/**\n * @module Scheduler/view/recurrence/RecurrenceEditorPanel\n */\n\n/**\n * Panel containing fields used to edit a {@link Scheduler.model.RecurrenceModel recurrence model}. Used by\n * {@link Scheduler/view/recurrence/RecurrenceEditor}, and by the recurrence tab in Scheduler Pro's event editor.\n *\n * Not intended to be used separately.\n *\n * @extends Core/widget/Panel\n * @classType recurrenceeditorpanel\n * @private\n */\nexport default class RecurrenceEditorPanel extends Panel {\n\n    static $name = 'RecurrenceEditorPanel';\n\n    static type = 'recurrenceeditorpanel';\n\n    static configurable = {\n        cls     : 'b-recurrenceeditor',\n        record  : false,\n        addNone : false,\n        items   : {\n            frequencyField : {\n                type     : 'recurrencefrequencycombo',\n                name     : 'frequency',\n                label    : 'L{RecurrenceEditor.Frequency}',\n                weight   : 10,\n                onChange : 'up.onFrequencyFieldChange',\n                addNone  : 'up.addNone'\n            },\n            intervalField : {\n                type     : 'numberfield',\n                weight   : 15,\n                name     : 'interval',\n                label    : 'L{RecurrenceEditor.Every}',\n                min      : 1,\n                required : true\n            },\n            daysButtonField : {\n                type         : 'recurrencedaysbuttongroup',\n                weight       : 20,\n                name         : 'days',\n                forFrequency : 'WEEKLY'\n            },\n            // the radio button enabling \"monthDaysButtonField\" in MONTHLY mode\n            monthDaysRadioField : {\n                type         : 'checkbox',\n                weight       : 30,\n                toggleGroup  : 'radio',\n                forFrequency : 'MONTHLY',\n                label        : 'L{RecurrenceEditor.Each}',\n                checked      : true,\n                onChange     : 'up.onMonthDaysRadioFieldChange'\n            },\n            monthDaysButtonField : {\n                type         : 'recurrencemonthdaysbuttongroup',\n                weight       : 40,\n                name         : 'monthDays',\n                forFrequency : 'MONTHLY'\n            },\n            monthsButtonField : {\n                type         : 'recurrencemonthsbuttongroup',\n                weight       : 50,\n                name         : 'months',\n                forFrequency : 'YEARLY'\n            },\n            // the radio button enabling positions & days combos in MONTHLY & YEARLY modes\n            positionAndDayRadioField : {\n                type         : 'checkbox',\n                weight       : 60,\n                toggleGroup  : 'radio',\n                forFrequency : 'MONTHLY|YEARLY',\n                label        : 'L{RecurrenceEditor.On the}',\n                onChange     : 'up.onPositionAndDayRadioFieldChange'\n            },\n            positionsCombo : {\n                type         : 'recurrencepositionscombo',\n                weight       : 80,\n                name         : 'positions',\n                forFrequency : 'MONTHLY|YEARLY'\n            },\n            daysCombo : {\n                type         : 'recurrencedayscombo',\n                weight       : 90,\n                name         : 'days',\n                forFrequency : 'MONTHLY|YEARLY',\n                flex         : 1\n            },\n            stopRecurrenceField : {\n                type     : 'recurrencestopconditioncombo',\n                weight   : 100,\n                label    : 'L{RecurrenceEditor.End repeat}',\n                onChange : 'up.onStopRecurrenceFieldChange'\n            },\n            countField : {\n                type     : 'numberfield',\n                weight   : 110,\n                name     : 'count',\n                min      : 2,\n                required : true,\n                disabled : true,\n                label    : ' '\n            },\n            endDateField : {\n                type     : 'datefield',\n                weight   : 120,\n                name     : 'endDate',\n                hidden   : true,\n                disabled : true,\n                label    : ' ',\n                required : true\n            }\n        }\n    };\n\n    updateRecord(record) {\n        super.updateRecord(record);\n\n        const\n            me = this,\n            {\n                frequencyField,\n                daysButtonField,\n                monthDaysButtonField,\n                monthsButtonField,\n                monthDaysRadioField,\n                positionAndDayRadioField,\n                stopRecurrenceField\n            }  = me.widgetMap;\n\n        if (record) {\n            const\n                event     = record.timeSpan,\n                startDate = event?.startDate;\n\n            // some fields default values are calculated based on event \"startDate\" value\n            if (startDate) {\n                // if no \"days\" value provided\n                if (!record.days || !record.days.length) {\n                    daysButtonField.value = [RecurrenceDayRuleEncoder.encodeDay(startDate.getDay())];\n                }\n\n                // if no \"monthDays\" value provided\n                if (!record.monthDays || !record.monthDays.length) {\n                    monthDaysButtonField.value = startDate.getDate();\n                }\n\n                // if no \"months\" value provided\n                if (!record.months || !record.months.length) {\n                    monthsButtonField.value = startDate.getMonth() + 1;\n                }\n            }\n\n            // if the record has both \"days\" & \"positions\" fields set check \"On the\" checkbox\n            if (record.days && record.positions) {\n                positionAndDayRadioField.check();\n                // <remove-on-release>\n                // TODO: if toggleGroup members are not painted automatic unchecking doesn't work\n                // </remove-on-release>\n                if (!me.isPainted) {\n                    monthDaysRadioField.uncheck();\n                }\n            }\n            else {\n                monthDaysRadioField.check();\n                // <remove-on-release>\n                // TODO: if toggleGroup members are not painted automatic unchecking doesn't work\n                // </remove-on-release>\n                if (!me.isPainted) {\n                    positionAndDayRadioField.uncheck();\n                }\n            }\n\n            stopRecurrenceField.recurrence = record;\n        }\n        else {\n            frequencyField.value = 'NONE';\n        }\n    }\n\n    /**\n     * Updates the provided recurrence model with the contained form data.\n     * If recurrence model is not provided updates the last loaded recurrence model.\n     * @internal\n     */\n    syncEventRecord(recurrence) {\n        // get values relevant to the RecurrenceModel (from enabled fields only)\n        const values = this.getValues((w) => w.name in recurrence && !w.disabled);\n\n        // Disabled field does not contribute to values, clear manually\n        if (!('endDate' in values)) {\n            values.endDate = null;\n        }\n        if (!('count' in values)) {\n            values.count = null;\n        }\n\n        recurrence.set(values);\n    }\n\n    toggleStopFields() {\n        const\n            me                           = this,\n            { countField, endDateField } = me.widgetMap;\n\n        switch (me.widgetMap.stopRecurrenceField.value) {\n\n            case 'count' :\n                countField.show();\n                countField.enable();\n                endDateField.hide();\n                endDateField.disable();\n                break;\n\n            case 'date' :\n                countField.hide();\n                countField.disable();\n                endDateField.show();\n                endDateField.enable();\n                break;\n\n            default :\n                countField.hide();\n                endDateField.hide();\n                countField.disable();\n                endDateField.disable();\n        }\n    }\n\n    onMonthDaysRadioFieldChange({ checked }) {\n        const { monthDaysButtonField } = this.widgetMap;\n\n        monthDaysButtonField.disabled = !checked || !this.isWidgetAvailableForFrequency(monthDaysButtonField);\n    }\n\n    onPositionAndDayRadioFieldChange({ checked }) {\n        const { daysCombo, positionsCombo } = this.widgetMap;\n\n        // toggle day & positions combos\n        daysCombo.disabled = positionsCombo.disabled = !checked || !this.isWidgetAvailableForFrequency(daysCombo);\n    }\n\n    onStopRecurrenceFieldChange() {\n        this.toggleStopFields();\n    }\n\n    isWidgetAvailableForFrequency(widget, frequency = this.widgetMap.frequencyField.value) {\n        return !widget.forFrequency || widget.forFrequency.includes(frequency);\n    }\n\n    onFrequencyFieldChange({ value, oldValue, valid }) {\n        const\n            me    = this,\n            items = me.queryAll(w => 'forFrequency' in w),\n            {\n                intervalField,\n                stopRecurrenceField\n            }     = me.widgetMap;\n\n        if (valid && value) {\n            for (let i = 0; i < items.length; i++) {\n                const item = items[i];\n\n                if (me.isWidgetAvailableForFrequency(item, value)) {\n                    item.show();\n                    item.enable();\n                }\n                else {\n                    item.hide();\n                    item.disable();\n                }\n            }\n\n            // Special handling of NONE\n            intervalField.hidden = stopRecurrenceField.hidden = value === 'NONE';\n\n            if (value !== 'NONE') {\n                intervalField.hint = me.L(`L{RecurrenceEditor.${value}intervalUnit}`);\n            }\n\n            // When a non-recurring record is loaded, intervalField is set to empty. We want it to default to 1 here\n            // to not look weird (defaults to 1 on the data layer)\n            if (oldValue === 'NONE' && intervalField.value == null) {\n                intervalField.value = 1;\n            }\n\n            me.toggleFieldsState();\n        }\n    }\n\n    toggleFieldsState() {\n        const\n            me            = this,\n            { widgetMap } = me;\n\n        me.onMonthDaysRadioFieldChange({ checked : widgetMap.monthDaysRadioField.checked });\n        me.onPositionAndDayRadioFieldChange({ checked : widgetMap.positionAndDayRadioField.checked });\n        me.onStopRecurrenceFieldChange();\n    }\n\n    updateLocalization() {\n        // do extra labels translation (not auto-translated yet)\n        const { countField, intervalField, frequencyField } = this.widgetMap;\n\n        countField.hint = this.L('L{RecurrenceEditor.time(s)}');\n\n        if (frequencyField.value && frequencyField.value !== 'NONE') {\n            intervalField.hint = this.L(`L{RecurrenceEditor.${frequencyField.value}intervalUnit}`);\n        }\n\n        super.updateLocalization();\n    }\n\n}\n\n// Register this widget type with its Factory\nRecurrenceEditorPanel.initClass();\n","import GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport TimeSpanMenuBase from './base/TimeSpanMenuBase.js';\nimport DomHelper from '../../Core/helper/DomHelper.js';\nimport Objects from '../../Core/helper/util/Objects.js';\n\n/**\n * @module Scheduler/feature/EventMenu\n */\n\n/**\n * Displays a context menu for events. Items are populated by other features and/or application code.\n *\n * {@inlineexample Scheduler/feature/EventMenu.js}\n *\n * ### Default event menu items\n *\n * Here is the list of menu items provided by the feature and populated by the other features:\n *\n * | Reference       | Text           | Weight | Feature                                  | Description                                                       |\n * |-----------------|----------------|--------|------------------------------------------|-------------------------------------------------------------------|\n * | `editEvent`     | Edit event     | 100    | {@link Scheduler/feature/EventEdit}      | Edit in the event editor. Hidden when read-only                   |\n * | `copyEvent`     | Copy event     | 110    | {@link Scheduler/feature/EventCopyPaste} | Copy event or assignment. Hidden when read-only                   |\n * | `cutEvent `     | Cut event      | 120    | {@link Scheduler/feature/EventCopyPaste} | Cut event or assignment. Hidden when read-only                    |\n * | `deleteEvent`   | Delete event   | 200    | *This feature*                           | Remove event. Hidden when read-only                               |\n * | `unassignEvent` | Unassign event | 300    | *This feature*                           | Unassign event. Hidden when read-only, shown for multi-assignment |\n * | `splitEvent`    | Split event    | 650    | *Scheduler Pro only*                     | Split an event into two segments at the mouse position            |\n * | `renameSegment` | Rename segment | 660    | *Scheduler Pro only*                     | Show an inline editor to rename the segment                       |\n *\n * ### Customizing the menu items\n *\n * The menu items in the Event menu can be customized, existing items can be changed or removed,\n * and new items can be added. This is handled using the `items` config of the feature.\n *\n * Add extra items for all events:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         eventMenu : {\n *             items : {\n *                 extraItem : {\n *                     text : 'Extra',\n *                     icon : 'b-fa b-fa-fw b-fa-flag',\n *                     onItem({eventRecord}) {\n *                         eventRecord.flagged = true;\n *                     }\n *                 }\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * Remove existing items:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         eventMenu : {\n *             items : {\n *                 deleteEvent   : false,\n *                 unassignEvent : false\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * Customize existing item:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         eventMenu : {\n *             items : {\n *                 deleteEvent : {\n *                     text : 'Delete booking'\n *                 }\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * Manipulate existing items for all events or specific events:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         eventMenu : {\n *             // Process items before menu is shown\n *             processItems({eventRecord, items}) {\n *                  // Push an extra item for conferences\n *                  if (eventRecord.type === 'conference') {\n *                      items.showSessionItem = {\n *                          text : 'Show sessions',\n *                          onItem({eventRecord}) {\n *                              // ...\n *                          }\n *                      };\n *                  }\n *\n *                  // Do not show menu for secret events\n *                  if (eventRecord.type === 'secret') {\n *                      return false;\n *                  }\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * Note that the {@link #property-menuContext} is applied to the Menu's `item` event, so your `onItem`\n * handler's single event parameter also contains the following properties:\n *\n * - **source** The {@link Scheduler.view.Scheduler} who's UI was right clicked.\n * - **targetElement** The element right clicked on.\n * - **eventRecord** The {@link Scheduler.model.EventModel event record} clicked on.\n * - **resourceRecord** The {@link Scheduler.model.ResourceModel resource record} clicked on.\n * - **assignmentRecord** The {@link Scheduler.model.AssignmentModel assignment record} clicked on.\n *\n * Full information of the menu customization can be found in the \"Customizing the Event menu, the Schedule menu, and the TimeAxisHeader menu\" guide.\n *\n * This feature is **enabled** by default\n *\n * @extends Scheduler/feature/base/TimeSpanMenuBase\n * @demo Scheduler/eventmenu\n * @classtype eventMenu\n * @feature\n */\nexport default class EventMenu extends TimeSpanMenuBase {\n    //region Config\n\n    static get $name() {\n        return 'EventMenu';\n    }\n\n    /**\n     * @member {Object} menuContext\n     * An informational object containing contextual information about the last activation\n     * of the context menu. The base properties are listed below.\n     * @property {Event} menuContext.domEvent The initiating event.\n     * @property {Event} menuContext.event DEPRECATED: The initiating event.\n     * @property {Number[]} menuContext.point The client `X` and `Y` position of the initiating event.\n     * @property {HTMLElement} menuContext.targetElement The target to which the menu is being applied.\n     * @property {Object<String,MenuItemConfig>} menuContext.items The context menu **configuration** items.\n     * @property {Core.data.Model[]} menuContext.selection The record selection in the client (Grid, Scheduler, Gantt or Calendar).\n     * @property {Scheduler.model.EventModel} menuContext.eventRecord The event record clicked on.\n     * @property {Scheduler.model.ResourceModel} menuContext.resourceRecord The resource record clicked on.\n     * @property {Scheduler.model.AssignmentModel} menuContext.assignmentRecord The assignment record clicked on.\n     * @readonly\n     */\n\n    static get configurable() {\n        return {\n            /**\n             * A function called before displaying the menu that allows manipulations of its items.\n             * Returning `false` from this function prevents the menu being shown.\n             *\n             * ```javascript\n             * features         : {\n             *    eventMenu : {\n             *         processItems({ items, eventRecord, assignmentRecord, resourceRecord }) {\n             *             // Add or hide existing items here as needed\n             *             items.myAction = {\n             *                 text   : 'Cool action',\n             *                 icon   : 'b-fa b-fa-fw b-fa-ban',\n             *                 onItem : () => console.log(`Clicked ${eventRecord.name}`),\n             *                 weight : 1000 // Move to end\n             *             };\n             *\n             *            if (!eventRecord.allowDelete) {\n             *                 items.deleteEvent.hidden = true;\n             *             }\n             *         }\n             *     }\n             * },\n             * ```\n             * @param {Object} context An object with information about the menu being shown\n             * @param {Scheduler.model.EventModel} context.eventRecord The record representing the current event\n             * @param {Scheduler.model.ResourceModel} context.resourceRecord The record representing the current resource\n             * @param {Scheduler.model.AssignmentModel} context.assignmentRecord The assignment record\n             * @param {Object<String,MenuItemConfig>} context.items An object containing the {@link Core.widget.MenuItem menu item} configs keyed by their id\n             * @param {Event} context.event The DOM event object that triggered the show\n             * @config {Function}\n             * @preventable\n             */\n            processItems : null,\n\n            type : 'event'\n\n            /**\n             * This is a preconfigured set of items used to create the default context menu.\n             *\n             * The `items` provided by this feature are listed below. These are the property names which you may\n             * configure:\n             *\n             * - `deleteEvent` Deletes the context event.\n             * - `unassignEvent` Unassigns the context event from the current resource (only added when multi assignment is used).\n             *\n             * To remove existing items, set corresponding keys `null`:\n             *\n             * ```javascript\n             * const scheduler = new Scheduler({\n             *     features : {\n             *         eventMenu : {\n             *             items : {\n             *                 deleteEvent   : null,\n             *                 unassignEvent : null\n             *             }\n             *         }\n             *     }\n             * });\n             * ```\n             *\n             * See the feature config in the above example for details.\n             *\n             * @config {Object<String,MenuItemConfig|Boolean|null>} items\n             */\n        };\n    }\n\n    static get pluginConfig() {\n        const config = super.pluginConfig;\n\n        config.chain.push('populateEventMenu');\n\n        return config;\n    }\n\n    //endregion\n\n    //region Events\n\n    /**\n     * This event fires on the owning Scheduler before the context menu is shown for an event. Allows manipulation of the items\n     * to show in the same way as in `processItems`. Returning `false` from a listener prevents the menu from\n     * being shown.\n     * @event eventMenuBeforeShow\n     * @on-owner\n     * @preventable\n     * @param {Scheduler.view.Scheduler} source\n     * @param {Object<String,MenuItemConfig>} items Menu item configs\n     * @param {Scheduler.model.EventModel} eventRecord Event record for which the menu was triggered\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {Scheduler.model.AssignmentModel} assignmentRecord Assignment record, if assignments are used\n     * @param {HTMLElement} eventElement\n     * @param {MouseEvent} [event] Pointer event which triggered the context menu (if any)\n     */\n\n    /**\n     * This event fires on the owning Scheduler when an item is selected in the context menu.\n     * @event eventMenuItem\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source\n     * @param {Core.widget.MenuItem} item\n     * @param {Scheduler.model.EventModel} eventRecord\n     * @param {Scheduler.model.ResourceModel} resourceRecord\n     * @param {Scheduler.model.AssignmentModel} assignmentRecord Assignment record, if assignments are used\n     * @param {HTMLElement} eventElement\n     */\n\n    /**\n     * This event fires on the owning Scheduler after showing the context menu for an event\n     * @event eventMenuShow\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source\n     * @param {Core.widget.Menu} menu The menu\n     * @param {Scheduler.model.EventModel} eventRecord Event record for which the menu was triggered\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {Scheduler.model.AssignmentModel} assignmentRecord Assignment record, if assignments are used\n     * @param {HTMLElement} eventElement\n     */\n\n    //endregion\n\n    get resourceStore() {\n        // In horizontal mode, we use store (might be a display store), in vertical & calendar we use resourceStore\n        return this.client.isHorizontal ? this.client.store : this.client.resourceStore;\n    }\n\n    getDataFromEvent(event) {\n        const\n            data             = super.getDataFromEvent(event),\n            eventElement     = data.targetElement,\n            { client }       = this,\n            eventRecord      = client.resolveEventRecord(eventElement),\n            // For vertical mode the resource must be resolved from the event\n            resourceRecord   = eventRecord && (client.resolveResourceRecord(eventElement) || this.resourceStore.last)?.$original,\n            assignmentRecord = eventRecord && client.resolveAssignmentRecord(eventElement);\n\n        return Object.assign(data, {\n            eventElement,\n            eventRecord,\n            resourceRecord,\n            assignmentRecord\n        });\n    }\n\n    getTargetElementFromEvent({ target }) {\n        return target.closest(this.client.eventSelector) || target;\n    }\n\n    shouldShowMenu(eventParams) {\n        return eventParams.eventRecord;\n    }\n\n    /**\n     * Shows context menu for the provided event. If record is not rendered (outside of time span/filtered)\n     * menu won't appear.\n     * @param {Scheduler.model.EventModel} eventRecord Event record to show menu for.\n     * @param {Object} [options]\n     * @param {HTMLElement} options.targetElement Element to align context menu to.\n     * @param {MouseEvent} options.event Browser event.\n     * If provided menu will be aligned according to clientX/clientY coordinates.\n     * If omitted, context menu will be centered to event element.\n     */\n    showContextMenuFor(eventRecord, { targetElement, event } = {}) {\n        if (this.disabled) {\n            return;\n        }\n\n        if (!targetElement) {\n            targetElement = this.getElementFromRecord(eventRecord);\n\n            // If record is not rendered, do nothing\n            if (!targetElement) {\n                return;\n            }\n        }\n\n        DomHelper.triggerMouseEvent(targetElement, this.tiggerEvent);\n    }\n\n    getElementFromRecord(record) {\n        return this.client.getElementsFromEventRecord(record)[0];\n    }\n\n    populateEventMenu({ items, eventRecord, assignmentRecord }) {\n        const { client } = this;\n\n        items.deleteEvent = {\n            disabled : eventRecord.readOnly || assignmentRecord?.readOnly,\n            hidden   : client.readOnly\n        };\n        items.unassignEvent = {\n            disabled : eventRecord.readOnly || assignmentRecord?.readOnly,\n            hidden   : client.readOnly || client.eventStore.usesSingleAssignment\n        };\n    }\n\n    // This generates the fixed, unchanging part of the items and is only called once\n    // to generate the baseItems of the feature.\n    // The dynamic parts which are set by populateEventMenu have this merged into them.\n    changeItems(items) {\n        const { client } = this;\n\n        return Objects.merge({\n            deleteEvent : {\n                text   : 'L{SchedulerBase.Delete event}',\n                icon   : 'b-icon b-icon-trash',\n                weight : 200,\n                onItem({ menu, eventRecord }) {\n                    // We must synchronously push focus back into the menu's triggering\n                    // event so that our beforeRemove handlers can move focus onwards\n                    // to the closest remaining event.\n                    // Otherwise, the menu's default hide processing on hide will attempt\n                    // to move focus back to the menu's triggering event which will\n                    // by then have been deleted.\n                    const revertTarget = menu.focusInEvent?.relatedTarget;\n                    if (revertTarget) {\n                        revertTarget.focus();\n                        client.navigator.activeItem = revertTarget;\n                    }\n                    client.removeEvents(client.isEventSelected(eventRecord) ? client.selectedEvents : [eventRecord]);\n                }\n            },\n            unassignEvent : {\n                text   : 'L{SchedulerBase.Unassign event}',\n                icon   : 'b-icon b-icon-unassign',\n                weight : 300,\n                onItem({ menu, eventRecord, resourceRecord }) {\n                    // We must synchronously push focus back into the menu's triggering\n                    // event so that our beforeRemove handlers can move focus onwards\n                    // to the closest remaining event.\n                    // Otherwise, the menu's default hide processing on hide will attempt\n                    // to move focus back to the menu's triggering event which will\n                    // by then have been deleted.\n                    const revertTarget = menu.focusInEvent?.relatedTarget;\n                    if (revertTarget) {\n                        revertTarget.focus();\n                        client.navigator.activeItem = revertTarget;\n                    }\n\n                    if (client.isEventSelected(eventRecord)) {\n                        client.assignmentStore.remove(client.selectedAssignments);\n                    }\n                    else {\n                        eventRecord.unassign(resourceRecord);\n                    }\n                }\n            }\n        }, items);\n    }\n}\n\nEventMenu.featureClass = '';\n\nGridFeatureManager.registerFeature(EventMenu, true, 'Scheduler');\nGridFeatureManager.registerFeature(EventMenu, false, 'ResourceHistogram');\n","import TimeSpanMenuBase from '../../Scheduler/feature/base/TimeSpanMenuBase.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport ObjectHelper from '../../Core/helper/ObjectHelper.js';\nimport DomHelper from '../../Core/helper/DomHelper.js';\n\n/**\n * @module Scheduler/feature/ScheduleMenu\n */\n\n/**\n * Displays a context menu for empty parts of the schedule. Items are populated in the first place\n * by configurations of this Feature, then by other features and/or application code.\n *\n * ### Default scheduler zone menu items\n *\n * The Scheduler menu feature provides only one item:\n *\n * | Reference      | Text        | Weight | Feature                                  | Description                                                           |\n * |----------------|-------------|--------|------------------------------------------|-----------------------------------------------------------------------|\n * | `addEvent`     | Add event   | 100    | *This feature*                           | Add new event at the target time and resource. Hidden when read-only  |\n * | `pasteEvent`   | Paste event | 110    | {@link Scheduler/feature/EventCopyPaste} | Paste event at the target time and resource. Hidden when is read-only |\n *\n * ### Customizing the menu items\n *\n * The menu items in the Scheduler menu can be customized, existing items can be changed or removed,\n * and new items can be added. This is handled using the `items` config of the feature.\n *\n * Add extra item:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         scheduleMenu : {\n *             items : {\n *                 extraItem : {\n *                     text : 'Extra',\n *                     icon : 'b-fa b-fa-fw b-fa-flag',\n *                     onItem({date, resourceRecord, items}) {\n *                         // Custom date based action\n *                     }\n *                 }\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * Remove existing item:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         scheduleMenu : {\n *             items : {\n *                 addEvent : false\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * Customize existing item:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         scheduleMenu : {\n *             items : {\n *                 addEvent : {\n *                     text : 'Create new booking'\n *                 }\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * Manipulate existing items:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         scheduleMenu : {\n *             // Process items before menu is shown\n *             processItems({date, resourceRecord, items}) {\n *                  // Add an extra item for ancient times\n *                  if (date < new Date(2018, 11, 17)) {\n *                      items.modernize = {\n *                          text : 'Modernize',\n *                          ontItem({date}) {\n *                              // Custom date based action\n *                          }\n *                      };\n *                  }\n *\n *                  // Do not show menu for Sundays\n *                  if (date.getDay() === 0) {\n *                      return false;\n *                  }\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * Full information of the menu customization can be found in the \"Customizing the Event menu, the Schedule menu, and the TimeAxisHeader menu\" guide.\n *\n * This feature is **enabled** by default\n *\n * @demo Scheduler/basic\n * @extends Scheduler/feature/base/TimeSpanMenuBase\n * @classtype scheduleMenu\n * @feature\n */\nexport default class ScheduleMenu extends TimeSpanMenuBase {\n    //region Config\n\n    static get $name() {\n        return 'ScheduleMenu';\n    }\n\n    static get defaultConfig() {\n        return {\n            type : 'schedule',\n\n            /**\n             * This is a preconfigured set of items used to create the default context menu.\n             *\n             * The `items` provided by this feature are listed below. These are the predefined property names which you may\n             * configure:\n             *\n             * - `addEvent` Add an event for at the resource and time indicated by the `contextmenu` event.\n             *\n             * To remove existing items, set corresponding keys `null`:\n             *\n             * ```javascript\n             * const scheduler = new Scheduler({\n             *     features : {\n             *         scheduleMenu : {\n             *             items : {\n             *                 addEvent : null\n             *             }\n             *         }\n             *     }\n             * });\n             * ```\n             *\n             * @config {Object<String,MenuItemConfig|Boolean|null>} items\n             */\n            items : null,\n\n            /**\n             * A function called before displaying the menu that allows manipulations of its items.\n             * Returning `false` from this function prevents the menu being shown.\n             *\n             * ```javascript\n             * features         : {\n             *    scheduleMenu : {\n             *         processItems({ items, date, resourceRecord }) {\n             *            // Add or hide existing items here as needed\n             *            items.myAction = {\n             *                text   : 'Cool action',\n             *                icon   : 'b-fa b-fa-cat',\n             *                onItem : () => console.log(`Clicked on ${resourceRecord.name} at ${date}`),\n             *                weight : 1000 // Move to end\n             *            };\n             *\n             *            if (!resourceRecord.allowAdd) {\n             *                items.addEvent.hidden = true;\n             *            }\n             *        }\n             *    }\n             * },\n             * ```\n             * @param {Object} context An object with information about the menu being shown\n             * @param {Scheduler.model.ResourceModel} context.resourceRecord The record representing the current resource\n             * @param {Date} context.date The clicked date\n             * @param {Object<String,MenuItemConfig>} context.items An object containing the\n             * {@link Core.widget.MenuItem menu item} configs keyed by their id\n             * @param {Event} context.event The DOM event object that triggered the show\n             * @config {Function}\n             * @preventable\n             */\n            processItems : null\n        };\n    }\n\n    static get pluginConfig() {\n        const config = super.pluginConfig;\n\n        config.chain.push('populateScheduleMenu');\n\n        return config;\n    }\n\n    //endregion\n\n    //region Events\n\n    /**\n     * This event fires on the owning Scheduler before the context menu is shown for an event. Allows manipulation of the items\n     * to show in the same way as in `processItems`. Returning `false` from a listener prevents the menu from\n     * being shown.\n     * @event scheduleMenuBeforeShow\n     * @on-owner\n     * @preventable\n     * @param {Scheduler.view.Scheduler} source\n     * @param {Object<String,MenuItemConfig>} items Menu item configs\n     * @param {Scheduler.model.EventModel} eventRecord Event record for which the menu was triggered\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {Scheduler.model.AssignmentModel} assignmentRecord Assignment record, if assignments are used\n     * @param {HTMLElement} eventElement\n     */\n\n    /**\n     * This event fires on the owning Scheduler when an item is selected in the context menu.\n     * @event scheduleMenuItem\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source\n     * @param {Core.widget.MenuItem} item\n     * @param {Scheduler.model.EventModel} eventRecord\n     * @param {Scheduler.model.ResourceModel} resourceRecord\n     * @param {Scheduler.model.AssignmentModel} assignmentRecord Assignment record, if assignments are used\n     * @param {HTMLElement} eventElement\n     */\n\n    /**\n     * This event fires on the owning Scheduler after showing the context menu for an event\n     * @event scheduleMenuShow\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source\n     * @param {Core.widget.Menu} menu The menu\n     * @param {Scheduler.model.EventModel} eventRecord Event record for which the menu was triggered\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {Scheduler.model.AssignmentModel} assignmentRecord Assignment record, if assignments are used\n     * @param {HTMLElement} eventElement\n     */\n\n    //endregion\n\n    shouldShowMenu(eventParams) {\n        const\n            { client } = this,\n            {\n                targetElement,\n                resourceRecord\n            } = eventParams,\n            isTimeAxisColumn = client.timeAxisSubGridElement.contains(targetElement);\n\n        return !targetElement.closest(client.eventSelector) && isTimeAxisColumn && !(resourceRecord && resourceRecord.isSpecialRow);\n    }\n\n    getDataFromEvent(event) {\n        // Process event if it wasn't yet processed\n        if (DomHelper.isDOMEvent(event)) {\n            const\n                { client }     = this,\n                cellData       = client.getCellDataFromEvent?.(event),\n                date           = client.getDateFromDomEvent?.(event, 'floor'),\n                // For vertical mode the resource must be resolved from the event\n                resourceRecord = client.resolveResourceRecord(event) || client.isVertical && client.resourceStore.last;\n\n            return ObjectHelper.assign(super.getDataFromEvent(event), cellData, { date, resourceRecord });\n        }\n\n        return event;\n    }\n\n    populateScheduleMenu({ items, resourceRecord, date }) {\n        const { client } = this;\n\n        // Menu can work for ResourceHistogram which doesn't have event store\n        if (!client.readOnly && client.eventStore) {\n            items.addEvent = {\n                text     : 'L{SchedulerBase.Add event}',\n                icon     : 'b-icon b-icon-add',\n                disabled : !resourceRecord || resourceRecord.readOnly || !resourceRecord.isWorkingTime(date),\n                weight   : 100,\n                onItem() {\n                    client.createEvent(date, resourceRecord, client.getRowFor(resourceRecord));\n                }\n            };\n        }\n    }\n}\n\nScheduleMenu.featureClass = '';\n\nGridFeatureManager.registerFeature(ScheduleMenu, true, 'Scheduler');\n","import Base from '../../../Core/Base.js';\nimport '../recurrence/RecurrenceConfirmationPopup.js';\n\n/**\n * @module Scheduler/view/mixin/RecurringEvents\n */\n\n/**\n * A mixin that adds recurring events functionality to the Scheduler.\n *\n * The main purpose of the code in here is displaying a {@link Scheduler.view.recurrence.RecurrenceConfirmationPopup special confirmation}\n * on user mouse dragging/resizing/deleting recurring events and their occurrences.\n *\n * @mixin\n */\nexport default Target => class RecurringEvents extends (Target || Base) {\n    static $name = 'RecurringEvents';\n\n    static configurable = {\n        /**\n         * Enables showing occurrences of recurring events across the scheduler's time axis.\n         *\n         * Enables extra recurrence UI fields in the system-provided event editor (not in Scheduler Pro's task editor).\n         * @config {Boolean}\n         * @default\n         * @category Scheduled events\n         */\n        enableRecurringEvents : false,\n\n        recurrenceConfirmationPopup : {\n            $config : ['lazy'],\n            value   : {\n                type : 'recurrenceconfirmation'\n            }\n        }\n    };\n\n    construct(config) {\n        super.construct(config);\n\n        this.ion({\n            beforeEventDropFinalize   : 'onRecurrableBeforeEventDropFinalize',\n            beforeEventResizeFinalize : 'onRecurrableBeforeEventResizeFinalize',\n            beforeAssignmentDelete    : 'onRecurrableAssignmentBeforeDelete'\n        });\n    }\n\n    changeRecurrenceConfirmationPopup(recurrenceConfirmationPopup, oldRecurrenceConfirmationPopup) {\n        // Widget.reconfigure reither reconfigures an existing instance, or creates a new one, or,\n        // if the configuration is null, destroys the existing instance.\n        const result = this.constructor.reconfigure(oldRecurrenceConfirmationPopup, recurrenceConfirmationPopup, 'recurrenceconfirmation');\n        result.owner = this;\n        return result;\n    }\n\n    findRecurringEventToConfirmDelete(eventRecords) {\n        // show confirmation if we deal with at least one recurring event (or its occurrence)\n        // and if the record is not being edited by event editor (since event editor has its own confirmation)\n        return eventRecords.find(eventRecord => eventRecord.supportsRecurring && (eventRecord.isRecurring || eventRecord.isOccurrence));\n    }\n\n    onRecurrableAssignmentBeforeDelete({ assignmentRecords, context }) {\n        const\n            eventRecords = assignmentRecords.map(as => as.event),\n            eventRecord  = this.findRecurringEventToConfirmDelete(eventRecords);\n\n        if (this.enableRecurringEvents && eventRecord) {\n            this.recurrenceConfirmationPopup.confirm({\n                actionType : 'delete',\n                eventRecord,\n                changerFn() {\n                    context.finalize(true);\n                },\n                cancelFn() {\n                    context.finalize(false);\n                }\n            });\n\n            return false;\n        }\n    }\n\n    onRecurrableBeforeEventDropFinalize({ context }) {\n        if (this.enableRecurringEvents) {\n            const\n                { eventRecords } = context,\n                recurringEvents = eventRecords.filter(eventRecord => eventRecord.supportsRecurring && (eventRecord.isRecurring || eventRecord.isOccurrence));\n\n            if (recurringEvents.length) {\n                context.async = true;\n\n                this.recurrenceConfirmationPopup.confirm({\n                    actionType  : 'update',\n                    eventRecord : recurringEvents[0],\n                    changerFn() {\n                        context.finalize(true);\n                    },\n                    cancelFn() {\n                        context.finalize(false);\n                    }\n                });\n            }\n        }\n    }\n\n    onRecurrableBeforeEventResizeFinalize({ context }) {\n        if (this.enableRecurringEvents) {\n            const\n                { eventRecord } = context,\n                isRecurring     = eventRecord.supportsRecurring && (eventRecord.isRecurring || eventRecord.isOccurrence);\n\n            if (isRecurring) {\n                context.async = true;\n\n                this.recurrenceConfirmationPopup.confirm({\n                    actionType : 'update',\n                    eventRecord,\n                    changerFn() {\n                        context.finalize(true);\n                    },\n                    cancelFn() {\n                        context.finalize(false);\n                    }\n                });\n            }\n        }\n    }\n\n    // Make sure occurrence cache is up-to-date when reassigning events\n    onAssignmentChange({ action, records : assignments }) {\n        if (action !== 'dataset' && Array.isArray(assignments)) {\n            for (const assignment of assignments) {\n                if (assignment.event?.isRecurring && !assignment.event.isBatchUpdating) {\n                    assignment.event.removeOccurrences();\n                }\n            }\n        }\n    }\n\n    /**\n     * Returns occurrences of the provided recurring event across the date range of this Scheduler.\n     * @param  {Scheduler.model.TimeSpan} recurringEvent Recurring event for which occurrences should be retrieved.\n     * @returns {Scheduler.model.TimeSpan[]} Array of the provided timespans occurrences.\n     *\n     * __Empty if the passed event is not recurring, or has no occurrences in the date range.__\n     *\n     * __If the date range encompasses the start point, the recurring event itself will be the first entry.__\n     * @category Data\n     */\n    getOccurrencesFor(recurringEvent) {\n        return this.eventStore.getOccurrencesForTimeSpan(recurringEvent, this.timeAxis.startDate, this.timeAxis.endDate);\n    }\n\n    /**\n     * Internal utility function to remove events. Used when pressing [DELETE] or [BACKSPACE] or when clicking the\n     * delete button in the event editor. Triggers a preventable `beforeEventDelete` or `beforeAssignmentDelete` event.\n     * @param {Scheduler.model.EventModel[]|Scheduler.model.AssignmentModel[]} eventRecords Records to remove\n     * @param {Function} [callback] Optional callback executed after triggering the event but before deletion\n     * @returns {Boolean} Returns `false` if the operation was prevented, otherwise `true`\n     * @internal\n     * @fires beforeEventDelete\n     * @fires beforeAssignmentDelete\n     */\n    async removeEvents(eventRecords, callback = null, popupOwner = this) {\n        const me = this;\n\n        if (!me.readOnly && eventRecords.length) {\n            const context = {\n                finalize(removeRecord = true) {\n                    if (callback) {\n                        callback(removeRecord);\n                    }\n\n                    if (removeRecord !== false) {\n                        if (eventRecords.some(record => record.isOccurrence || record.event?.isOccurrence)) {\n                            eventRecords.forEach(record => record.isOccurrenceAssignment ? record.event.remove() : record.remove());\n                        }\n                        else {\n                            const store = eventRecords[0].isAssignment ? me.assignmentStore : me.eventStore;\n\n                            store.remove(eventRecords);\n                        }\n                    }\n                }\n            };\n\n            let shouldFinalize;\n\n            if (eventRecords[0].isAssignment) {\n                /**\n                 * Fires before an assignment is removed. Can be triggered by user pressing [DELETE] or [BACKSPACE] or\n                 * by the event editor. Can for example be used to display a custom dialog to confirm deletion, in which\n                 * case records should be \"manually\" removed after confirmation:\n                 *\n                 * ```javascript\n                 * scheduler.on({\n                 *    beforeAssignmentDelete({ assignmentRecords, context }) {\n                 *        // Show custom confirmation dialog (pseudo code)\n                 *        confirm.show({\n                 *            listeners : {\n                 *                onOk() {\n                 *                    // Remove the assignments on confirmation\n                 *                    context.finalize(true);\n                 *                },\n                 *                onCancel() {\n                 *                    // do not remove the assignments if \"Cancel\" clicked\n                 *                    context.finalize(false);\n                 *                }\n                 *            }\n                 *        });\n                 *\n                 *        // Prevent default behaviour\n                 *        return false;\n                 *    }\n                 * });\n                 * ```\n                 *\n                 * @event beforeAssignmentDelete\n                 * @param {Scheduler.view.Scheduler} source  The Scheduler instance\n                 * @param {Scheduler.model.EventModel[]} eventRecords  The records about to be deleted\n                 * @param {Object} context  Additional removal context:\n                 * @param {Function} context.finalize  Function to call to finalize the removal.\n                 *      Used to asynchronously decide to remove the records or not. Provide `false` to the function to\n                 *      prevent the removal.\n                 * @param {Boolean} [context.finalize.removeRecords = true]   Provide `false` to the function to prevent\n                 *      the removal.\n                 * @preventable\n                 */\n                shouldFinalize = me.trigger('beforeAssignmentDelete', { assignmentRecords : eventRecords, context });\n            }\n            else {\n                /**\n                 * Fires before an event is removed. Can be triggered by user pressing [DELETE] or [BACKSPACE] or by the\n                 * event editor. Can for example be used to display a custom dialog to confirm deletion, in which case\n                 * records should be \"manually\" removed after confirmation:\n                 *\n                 * ```javascript\n                 * scheduler.on({\n                 *    beforeEventDelete({ eventRecords, context }) {\n                 *        // Show custom confirmation dialog (pseudo code)\n                 *        confirm.show({\n                 *            listeners : {\n                 *                onOk() {\n                 *                    // Remove the events on confirmation\n                 *                    context.finalize(true);\n                 *                },\n                 *                onCancel() {\n                 *                    // do not remove the events if \"Cancel\" clicked\n                 *                    context.finalize(false);\n                 *                }\n                 *            }\n                 *        });\n                 *\n                 *        // Prevent default behaviour\n                 *        return false;\n                 *    }\n                 * });\n                 * ```\n                 *\n                 * @event beforeEventDelete\n                 * @param {Scheduler.view.Scheduler} source  The Scheduler instance\n                 * @param {Scheduler.model.EventModel[]} eventRecords  The records about to be deleted\n                 * @param {Object} context  Additional removal context:\n                 * @param {Function} context.finalize  Function to call to finalize the removal.\n                 *      Used to asynchronously decide to remove the records or not. Provide `false` to the function to\n                 *      prevent the removal.\n                 * @param {Boolean} [context.finalize.removeRecords = true]  Provide `false` to the function to prevent\n                 *      the removal.\n                 * @preventable\n                 */\n                shouldFinalize = me.trigger('beforeEventDelete', { eventRecords, context });\n            }\n\n            if (shouldFinalize !== false) {\n                const recurringEventRecord = eventRecords.find(eventRecord => eventRecord.isRecurring || eventRecord.isOccurrence);\n\n                if (recurringEventRecord) {\n                    me.recurrenceConfirmationPopup.owner = popupOwner;\n                    me.recurrenceConfirmationPopup.confirm({\n                        actionType  : 'delete',\n                        eventRecord : recurringEventRecord,\n                        changerFn() {\n                            context.finalize(true);\n                        },\n                        cancelFn() {\n                            context.finalize(false);\n                        }\n                    });\n                }\n                else {\n                    context.finalize(true);\n                }\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n};\n","/**\n * @module Scheduler/view/mixin/CurrentConfig\n */\n\nconst\n    stores = [\n        'eventStore',\n        'taskStore',\n        'assignmentStore',\n        'resourceStore',\n        'dependencyStore',\n        'timeRangeStore',\n        'resourceTimeRangeStore'\n    ],\n    inlineProperties = [\n        'events',\n        'tasks',\n        'resources',\n        'assignments',\n        'dependencies',\n        'timeRanges',\n        'resourceTimeRanges'\n    ];\n\n/**\n * Mixin that makes sure inline data & crud manager data are removed from current config for products using a project.\n * The data is instead inlined in the project (by ProjectModel.js)\n *\n * @mixin\n * @private\n */\nexport default Target => class CurrentConfig extends Target {\n\n    static get $name() {\n        return 'CurrentConfig';\n    }\n\n    preProcessCurrentConfigs(configs) {\n        // Remove inline data on the component\n        for (const prop of inlineProperties) {\n            delete configs[prop];\n        }\n\n        super.preProcessCurrentConfigs(configs);\n    }\n\n    // This function is not meant to be called by any code other than Base#getCurrentConfig().\n    getCurrentConfig(options) {\n        const\n            project = this.project.getCurrentConfig(options),\n            result = super.getCurrentConfig(options);\n\n        // Force project with inline data\n        if (project) {\n            result.project = project;\n\n            const { crudManager } = result;\n\n            // Transfer crud store configs to project (mainly fields)\n            if (crudManager) {\n                for (const store of stores) {\n                    if (crudManager[store]) {\n                        project[store] = crudManager[store];\n                    }\n                }\n            }\n\n            if (Object.keys(project).length === 0) {\n                delete result.project;\n            }\n        }\n\n        // Store (resource store) data is included in project\n        delete result.data;\n\n        // Remove CrudManager, since data will be placed inline\n        delete result.crudManager;\n\n        return result;\n    }\n\n    get widgetClass() {}\n};\n","import Base from '../../../Core/Base.js';\nimport Navigator from '../../../Core/helper/util/Navigator.js';\nimport Delayable from '../../../Core/mixin/Delayable.js';\nimport Location from '../../../Grid/util/Location.js';\n\n/**\n * @module Scheduler/view/mixin/EventNavigation\n */\n\nconst\n    preventDefault  = e => e.preventDefault(),\n    isArrowKey = {\n        ArrowRight : 1,\n        ArrowLeft  : 1,\n        ArrowUp    : 1,\n        ArrowDown  : 1\n    },\n    animate100 = {\n        animate : 100\n    },\n    emptyObject = Object.freeze({});\n\n/**\n * Mixin that tracks event or assignment selection by clicking on one or more events in the scheduler.\n * @mixin\n */\nexport default Target => class EventNavigation extends Delayable(Target || Base) {\n    static get $name() {\n        return 'EventNavigation';\n    }\n\n    //region Default config\n\n    static get configurable() {\n        return {\n            /**\n             * A config object to use when creating the {@link Core.helper.util.Navigator}\n             * to use to perform keyboard navigation in the timeline.\n             * @config {NavigatorConfig}\n             * @default\n             * @category Misc\n             * @internal\n             */\n            navigator : {\n                allowCtrlKey   : true,\n                scrollSilently : true,\n                keys           : {\n                    Space     : 'onEventSpaceKey',\n                    Enter     : 'onEventEnterKey',\n                    Delete    : 'onDeleteKey',\n                    Backspace : 'onDeleteKey',\n                    ArrowUp   : 'onArrowUpKey',\n                    ArrowDown : 'onArrowDownKey',\n                    Escape    : 'onEscapeKey',\n\n                    // These are processed by GridNavigation's handlers\n                    Tab         : 'onTab',\n                    'SHIFT+Tab' : 'onShiftTab'\n                }\n            },\n\n            isNavigationKey : {\n                ArrowDown  : 1,\n                ArrowUp    : 1,\n                ArrowLeft  : 1,\n                ArrowRight : 1\n            }\n        };\n    }\n\n    static get defaultConfig() {\n        return {\n            /**\n             * A CSS class name to add to focused events.\n             * @config {String}\n             * @default\n             * @category CSS\n             * @private\n             */\n            focusCls : 'b-active',\n\n            /**\n             * Allow using [Delete] and [Backspace] to remove events/assignments\n             * @config {Boolean}\n             * @default\n             * @category Misc\n             */\n            enableDeleteKey : true,\n\n            // Number in milliseconds to buffer handlers execution. See `Delayable.throttle` function docs.\n            onDeleteKeyBuffer      : 500,\n            navigatePreviousBuffer : 200,\n            navigateNextBuffer     : 200,\n\n            testConfig : {\n                onDeleteKeyBuffer : 1\n            }\n        };\n    }\n\n    //endregion\n\n    //region Events\n\n    /**\n     * Fired when a user gesture causes the active item to change.\n     * @event navigate\n     * @param {Event} event The browser event which instigated navigation. May be a click or key or focus event.\n     * @param {HTMLElement|null} item The newly active item, or `null` if focus moved out.\n     * @param {HTMLElement|null} oldItem The previously active item, or `null` if focus is moving in.\n     */\n\n    //endregion\n\n    construct(config) {\n        const me = this;\n\n        me.isInTimeAxis = me.isInTimeAxis.bind(me);\n        me.onDeleteKey = me.throttle(me.onDeleteKey, me.onDeleteKeyBuffer, me);\n\n        super.construct(config);\n    }\n\n    changeNavigator(navigator) {\n        const me = this;\n\n        me.getConfig('subGridConfigs');\n\n        return new Navigator(me.constructor.mergeConfigs({\n            ownerCmp         : me,\n            target           : me.timeAxisSubGridElement,\n            processEvent     : me.processEvent,\n            itemSelector     : `.${me.eventCls}-wrap`,\n            focusCls         : me.focusCls,\n            navigatePrevious : me.throttle(me.navigatePrevious, { delay : me.navigatePreviousBuffer, throttled : preventDefault }),\n            navigateNext     : me.throttle(me.navigateNext, { delay : me.navigateNextBuffer, throttled : preventDefault })\n        }, navigator));\n    }\n\n    doDestroy() {\n        this.navigator.destroy();\n        super.doDestroy();\n    }\n\n    isInTimeAxis(record) {\n        // If event is hidden by workingTime configs, horizontal mapper would raise a flag on instance meta\n        // We still need to check if time span is included in axis\n        return !record.instanceMeta(this).excluded && this.timeAxis.isTimeSpanInAxis(record);\n    }\n\n    onElementKeyDown(keyEvent) {\n        const\n            me              = this,\n            { navigator }   = me;\n\n        // If we're focused in the time axis, and *not* on an event, then ENTER means\n        // jump down into the first visible assignment in the cell.\n        if (me.focusedCell?.rowIndex !== -1 && me.focusedCell?.column === me.timeAxisColumn && !keyEvent.target.closest(navigator.itemSelector) && keyEvent.key === 'Enter') {\n            const firstAssignment = me.getFirstVisibleAssignment();\n            if (firstAssignment) {\n                me.navigateTo(firstAssignment, {\n                    uiEvent : keyEvent\n                });\n                return false;\n            }\n        }\n        else {\n            super.onElementKeyDown?.(keyEvent);\n        }\n    }\n\n    getFirstVisibleAssignment(location = this.focusedCell) {\n        const\n            me = this,\n            {\n                currentOrientation,\n                rowManager,\n                eventStore\n            } = me;\n\n        if (me.isHorizontal) {\n            let renderedEvents = currentOrientation.rowMap.get(rowManager.getRow(location.rowIndex));\n\n            if (renderedEvents?.length) {\n                return renderedEvents[0]?.elementData.assignmentRecord;\n            }\n            else {\n                renderedEvents = currentOrientation.resourceMap.get(location.id)?.eventsData;\n                if (renderedEvents?.length) {\n                    // When events are gathered from resource, we need to check they're available\n                    return renderedEvents.filter(e => eventStore.isAvailable(e.eventRecord))[0]?.assignmentRecord;\n                }\n            }\n        }\n        else {\n            const\n                firstResource = [...currentOrientation.resourceMap.values()][0],\n                renderedEvents = firstResource && Object.values(firstResource);\n\n            if (renderedEvents?.length) {\n                return renderedEvents.filter(e => eventStore.isAvailable(e.renderData.eventRecord))[0].renderData.assignmentRecord;\n            }\n        }\n    }\n\n    onGridBodyFocusIn(focusEvent) {\n        const isGridCellFocus = focusEvent.target.closest(this.focusableSelector);\n\n        // Event navigation only has a say when navigation is inside the TimeAxisSubGrid\n        if (this.timeAxisSubGridElement.contains(focusEvent.target)) {\n            const\n                me                  = this,\n                { navigationEvent } = me,\n                { target }          = focusEvent,\n                eventFocus          = target.closest(me.navigator.itemSelector),\n                destinationCell     = eventFocus ? me.normalizeCellContext({\n                    rowIndex : me.isVertical ? 0\n                        : me.resourceStore.indexOf(me.resolveResourceRecord(target)),\n                    column : me.timeAxisColumn,\n                    target\n                }) : new Location(target);\n\n            // Don't take over what the event navigator does if it's doing event navigation.\n            // Just silently cache our actionable location.\n            if (eventFocus) {\n                const { _focusedCell } = me;\n\n                me._focusedCell = destinationCell;\n                me.onCellNavigate?.(me, _focusedCell, destinationCell, navigationEvent, true);\n                return;\n            }\n\n            // Depending on how we got here, try to focus the first event in the cell *if we're in a cell*.\n            if (isGridCellFocus && (!navigationEvent || isArrowKey[navigationEvent.key])) {\n                const firstAssignment = me.getFirstVisibleAssignment(destinationCell);\n                if (firstAssignment) {\n                    me.navigateTo(firstAssignment, {\n                        // Only change scroll if focus came from key press\n                        scrollIntoView : Boolean(navigationEvent && navigationEvent.type !== 'mousedown'),\n                        uiEvent        : navigationEvent || focusEvent\n                    });\n                    return;\n                }\n            }\n        }\n\n        // Grid-level focus movement, let superclass handle it.\n        if (isGridCellFocus) {\n            super.onGridBodyFocusIn(focusEvent);\n        }\n    }\n\n    /*\n     * Override of GridNavigation#focusCell method to handle the TimeAxisColumn.\n     * Not needed until we implement full keyboard accessibility.\n     */\n    accessibleFocusCell(cellSelector, options) {\n        const me                     = this;\n\n        cellSelector = me.normalizeCellContext(cellSelector);\n\n        if (cellSelector.columnId === me.timeAxisColumn.id) {\n            // <remove-on-release>\n\n            // const lastFocusedCell        = me.lastFocusedCell = me._focusedCell,\n            //     lastFocusedCellElement = lastFocusedCell && me.getCell(lastFocusedCell),\n            //     newCell = me.getCell(cellSelector),\n            //     // Flag if the lastFocusedCellElement is DOCUMENT_POSITION_FOLLOWING newCell\n            //     backwards = !!(lastFocusedCellElement && (newCell.compareDocumentPosition(lastFocusedCellElement) & 4));\n\n            // // Navigating into the Scheduler, need to enable this back (for situations where we know focus was requested as a result of a keyboard input)...\n            // let newEvent = me.getRecordFromElement(newCell);\n\n            // me._focusedCell = cellSelector;\n\n            // // Scheduler where row is a Resource which might have many events\n            // // TODO: https://app.assembla.com/spaces/bryntum/tickets/6526 this class should\n            // // not know about Gantt.\n            // if (!newEvent.isTask) {\n            //     const resourceEvents = newEvent.getEvents().filter(me.isInTimeAxis).sort(sortByStartDate);\n            //     newEvent = resourceEvents[backwards ? resourceEvents.length - 1 : 0];\n            // }\n\n            // options.event.eventRecord = newEvent;\n\n            // if (newEvent && me.activeEvent !== newEvent) {\n            //     lastFocusedCellElement && lastFocusedCellElement.classList.remove('b-focused');\n            //     me.scrollResourceEventIntoView(me.store.getById(cellSelector.id), newEvent, {\n            //         animate : 100\n            //     }).then(() => {\n            //         me.activeEvent = newEvent;\n            //     });\n            // }\n\n            // </remove-on-release>\n        }\n        else {\n            return super.focusCell(cellSelector, options);\n        }\n    }\n\n    // Interface method to extract the navigated to record from a populated 'navigate' event.\n    // Gantt, Scheduler and Calendar handle event differently, adding different properties to it.\n    // This method is meant to be overridden to return correct target from event\n    normalizeTarget(event) {\n        return event.assignmentRecord;\n    }\n\n    getPrevious(assignmentRecord, isDelete) {\n        const\n            me                     = this,\n            { resourceStore }      = me,\n            { eventSorter }        = me.currentOrientation,\n            // start/end dates are required to limit time span to look at in case recurrence feature is enabled\n            { startDate, endDate } = me.timeAxis,\n            eventRecord            = assignmentRecord.event,\n            resourceEvents         = me.eventStore\n                .getEvents({\n                    resourceRecord : assignmentRecord.resource,\n                    startDate,\n                    endDate\n                })\n                .filter(this.isInTimeAxis)\n                .sort(eventSorter);\n\n        let resourceRecord = assignmentRecord.resource,\n            previousEvent  = resourceEvents[resourceEvents.indexOf(eventRecord) - 1];\n\n        // At first event for resource, traverse up the resource store.\n        if (!previousEvent) {\n            // If we are deleting an event, skip other instances of the event which we may encounter\n            // due to multi-assignment.\n            for (\n                let rowIdx = resourceStore.indexOf(resourceRecord) - 1;\n                (!previousEvent || (isDelete && previousEvent === eventRecord)) && rowIdx >= 0;\n                rowIdx--\n            ) {\n                resourceRecord = resourceStore.getAt(rowIdx);\n                const events = me.eventStore\n                    .getEvents({\n                        resourceRecord,\n                        startDate,\n                        endDate\n                    })\n                    .filter(me.isInTimeAxis)\n                    .sort(eventSorter);\n\n                previousEvent = events.length && events[events.length - 1];\n            }\n        }\n\n        return me.assignmentStore.getAssignmentForEventAndResource(previousEvent, resourceRecord);\n    }\n\n    navigatePrevious(keyEvent) {\n        const\n            me                 = this,\n            previousAssignment = me.getPrevious(me.normalizeTarget(keyEvent));\n\n        keyEvent.preventDefault();\n        if (previousAssignment) {\n            if (!keyEvent.ctrlKey) {\n                me.clearEventSelection();\n            }\n            return me.navigateTo(previousAssignment, {\n                uiEvent : keyEvent\n            });\n        }\n\n        // No previous event/task, fall back to Grid's handling of this gesture\n        return me.doGridNavigation(keyEvent);\n    }\n\n    getNext(assignmentRecord, isDelete) {\n        const\n            me                     = this,\n            { resourceStore }      = me,\n            { eventSorter }        = me.currentOrientation,\n            // start/end dates are required to limit time span to look at in case recurrence feature is enabled\n            { startDate, endDate } = me.timeAxis,\n            eventRecord            = assignmentRecord.event,\n            resourceEvents         = me.eventStore\n                .getEvents({\n                    resourceRecord : assignmentRecord.resource,\n                    // start/end are required to limit time\n                    startDate,\n                    endDate\n                })\n                .filter(this.isInTimeAxis)\n                .sort(eventSorter);\n\n        let resourceRecord = assignmentRecord.resource,\n            nextEvent      = resourceEvents[resourceEvents.indexOf(eventRecord) + 1];\n\n        // At last event for resource, traverse down the resource store\n        if (!nextEvent) {\n            // If we are deleting an event, skip other instances of the event which we may encounter\n            // due to multi-assignment.\n            for (let rowIdx = resourceStore.indexOf(resourceRecord) + 1; (!nextEvent || (isDelete && nextEvent === eventRecord)) && rowIdx < resourceStore.count; rowIdx++) {\n                resourceRecord = resourceStore.getAt(rowIdx);\n                const events = me.eventStore\n                    .getEvents({\n                        resourceRecord,\n                        startDate,\n                        endDate\n                    })\n                    .filter(me.isInTimeAxis)\n                    .sort(eventSorter);\n\n                nextEvent = events[0];\n            }\n        }\n\n        return me.assignmentStore.getAssignmentForEventAndResource(nextEvent, resourceRecord);\n    }\n\n    navigateNext(keyEvent) {\n        const\n            me             = this,\n            nextAssignment = me.getNext(me.normalizeTarget(keyEvent));\n\n        keyEvent.preventDefault();\n        if (nextAssignment) {\n            if (!keyEvent.ctrlKey) {\n                me.clearEventSelection();\n            }\n            return me.navigateTo(nextAssignment, {\n                uiEvent : keyEvent\n            });\n        }\n\n        // No next event/task, fall back to Grid's handling of this gesture\n        return me.doGridNavigation(keyEvent);\n    }\n\n    doGridNavigation(keyEvent) {\n        if (!keyEvent.handled && keyEvent.key.indexOf('Arrow') === 0) {\n            this[`navigate${keyEvent.key.substring(5)}ByKey`](keyEvent);\n        }\n    }\n\n    async navigateTo(targetAssignment, {\n        scrollIntoView = true,\n        uiEvent        = {}\n    } = emptyObject) {\n        const\n            me                      = this,\n            { navigator }           = me,\n            { skipScrollIntoView }  = navigator;\n\n        if (targetAssignment) {\n            if (scrollIntoView) {\n                // No key processing during scroll\n                navigator.disabled = true;\n                await me.scrollAssignmentIntoView(targetAssignment, animate100);\n                navigator.disabled = false;\n            }\n            else {\n                navigator.skipScrollIntoView = true;\n            }\n\n            // Panel can be destroyed before promise is resolved\n            // Perform a sanity check to make sure element is still in the DOM (syncIdMap actually).\n            if (!me.isDestroyed && this.getElementFromAssignmentRecord(targetAssignment)) {\n                me.activeAssignment = targetAssignment;\n                navigator.skipScrollIntoView = skipScrollIntoView;\n                navigator.trigger('navigate', {\n                    event : uiEvent,\n                    item  : me.getElementFromAssignmentRecord(targetAssignment).closest(navigator.itemSelector)\n                });\n            }\n        }\n    }\n\n    set activeAssignment(assignmentRecord) {\n        const assignmentEl = this.getElementFromAssignmentRecord(assignmentRecord, true);\n\n        if (assignmentEl) {\n            this.navigator.activeItem = assignmentEl;\n        }\n    }\n\n    get activeAssignment() {\n        const { activeItem } = this.navigator;\n\n        if (activeItem) {\n            return this.resolveAssignmentRecord(activeItem);\n        }\n    }\n\n    get previousActiveEvent() {\n        const { previousActiveItem } = this.navigator;\n\n        if (previousActiveItem) {\n            return this.resolveEventRecord(previousActiveItem);\n        }\n    }\n\n    processEvent(keyEvent) {\n        const\n            me           = this,\n            eventElement = keyEvent.target.closest(me.eventSelector);\n\n        if (!me.navigator.disabled && eventElement) {\n            keyEvent.assignmentRecord = me.resolveAssignmentRecord(eventElement);\n            keyEvent.eventRecord = me.resolveEventRecord(eventElement);\n            keyEvent.resourceRecord = me.resolveResourceRecord(eventElement);\n        }\n\n        return keyEvent;\n    }\n\n    onDeleteKey(keyEvent) {\n        const me = this;\n        if (!me.readOnly && me.enableDeleteKey) {\n            const records = me.eventStore.usesSingleAssignment ? me.selectedEvents : me.selectedAssignments;\n\n            me.removeEvents(records.filter(r => !r.readOnly));\n        }\n    }\n\n    onArrowUpKey(keyEvent) {\n        this.focusCell({\n            rowIndex : this.focusedCell.rowIndex - 1,\n            column   : this.timeAxisColumn\n        });\n        keyEvent.handled = true;\n    }\n\n    onArrowDownKey(keyEvent) {\n        if (this.focusedCell.rowIndex < this.resourceStore.count - 1) {\n            this.focusCell({\n                rowIndex : this.focusedCell.rowIndex + 1,\n                column   : this.timeAxisColumn\n            });\n            keyEvent.handled = true;\n        }\n    }\n\n    onEscapeKey(keyEvent) {\n        if (!keyEvent.target.closest('.b-dragging')) {\n            this.focusCell({\n                rowIndex : this.focusedCell.rowIndex,\n                column   : this.timeAxisColumn\n            });\n            keyEvent.handled = true;\n        }\n    }\n\n    onEventSpaceKey(keyEvent) {\n        // Empty, to be chained by features\n    }\n\n    onEventEnterKey(keyEvent) {\n        // Empty, to be chained by features\n    }\n\n    get isActionableLocation() {\n        // Override from grid if the Navigator's location is an event (or task if we're in Gantt)\n        // Being focused on a task/event means that it's *not* actionable. It's not valid to report\n        // that we're \"inside\" the cell in a TimeLine, so ESC must not attempt to focus the cell.\n        if (!this.navigator.activeItem) {\n            return super.isActionableLocation;\n        }\n    }\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n};\n"],"names":["locale","localeName","localeDesc","localeCode","Object","newEvent","ResourceInfoColumn","eventCountText","data","Dependencies","from","to","valid","invalid","DependencyType","SS","SF","FS","FF","StartToStart","StartToEnd","EndToStart","EndToEnd","short","long","DependencyEdit","From","To","Type","Lag","Save","Delete","Cancel","EventEdit","Name","Resource","Start","End","Repeat","EventDrag","eventOverlapsExisting","noDropOutsideTimeline","SchedulerBase","TimeAxisHeaderMenu","pickZoomLevel","activeDateRange","startText","endText","todayText","EventCopyPaste","copyEvent","cutEvent","pasteEvent","EventFilter","filterEvents","byName","TimeRanges","showCurrentTimeLine","PresetManager","secondAndMinute","displayDateFormat","name","minuteAndHour","topDateFormat","hourAndDay","middleDateFormat","day","week","dayAndWeek","dayAndMonth","weekAndDay","weekAndMonth","weekAndDayLetter","weekDateAndMonth","monthAndYear","year","manyYears","RecurrenceConfirmationPopup","Yes","width","RecurrenceLegend","Daily","Weekly on {1}","days","Monthly on {1}","Yearly on {1} of {2}","months","Every {0} days","interval","Every {0} weeks on {1}","Every {0} months on {1}","Every {0} years on {1} of {2}","position1","position2","position3","position4","position5","weekday","daysFormat","position","RecurrenceEditor","Frequency","Every","DAILYintervalUnit","WEEKLYintervalUnit","MONTHLYintervalUnit","YEARLYintervalUnit","Each","RecurrenceDaysCombo","RecurrencePositionsCombo","RecurrenceStopConditionCombo","Never","After","RecurrenceFrequencyCombo","None","Weekly","Monthly","Yearly","RecurrenceCombo","Custom","Summary","date","ScheduleRangeCombo","completeview","currentview","daterange","completedata","SchedulerExportDialog","ExcelExporter","CrudManagerView","serverResponseLabel","DurationColumn","Duration","LocaleHelper","publishLocale","Target","AttachToProjectMixin","$name","afterConstruct","me","projectHolder","client","grid","project","projectSubscribers","push","attachToProject","attachToResourceStore","resourceStore","attachToEventStore","eventStore","attachToAssignmentStore","assignmentStore","attachToDependencyStore","dependencyStore","attachToCalendarManagerStore","calendarManagerStore","detachListeners","_project","store","engineStoreNames","ProjectConsumer","Base","declarable","configurable","projectModelClass","ProjectModel","destroyStores","startConfigure","config","getConfig","changeProject","oldProject","projectStoreNames","projectDataNames","constructor","projectCallbacks","Set","buildingProjectConfig","isModel","isConfiguring","crudManager","isCrudManager","storeName","dataName","_sharedProject","sharedProject","isEventStoreMixin","autoLoad","count","delayAutoLoad","some","chain","updateProject","projectListeners","_crudManager","_project$stm","thisObj","ion","forEach","subscriber","load","stm","restoringStart","restoringStop","trigger","changeCrudManager","assign","onProjectDataReady","whenVisible","size","callback","clear","onProjectRestoringStart","rawQueue","length","suspendRefresh","onProjectRestoringStop","resumeRefresh","onBeforeTimeZoneChange","onTimeZoneChange","timeZone","oldTimeZone","startDate","timeAxis","TimeZoneHelper","fromTimeZone","toTimeZone","whenProjectReady","isEngineReady","add","_this$project$isEngin","_this$project","Boolean","call","doDestroy","isDestroyed","destroy","projectStores","map","keys","reduce","result","setupProjectStores","cls","meta","dataReady","change","beforeTimeZoneChange","timeZoneChange","storeConfigs","previousDataName","defineProperty","class","prototype","get","_this$project$storeNa","records","createDataUpdater","createStoreDescriptor","setupConfigs","StringHelper","capitalize","listeners","clsProto","storeNameCap","oldStore","_store","storeProject","isProjectModel","initializingProject","_subscriber","relayProjectDataChange","event","isExpand","isCollapse","fieldMap","expanded","persist","source","widgetClass","ClockTemplate","defaultConfig","minuteHeight","minuteTop","hourHeight","hourTop","handLeft","div","document","createElement","scheduler","template","mode","DateHelper","format","encodeHtml","text","generateContent","innerHTML","updateDateIndicator","el","hourIndicatorEl","querySelector","minuteIndicatorEl","BrowserHelper","isBrowserEnv","style","transform","getHours","getMinutes","_mode","unitLessThanDay","compareUnits","timeAxisViewModel","timeResolution","unit","formatContainsHourInfo","_template","_$name","TaskEditStm","captureStm","startTransaction","getStm","hasStmCapture","stmInitiallyDisabled","disabled","stmInitiallyAutoRecord","autoRecord","enable","isRecording","stopTransaction","startStmTransaction","commitStmTransaction","Error","enabled","resetQueue","rejectStmTransaction","_stm$transaction","transaction","rejectTransaction","enableStm","disableStm","disable","freeStm","commitOrReject","TimeSpanMenuBase","ContextMenuBase","Popup","type","localizableProperties","align","autoShow","autoClose","closeAction","modal","centered","scrollAction","constrainTo","globalThis","draggable","closable","floating","eventRecord","bbar","defaults","localeClass","items","changeSingleButton","weight","color","onClick","changeMultipleButton","cancelButton","widgetMap","onChangeMultipleButtonClick","processMultipleRecords","hide","onChangeSingleButtonClick","processSingleRecord","onCancelButtonClick","cancelFn","onRecurrenceClose","confirm","prop","updatePopupContent","show","actionType","isMaster","isRecurring","L","html","title","changerFn","finalizerFn","beginBatch","endBatch","_firstOccurrence","firstOccurrence","recurrence","forEachOccurrence","occurrence","isFirst","index","convertToRealEvent","recurrenceRule","updateLocalization","initClass","Combo","editable","displayField","valueField","localizeDisplayFields","addNone","buildItems","value","allDaysValueAsArray","allDaysValue","join","defaultValue","workingDaysValue","filter","nonWorkingDays","nonWorkingDaysValue","splitCls","_weekDays","weekDays","concat","weekStartDay","dayNames","getDayNames","RecurrenceDayRuleEncoder","encodeDay","slice","Array","isArray","findRecord","RecurrenceDaysButtonGroup","ButtonGroup","toggleable","construct","columns","updateItemText","item","decodeDay","getDayName","substring","__items","onLocaleChange","widgetClassList","classList","RecurrenceMonthDaysButtonGroup","minValue","maxValue","RecurrenceMonthsButtonGroup","getMonthNames","getMonthName","placeholder","_recurrence","endDate","maxPosition","buildDayNumbers","ArrayHelper","populate","i","split","parseInt","RecurrenceEditorPanel","Panel","record","frequencyField","label","onChange","intervalField","min","required","daysButtonField","forFrequency","monthDaysRadioField","toggleGroup","checked","monthDaysButtonField","monthsButtonField","positionAndDayRadioField","positionsCombo","daysCombo","flex","stopRecurrenceField","countField","endDateField","hidden","updateRecord","timeSpan","getDay","monthDays","getDate","getMonth","positions","check","isPainted","uncheck","syncEventRecord","values","getValues","w","set","toggleStopFields","onMonthDaysRadioFieldChange","isWidgetAvailableForFrequency","onPositionAndDayRadioFieldChange","onStopRecurrenceFieldChange","widget","frequency","includes","onFrequencyFieldChange","oldValue","queryAll","hint","toggleFieldsState","EventMenu","processItems","pluginConfig","isHorizontal","getDataFromEvent","_ref","eventElement","targetElement","resolveEventRecord","resourceRecord","resolveResourceRecord","last","$original","assignmentRecord","resolveAssignmentRecord","getTargetElementFromEvent","target","closest","eventSelector","shouldShowMenu","eventParams","showContextMenuFor","getElementFromRecord","DomHelper","triggerMouseEvent","tiggerEvent","getElementsFromEventRecord","populateEventMenu","deleteEvent","readOnly","unassignEvent","usesSingleAssignment","changeItems","Objects","merge","icon","onItem","menu","_menu$focusInEvent","revertTarget","focusInEvent","relatedTarget","focus","navigator","activeItem","removeEvents","isEventSelected","selectedEvents","_menu$focusInEvent2","remove","selectedAssignments","unassign","featureClass","GridFeatureManager","registerFeature","ScheduleMenu","isTimeAxisColumn","timeAxisSubGridElement","contains","isSpecialRow","isDOMEvent","_client$getCellDataFr","_client$getDateFromDo","cellData","getCellDataFromEvent","getDateFromDomEvent","isVertical","ObjectHelper","populateScheduleMenu","addEvent","isWorkingTime","createEvent","getRowFor","RecurringEvents","enableRecurringEvents","recurrenceConfirmationPopup","$config","beforeEventDropFinalize","beforeEventResizeFinalize","beforeAssignmentDelete","changeRecurrenceConfirmationPopup","oldRecurrenceConfirmationPopup","reconfigure","owner","findRecurringEventToConfirmDelete","eventRecords","find","supportsRecurring","isOccurrence","onRecurrableAssignmentBeforeDelete","assignmentRecords","context","as","finalize","onRecurrableBeforeEventDropFinalize","recurringEvents","async","onRecurrableBeforeEventResizeFinalize","onAssignmentChange","action","assignments","assignment","_assignment$event","isBatchUpdating","removeOccurrences","getOccurrencesFor","recurringEvent","getOccurrencesForTimeSpan","popupOwner","removeRecord","_record$event","isOccurrenceAssignment","isAssignment","shouldFinalize","recurringEventRecord","stores","inlineProperties","CurrentConfig","preProcessCurrentConfigs","configs","getCurrentConfig","options","preventDefault","e","isArrowKey","ArrowRight","ArrowLeft","ArrowUp","ArrowDown","animate100","animate","emptyObject","freeze","EventNavigation","Delayable","allowCtrlKey","scrollSilently","Space","Enter","Backspace","Escape","Tab","isNavigationKey","focusCls","enableDeleteKey","onDeleteKeyBuffer","navigatePreviousBuffer","navigateNextBuffer","testConfig","isInTimeAxis","bind","onDeleteKey","throttle","changeNavigator","Navigator","mergeConfigs","ownerCmp","processEvent","itemSelector","eventCls","navigatePrevious","delay","throttled","navigateNext","instanceMeta","excluded","isTimeSpanInAxis","onElementKeyDown","keyEvent","_me$focusedCell","_me$focusedCell2","focusedCell","rowIndex","column","timeAxisColumn","key","firstAssignment","getFirstVisibleAssignment","navigateTo","uiEvent","_super$onElementKeyDo","location","currentOrientation","rowManager","_renderedEvents","renderedEvents","rowMap","getRow","_renderedEvents$","elementData","_currentOrientation$r","_renderedEvents2","resourceMap","id","eventsData","_renderedEvents$filte","isAvailable","firstResource","renderData","onGridBodyFocusIn","focusEvent","isGridCellFocus","focusableSelector","navigationEvent","eventFocus","destinationCell","normalizeCellContext","indexOf","Location","_me$onCellNavigate","_focusedCell","onCellNavigate","scrollIntoView","accessibleFocusCell","cellSelector","columnId","focusCell","normalizeTarget","getPrevious","isDelete","eventSorter","resourceEvents","getEvents","resource","sort","previousEvent","rowIdx","getAt","events","getAssignmentForEventAndResource","previousAssignment","ctrlKey","clearEventSelection","doGridNavigation","getNext","nextEvent","nextAssignment","handled","targetAssignment","skipScrollIntoView","scrollAssignmentIntoView","getElementFromAssignmentRecord","activeAssignment","assignmentEl","previousActiveEvent","previousActiveItem","r","onArrowUpKey","onArrowDownKey","onEscapeKey","onEventSpaceKey","onEventEnterKey","isActionableLocation"],"mappings":"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OAAO,EAAG1G,SAAS,CAAC6G,wBAAwB,CAACH,OAAAA;AAAQ,KAAC,CAAC,CAAA;IAC7FrV,EAAE,CAACmX,2BAA2B,EAAE,CAAA;AACpC,GAAA;AACAxG,EAAAA,kBAAkBA,GAAG;AACjB;IACA,MAAM;MAAEkF,UAAU;MAAEf,aAAa;AAAEH,MAAAA,cAAAA;KAAgB,GAAG,IAAI,CAAChG,SAAS,CAAA;IACpEkH,UAAU,CAAC6B,IAAI,GAAG,IAAI,CAAC/H,CAAC,CAAC,6BAA6B,CAAC,CAAA;IACvD,IAAIgF,cAAc,CAACvD,KAAK,IAAIuD,cAAc,CAACvD,KAAK,KAAK,MAAM,EAAE;AACzD0D,MAAAA,aAAa,CAAC4C,IAAI,GAAG,IAAI,CAAC/H,CAAC,CAAE,CAAA,mBAAA,EAAqBgF,cAAc,CAACvD,KAAM,CAAA,aAAA,CAAc,CAAC,CAAA;AAC1F,KAAA;IACA,KAAK,CAACT,kBAAkB,EAAE,CAAA;AAC9B,GAAA;AACJ,CAAA;AACA;AACA6D,qBAAqB,CAAC5D,SAAS,EAAE,CAAA;AACjC4D,qBAAqB,CAACpJ,MAAM,GAAG,uBAAuB;;AC3RtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMwM,SAAS,SAAS7K,gBAAgB,CAAC;AACpD;EACA,WAAWjN,KAAKA,GAAG;AACf,IAAA,OAAO,WAAW,CAAA;AACtB,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,WAAW2B,YAAYA,GAAG;IACtB,OAAO;AACH;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYoW,MAAAA,YAAY,EAAG,IAAI;AACnB3K,MAAAA,IAAI,EAAG,OAAA;AACP;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;KACS,CAAA;AACL,GAAA;;EACA,WAAW4K,YAAYA,GAAG;AACtB,IAAA,MAAMhW,MAAM,GAAG,KAAK,CAACgW,YAAY,CAAA;AACjChW,IAAAA,MAAM,CAACuB,KAAK,CAAC/C,IAAI,CAAC,mBAAmB,CAAC,CAAA;AACtC,IAAA,OAAOwB,MAAM,CAAA;AACjB,GAAA;AACA;AACA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;EACA,IAAIrB,aAAaA,GAAG;AAChB;AACA,IAAA,OAAO,IAAI,CAACP,MAAM,CAAC6X,YAAY,GAAG,IAAI,CAAC7X,MAAM,CAACkB,KAAK,GAAG,IAAI,CAAClB,MAAM,CAACO,aAAa,CAAA;AACnF,GAAA;EACAuX,gBAAgBA,CAAC1P,KAAK,E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C,CAAA;AACb,GAAA;AACJ,CAAA;AACAwJ,SAAS,CAACoD,YAAY,GAAG,EAAE,CAAA;AAC3BpD,SAAS,CAACxM,MAAM,GAAG,WAAW,CAAA;AAAE6P,kBAAkB,CAACC,eAAe,CAACtD,SAAS,EAAE,IAAI,EAAE,WAAW,CAAC,CAAA;AAChGqD,kBAAkB,CAACC,eAAe,CAACtD,SAAS,EAAE,KAAK,EAAE,mBAAmB,CAAC;;ACpXze,MAAMuD,YAAY,SAASpO,gBAAgB,CAAC;AACvD;EACA,WAAWjN,KAAKA,GAAG;AACf,IAAA,OAAO,cAAc,CAAA;AACzB,GAAA;EACA,WAAWiJ,aAAaA,GAAG;IACvB,OAAO;AACHmE,MAAAA,IAAI,EAAG,UAAU;AACjB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYkB,MAAAA,KAAK,EAAG,IAAI;AACZ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYyJ,MAAAA,YAAY,EAAG,IAAA;KAClB,CAAA;AACL,GAAA;EACA,WAAWC,YAAYA,GAAG;AACtB,IAAA,MAAMhW,MAAM,GAAG,KAAK,CAACgW,YAAY,CAAA;AACjChW,IAAAA,MAAM,CAACuB,KAAK,CAAC/C,IAAI,CAAC,sBAAsB,CAAC,CAAA;AACzC,IAAA,OAAOwB,MAAM,CAAA;AACjB,GAAA;AACA;AACA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;EACAiX,cAAcA,CAACC,WAAW,EAAE;IACxB,MACI;AAAE9Y,QAAAA,MAAAA;AAAO,OAA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"}