{"version":3,"file":"EventSelection.js","sources":["../../../../Scheduler/lib/Scheduler/crud/AbstractCrudManager.js","../../../../Scheduler/lib/Scheduler/data/CrudManager.js","../../../../Scheduler/lib/Scheduler/eventlayout/PackMixin.js","../../../../Scheduler/lib/Scheduler/view/mixin/Describable.js","../../../../Scheduler/lib/Scheduler/view/mixin/EventSelection.js"],"sourcesContent":["import Base from '../../Core/Base.js';\nimport AbstractCrudManagerMixin from './AbstractCrudManagerMixin.js';\nimport StringHelper from '../../Core/helper/StringHelper.js';\n\n/**\n * @module Scheduler/crud/AbstractCrudManager\n */\n\n/**\n * @typedef {Object} CrudManagerStoreDescriptor\n * @property {String} storeId Unique store identifier. Store related requests/responses will be sent under this name.\n * @property {Core.data.Store} store The store itself.\n * @property {String} [phantomIdField] Set this if the store model has a predefined field to keep phantom record identifier.\n * @property {String} [idField] id field name, if it's not specified then class will try to get it from store model.\n * @property {Boolean} [writeAllFields] Set to true to write all fields from modified records\n */\n\n/**\n * This is an abstract class serving as the base for the {@link Scheduler.data.CrudManager} class.\n * It implements basic mechanisms to organize batch communication with a server.\n * Yet it does not contain methods related to _data transfer_ nor _encoding_.\n * These methods are to be provided in sub-classes by consuming the appropriate mixins.\n *\n * For example, this is how the class can be used to implement an JSON encoding system:\n *\n * ```javascript\n * // let's make new CrudManager using AJAX as a transport system and JSON for encoding\n * class MyCrudManager extends JsonEncode(AjaxTransport(AbstractCrudManager)) {\n *\n * }\n * ```\n *\n * ## Data transfer and encoding methods\n *\n * These are methods that must be provided by subclasses of this class:\n *\n * - [#sendRequest](#Scheduler/crud/AbstractCrudManagerMixin#function-sendRequest)\n * - [#cancelRequest](#Scheduler/crud/AbstractCrudManagerMixin#function-cancelRequest)\n * - [#encode](#Scheduler/crud/AbstractCrudManagerMixin#function-encode)\n * - [#decode](#Scheduler/crud/AbstractCrudManagerMixin#function-decode)\n *\n * @extends Core/Base\n * @mixes Scheduler/crud/AbstractCrudManagerMixin\n * @abstract\n */\nexport default class AbstractCrudManager extends Base.mixin(AbstractCrudManagerMixin) {\n    //region Default config\n\n    /**\n     * The server revision stamp.\n     * The _revision stamp_ is a number which should be incremented after each server-side change.\n     * This property reflects the current version of the data retrieved from the server and gets updated after each\n     * {@link Scheduler/crud/AbstractCrudManagerMixin#function-load} and {@link Scheduler/crud/AbstractCrudManagerMixin#function-sync} call.\n     * @property {Number}\n     * @readonly\n     */\n    get revision() {\n        return this.crudRevision;\n    }\n\n    set revision(value) {\n        this.crudRevision = value;\n    }\n\n    /**\n     * Get or set data of {@link #property-crudStores} as a JSON string.\n     *\n     * Get a JSON string:\n     * ```javascript\n     *\n     * const jsonString = scheduler.crudManager.json;\n     *\n     * // returned jsonString:\n     * '{\"eventsData\":[...],\"resourcesData\":[...],...}'\n     *\n     * // object representation of the returned jsonString:\n     * {\n     *     resourcesData    : [...],\n     *     eventsData       : [...],\n     *     assignmentsData  : [...],\n     *     dependenciesData : [...],\n     *     timeRangesData   : [...],\n     *     // data from other stores\n     * }\n     * ```\n     *\n     * Set a JSON string (to populate the CrudManager stores):\n     *\n     * ```javascript\n     * scheduler.crudManager.json = '{\"eventsData\":[...],\"resourcesData\":[...],...}'\n     * ```\n     *\n     * @property {String}\n     */\n    get json() {\n        return StringHelper.safeJsonStringify(this);\n    }\n\n    set json(json) {\n        if (typeof json === 'string') {\n            json = StringHelper.safeJsonParse(json);\n        }\n\n        this.forEachCrudStore(store => {\n            const dataName = `${store.storeId}Data`;\n            if (json[dataName]) {\n                store.data = json[dataName];\n            }\n        });\n    }\n\n    static get defaultConfig() {\n        return {\n            /**\n             * Sets the list of stores controlled by the CRUD manager.\n             *\n             * When adding a store to the CrudManager, make sure the server response format is correct for `load` and `sync` requests.\n             * Learn more in the [Working with data](#Scheduler/guides/data/crud_manager.md#loading-data) guide.\n             *\n             * Store can be provided as in instance, using its `storeId` or as an {@link #typedef-CrudManagerStoreDescriptor}\n             * object.\n             * @config {Core.data.Store[]|String[]|CrudManagerStoreDescriptor[]}\n             */\n            stores : null\n\n            /**\n             * Encodes request to the server.\n             * @function encode\n             * @param {Object} request The request to encode.\n             * @returns {String} The encoded request.\n             * @abstract\n             */\n\n            /**\n             * Decodes response from the server.\n             * @function decode\n             * @param {String} response The response to decode.\n             * @returns {Object} The decoded response.\n             * @abstract\n             */\n        };\n    }\n\n    //endregion\n\n    //region Init\n\n    construct(config = {}) {\n        if (config.stores) {\n            config.crudStores = config.stores;\n            delete config.stores;\n        }\n\n        super.construct(config);\n    }\n\n    //endregion\n\n    //region inline data\n\n    /**\n     * Returns the data from all CrudManager `crudStores` in a format that can be consumed by `inlineData`.\n     *\n     * Used by JSON.stringify to correctly convert this CrudManager to json.\n     *\n     * The returned data is identical to what {@link Scheduler/crud/AbstractCrudManager#property-inlineData} contains.\n     *\n     * ```javascript\n     *\n     * const json = scheduler.crudManager.toJSON();\n     *\n     * // json:\n     * {\n     *     eventsData : [...],\n     *     resourcesData : [...],\n     *     dependenciesData : [...],\n     *     assignmentsData : [...],\n     *     timeRangesData : [...],\n     *     resourceTimeRangesData : [...],\n     *     // ... other stores data\n     * }\n     * ```\n     *\n     * Output can be consumed by `inlineData`.\n     *\n     * ```javascript\n     * const json = scheduler.crudManager.toJSON();\n     *\n     * // Plug it back in later\n     * scheduler.crudManager.inlineData = json;\n     * ```\n     *\n     * @function toJSON\n     * @returns {Object}\n     * @category JSON\n     */\n    toJSON() {\n        // Collect data from crudStores\n        const result = {};\n        this.forEachCrudStore((store, storeId) => result[`${storeId}Data`] = store.toJSON());\n        return result;\n    }\n\n    /**\n     * Get or set data of CrudManager stores. The returned data is identical to what\n     * {@link Scheduler/crud/AbstractCrudManager#function-toJSON} returns:\n     *\n     * ```javascript\n     *\n     * const data = scheduler.crudManager.inlineData;\n     *\n     * // data:\n     * {\n     *     eventsData : [...],\n     *     resourcesData : [...],\n     *     dependenciesData : [...],\n     *     assignmentsData : [...],\n     *     timeRangesData : [...],\n     *     resourceTimeRangesData : [...],\n     *     ... other stores data\n     * }\n     *\n     *\n     * // Plug it back in later\n     * scheduler.crudManager.inlineData = data;\n     * ```\n     *\n     * @property {Object}\n     */\n    get inlineData() {\n        return this.toJSON();\n    }\n\n    set inlineData(data) {\n        this.json = data;\n    }\n\n    //endregion\n\n    //region Store collection (add, remove, get & iterate)\n\n    set stores(stores) {\n        if (stores !== this.crudStores) {\n            this.crudStores = stores;\n        }\n    }\n\n    /**\n     * A list of registered stores whose server communication will be collected into a single batch.\n     * Each store is represented by a _store descriptor_.\n     * @member {CrudManagerStoreDescriptor[]} stores\n     */\n    get stores() {\n        return this.crudStores;\n    }\n\n    //endregion\n\n    /**\n     * Returns true if the crud manager is currently loading data\n     * @property {Boolean}\n     * @readonly\n     * @category CRUD\n     */\n    get isLoading() {\n        return this.isCrudManagerLoading;\n    }\n\n    /**\n     * Adds a store to the collection.\n     *\n     *```javascript\n     * // append stores to the end of collection\n     * crudManager.addStore([\n     *     store1,\n     *     // storeId\n     *     'bar',\n     *     // store descriptor\n     *     {\n     *         storeId : 'foo',\n     *         store   : store3\n     *     },\n     *     {\n     *         storeId         : 'bar',\n     *         store           : store4,\n     *         // to write all fields of modified records\n     *         writeAllFields  : true\n     *     }\n     * ]);\n     *```\n     *\n     * **Note:** Order in which stores are kept in the collection is very essential sometimes.\n     * Exactly in this order the loaded data will be put into each store.\n     *\n     * When adding a store to the CrudManager, make sure the server response format is correct for `load` and `sync`\n     * requests. Learn more in the [Working with data](#Scheduler/guides/data/crud_manager.md#loading-data) guide.\n     *\n     * @param {Core.data.Store|String|CrudManagerStoreDescriptor|Core.data.Store[]|String[]|CrudManagerStoreDescriptor[]} store\n     * A store or list of stores. Each store might be specified by its instance, `storeId` or _descriptor_.\n     * @param {Number} [position] The relative position of the store. If `fromStore` is specified the position will be\n     * taken relative to it.\n     * If not specified then store(s) will be appended to the end of collection.\n     * Otherwise, it will be an index in stores collection.\n     *\n     * ```javascript\n     * // insert stores store4, store5 to the start of collection\n     * crudManager.addStore([ store4, store5 ], 0);\n     * ```\n     *\n     * @param {String|Core.data.Store|CrudManagerStoreDescriptor} [fromStore] The store relative to which position\n     * should be calculated. Can be defined as a store identifier, instance or descriptor (the result of\n     * {@link Scheduler/crud/AbstractCrudManagerMixin#function-getStoreDescriptor} call).\n     *\n     * ```javascript\n     * // insert store6 just before a store having storeId equal to 'foo'\n     * crudManager.addStore(store6, 0, 'foo');\n     *\n     * // insert store7 just after store3 store\n     * crudManager.addStore(store7, 1, store3);\n     * ```\n     */\n    addStore(...args) {\n        return this.addCrudStore(...args);\n    }\n\n    removeStore(...args) {\n        return this.removeCrudStore(...args);\n    }\n\n    getStore(...args) {\n        return this.getCrudStore(...args);\n    }\n\n    hasChanges(...args) {\n        return this.crudStoreHasChanges(...args);\n    }\n\n    loadData(...args) {\n        return this.loadCrudManagerData(...args);\n    }\n}\n","import ResourceStore from './ResourceStore.js';\nimport EventStore from './EventStore.js';\nimport AssignmentStore from './AssignmentStore.js';\nimport DependencyStore from './DependencyStore.js';\nimport Store from '../../Core/data/Store.js';\nimport ProjectCrudManager from './mixin/ProjectCrudManager.js';\nimport AbstractCrudManager from '../crud/AbstractCrudManager.js';\nimport AjaxTransport from '../crud/transport/AjaxTransport.js';\nimport JsonEncoder from '../crud/encoder/JsonEncoder.js';\nimport ProjectModel from '../model/ProjectModel.js';\nimport ObjectHelper from '../../Core/helper/ObjectHelper.js';\n\n/**\n * @module Scheduler/data/CrudManager\n */\n\n/**\n * The Crud Manager (or \"CM\") is a class implementing centralized loading and saving of data in multiple stores.\n * Loading the stores and saving all changes is done using a single request. The stores managed by CRUD manager should\n * not be configured with their own CRUD URLs or use {@link Core/data/AjaxStore#config-autoLoad}/{@link Core/data/AjaxStore#config-autoCommit}.\n *\n * This class uses JSON as its data encoding format.\n *\n * ## Scheduler stores\n *\n * The class supports Scheduler specific stores (namely: resource, event, assignment and dependency stores).\n * For these stores, the CM has separate configs ({@link #config-resourceStore}, {@link #config-eventStore},\n * {@link #config-assignmentStore}) to register them.\n *\n * ```javascript\n * const crudManager = new CrudManager({\n *     autoLoad        : true,\n *     resourceStore   : resourceStore,\n *     eventStore      : eventStore,\n *     assignmentStore : assignmentStore,\n *     transport       : {\n *         load : {\n *             url : 'php/read.php'\n *         },\n *         sync : {\n *             url : 'php/save.php'\n *         }\n *     }\n * });\n * ```\n *\n * ## AJAX request configuration\n *\n * To configure AJAX request parameters please take a look at the\n * {@link Scheduler/crud/transport/AjaxTransport} docs.\n *\n * ```javascript\n * const crudManager = new CrudManager({\n *     autoLoad        : true,\n *     resourceStore,\n *     eventStore,\n *     assignmentStore,\n *     transport       : {\n *         load    : {\n *             url         : 'php/read.php',\n *             // use GET request\n *             method      : 'GET',\n *             // pass request JSON in \"rq\" parameter\n *             paramName   : 'rq',\n *             // extra HTTP request parameters\n *             params      : {\n *                 foo     : 'bar'\n *             },\n *             // pass some extra Fetch API option\n *             credentials : 'include'\n *         },\n *         sync : {\n *             url : 'php/save.php'\n *         }\n *     }\n * });\n * ```\n *\n * ## Using inline data\n *\n * The CrudManager provides settable property {@link #property-inlineData} that can\n * be used to get data from all {@link #property-crudStores} at once and to set this\n * data as well. Populating the stores this way can be useful if you cannot or you do not want to use CrudManager for\n * server requests but you pull the data by other means and have it ready outside CrudManager. Also, the data from all\n * stores is available in a single assignment statement.\n *\n * ### Getting data\n * ```javascript\n * const data = scheduler.crudManager.inlineData;\n *\n * // use the data in your application\n * ```\n *\n * ### Setting data\n * ```javascript\n * const data = // your function to pull server data\n *\n * scheduler.crudManager.inlineData = data;\n * ```\n *\n * ## Load order\n *\n * The CM is aware of the proper load order for Scheduler specific stores so you don't need to worry about it.\n * If you provide any extra stores (using {@link #config-stores} config) they will be\n * added to the start of collection before the Scheduler specific stores.\n * If you need a different loading order, you should use {@link #function-addStore} method to\n * register your store:\n *\n * ```javascript\n * const crudManager = new CrudManager({\n *     resourceStore   : resourceStore,\n *     eventStore      : eventStore,\n *     assignmentStore : assignmentStore,\n *     // extra user defined stores will get to the start of collection\n *     // so they will be loaded first\n *     stores          : [ store1, store2 ],\n *     transport       : {\n *         load : {\n *             url : 'php/read.php'\n *         },\n *         sync : {\n *             url : 'php/save.php'\n *         }\n *     }\n * });\n *\n * // append store3 to the end so it will be loaded last\n * crudManager.addStore(store3);\n *\n * // now when we registered all the stores let's load them\n * crudManager.load();\n * ```\n *\n * ## Assignment store\n *\n * The Crud Manager is designed to use {@link Scheduler/data/AssignmentStore} for assigning events to one or multiple resources.\n * However if server provides `resourceId` for any of the `events` then the Crud Manager enables backward compatible mode when\n * an event could have a single assignment only. This also disables multiple assignments in Scheduler UI.\n * In order to use multiple assignments server backend should be able to receive/send `assignments` for `load` and `sync` requests.\n *\n * ## Project\n *\n * The Crud Manager automatically consumes stores of the provided project (namely its {@link Scheduler/model/ProjectModel#property-eventStore},\n * {@link Scheduler/model/ProjectModel#property-resourceStore}, {@link Scheduler/model/ProjectModel#property-assignmentStore},\n * {@link Scheduler/model/ProjectModel#property-dependencyStore}, {@link Scheduler/model/ProjectModel#property-timeRangeStore} and\n * {@link Scheduler/model/ProjectModel#property-resourceTimeRangeStore}):\n *\n * ```javascript\n * const crudManager = new CrudManager({\n *     // crud manager will get stores from myAppProject project\n *     project   : myAppProject,\n *     transport : {\n *         load : {\n *             url : 'php/read.php'\n *         },\n *         sync : {\n *             url : 'php/save.php'\n *         }\n *     }\n * });\n * ```\n *\n * @mixes Scheduler/data/mixin/ProjectCrudManager\n * @mixes Scheduler/crud/encoder/JsonEncoder\n * @mixes Scheduler/crud/transport/AjaxTransport\n * @extends Scheduler/crud/AbstractCrudManager\n */\n\nexport default class CrudManager extends AbstractCrudManager.mixin(ProjectCrudManager, AjaxTransport, JsonEncoder) {\n\n    static $name = 'CrudManager';\n\n    //region Config\n\n    static get defaultConfig() {\n        return {\n            projectClass         : ProjectModel,\n            resourceStoreClass   : ResourceStore,\n            eventStoreClass      : EventStore,\n            assignmentStoreClass : AssignmentStore,\n            dependencyStoreClass : DependencyStore,\n\n            /**\n             * A store with resources (or a config object).\n             * @config {Scheduler.data.ResourceStore|ResourceStoreConfig}\n             */\n            resourceStore : {},\n\n            /**\n             * A store with events (or a config object).\n             *\n             * ```\n             * crudManager : {\n             *      eventStore {\n             *          storeClass : MyEventStore\n             *      }\n             * }\n             * ```\n             * @config {Scheduler.data.EventStore|EventStoreConfig}\n             */\n            eventStore : {},\n\n            /**\n             * A store with assignments (or a config object).\n             * @config {Scheduler.data.AssignmentStore|AssignmentStoreConfig}\n             */\n            assignmentStore : {},\n\n            /**\n             * A store with dependencies(or a config object).\n             * @config {Scheduler.data.DependencyStore|DependencyStoreConfig}\n             */\n            dependencyStore : {},\n\n            /**\n             * A project that holds and links stores\n             * @config {Scheduler.model.ProjectModel}\n             */\n            project : null\n        };\n    }\n\n    //endregion\n\n    buildProject() {\n        return new this.projectClass(this.buildProjectConfig());\n    }\n\n    buildProjectConfig() {\n        return ObjectHelper.cleanupProperties({\n            eventStore             : this.eventStore,\n            resourceStore          : this.resourceStore,\n            assignmentStore        : this.assignmentStore,\n            dependencyStore        : this.dependencyStore,\n            resourceTimeRangeStore : this.resourceTimeRangeStore\n        });\n    }\n\n    //region Stores\n\n    set project(project) {\n        const me = this;\n\n        if (project !== me._project) {\n            me.detachListeners('beforeDataReady');\n            me.detachListeners('afterDataReady');\n\n            me._project = project;\n\n            if (project) {\n                me.eventStore             = project.eventStore;\n                me.resourceStore          = project.resourceStore;\n                me.assignmentStore        = project.assignmentStore;\n                me.dependencyStore        = project.dependencyStore;\n                me.timeRangeStore         = project.timeRangeStore;\n                me.resourceTimeRangeStore = project.resourceTimeRangeStore;\n\n                // When adding multiple events to the store it will trigger multiple change events each of which will\n                // call crudManager.hasChanges, which will try to actually get the changeset package. It takes some time\n                // and we better skip that part for the dataready event, suspending changes tracking.\n                project.ion({\n                    name      : 'beforeDataReady',\n                    dataReady : () => me.suspendChangesTracking(),\n                    prio      : 100,\n                    thisObj   : me\n                });\n\n                project.ion({\n                    name      : 'afterDataReady',\n                    dataReady : () => me.resumeChangesTracking(),\n                    prio      : -100,\n                    thisObj   : me\n                });\n            }\n\n            if (!me.eventStore) {\n                me.eventStore = {};\n            }\n            if (!me.resourceStore) {\n                me.resourceStore = {};\n            }\n            if (!me.assignmentStore) {\n                me.assignmentStore = {};\n            }\n            if (!me.dependencyStore) {\n                me.dependencyStore = {};\n            }\n        }\n    }\n\n    get project() {\n        return this._project;\n    }\n\n    /**\n     * Store for {@link Scheduler/feature/TimeRanges timeRanges} feature.\n     * @property {Core.data.Store}\n     */\n    get timeRangeStore() {\n        return this._timeRangeStore?.store;\n    }\n\n    set timeRangeStore(store) {\n        this.setFeaturedStore('_timeRangeStore', store, this.project?.timeRangeStoreClass);\n    }\n\n    /**\n     * Store for {@link Scheduler/feature/ResourceTimeRanges resourceTimeRanges} feature.\n     * @property {Core.data.Store}\n     */\n    get resourceTimeRangeStore() {\n        return this._resourceTimeRangeStore?.store;\n    }\n\n    set resourceTimeRangeStore(store) {\n        this.setFeaturedStore('_resourceTimeRangeStore', store, this.project?.resourceTimeRangeStoreClass);\n    }\n\n    /**\n     * Get/set the resource store bound to the CRUD manager.\n     * @property {Scheduler.data.ResourceStore}\n     */\n    get resourceStore() {\n        return this._resourceStore?.store;\n    }\n\n    set resourceStore(store) {\n        const me = this;\n\n        me.setFeaturedStore('_resourceStore', store, me.resourceStoreClass);\n    }\n\n    /**\n     * Get/set the event store bound to the CRUD manager.\n     * @property {Scheduler.data.EventStore}\n     */\n    get eventStore() {\n        return this._eventStore?.store;\n    }\n\n    set eventStore(store) {\n        const me = this;\n\n        me.setFeaturedStore('_eventStore', store, me.eventStoreClass);\n    }\n\n    /**\n     * Get/set the assignment store bound to the CRUD manager.\n     * @property {Scheduler.data.AssignmentStore}\n     */\n    get assignmentStore() {\n        return this._assignmentStore?.store;\n    }\n\n    set assignmentStore(store) {\n        this.setFeaturedStore('_assignmentStore', store, this.assignmentStoreClass);\n    }\n\n    /**\n     * Get/set the dependency store bound to the CRUD manager.\n     * @property {Scheduler.data.DependencyStore}\n     */\n    get dependencyStore() {\n        return this._dependencyStore?.store;\n    }\n\n    set dependencyStore(store) {\n        this.setFeaturedStore('_dependencyStore', store, this.dependencyStoreClass);\n    }\n\n    setFeaturedStore(property, store, storeClass) {\n        const\n            me       = this,\n            oldStore = me[property]?.store;\n\n        // if not the same store\n        if (oldStore !== store) {\n            // normalize store value (turn it into a storeClass instance if needed)\n            store = Store.getStore(store, store?.storeClass || storeClass);\n\n            if (oldStore) {\n                me.removeStore(oldStore);\n            }\n\n            me[property] = store && { store } || null;\n\n            // Adds configured scheduler stores to the store collection ensuring correct order\n            // unless they're already registered.\n            me.addPrioritizedStore(me[property]);\n        }\n\n        return me[property];\n    }\n\n    getChangesetPackage() {\n        const pack = super.getChangesetPackage();\n\n        // Remove assignments from changes if using single assignment mode (resourceId)\n        if (pack && this.eventStore.usesSingleAssignment) {\n            delete pack[this.assignmentStore.storeId];\n            // No other changes?\n            if (!this.crudStores.some(storeInfo => pack[storeInfo.storeId])) {\n                return null;\n            }\n        }\n\n        return pack;\n    }\n\n    //endregion\n\n    get crudLoadValidationMandatoryStores() {\n        return [this._eventStore.storeId, this._resourceStore.storeId];\n    }\n\n};\n","import Base from '../../Core/Base.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\n\n/**\n * @module Scheduler/eventlayout/PackMixin\n */\n\n/**\n * Mixin holding functionality shared between HorizontalLayoutPack and VerticalLayout.\n *\n * @mixin\n * @private\n */\nexport default Target => class PackMixin extends (Target || Base) {\n    static get $name() {\n        return 'PackMixin';\n    }\n\n    static get defaultConfig() {\n        return {\n            coordProp       : 'top',\n            sizeProp        : 'height',\n            inBandCoordProp : 'inBandTop',\n            inBandSizeProp  : 'inBandHeight'\n        };\n    }\n\n    isSameGroup(a, b) {\n        return this.grouped ? a.group === b.group : true;\n    }\n\n    // Packs the events to consume as little space as possible\n    packEventsInBands(events, applyClusterFn) {\n        const\n            me                      = this,\n            { coordProp, sizeProp } = me;\n\n        let slot,\n            firstInCluster,\n            cluster,\n            j;\n\n        for (let i = 0, l = events.length; i < l; i++) {\n            firstInCluster = events[i];\n\n            slot = me.findStartSlot(events, firstInCluster);\n\n            cluster = me.getCluster(events, i);\n\n            if (cluster.length > 1) {\n                firstInCluster[coordProp] = slot.start;\n                firstInCluster[sizeProp]  = slot.end - slot.start;\n\n                // If there are multiple slots, and events in the cluster have multiple start dates, group all same-start events into first slot\n                j = 1;\n\n                while (j < (cluster.length - 1) && cluster[j + 1].start - firstInCluster.start === 0) {\n                    j++;\n                }\n\n                // See if there's more than 1 slot available for this cluster, if so - first group in cluster consumes the entire first slot\n                const nextSlot = me.findStartSlot(events, cluster[j]);\n\n                if (nextSlot && nextSlot.start < 0.8) {\n                    cluster.length = j;\n                }\n            }\n\n            const\n                clusterSize = cluster.length,\n                slotSize    = (slot.end - slot.start) / clusterSize;\n\n            // Apply fraction values\n            for (j = 0; j < clusterSize; j++) {\n                applyClusterFn(cluster[j], j, slot, slotSize);\n            }\n\n            i += clusterSize - 1;\n        }\n\n        return 1;\n    }\n\n    findStartSlot(events, event) {\n        const\n            {\n                inBandSizeProp,\n                inBandCoordProp,\n                coordProp,\n                sizeProp\n            }                = this,\n            priorOverlappers = this.getPriorOverlappingEvents(events, event);\n\n        let i;\n\n        if (priorOverlappers.length === 0) {\n            return {\n                start : 0,\n                end   : 1\n            };\n        }\n\n        for (i = 0; i < priorOverlappers.length; i++) {\n            const\n                item       = priorOverlappers[i],\n                COORD_PROP = inBandCoordProp in item ? inBandCoordProp : coordProp,\n                SIZE_PROP  = inBandSizeProp in item ? inBandSizeProp : sizeProp;\n\n            if (i === 0 && item[COORD_PROP] > 0) {\n                return {\n                    start : 0,\n                    end   : item[COORD_PROP]\n                };\n            }\n            else {\n                if (item[COORD_PROP] + item[SIZE_PROP] < (i < priorOverlappers.length - 1 ? priorOverlappers[i + 1][COORD_PROP] : 1)) {\n                    return {\n                        start : item[COORD_PROP] + item[SIZE_PROP],\n                        end   : i < priorOverlappers.length - 1 ? priorOverlappers[i + 1][COORD_PROP] : 1\n                    };\n                }\n            }\n        }\n\n        return false;\n    }\n\n    getPriorOverlappingEvents(events, event) {\n        const\n            start       = event.start,\n            end         = event.end,\n            overlappers = [];\n\n        for (let i = 0, l = events.indexOf(event); i < l; i++) {\n            const item = events[i];\n\n            if (this.isSameGroup(item, event) && DateHelper.intersectSpans(start, end, item.start, item.end)) {\n                overlappers.push(item);\n            }\n        }\n\n        overlappers.sort(this.sortOverlappers.bind(this));\n\n        return overlappers;\n    }\n\n    sortOverlappers(e1, e2) {\n        const { coordProp } = this;\n\n        return e1[coordProp] - e2[coordProp];\n    }\n\n    getCluster(events, startIndex) {\n        const\n            startEvent = events[startIndex],\n            result     = [startEvent];\n\n        if (startIndex >= events.length - 1) {\n            return result;\n        }\n\n        let { start, end } = startEvent;\n\n        for (let i = startIndex + 1, l = events.length; i < l; i++) {\n            const item = events[i];\n\n            if (!this.isSameGroup(item, startEvent) || !DateHelper.intersectSpans(start, end, item.start, item.end)) {\n                break;\n            }\n\n            result.push(item);\n            start = DateHelper.max(start, item.start);\n            end   = DateHelper.min(item.end, end);\n        }\n\n        return result;\n    }\n};\n","import Base from '../../../Core/Base.js';\nimport DateHelper from '../../../Core/helper/DateHelper.js';\n\n/**\n * @module Scheduler/view/mixin/Describable\n */\n\nconst\n    arrayify = format => (!format || Array.isArray(format)) ? format : [format],\n    pickFormat = (formats, index, defaultFormat) => (formats && formats[index] !== true) ? formats[index] : defaultFormat;\n\n/**\n * Mixin that provides a consistent method for describing the ranges of time presented by a view. This is currently\n * consumed only by the Calendar widget for describing its child views. This mixin is defined here to facilitate using\n * a Scheduler as a child view of a Calendar.\n *\n * @mixin\n */\nexport default Target => class Describable extends (Target || Base) {\n    static $name = 'Describable';\n\n    static configurable = {\n        /**\n         * A {@link Core.helper.DateHelper} format string to use to create date output for view descriptions.\n         * @config {String}\n         * @default\n         */\n        dateFormat : 'MMMM d, YYYY',\n\n        /**\n         * A string used to separate start and end dates in the {@link #config-descriptionFormat}.\n         * @prp {String}\n         * @default\n         */\n        dateSeparator : ' - ',\n\n        /**\n         * The date format used by the default {@link #config-descriptionRenderer} for rendering the view's description.\n         * If this value is `null`, the {@link #config-dateFormat} (and potentially {@link #config-dateSeparator}) will\n         * be used.\n         *\n         * For views that can span a range of dates, this can be a 2-item array with the following interpretation:\n         *\n         * - `descriptionFormat[0]` is either a date format string or `true` (to use {@link #config-dateFormat}). The\n         *   result of formatting the `startDate` with this format specification is used when the formatting both the\n         *   `startDate` and `endDate` with this specification produces the same result. For example, a week view\n         *   displays only the month and year components of the date, so this will be used unless the end of the week\n         *   crosses into the next month.\n         *\n         * - `descriptionFormat[1]` is used with {@link Core.helper.DateHelper#function-formatRange-static} when the\n         *  `startDate` and `endDate` format differently using `descriptionFormat[0]` (as described above). This one\n         *  format string produces a result for both dates. If this value is `true`, the {@link #config-dateFormat} and\n         *  {@link #config-dateSeparator} are combined to produce the range format.\n         *\n         * @prp {String|String[]|Boolean[]}\n         * @default\n         */\n        descriptionFormat : null,\n\n        /**\n         * A function that provides the textual description for this view. If provided, this function overrides the\n         * {@link #config-descriptionFormat}.\n         *\n         * ```javascript\n         *  descriptionRenderer() {\n         *      const\n         *          eventsInView = this.eventStore.records.filter(\n         *              eventRec => DateHelper.intersectSpans(\n         *                  this.startDate, this.endDate,\n         *                  eventRec.startDate, eventRec.endDate)).length,\n         *          sd = DateHelper.format(this.startDate, 'DD/MM/YYY'),\n         *          ed = DateHelper.format(this.endDate, 'DD/MM/YYY');\n         *\n         *     return `${sd} - ${ed}, ${eventsInView} event${eventsInView === 1 ? '' : 's'}`;\n         * }\n         * ```\n         * @config {Function} descriptionRenderer\n         * @param {Core.widget.Widget} view The active view in case the function is in another scope.\n         */\n        descriptionRenderer : null\n    };\n\n    /**\n     * Returns the date or ranges of included dates as an array. If there is only one significant date, the array will\n     * have only one element. Otherwise, a range of dates is returned as a two-element array with `[0]` being the\n     * `startDate` and `[1]` the `lastDate`.\n     * @member {Date[]}\n     * @internal\n     */\n    get dateBounds() {\n        return [this.date];\n    }\n\n    /**\n     * The textual description generated by the {@link #config-descriptionRenderer} if present, or by the\n     * view's date (or date *range* if it has a range) and the {@link #config-descriptionFormat}.\n     * @property {String}\n     * @readonly\n     */\n    get description() {\n        const\n            me = this,\n            { descriptionRenderer } = me;\n\n        return descriptionRenderer ? me.callback(descriptionRenderer, me, [me]) : me.formattedDescription;\n    }\n\n    get formattedDescription() {\n        const\n            me = this,\n            { dateBounds, dateFormat } = me,\n            descriptionFormat = me.descriptionFormat ?? arrayify(me.defaultDescriptionFormat),\n            format0 = pickFormat(descriptionFormat, 0, dateFormat),\n            end = dateBounds.length > 1 && descriptionFormat?.length > 1 && (\n                DateHelper.format(dateBounds[0], format0) !== DateHelper.format(dateBounds[1], format0)\n            );\n\n        // Format the startDate and endDate using the first format\n        let ret = DateHelper.format(dateBounds[0], format0);\n\n        if (end) {\n            // The endDate renders a different description, and we have a range format.\n            ret = DateHelper.formatRange(dateBounds,\n                pickFormat(descriptionFormat, 1, `S${dateFormat}${me.dateSeparator}E${dateFormat}`));\n        }\n\n        return ret;\n    }\n\n    changeDescriptionFormat(format) {\n        return arrayify(format);\n    }\n\n    get widgetClass() {}  // no b-describable class\n};\n","import Base from '../../../Core/Base.js';\nimport Collection from '../../../Core/util/Collection.js';\nimport ArrayHelper from '../../../Core/helper/ArrayHelper.js';\n\n/**\n * @module Scheduler/view/mixin/EventSelection\n */\n\n/**\n * Mixin that tracks event or assignment selection by clicking on one or more events in the scheduler.\n * @mixin\n */\nexport default Target => class EventSelection extends (Target || Base) {\n    static get $name() {\n        return 'EventSelection';\n    }\n\n    //region Default config\n\n    static get configurable() {\n        return {\n            /**\n             * Configure as `true`, or set property to `true` to highlight dependent events as well when selecting an event.\n             * @config {Boolean}\n             * @default\n             * @category Selection\n             */\n            highlightPredecessors : false,\n\n            /**\n             * Configure as `true`, or set property to `true` to highlight dependent events as well when selecting an event.\n             * @config {Boolean}\n             * @default\n             * @category Selection\n             */\n            highlightSuccessors : false,\n\n            /**\n             * Configure as `true` to deselect a selected event upon click.\n             * @config {Boolean}\n             * @default\n             * @category Selection\n             */\n            deselectOnClick : false,\n\n            /**\n             * Configure as `false` to preserve selection when clicking the empty schedule area.\n             * @config {Boolean}\n             * @default\n             * @category Selection\n             */\n            deselectAllOnScheduleClick : true\n        };\n    }\n\n    static get defaultConfig() {\n        return {\n            /**\n             * Configure as `true` to allow `CTRL+click` to select multiple events in the scheduler.\n             * @config {Boolean}\n             * @category Selection\n             */\n            multiEventSelect : false,\n\n            /**\n             * Configure as `true`, or set property to `true` to disable event selection.\n             * @config {Boolean}\n             * @default\n             * @category Selection\n             */\n            eventSelectionDisabled : false,\n\n            /**\n             * CSS class to add to selected events.\n             * @config {String}\n             * @default\n             * @category CSS\n             * @private\n             */\n            eventSelectedCls : 'b-sch-event-selected',\n\n            /**\n             * Configure as `true` to trigger `selectionChange` when removing a selected event/assignment.\n             * @config {Boolean}\n             * @default\n             * @category Selection\n             */\n            triggerSelectionChangeOnRemove : false,\n\n            /**\n             * This flag controls whether Scheduler should preserve its selection of events when loading a new dataset\n             * (if selected event ids are included in the newly loaded dataset).\n             * @config {Boolean}\n             * @default\n             * @category Selection\n             */\n            maintainSelectionOnDatasetChange : true,\n\n            /**\n             * CSS class to add to other instances of a selected event, to highlight them.\n             * @config {String}\n             * @default\n             * @category CSS\n             * @private\n             */\n            eventAssignHighlightCls : 'b-sch-event-assign-selected',\n\n            /**\n             * Collection to store selection.\n             * @config {Core.util.Collection}\n             * @private\n             */\n            selectedCollection : {}\n        };\n    }\n\n    //endregion\n\n    //region Events\n\n    /**\n     * Fired any time there is a change to the events selected in the Scheduler.\n     * @event eventSelectionChange\n     * @param {'select'|'deselect'|'update'|'clear'} action One of the actions 'select', 'deselect', 'update',\n     * 'clear'\n     * @param {Scheduler.model.EventModel[]} selected An array of the Events added to the selection.\n     * @param {Scheduler.model.EventModel[]} deselected An array of the Event removed from the selection.\n     * @param {Scheduler.model.EventModel[]} selection The new selection.\n     */\n\n    /**\n     * Fired any time there is going to be a change to the events selected in the Scheduler.\n     * Returning `false` prevents the change\n     * @event beforeEventSelectionChange\n     * @preventable\n     * @param {String} action One of the actions 'select', 'deselect', 'update', 'clear'\n     * @param {Scheduler.model.EventModel[]} selected An array of events that will be added to the selection.\n     * @param {Scheduler.model.EventModel[]} deselected An array of events that will be removed from the selection.\n     * @param {Scheduler.model.EventModel[]} selection The currently selected events, before applying `selected` and `deselected`.\n     */\n\n    /**\n     * Fired any time there is a change to the assignments selected in the Scheduler.\n     * @event assignmentSelectionChange\n     * @param {'select'|'deselect'|'update'|'clear'} action One of the actions 'select', 'deselect', 'update',\n     * 'clear'\n     * @param {Scheduler.model.AssignmentModel[]} selected An array of the Assignments added to the selection.\n     * @param {Scheduler.model.AssignmentModel[]} deselected An array of the Assignments removed from the selection.\n     * @param {Scheduler.model.AssignmentModel[]} selection The new selection.\n     */\n\n    /**\n     * Fired any time there is going to be a change to the assignments selected in the Scheduler.\n     * Returning `false` prevents the change\n     * @event beforeAssignmentSelectionChange\n     * @preventable\n     * @param {String} action One of the actions 'select', 'deselect', 'update', 'clear'\n     * @param {Scheduler.model.EventModel[]} selected An array of assignments that will be added to the selection.\n     * @param {Scheduler.model.EventModel[]} deselected An array of assignments that will be removed from the selection.\n     * @param {Scheduler.model.EventModel[]} selection The currently selected assignments, before applying `selected` and `deselected`.\n     */\n\n    //endregion\n\n    //region Init\n\n    afterConstruct() {\n        super.afterConstruct();\n\n        this.navigator?.ion({\n            navigate : 'onEventNavigate',\n            thisObj  : this\n        });\n    }\n\n    //endregion\n\n    //region Selected Collection\n\n    set selectedCollection(selectedCollection) {\n        if (!(selectedCollection instanceof Collection)) {\n            selectedCollection = new Collection(selectedCollection);\n        }\n        this._selectedCollection = selectedCollection;\n\n        // Fire row change events from onSelectedCollectionChange\n        selectedCollection.ion({\n            change : (...args) => this.project.deferUntilRepopulationIfNeeded(\n                'onSelectedCollectionChange',\n                (...args) => !this.isDestroying && this.onSelectedCollectionChange(...args),\n                args\n            ),\n            // deferring this handler breaks the UI\n            beforeSplice : 'onBeforeSelectedCollectionSplice',\n            thisObj      : this\n        });\n    }\n\n    get selectedCollection() {\n        return this._selectedCollection;\n    }\n\n    getActionType(selection, selected, deselected) {\n        return (selection.length > 0)\n            ? ((selected.length > 0 && deselected.length > 0)\n                ? 'update'\n                : (selected.length > 0\n                    ? 'select'\n                    : 'deselect'))\n            : 'clear';\n    }\n\n    //endregion\n\n    //region Modify selection\n\n    getEventsFromAssignments(assignments) {\n        return ArrayHelper.unique(assignments.map(assignment => assignment.event));\n    }\n\n    /**\n     * The {@link Scheduler.model.EventModel events} which are selected.\n     * @property {Scheduler.model.EventModel[]}\n     * @category Selection\n     */\n    get selectedEvents() {\n        return this.getEventsFromAssignments(this.selectedCollection.values);\n    }\n\n    set selectedEvents(events) {\n        // Select all assignments\n        const assignments = [];\n\n        events = ArrayHelper.asArray(events);\n\n        events?.forEach(event => {\n            if (this.isEventSelectable(event) !== false) {\n                if (event.isOccurrence) {\n                    event.assignments.forEach(as => {\n                        assignments.push(this.assignmentStore.getOccurrence(as, event));\n                    });\n                }\n                else {\n                    assignments.push(...event.assignments);\n                }\n            }\n        });\n\n        // Replace the entire selected collection with the new record set\n        this.selectedCollection.splice(0, this.selectedCollection.count, assignments);\n    }\n\n    /**\n     * The {@link Scheduler.model.AssignmentModel events} which are selected.\n     * @property {Scheduler.model.AssignmentModel[]}\n     * @category Selection\n     */\n    get selectedAssignments() {\n        return this.selectedCollection.values;\n    }\n\n    set selectedAssignments(assignments) {\n        // Replace the entire selected collection with the new record set\n        this.selectedCollection.splice(0, this.selectedCollection.count, assignments || []);\n    }\n\n    /**\n     * Returns `true` if the {@link Scheduler.model.EventModel event} is selected.\n     * @param {Scheduler.model.EventModel} event The event\n     * @returns {Boolean} Returns `true` if the event is selected\n     * @category Selection\n     */\n    isEventSelected(event) {\n        const { selectedCollection } = this;\n\n        return Boolean(selectedCollection.count && selectedCollection.includes(event.assignments));\n    }\n\n    /**\n     * A template method (empty by default) allowing you to control if an event can be selected or not.\n     *\n     * ```javascript\n     * new Scheduler({\n     *     isEventSelectable(event) {\n     *         return event.startDate >= Date.now();\n     *     }\n     * })\n     * ```\n     *\n     * This selection process is applicable to calendar too:\n     *\n     * ```javascript\n     * new Calendar({\n     *     isEventSelectable(event) {\n     *         return event.startDate >= Date.now();\n     *     }\n     * })\n     * ```\n     *\n     * @param {Scheduler.model.EventModel} event The event record\n     * @returns {Boolean} true if event can be selected, otherwise false\n     * @prp {Function}\n     * @category Selection\n     */\n    isEventSelectable(event) {}\n\n    /**\n     * Returns `true` if the {@link Scheduler.model.AssignmentModel assignment} is selected.\n     * @param {Scheduler.model.AssignmentModel} assignment The assignment\n     * @returns {Boolean} Returns `true` if the assignment is selected\n     * @category Selection\n     */\n    isAssignmentSelected(assignment) {\n        return this.selectedCollection.includes(assignment);\n    }\n\n    /**\n     * Selects the passed {@link Scheduler.model.EventModel event} or {@link Scheduler.model.AssignmentModel assignment}\n     * *if it is not selected*. Selecting events results in all their assignments being selected.\n     * @param {Scheduler.model.EventModel|Scheduler.model.AssignmentModel} eventOrAssignment The event or assignment to select\n     * @param {Boolean} [preserveSelection] Pass `true` to preserve any other selected events or assignments\n     * @category Selection\n     */\n    select(eventOrAssignment, preserveSelection = false) {\n        if (eventOrAssignment.isAssignment) {\n            this.selectAssignment(eventOrAssignment, preserveSelection);\n        }\n        else {\n            this.selectEvent(eventOrAssignment, preserveSelection);\n        }\n    }\n\n    /**\n     * Selects the passed {@link Scheduler.model.EventModel event} *if it is not selected*. Selecting an event will\n     * select all its assignments.\n     * @param {Scheduler.model.EventModel} event The event to select\n     * @param {Boolean} [preserveSelection] Pass `true` to preserve any other selected events\n     * @category Selection\n     */\n    selectEvent(event, preserveSelection = false) {\n        // If the event is already selected, this is a no-op.\n        // In this case, selection must not be cleared even in the absence of preserveSelection\n        if (!this.isEventSelected(event)) {\n            this.selectEvents([event], preserveSelection);\n        }\n    }\n\n    /**\n     * Selects the passed {@link Scheduler.model.AssignmentModel assignment} *if it is not selected*.\n     * @param {Scheduler.model.AssignmentModel} assignment The assignment to select\n     * @param {Boolean} [preserveSelection] Pass `true` to preserve any other selected assignments\n     * @param {Event} [event] If this method was invoked as a result of a user action, this is the DOM event that triggered it\n     * @category Selection\n     */\n    selectAssignment(assignment, preserveSelection = false, event) {\n        // If the event is already selected, this is a no-op.\n        // In this case, selection must not be cleared even in the absence of preserveSelection\n        if (!this.isAssignmentSelected(assignment)) {\n            preserveSelection ? this.selectedCollection.add(assignment) : this.selectedAssignments = assignment;\n        }\n    }\n\n    /**\n     * Deselects the passed {@link Scheduler.model.EventModel event} or {@link Scheduler.model.AssignmentModel assignment}\n     * *if it is selected*.\n     * @param {Scheduler.model.EventModel|Scheduler.model.AssignmentModel} eventOrAssignment The event or assignment to deselect.\n     * @category Selection\n     */\n    deselect(eventOrAssignment) {\n        if (eventOrAssignment.isAssignment) {\n            this.deselectAssignment(eventOrAssignment);\n        }\n        else {\n            this.deselectEvent(eventOrAssignment);\n        }\n    }\n\n    /**\n     * Deselects the passed {@link Scheduler.model.EventModel event} *if it is selected*.\n     * @param {Scheduler.model.EventModel} event The event to deselect.\n     * @category Selection\n     */\n    deselectEvent(event) {\n        if (this.isEventSelected(event)) {\n            this.selectedCollection.remove(...event.assignments);\n        }\n    }\n\n    /**\n     * Deselects the passed {@link Scheduler.model.AssignmentModel assignment} *if it is selected*.\n     * @param {Scheduler.model.AssignmentModel} assignment The assignment to deselect\n     * @param {Event} [event] If this method was invoked as a result of a user action, this is the DOM event that triggered it\n     * @category Selection\n     */\n    deselectAssignment(assignment) {\n        if (this.isAssignmentSelected(assignment)) {\n            this.selectedCollection.remove(assignment);\n        }\n    }\n\n    /**\n     * Adds {@link Scheduler.model.EventModel events} to the selection.\n     * @param {Scheduler.model.EventModel[]} events Events to be selected\n     * @param {Boolean} [preserveSelection] Pass `true` to preserve any other selected events\n     * @category Selection\n     */\n    selectEvents(events, preserveSelection = false) {\n        if (preserveSelection) {\n            const assignments = (events.reduce((assignments, event) => {\n                if (this.isEventSelectable(event) !== false) {\n                    assignments.push(...event.assignments);\n                }\n                return assignments;\n            }, []));\n\n            this.selectedCollection.add(assignments);\n        }\n        else {\n            this.selectedEvents = events;\n        }\n    }\n\n    /**\n     * Removes {@link Scheduler.model.EventModel events} from the selection.\n     * @param {Scheduler.model.EventModel[]} events Events or assignments  to be deselected\n     * @category Selection\n     */\n    deselectEvents(events) {\n        this.selectedCollection.remove(events.reduce((assignments, event) => {\n            assignments.push(...event.assignments);\n            return assignments;\n        }, []));\n    }\n\n    /**\n     * Adds {@link Scheduler.model.AssignmentModel assignments} to the selection.\n     * @param {Scheduler.model.AssignmentModel[]} assignments Assignments to be selected\n     * @category Selection\n     */\n    selectAssignments(assignments) {\n        this.selectedCollection.add(assignments);\n    }\n\n    /**\n     * Removes {@link Scheduler.model.AssignmentModel assignments} from the selection.\n     * @param {Scheduler.model.AssignmentModel[]} assignments Assignments  to be deselected\n     * @category Selection\n     */\n    deselectAssignments(assignments) {\n        this.selectedCollection.remove(assignments);\n    }\n\n    /**\n     * Deselects all {@link Scheduler.model.EventModel events} and {@link Scheduler.model.AssignmentModel assignments}.\n     * @category Selection\n     */\n    clearEventSelection() {\n        this.selectedAssignments = [];\n    }\n\n    //endregion\n\n    //region Events\n\n    /**\n     * Responds to mutations of the underlying selection Collection.\n     * Keeps the UI synced, eventSelectionChange and assignmentSelectionChange event is fired when `me.silent` is falsy.\n     * @private\n     */\n\n    onBeforeSelectedCollectionSplice({ toAdd, toRemove, index }) {\n        const\n            me = this,\n            selection = me._selectedCollection.values,\n            selected = toAdd,\n            deselected = toRemove > 0 ? selected.slice(index, toRemove + index) : [],\n            action = me.getActionType(selection, selected, deselected);\n\n        if (me.trigger('beforeEventSelectionChange', {\n            action,\n            selection  : me.getEventsFromAssignments(selection) || [],\n            selected   : me.getEventsFromAssignments(selected) || [],\n            deselected : me.getEventsFromAssignments(deselected) || []\n        }) === false) {\n            return false;\n        }\n\n        if (me.trigger('beforeAssignmentSelectionChange', {\n            action,\n            selection,\n            selected,\n            deselected\n        }) === false) {\n            return false;\n        }\n    }\n\n    onSelectedCollectionChange({ added, removed }) {\n        const\n            me         = this,\n            selection  = me.selectedAssignments,\n            selected   = added || [],\n            deselected = removed || [];\n\n        function updateSelection(assignmentRecord, select) {\n            const eventRecord    = assignmentRecord.event;\n\n            if (eventRecord) {\n                const\n                    { eventAssignHighlightCls } = me,\n                    element                     = me.getElementFromAssignmentRecord(assignmentRecord);\n\n                me.currentOrientation.toggleCls(assignmentRecord, me.eventSelectedCls, select);\n\n                eventAssignHighlightCls && me.getElementsFromEventRecord(eventRecord).forEach(el => {\n                    if (el !== element) {\n                        const otherAssignmentRecord = me.resolveAssignmentRecord(el);\n\n                        me.currentOrientation.toggleCls(otherAssignmentRecord, eventAssignHighlightCls, select);\n\n                        if (select) {\n                            // Need to force a reflow to get the highlightning animation triggered\n                            el.style.animation = 'none';\n                            el.offsetHeight;\n                            el.style.animation = '';\n                        }\n                        el.classList.toggle(eventAssignHighlightCls, select);\n                    }\n                });\n            }\n        }\n\n        deselected.forEach(record => updateSelection(record, false));\n        selected.forEach(record => updateSelection(record, true));\n\n        if (me.highlightSuccessors || me.highlightPredecessors) {\n            me.highlightLinkedEvents(me.selectedEvents);\n        }\n\n        // To be able to restore selection after reloading resources (which might lead to regenerated assignments in\n        // the single assignment scenario, so cannot rely on records or ids)\n        me.$selectedAssignments = selection.map(assignment => ({\n            eventId    : assignment.eventId,\n            resourceId : assignment.resourceId\n        }));\n\n        if (!me.silent) {\n            const action = this.getActionType(selection, selected, deselected);\n\n            me.trigger('assignmentSelectionChange', {\n                action,\n                selection,\n                selected,\n                deselected\n            });\n\n            me.trigger('eventSelectionChange', {\n                action,\n                selection  : me.selectedEvents,\n                selected   : me.getEventsFromAssignments(selected),\n                deselected : me.getEventsFromAssignments(deselected)\n            });\n        }\n    }\n\n    /**\n     * Assignment change listener to remove events from selection which are no longer in the assignments.\n     * @private\n     */\n    onAssignmentChange(event) {\n        super.onAssignmentChange(event);\n\n        const\n            me = this,\n            { action, records : assignments } = event;\n\n        me.silent = !me.triggerSelectionChangeOnRemove;\n\n        if (action === 'remove') {\n            me.deselectAssignments(assignments);\n        }\n        else if (action === 'removeall' && !me.eventStore.isSettingData) {\n            me.clearEventSelection();\n        }\n        else if (action === 'dataset' && me.$selectedAssignments) {\n            if (!me.maintainSelectionOnDatasetChange) {\n                me.clearEventSelection();\n            }\n            else {\n                const newAssignments = me.$selectedAssignments.map(selector =>\n                    assignments.find(a =>\n                        a.eventId === selector.eventId &&\n                        a.resourceId === selector.resourceId\n                    )\n                );\n\n                me.selectedAssignments = ArrayHelper.clean(newAssignments);\n            }\n        }\n\n        me.silent = false;\n    }\n\n    onInternalEventStoreChange({ source, action, records }) {\n        // Setting empty event dataset cannot be handled in onAssignmentChange above, no assignments might be affected\n        if (!source.isResourceTimeRangeStore && action === 'dataset' && !records.length) {\n            this.clearEventSelection();\n        }\n\n        super.onInternalEventStoreChange(...arguments);\n    }\n\n    /**\n     * Mouse listener to update selection.\n     * @private\n     */\n    onAssignmentSelectionClick(event, clickedRecord) {\n        const me = this;\n\n        // Multi selection: CTRL means preserve selection, just add or remove the event.\n        // Single selection: CTRL deselects already selected event\n        if (me.isAssignmentSelected(clickedRecord)) {\n            if (me.deselectOnClick || event.ctrlKey) {\n                me.deselectAssignment(clickedRecord, me.multiEventSelect, event);\n            }\n        }\n        else if (this.isEventSelectable(clickedRecord.event) !== false) {\n            me.selectAssignment(clickedRecord, event.ctrlKey && me.multiEventSelect, event);\n        }\n    }\n\n    /**\n     * Navigation listener to update selection.\n     * @private\n     */\n    onEventNavigate({ event, item }) {\n        if (!this.eventSelectionDisabled) {\n            const assignment = item && (item.nodeType === Element.ELEMENT_NODE ? this.resolveAssignmentRecord(item) : item);\n\n            if (assignment) {\n                this.onAssignmentSelectionClick(event, assignment);\n            }\n            // The click was not an event or assignment\n            else if (this.deselectAllOnScheduleClick) {\n                this.clearEventSelection();\n            }\n        }\n    }\n\n    changeHighlightSuccessors(value) {\n        return this.changeLinkedEvents(value);\n    }\n\n    changeHighlightPredecessors(value) {\n        return this.changeLinkedEvents(value);\n    }\n\n    changeLinkedEvents(value) {\n        const me = this;\n\n        if (value) {\n            me.highlighted = me.highlighted || new Set();\n\n            me.highlightLinkedEvents(me.selectedEvents);\n        }\n        else if (me.highlighted) {\n            me.highlightLinkedEvents();\n        }\n\n        return value;\n    }\n\n    // Function that highlights/unhighlights events in a dependency chain\n    highlightLinkedEvents(eventRecords = []) {\n        const\n            me                  = this,\n            {\n                highlighted,\n                eventStore\n            }                   = me,\n            dependenciesFeature = me.features.dependencies;\n\n        // Unhighlight previously highlighted records\n        highlighted.forEach(eventRecord => {\n            if (!eventRecords.includes(eventRecord)) {\n                eventRecord.meta.highlight = false;\n                highlighted.delete(eventRecord);\n\n                if (eventStore.includes(eventRecord)) {\n                    eventRecord.dependencies.forEach(dep => dependenciesFeature.unhighlight(dep, 'b-highlight'));\n                }\n            }\n        });\n\n        eventRecords.forEach(eventRecord => {\n            const toWalk = [eventRecord];\n\n            // Collect all events along the dependency chain\n            while (toWalk.length) {\n                const record = toWalk.pop();\n\n                highlighted.add(record);\n\n                if (me.highlightSuccessors) {\n                    record.outgoingDeps.forEach(outgoing => {\n                        dependenciesFeature.highlight(outgoing, 'b-highlight');\n                        !highlighted.has(outgoing.toEvent) && toWalk.push(outgoing.toEvent);\n                    });\n                }\n                if (me.highlightPredecessors) {\n                    record.incomingDeps.forEach(incoming => {\n                        dependenciesFeature.highlight(incoming, 'b-highlight');\n                        !highlighted.has(incoming.fromEvent) && toWalk.push(incoming.fromEvent);\n                    });\n                }\n            }\n\n            // Highlight them\n            highlighted.forEach(record => record.meta.highlight = true);\n        });\n\n        // Toggle flag on schedulers element, to fade others in or out\n        me.element.classList.toggle('b-highlighting', eventRecords.length > 0);\n\n        me.refreshWithTransition();\n    }\n\n    onEventDataGenerated(renderData) {\n        if (this.highlightSuccessors || this.highlightPredecessors) {\n            renderData.cls['b-highlight'] = renderData.eventRecord.meta.highlight;\n        }\n        super.onEventDataGenerated(renderData);\n    }\n\n    updateProject(project, old) {\n        // Clear selection when the whole world shifts :)\n        this.clearEventSelection();\n\n        super.updateProject(project, old);\n    }\n\n    //endregion\n\n    doDestroy() {\n        this._selectedCollection?.destroy();\n\n        super.doDestroy();\n    }\n\n    //region Getters/Setters\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n\n    //endregion\n};\n"],"names":["AbstractCrudManager","Base","mixin","AbstractCrudManagerMixin","revision","crudRevision","value","json","StringHelper","safeJsonStringify","safeJsonParse","forEachCrudStore","store","dataName","storeId","data","defaultConfig","stores","construct","config","crudStores","toJSON","result","inlineData","isLoading","isCrudManagerLoading","addStore","args","addCrudStore","removeStore","removeCrudStore","getStore","getCrudStore","hasChanges","crudStoreHasChanges","loadData","loadCrudManagerData","_$name","CrudManager","ProjectCrudManager","AjaxTransport","JsonEncoder","$name","projectClass","ProjectModel","resourceStoreClass","ResourceStore","eventStoreClass","EventStore","assignmentStoreClass","AssignmentStore","dependencyStoreClass","DependencyStore","resourceStore","eventStore","assignmentStore","dependencyStore","project","buildProject","buildProjectConfig","ObjectHelper","cleanupProperties","resourceTimeRangeStore","me","_project","detachListeners","timeRangeStore","ion","name","dataReady","suspendChangesTracking","prio","thisObj","resumeChangesTracking","_this$_timeRangeStore","_timeRangeStore","_this$project","setFeaturedStore","timeRangeStoreClass","_this$_resourceTimeRa","_resourceTimeRangeStore","_this$project2","resourceTimeRangeStoreClass","_this$_resourceStore","_resourceStore","_this$_eventStore","_eventStore","_this$_assignmentStor","_assignmentStore","_this$_dependencyStor","_dependencyStore","property","storeClass","_me$property","oldStore","_store","Store","addPrioritizedStore","getChangesetPackage","pack","usesSingleAssignment","some","storeInfo","crudLoadValidationMandatoryStores","Target","PackMixin","coordProp","sizeProp","inBandCoordProp","inBandSizeProp","isSameGroup","a","b","grouped","group","packEventsInBands","events","applyClusterFn","slot","firstInCluster","cluster","j","i","l","length","findStartSlot","getCluster","start","end","nextSlot","clusterSize","slotSize","event","priorOverlappers","getPriorOverlappingEvents","item","COORD_PROP","SIZE_PROP","overlappers","indexOf","DateHelper","intersectSpans","push","sort","sortOverlappers","bind","e1","e2","startIndex","startEvent","max","min","arrayify","format","Array","isArray","pickFormat","formats","index","defaultFormat","Describable","configurable","dateFormat","dateSeparator","descriptionFormat","descriptionRenderer","dateBounds","date","description","callback","formattedDescription","defaultDescriptionFormat","format0","ret","formatRange","changeDescriptionFormat","widgetClass","EventSelection","highlightPredecessors","highlightSuccessors","deselectOnClick","deselectAllOnScheduleClick","multiEventSelect","eventSelectionDisabled","eventSelectedCls","triggerSelectionChangeOnRemove","maintainSelectionOnDatasetChange","eventAssignHighlightCls","selectedCollection","afterConstruct","_this$navigator","navigator","navigate","Collection","_selectedCollection","change","deferUntilRepopulationIfNeeded","isDestroying","onSelectedCollectionChange","beforeSplice","getActionType","selection","selected","deselected","getEventsFromAssignments","assignments","ArrayHelper","unique","map","assignment","selectedEvents","values","_events","asArray","forEach","isEventSelectable","isOccurrence","as","getOccurrence","splice","count","selectedAssignments","isEventSelected","Boolean","includes","isAssignmentSelected","select","eventOrAssignment","preserveSelection","isAssignment","selectAssignment","selectEvent","selectEvents","add","deselect","deselectAssignment","deselectEvent","remove","reduce","deselectEvents","selectAssignments","deselectAssignments","clearEventSelection","onBeforeSelectedCollectionSplice","toAdd","toRemove","slice","action","trigger","added","removed","updateSelection","assignmentRecord","eventRecord","element","getElementFromAssignmentRecord","currentOrientation","toggleCls","getElementsFromEventRecord","el","otherAssignmentRecord","resolveAssignmentRecord","style","animation","offsetHeight","classList","toggle","record","highlightLinkedEvents","$selectedAssignments","eventId","resourceId","silent","onAssignmentChange","records","isSettingData","newAssignments","selector","find","clean","onInternalEventStoreChange","source","isResourceTimeRangeStore","arguments","onAssignmentSelectionClick","clickedRecord","ctrlKey","onEventNavigate","nodeType","Element","ELEMENT_NODE","changeHighlightSuccessors","changeLinkedEvents","changeHighlightPredecessors","highlighted","Set","eventRecords","dependenciesFeature","features","dependencies","meta","highlight","delete","dep","unhighlight","toWalk","pop","outgoingDeps","outgoing","has","toEvent","incomingDeps","incoming","fromEvent","refreshWithTransition","onEventDataGenerated","renderData","cls","updateProject","old","doDestroy","_this$_selectedCollec","destroy"],"mappings":";;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMA,mBAAmB,SAASC,IAAI,CAACC,KAAK,CAACC,wBAAwB,CAAC,CAAC;AAClF;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI,IAAIC,QAAQA,GAAG;IACX,OAAO,IAAI,CAACC,YAAY,CAAA;AAC5B,GAAA;EACA,IAAID,QAAQA,CAACE,KAAK,EAAE;IAChB,IAAI,CAACD,YAAY,GAAGC,KAAK,CAAA;AAC7B,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,IAAIC,IAAIA,GAAG;AACP,IAAA,OAAOC,YAAY,CAACC,iBAAiB,CAAC,IAAI,CAAC,CAAA;AAC/C,GAAA;EACA,IAAIF,IAAIA,CAACA,IAAI,EAAE;AACX,IAAA,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;AAC1BA,MAAAA,IAAI,GAAGC,YAAY,CAACE,aAAa,CAACH,IAAI,CAAC,CAAA;AAC3C,KAAA;AACA,IAAA,IAAI,CAACI,gBAAgB,CAACC,KAAK,IAAI;AAC3B,MAAA,MAAMC,QAAQ,GAAI,CAAA,EAAED,KAAK,CAACE,OAAQ,CAAK,IAAA,CAAA,CAAA;AACvC,MAAA,IAAIP,IAAI,CAACM,QAAQ,CAAC,EAAE;AAChBD,QAAAA,KAAK,CAACG,IAAI,GAAGR,IAAI,CAACM,QAAQ,CAAC,CAAA;AAC/B,OAAA;AACJ,KAAC,CAAC,CAAA;AACN,GAAA;EACA,WAAWG,aAAaA,GAAG;IACvB,OAAO;AACH;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,MAAM,EAAG,IAAA;AACT;AACZ;AACA;AACA;AACA;AACA;AACA;AACY;AACZ;AACA;AACA;AACA;AACA;AACA;KACS,CAAA;AACL,GAAA;AACA;AACA;AACAC,EAAAA,SAASA,CAACC,MAAM,GAAG,EAAE,EAAE;IACnB,IAAIA,MAAM,CAACF,MAAM,EAAE;AACfE,MAAAA,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACF,MAAM,CAAA;MACjC,OAAOE,MAAM,CAACF,MAAM,CAAA;AACxB,KAAA;AACA,IAAA,KAAK,CAACC,SAAS,CAACC,MAAM,CAAC,CAAA;AAC3B,GAAA;AACA;AACA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIE,EAAAA,MAAMA,GAAG;AACL;IACA,MAAMC,MAAM,GAAG,EAAE,CAAA;IACjB,IAAI,CAACX,gBAAgB,CAAC,CAACC,KAAK,EAAEE,OAAO,KAAKQ,MAAM,CAAE,GAAER,OAAQ,CAAA,IAAA,CAAK,CAAC,GAAGF,KAAK,CAACS,MAAM,EAAE,CAAC,CAAA;AACpF,IAAA,OAAOC,MAAM,CAAA;AACjB,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,IAAIC,UAAUA,GAAG;AACb,IAAA,OAAO,IAAI,CAACF,MAAM,EAAE,CAAA;AACxB,GAAA;EACA,IAAIE,UAAUA,CAACR,IAAI,EAAE;IACjB,IAAI,CAACR,IAAI,GAAGQ,IAAI,CAAA;AACpB,GAAA;AACA;AACA;EACA,IAAIE,MAAMA,CAACA,MAAM,EAAE;AACf,IAAA,IAAIA,MAAM,KAAK,IAAI,CAACG,UAAU,EAAE;MAC5B,IAAI,CAACA,UAAU,GAAGH,MAAM,CAAA;AAC5B,KAAA;AACJ,GAAA;AACA;AACJ;AACA;AACA;AACA;EACI,IAAIA,MAAMA,GAAG;IACT,OAAO,IAAI,CAACG,UAAU,CAAA;AAC1B,GAAA;AACA;AACA;AACJ;AACA;AACA;AACA;AACA;EACI,IAAII,SAASA,GAAG;IACZ,OAAO,IAAI,CAACC,oBAAoB,CAAA;AACpC,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,QAAQA,CAAC,GAAGC,IAAI,EAAE;AACd,IAAA,OAAO,IAAI,CAACC,YAAY,CAAC,GAAGD,IAAI,CAAC,CAAA;AACrC,GAAA;EACAE,WAAWA,CAAC,GAAGF,IAAI,EAAE;AACjB,IAAA,OAAO,IAAI,CAACG,eAAe,CAAC,GAAGH,IAAI,CAAC,CAAA;AACxC,GAAA;EACAI,QAAQA,CAAC,GAAGJ,IAAI,EAAE;AACd,IAAA,OAAO,IAAI,CAACK,YAAY,CAAC,GAAGL,IAAI,CAAC,CAAA;AACrC,GAAA;EACAM,UAAUA,CAAC,GAAGN,IAAI,EAAE;AAChB,IAAA,OAAO,IAAI,CAACO,mBAAmB,CAAC,GAAGP,IAAI,CAAC,CAAA;AAC5C,GAAA;EACAQ,QAAQA,CAAC,GAAGR,IAAI,EAAE;AACd,IAAA,OAAO,IAAI,CAACS,mBAAmB,CAAC,GAAGT,IAAI,CAAC,CAAA;AAC5C,GAAA;AACJ,CAAA;AACA3B,mBAAmB,CAACqC,MAAM,GAAG,qBAAqB;;AC3Sle,MAAMC,WAAW,SAAStC,mBAAmB,CAACE,KAAK,CAACqC,kBAAkB,EAAEC,aAAa,EAAEC,WAAW,CAAC,CAAC;EAC/G,OAAOC,KAAK,GAAG,aAAa,CAAA;AAC5B;EACA,WAAW1B,aAAaA,GAAG;IACvB,OAAO;AACH2B,MAAAA,YAAY,EAAWC,YAAY;AACnCC,MAAAA,kBAAkB,EAAKC,aAAa;AACpCC,MAAAA,eAAe,EAAQC,UAAU;AACjCC,MAAAA,oBAAoB,EAAGC,eAAe;AACtCC,MAAAA,oBAAoB,EAAGC,eAAe;AACtC;AACZ;AACA;AACA;MACYC,aAAa,EAAG,EAAE;AAClB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACYC,UAAU,EAAG,EAAE;AACf;AACZ;AACA;AACA;MACYC,eAAe,EAAG,EAAE;AACpB;AACZ;AACA;AACA;MACYC,eAAe,EAAG,EAAE;AACpB;AACZ;AACA;AACA;AACYC,MAAAA,OAAO,EAAG,IAAA;KACb,CAAA;AACL,GAAA;AACA;AACAC,EAAAA,YAAYA,GAAG;IACX,OAAO,IAAI,IAAI,CAACf,YAAY,CAAC,IAAI,CAACgB,kBAAkB,EAAE,CAAC,CAAA;AAC3D,GAAA;AACAA,EAAAA,kBAAkBA,GAAG;IACjB,OAAOC,YAAY,CAACC,iBAAiB,CAAC;MAClCP,UAAU,EAAe,IAAI,CAACA,UAAU;MACxCD,aAAa,EAAY,IAAI,CAACA,aAAa;MAC3CE,eAAe,EAAU,IAAI,CAACA,eAAe;MAC7CC,eAAe,EAAU,IAAI,CAACA,eAAe;MAC7CM,sBAAsB,EAAG,IAAI,CAACA,sBAAAA;AAClC,KAAC,CAAC,CAAA;AACN,GAAA;AACA;EACA,IAAIL,OAAOA,CAACA,OAAO,EAAE;IACjB,MAAMM,EAAE,GAAG,IAAI,CAAA;AACf,IAAA,IAAIN,OAAO,KAAKM,EAAE,CAACC,QAAQ,EAAE;AACzBD,MAAAA,EAAE,CAACE,eAAe,CAAC,iBAAiB,CAAC,CAAA;AACrCF,MAAAA,EAAE,CAACE,eAAe,CAAC,gBAAgB,CAAC,CAAA;MACpCF,EAAE,CAACC,QAAQ,GAAGP,OAAO,CAAA;AACrB,MAAA,IAAIA,OAAO,EAAE;AACTM,QAAAA,EAAE,CAACT,UAAU,GAAeG,OAAO,CAACH,UAAU,CAAA;AAC9CS,QAAAA,EAAE,CAACV,aAAa,GAAYI,OAAO,CAACJ,aAAa,CAAA;AACjDU,QAAAA,EAAE,CAACR,eAAe,GAAUE,OAAO,CAACF,eAAe,CAAA;AACnDQ,QAAAA,EAAE,CAACP,eAAe,GAAUC,OAAO,CAACD,eAAe,CAAA;AACnDO,QAAAA,EAAE,CAACG,cAAc,GAAWT,OAAO,CAACS,cAAc,CAAA;AAClDH,QAAAA,EAAE,CAACD,sBAAsB,GAAGL,OAAO,CAACK,sBAAsB,CAAA;AAC1D;AACA;AACA;QACAL,OAAO,CAACU,GAAG,CAAC;AACRC,UAAAA,IAAI,EAAQ,iBAAiB;AAC7BC,UAAAA,SAAS,EAAGA,MAAMN,EAAE,CAACO,sBAAsB,EAAE;AAC7CC,UAAAA,IAAI,EAAQ,GAAG;AACfC,UAAAA,OAAO,EAAKT,EAAAA;AAChB,SAAC,CAAC,CAAA;QACFN,OAAO,CAACU,GAAG,CAAC;AACRC,UAAAA,IAAI,EAAQ,gBAAgB;AAC5BC,UAAAA,SAAS,EAAGA,MAAMN,EAAE,CAACU,qBAAqB,EAAE;UAC5CF,IAAI,EAAQ,CAAC,GAAG;AAChBC,UAAAA,OAAO,EAAKT,EAAAA;AAChB,SAAC,CAAC,CAAA;AACN,OAAA;AACA,MAAA,IAAI,CAACA,EAAE,CAACT,UAAU,EAAE;AAChBS,QAAAA,EAAE,CAACT,UAAU,GAAG,EAAE,CAAA;AACtB,OAAA;AACA,MAAA,IAAI,CAACS,EAAE,CAACV,aAAa,EAAE;AACnBU,QAAAA,EAAE,CAACV,aAAa,GAAG,EAAE,CAAA;AACzB,OAAA;AACA,MAAA,IAAI,CAACU,EAAE,CAACR,eAAe,EAAE;AACrBQ,QAAAA,EAAE,CAACR,eAAe,GAAG,EAAE,CAAA;AAC3B,OAAA;AACA,MAAA,IAAI,CAACQ,EAAE,CAACP,eAAe,EAAE;AACrBO,QAAAA,EAAE,CAACP,eAAe,GAAG,EAAE,CAAA;AAC3B,OAAA;AACJ,KAAA;AACJ,GAAA;EACA,IAAIC,OAAOA,GAAG;IACV,OAAO,IAAI,CAACO,QAAQ,CAAA;AACxB,GAAA;AACA;AACJ;AACA;AACA;EACI,IAAIE,cAAcA,GAAG;AAAA,IAAA,IAAAQ,qBAAA,CAAA;IACjB,OAAAA,CAAAA,qBAAA,GAAO,IAAI,CAACC,eAAe,cAAAD,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAApBA,qBAAA,CAAsB9D,KAAK,CAAA;AACtC,GAAA;EACA,IAAIsD,cAAcA,CAACtD,KAAK,EAAE;AAAA,IAAA,IAAAgE,aAAA,CAAA;AACtB,IAAA,IAAI,CAACC,gBAAgB,CAAC,iBAAiB,EAAEjE,KAAK,GAAAgE,aAAA,GAAE,IAAI,CAACnB,OAAO,MAAAmB,IAAAA,IAAAA,aAAA,uBAAZA,aAAA,CAAcE,mBAAmB,CAAC,CAAA;AACtF,GAAA;AACA;AACJ;AACA;AACA;EACI,IAAIhB,sBAAsBA,GAAG;AAAA,IAAA,IAAAiB,qBAAA,CAAA;IACzB,OAAAA,CAAAA,qBAAA,GAAO,IAAI,CAACC,uBAAuB,cAAAD,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAA5BA,qBAAA,CAA8BnE,KAAK,CAAA;AAC9C,GAAA;EACA,IAAIkD,sBAAsBA,CAAClD,KAAK,EAAE;AAAA,IAAA,IAAAqE,cAAA,CAAA;AAC9B,IAAA,IAAI,CAACJ,gBAAgB,CAAC,yBAAyB,EAAEjE,KAAK,GAAAqE,cAAA,GAAE,IAAI,CAACxB,OAAO,MAAAwB,IAAAA,IAAAA,cAAA,uBAAZA,cAAA,CAAcC,2BAA2B,CAAC,CAAA;AACtG,GAAA;AACA;AACJ;AACA;AACA;EACI,IAAI7B,aAAaA,GAAG;AAAA,IAAA,IAAA8B,oBAAA,CAAA;IAChB,OAAAA,CAAAA,oBAAA,GAAO,IAAI,CAACC,cAAc,cAAAD,oBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAnBA,oBAAA,CAAqBvE,KAAK,CAAA;AACrC,GAAA;EACA,IAAIyC,aAAaA,CAACzC,KAAK,EAAE;IACrB,MAAMmD,EAAE,GAAG,IAAI,CAAA;IACfA,EAAE,CAACc,gBAAgB,CAAC,gBAAgB,EAAEjE,KAAK,EAAEmD,EAAE,CAAClB,kBAAkB,CAAC,CAAA;AACvE,GAAA;AACA;AACJ;AACA;AACA;EACI,IAAIS,UAAUA,GAAG;AAAA,IAAA,IAAA+B,iBAAA,CAAA;IACb,OAAAA,CAAAA,iBAAA,GAAO,IAAI,CAACC,WAAW,cAAAD,iBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAhBA,iBAAA,CAAkBzE,KAAK,CAAA;AAClC,GAAA;EACA,IAAI0C,UAAUA,CAAC1C,KAAK,EAAE;IAClB,MAAMmD,EAAE,GAAG,IAAI,CAAA;IACfA,EAAE,CAACc,gBAAgB,CAAC,aAAa,EAAEjE,KAAK,EAAEmD,EAAE,CAAChB,eAAe,CAAC,CAAA;AACjE,GAAA;AACA;AACJ;AACA;AACA;EACI,IAAIQ,eAAeA,GAAG;AAAA,IAAA,IAAAgC,qBAAA,CAAA;IAClB,OAAAA,CAAAA,qBAAA,GAAO,IAAI,CAACC,gBAAgB,cAAAD,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAArBA,qBAAA,CAAuB3E,KAAK,CAAA;AACvC,GAAA;EACA,IAAI2C,eAAeA,CAAC3C,KAAK,EAAE;IACvB,IAAI,CAACiE,gBAAgB,CAAC,kBAAkB,EAAEjE,KAAK,EAAE,IAAI,CAACqC,oBAAoB,CAAC,CAAA;AAC/E,GAAA;AACA;AACJ;AACA;AACA;EACI,IAAIO,eAAeA,GAAG;AAAA,IAAA,IAAAiC,qBAAA,CAAA;IAClB,OAAAA,CAAAA,qBAAA,GAAO,IAAI,CAACC,gBAAgB,cAAAD,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAArBA,qBAAA,CAAuB7E,KAAK,CAAA;AACvC,GAAA;EACA,IAAI4C,eAAeA,CAAC5C,KAAK,EAAE;IACvB,IAAI,CAACiE,gBAAgB,CAAC,kBAAkB,EAAEjE,KAAK,EAAE,IAAI,CAACuC,oBAAoB,CAAC,CAAA;AAC/E,GAAA;AACA0B,EAAAA,gBAAgBA,CAACc,QAAQ,EAAE/E,KAAK,EAAEgF,UAAU,EAAE;AAAA,IAAA,IAAAC,YAAA,CAAA;IAC1C,MACI9B,EAAE,GAAS,IAAI;AACf+B,MAAAA,QAAQ,GAAAD,CAAAA,YAAA,GAAG9B,EAAE,CAAC4B,QAAQ,CAAC,MAAA,IAAA,IAAAE,YAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAZA,YAAA,CAAcjF,KAAK,CAAA;AAClC;IACA,IAAIkF,QAAQ,KAAKlF,KAAK,EAAE;AAAA,MAAA,IAAAmF,MAAA,CAAA;AACpB;AACAnF,MAAAA,KAAK,GAAGoF,KAAK,CAACjE,QAAQ,CAACnB,KAAK,EAAE,CAAAmF,CAAAA,MAAA,GAAAnF,KAAK,MAAA,IAAA,IAAAmF,MAAA,KAALA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,MAAA,CAAOH,UAAU,KAAIA,UAAU,CAAC,CAAA;AAC9D,MAAA,IAAIE,QAAQ,EAAE;AACV/B,QAAAA,EAAE,CAAClC,WAAW,CAACiE,QAAQ,CAAC,CAAA;AAC5B,OAAA;AACA/B,MAAAA,EAAE,CAAC4B,QAAQ,CAAC,GAAG/E,KAAK,IAAI;AAAEA,QAAAA,KAAAA;AAAM,OAAC,IAAI,IAAI,CAAA;AACzC;AACA;AACAmD,MAAAA,EAAE,CAACkC,mBAAmB,CAAClC,EAAE,CAAC4B,QAAQ,CAAC,CAAC,CAAA;AACxC,KAAA;IACA,OAAO5B,EAAE,CAAC4B,QAAQ,CAAC,CAAA;AACvB,GAAA;AACAO,EAAAA,mBAAmBA,GAAG;AAClB,IAAA,MAAMC,IAAI,GAAG,KAAK,CAACD,mBAAmB,EAAE,CAAA;AACxC;AACA,IAAA,IAAIC,IAAI,IAAI,IAAI,CAAC7C,UAAU,CAAC8C,oBAAoB,EAAE;AAC9C,MAAA,OAAOD,IAAI,CAAC,IAAI,CAAC5C,eAAe,CAACzC,OAAO,CAAC,CAAA;AACzC;AACA,MAAA,IAAI,CAAC,IAAI,CAACM,UAAU,CAACiF,IAAI,CAACC,SAAS,IAAIH,IAAI,CAACG,SAAS,CAACxF,OAAO,CAAC,CAAC,EAAE;AAC7D,QAAA,OAAO,IAAI,CAAA;AACf,OAAA;AACJ,KAAA;AACA,IAAA,OAAOqF,IAAI,CAAA;AACf,GAAA;AACA;EACA,IAAII,iCAAiCA,GAAG;AACpC,IAAA,OAAO,CAAC,IAAI,CAACjB,WAAW,CAACxE,OAAO,EAAE,IAAI,CAACsE,cAAc,CAACtE,OAAO,CAAC,CAAA;AAClE,GAAA;AACJ,CAAA;AACAwB,WAAW,CAACD,MAAM,GAAG,aAAa;;AC7WlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAemE,CAAAA,MAAM,IAAI,MAAMC,SAAS,UAAUD,MAAM,IAAIvG,IAAI,EAAE;EAC9D,WAAWyC,KAAKA,GAAG;AACf,IAAA,OAAO,WAAW,CAAA;AACtB,GAAA;EACA,WAAW1B,aAAaA,GAAG;IACvB,OAAO;AACH0F,MAAAA,SAAS,EAAS,KAAK;AACvBC,MAAAA,QAAQ,EAAU,QAAQ;AAC1BC,MAAAA,eAAe,EAAG,WAAW;AAC7BC,MAAAA,cAAc,EAAI,cAAA;KACrB,CAAA;AACL,GAAA;AACAC,EAAAA,WAAWA,CAACC,CAAC,EAAEC,CAAC,EAAE;AACd,IAAA,OAAO,IAAI,CAACC,OAAO,GAAGF,CAAC,CAACG,KAAK,KAAKF,CAAC,CAACE,KAAK,GAAG,IAAI,CAAA;AACpD,GAAA;AACA;AACAC,EAAAA,iBAAiBA,CAACC,MAAM,EAAEC,cAAc,EAAE;IACtC,MACItD,EAAE,GAAwB,IAAI;AAC9B,MAAA;QAAE2C,SAAS;AAAEC,QAAAA,QAAAA;AAAS,OAAC,GAAG5C,EAAE,CAAA;AAChC,IAAA,IAAIuD,IAAI,EACJC,cAAc,EACdC,OAAO,EACPC,CAAC,CAAA;AACL,IAAA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGP,MAAM,CAACQ,MAAM,EAAEF,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;AAC3CH,MAAAA,cAAc,GAAGH,MAAM,CAACM,CAAC,CAAC,CAAA;MAC1BJ,IAAI,GAAGvD,EAAE,CAAC8D,aAAa,CAACT,MAAM,EAAEG,cAAc,CAAC,CAAA;MAC/CC,OAAO,GAAGzD,EAAE,CAAC+D,UAAU,CAACV,MAAM,EAAEM,CAAC,CAAC,CAAA;AAClC,MAAA,IAAIF,OAAO,CAACI,MAAM,GAAG,CAAC,EAAE;AACpBL,QAAAA,cAAc,CAACb,SAAS,CAAC,GAAGY,IAAI,CAACS,KAAK,CAAA;QACtCR,cAAc,CAACZ,QAAQ,CAAC,GAAIW,IAAI,CAACU,GAAG,GAAGV,IAAI,CAACS,KAAK,CAAA;AACjD;AACAN,QAAAA,CAAC,GAAG,CAAC,CAAA;QACL,OAAOA,CAAC,GAAID,OAAO,CAACI,MAAM,GAAG,CAAE,IAAIJ,OAAO,CAACC,CAAC,GAAG,CAAC,CAAC,CAACM,KAAK,GAAGR,cAAc,CAACQ,KAAK,KAAK,CAAC,EAAE;AAClFN,UAAAA,CAAC,EAAE,CAAA;AACP,SAAA;AACA;AACA,QAAA,MAAMQ,QAAQ,GAAGlE,EAAE,CAAC8D,aAAa,CAACT,MAAM,EAAEI,OAAO,CAACC,CAAC,CAAC,CAAC,CAAA;AACrD,QAAA,IAAIQ,QAAQ,IAAIA,QAAQ,CAACF,KAAK,GAAG,GAAG,EAAE;UAClCP,OAAO,CAACI,MAAM,GAAGH,CAAC,CAAA;AACtB,SAAA;AACJ,OAAA;AACA,MAAA,MACIS,WAAW,GAAGV,OAAO,CAACI,MAAM;QAC5BO,QAAQ,GAAM,CAACb,IAAI,CAACU,GAAG,GAAGV,IAAI,CAACS,KAAK,IAAIG,WAAW,CAAA;AACvD;MACA,KAAKT,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGS,WAAW,EAAET,CAAC,EAAE,EAAE;QAC9BJ,cAAc,CAACG,OAAO,CAACC,CAAC,CAAC,EAAEA,CAAC,EAAEH,IAAI,EAAEa,QAAQ,CAAC,CAAA;AACjD,OAAA;MACAT,CAAC,IAAIQ,WAAW,GAAG,CAAC,CAAA;AACxB,KAAA;AACA,IAAA,OAAO,CAAC,CAAA;AACZ,GAAA;AACAL,EAAAA,aAAaA,CAACT,MAAM,EAAEgB,KAAK,EAAE;IACzB,MACI;QACIvB,cAAc;QACdD,eAAe;QACfF,SAAS;AACTC,QAAAA,QAAAA;AACJ,OAAC,GAAkB,IAAI;MACvB0B,gBAAgB,GAAG,IAAI,CAACC,yBAAyB,CAAClB,MAAM,EAAEgB,KAAK,CAAC,CAAA;AACpE,IAAA,IAAIV,CAAC,CAAA;AACL,IAAA,IAAIW,gBAAgB,CAACT,MAAM,KAAK,CAAC,EAAE;MAC/B,OAAO;AACHG,QAAAA,KAAK,EAAG,CAAC;AACTC,QAAAA,GAAG,EAAK,CAAA;OACX,CAAA;AACL,KAAA;AACA,IAAA,KAAKN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGW,gBAAgB,CAACT,MAAM,EAAEF,CAAC,EAAE,EAAE;AAC1C,MAAA,MACIa,IAAI,GAASF,gBAAgB,CAACX,CAAC,CAAC;AAChCc,QAAAA,UAAU,GAAG5B,eAAe,IAAI2B,IAAI,GAAG3B,eAAe,GAAGF,SAAS;AAClE+B,QAAAA,SAAS,GAAI5B,cAAc,IAAI0B,IAAI,GAAG1B,cAAc,GAAGF,QAAQ,CAAA;MACnE,IAAIe,CAAC,KAAK,CAAC,IAAIa,IAAI,CAACC,UAAU,CAAC,GAAG,CAAC,EAAE;QACjC,OAAO;AACHT,UAAAA,KAAK,EAAG,CAAC;UACTC,GAAG,EAAKO,IAAI,CAACC,UAAU,CAAA;SAC1B,CAAA;AACL,OAAC,MACI;AACD,QAAA,IAAID,IAAI,CAACC,UAAU,CAAC,GAAGD,IAAI,CAACE,SAAS,CAAC,IAAIf,CAAC,GAAGW,gBAAgB,CAACT,MAAM,GAAG,CAAC,GAAGS,gBAAgB,CAACX,CAAC,GAAG,CAAC,CAAC,CAACc,UAAU,CAAC,GAAG,CAAC,CAAC,EAAE;UAClH,OAAO;YACHT,KAAK,EAAGQ,IAAI,CAACC,UAAU,CAAC,GAAGD,IAAI,CAACE,SAAS,CAAC;AAC1CT,YAAAA,GAAG,EAAKN,CAAC,GAAGW,gBAAgB,CAACT,MAAM,GAAG,CAAC,GAAGS,gBAAgB,CAACX,CAAC,GAAG,CAAC,CAAC,CAACc,UAAU,CAAC,GAAG,CAAA;WACnF,CAAA;AACL,SAAA;AACJ,OAAA;AACJ,KAAA;AACA,IAAA,OAAO,KAAK,CAAA;AAChB,GAAA;AACAF,EAAAA,yBAAyBA,CAAClB,MAAM,EAAEgB,KAAK,EAAE;AACrC,IAAA,MACIL,KAAK,GAASK,KAAK,CAACL,KAAK;MACzBC,GAAG,GAAWI,KAAK,CAACJ,GAAG;AACvBU,MAAAA,WAAW,GAAG,EAAE,CAAA;IACpB,KAAK,IAAIhB,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGP,MAAM,CAACuB,OAAO,CAACP,KAAK,CAAC,EAAEV,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;AACnD,MAAA,MAAMa,IAAI,GAAGnB,MAAM,CAACM,CAAC,CAAC,CAAA;MACtB,IAAI,IAAI,CAACZ,WAAW,CAACyB,IAAI,EAAEH,KAAK,CAAC,IAAIQ,UAAU,CAACC,cAAc,CAACd,KAAK,EAAEC,GAAG,EAAEO,IAAI,CAACR,KAAK,EAAEQ,IAAI,CAACP,GAAG,CAAC,EAAE;AAC9FU,QAAAA,WAAW,CAACI,IAAI,CAACP,IAAI,CAAC,CAAA;AAC1B,OAAA;AACJ,KAAA;IACAG,WAAW,CAACK,IAAI,CAAC,IAAI,CAACC,eAAe,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;AACjD,IAAA,OAAOP,WAAW,CAAA;AACtB,GAAA;AACAM,EAAAA,eAAeA,CAACE,EAAE,EAAEC,EAAE,EAAE;IACpB,MAAM;AAAEzC,MAAAA,SAAAA;AAAU,KAAC,GAAG,IAAI,CAAA;IAC1B,OAAOwC,EAAE,CAACxC,SAAS,CAAC,GAAGyC,EAAE,CAACzC,SAAS,CAAC,CAAA;AACxC,GAAA;AACAoB,EAAAA,UAAUA,CAACV,MAAM,EAAEgC,UAAU,EAAE;AAC3B,IAAA,MACIC,UAAU,GAAGjC,MAAM,CAACgC,UAAU,CAAC;MAC/B9H,MAAM,GAAO,CAAC+H,UAAU,CAAC,CAAA;AAC7B,IAAA,IAAID,UAAU,IAAIhC,MAAM,CAACQ,MAAM,GAAG,CAAC,EAAE;AACjC,MAAA,OAAOtG,MAAM,CAAA;AACjB,KAAA;IACA,IAAI;MAAEyG,KAAK;AAAEC,MAAAA,GAAAA;AAAI,KAAC,GAAGqB,UAAU,CAAA;AAC/B,IAAA,KAAK,IAAI3B,CAAC,GAAG0B,UAAU,GAAG,CAAC,EAAEzB,CAAC,GAAGP,MAAM,CAACQ,MAAM,EAAEF,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;AACxD,MAAA,MAAMa,IAAI,GAAGnB,MAAM,CAACM,CAAC,CAAC,CAAA;MACtB,IAAI,CAAC,IAAI,CAACZ,WAAW,CAACyB,IAAI,EAAEc,UAAU,CAAC,IAAI,CAACT,UAAU,CAACC,cAAc,CAACd,KAAK,EAAEC,GAAG,EAAEO,IAAI,CAACR,KAAK,EAAEQ,IAAI,CAACP,GAAG,CAAC,EAAE;AACrG,QAAA,MAAA;AACJ,OAAA;AACA1G,MAAAA,MAAM,CAACwH,IAAI,CAACP,IAAI,CAAC,CAAA;MACjBR,KAAK,GAAGa,UAAU,CAACU,GAAG,CAACvB,KAAK,EAAEQ,IAAI,CAACR,KAAK,CAAC,CAAA;MACzCC,GAAG,GAAKY,UAAU,CAACW,GAAG,CAAChB,IAAI,CAACP,GAAG,EAAEA,GAAG,CAAC,CAAA;AACzC,KAAA;AACA,IAAA,OAAO1G,MAAM,CAAA;AACjB,GAAA;AACJ,CAAC;;ACzID;AACA;AACA;AACA,MACIkI,QAAQ,GAAGC,MAAM,IAAK,CAACA,MAAM,IAAIC,KAAK,CAACC,OAAO,CAACF,MAAM,CAAC,GAAIA,MAAM,GAAG,CAACA,MAAM,CAAC;EAC3EG,UAAU,GAAGA,CAACC,OAAO,EAAEC,KAAK,EAAEC,aAAa,KAAMF,OAAO,IAAIA,OAAO,CAACC,KAAK,CAAC,KAAK,IAAI,GAAID,OAAO,CAACC,KAAK,CAAC,GAAGC,aAAa,CAAA;AACzH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAevD,CAAAA,MAAM,IAAI,MAAMwD,WAAW,UAAUxD,MAAM,IAAIvG,IAAI,EAAE;EAChE,OAAOyC,KAAK,GAAG,aAAa,CAAA;AAC5B,EAAA,OAAOuH,YAAY,GAAG;AAClB;AACR;AACA;AACA;AACA;AACQC,IAAAA,UAAU,EAAG,cAAc;AAC3B;AACR;AACA;AACA;AACA;AACQC,IAAAA,aAAa,EAAG,KAAK;AACrB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQC,IAAAA,iBAAiB,EAAG,IAAI;AACxB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQC,IAAAA,mBAAmB,EAAG,IAAA;GACzB,CAAA;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,IAAIC,UAAUA,GAAG;AACb,IAAA,OAAO,CAAC,IAAI,CAACC,IAAI,CAAC,CAAA;AACtB,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;EACI,IAAIC,WAAWA,GAAG;IACd,MACIzG,EAAE,GAAG,IAAI;AACT,MAAA;AAAEsG,QAAAA,mBAAAA;AAAoB,OAAC,GAAGtG,EAAE,CAAA;AAChC,IAAA,OAAOsG,mBAAmB,GAAGtG,EAAE,CAAC0G,QAAQ,CAACJ,mBAAmB,EAAEtG,EAAE,EAAE,CAACA,EAAE,CAAC,CAAC,GAAGA,EAAE,CAAC2G,oBAAoB,CAAA;AACrG,GAAA;EACA,IAAIA,oBAAoBA,GAAG;IACvB,MACI3G,EAAE,GAAG,IAAI;AACT,MAAA;QAAEuG,UAAU;AAAEJ,QAAAA,UAAAA;AAAW,OAAC,GAAGnG,EAAE;MAC/BqG,iBAAiB,GAAGrG,EAAE,CAACqG,iBAAiB,IAAIZ,QAAQ,CAACzF,EAAE,CAAC4G,wBAAwB,CAAC;MACjFC,OAAO,GAAGhB,UAAU,CAACQ,iBAAiB,EAAE,CAAC,EAAEF,UAAU,CAAC;AACtDlC,MAAAA,GAAG,GAAGsC,UAAU,CAAC1C,MAAM,GAAG,CAAC,IAAI,CAAAwC,iBAAiB,KAAjBA,IAAAA,IAAAA,iBAAiB,uBAAjBA,iBAAiB,CAAExC,MAAM,IAAG,CAAC,IACxDgB,UAAU,CAACa,MAAM,CAACa,UAAU,CAAC,CAAC,CAAC,EAAEM,OAAO,CAAC,KAAKhC,UAAU,CAACa,MAAM,CAACa,UAAU,CAAC,CAAC,CAAC,EAAEM,OAAO,CACzF,CAAA;AACL;AACA,IAAA,IAAIC,GAAG,GAAGjC,UAAU,CAACa,MAAM,CAACa,UAAU,CAAC,CAAC,CAAC,EAAEM,OAAO,CAAC,CAAA;AACnD,IAAA,IAAI5C,GAAG,EAAE;AACL;MACA6C,GAAG,GAAGjC,UAAU,CAACkC,WAAW,CAACR,UAAU,EACnCV,UAAU,CAACQ,iBAAiB,EAAE,CAAC,EAAG,CAAA,CAAA,EAAGF,UAAW,CAAA,EAAEnG,EAAE,CAACoG,aAAc,CAAGD,CAAAA,EAAAA,UAAW,CAAC,CAAA,CAAC,CAAC,CAAA;AAC5F,KAAA;AACA,IAAA,OAAOW,GAAG,CAAA;AACd,GAAA;EACAE,uBAAuBA,CAACtB,MAAM,EAAE;IAC5B,OAAOD,QAAQ,CAACC,MAAM,CAAC,CAAA;AAC3B,GAAA;AACA,EAAA,IAAIuB,WAAWA,GAAG,EAAE;AACxB,CAAC;;ACnHD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAAexE,CAAAA,MAAM,IAAI,MAAMyE,cAAc,UAAUzE,MAAM,IAAIvG,IAAI,EAAE;EACnE,WAAWyC,KAAKA,GAAG;AACf,IAAA,OAAO,gBAAgB,CAAA;AAC3B,GAAA;AACA;EACA,WAAWuH,YAAYA,GAAG;IACtB,OAAO;AACH;AACZ;AACA;AACA;AACA;AACA;AACYiB,MAAAA,qBAAqB,EAAG,KAAK;AAC7B;AACZ;AACA;AACA;AACA;AACA;AACYC,MAAAA,mBAAmB,EAAG,KAAK;AAC3B;AACZ;AACA;AACA;AACA;AACA;AACYC,MAAAA,eAAe,EAAG,KAAK;AACvB;AACZ;AACA;AACA;AACA;AACA;AACYC,MAAAA,0BAA0B,EAAG,IAAA;KAChC,CAAA;AACL,GAAA;EACA,WAAWrK,aAAaA,GAAG;IACvB,OAAO;AACH;AACZ;AACA;AACA;AACA;AACYsK,MAAAA,gBAAgB,EAAG,KAAK;AACxB;AACZ;AACA;AACA;AACA;AACA;AACYC,MAAAA,sBAAsB,EAAG,KAAK;AAC9B;AACZ;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,gBAAgB,EAAG,sBAAsB;AACzC;AACZ;AACA;AACA;AACA;AACA;AACYC,MAAAA,8BAA8B,EAAG,KAAK;AACtC;AACZ;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,gCAAgC,EAAG,IAAI;AACvC;AACZ;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,uBAAuB,EAAG,6BAA6B;AACvD;AACZ;AACA;AACA;AACA;AACYC,MAAAA,kBAAkB,EAAG,EAAC;KACzB,CAAA;AACL,GAAA;AACA;AACA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;AACAC,EAAAA,cAAcA,GAAG;AA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"}