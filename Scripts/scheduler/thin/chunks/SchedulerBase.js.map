{"version":3,"file":"SchedulerBase.js","sources":["../../../../Scheduler/lib/Scheduler/view/VerticalTimeAxis.js","../../../../Scheduler/lib/Scheduler/column/VerticalTimeAxisColumn.js","../../../../Scheduler/lib/Scheduler/eventlayout/HorizontalLayout.js","../../../../Scheduler/lib/Scheduler/eventlayout/HorizontalLayoutPack.js","../../../../Scheduler/lib/Scheduler/eventlayout/HorizontalLayoutStack.js","../../../../Scheduler/lib/Scheduler/feature/base/ResourceTimeRangesBase.js","../../../../Scheduler/lib/Scheduler/view/DependencyEditor.js","../../../../Scheduler/lib/Scheduler/feature/DependencyEdit.js","../../../../Scheduler/lib/Scheduler/feature/ScheduleContext.js","../../../../Scheduler/lib/Scheduler/feature/EventCopyPaste.js","../../../../Scheduler/lib/Scheduler/feature/EventDrag.js","../../../../Scheduler/lib/Scheduler/feature/EventDragCreate.js","../../../../Scheduler/lib/Scheduler/feature/EventTooltip.js","../../../../Scheduler/lib/Scheduler/feature/StickyEvents.js","../../../../Scheduler/lib/Scheduler/feature/TimeRanges.js","../../../../Scheduler/lib/Scheduler/view/mixin/SchedulerDom.js","../../../../Scheduler/lib/Scheduler/view/mixin/SchedulerDomEvents.js","../../../../Scheduler/lib/Scheduler/view/mixin/SchedulerEventRendering.js","../../../../Scheduler/lib/Scheduler/view/mixin/SchedulerStores.js","../../../../Scheduler/lib/Scheduler/view/mixin/SchedulerScroll.js","../../../../Scheduler/lib/Scheduler/view/mixin/SchedulerRegions.js","../../../../Scheduler/lib/Scheduler/view/mixin/SchedulerState.js","../../../../Scheduler/lib/Scheduler/view/orientation/HorizontalRendering.js","../../../../Scheduler/lib/Scheduler/eventlayout/VerticalLayout.js","../../../../Scheduler/lib/Scheduler/view/orientation/VerticalRendering.js","../../../../Scheduler/lib/Scheduler/view/SchedulerBase.js"],"sourcesContent":["import TimeAxisBase from './TimeAxisBase.js';\n\n/**\n * @module Scheduler/view/VerticalTimeAxis\n */\n\n/**\n * Widget that renders a vertical time axis. Only renders ticks in view. Used in vertical mode.\n * @extends Core/widget/Widget\n * @private\n */\nexport default class VerticalTimeAxis extends TimeAxisBase {\n\n    static get $name() {\n        return 'VerticalTimeAxis';\n    }\n\n    static get configurable() {\n        return {\n            cls : 'b-verticaltimeaxis',\n\n            sizeProperty : 'height',\n\n            positionProperty : 'top',\n\n            wrapText : true\n        };\n    }\n\n    // All cells overlayed in the same space.\n    // For future use.\n    buildHorizontalCells() {\n        const\n            me                   = this,\n            { client }           = me,\n            stickyHeaders        = client?.stickyHeaders,\n            featureHeaderConfigs = [],\n            cellConfigs          = me.levels.reduce((result, level, i) => {\n                if (level.cells) {\n                    result.push(...level.cells?.filter(cell => cell.start < me.endDate && cell.end > me.startDate).map((cell, j, cells) => ({\n                        role      : 'presentation',\n                        className : {\n                            'b-sch-header-timeaxis-cell' : 1,\n                            [cell.headerCellCls]         : cell.headerCellCls,\n                            [`b-align-${cell.align}`]    : cell.align,\n                            'b-last'                     : j === cells.length - 1,\n                            'b-lowest'                   : i === me.levels.length - 1\n                        },\n                        dataset : {\n                            tickIndex      : cell.index,\n                            cellId         : `${i}-${cell.index}`,\n                            headerPosition : i,\n                            // Used in export tests to resolve dates from tick elements\n                            ...globalThis.DEBUG && { date : cell.start.getTime() }\n                        },\n                        style : {\n                            // DomHelper appends px to numeric dimensions\n                            top       : cell.coord,\n                            height    : cell.width,\n                            minHeight : cell.width\n                        },\n                        children : [\n                            {\n                                role      : 'presentation',\n                                className : {\n                                    'b-sch-header-text' : 1,\n                                    'b-sticky-header'   : stickyHeaders\n                                },\n                                html : cell.value\n                            }\n                        ]\n                    })));\n                }\n                return result;\n            }, []);\n\n        // When tested in isolation there is no client\n        client?.getHeaderDomConfigs(featureHeaderConfigs);\n\n        cellConfigs.push(...featureHeaderConfigs);\n\n        // noinspection JSSuspiciousNameCombination\n        return {\n            className : me.widgetClassList,\n            dataset   : {\n                headerFeature  : `headerRow0`,\n                headerPosition : 0\n            },\n            syncOptions : {\n                // Keep a maximum of 5 released cells. Might be fine with fewer since ticks are fixed width.\n                // Prevents an unnecessary amount of cells from sticking around when switching from narrow to\n                // wide tickSizes\n                releaseThreshold : 5,\n                syncIdField      : 'cellId'\n            },\n            children : cellConfigs\n        };\n    }\n\n    get height() {\n        return this.size;\n    }\n}\n","import Column from '../../Grid/column/Column.js';\nimport ColumnStore from '../../Grid/data/ColumnStore.js';\nimport VerticalTimeAxis from '../view/VerticalTimeAxis.js';\n\n/**\n * @module Scheduler/column/VerticalTimeAxisColumn\n */\n\n/**\n * A special column containing the time axis labels when the Scheduler is used in vertical mode. You can configure,\n * it using the {@link Scheduler.view.Scheduler#config-verticalTimeAxisColumn} config object.\n *\n * **Note**: this column is sized by flexing to consume full width of its containing {@link Grid.view.SubGrid}. To\n * change width of this column, instead size the subgrid like so:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     mode           : 'vertical',\n *     subGridConfigs : {\n *         locked : {\n *             width : 300\n *         }\n *     }\n * });\n * ```\n *\n * @extends Grid/column/Column\n */\nexport default class VerticalTimeAxisColumn extends Column {\n\n    static $name = 'VerticalTimeAxisColumn';\n\n    static get type() {\n        return 'verticalTimeAxis';\n    }\n\n    static get defaults() {\n        return {\n            /**\n             * @hideconfigs autoWidth, autoHeight\n             */\n\n            /**\n             * Set to false to prevent this column header from being dragged.\n             * @config {Boolean} draggable\n             * @category Interaction\n             * @default false\n             * @hide\n             */\n            draggable : false,\n\n            /**\n             * Set to false to prevent grouping by this column.\n             * @config {Boolean} groupable\n             * @category Interaction\n             * @default false\n             * @hide\n             */\n            groupable : false,\n\n            /**\n             * Allow column visibility to be toggled through UI.\n             * @config {Boolean} hideable\n             * @default false\n             * @category Interaction\n             * @hide\n             */\n            hideable : false,\n\n            /**\n             * Show column picker for the column.\n             * @config {Boolean} showColumnPicker\n             * @default false\n             * @category Menu\n             * @hide\n             */\n            showColumnPicker : false,\n\n            /**\n             * Allow filtering data in the column (if Filter feature is enabled)\n             * @config {Boolean} filterable\n             * @default false\n             * @category Interaction\n             * @hide\n             */\n            filterable : false,\n\n            /**\n             * Allow sorting of data in the column\n             * @config {Boolean} sortable\n             * @category Interaction\n             * @default false\n             * @hide\n             */\n            sortable : false,\n\n            // /**\n            //  * Set to `false` to prevent the column from being drag-resized when the ColumnResize plugin is enabled.\n            //  * @config {Boolean} resizable\n            //  * @default false\n            //  * @category Interaction\n            //  * @hide\n            //  */\n            // resizable : false,\n\n            /**\n             * Allow searching in the column (respected by QuickFind and Search features)\n             * @config {Boolean} searchable\n             * @default false\n             * @category Interaction\n             * @hide\n             */\n            searchable : false,\n\n            /**\n             * Specifies if this column should be editable, and define which editor to use for editing cells in the column (if CellEdit feature is enabled)\n             * @config {String} editor\n             * @default false\n             * @category Interaction\n             * @hide\n             */\n            editor : false,\n\n            /**\n             * Set to `true` to show a context menu on the cell elements in this column\n             * @config {Boolean} enableCellContextMenu\n             * @default false\n             * @category Menu\n             * @hide\n             */\n            enableCellContextMenu : false,\n\n            /**\n             * @config {Function|Boolean} tooltipRenderer\n             * @hide\n             */\n            tooltipRenderer : false,\n\n            /**\n             * Column minimal width. If value is Number then minimal width is in pixels\n             * @config {Number|String} minWidth\n             * @default 0\n             * @category Layout\n             */\n            minWidth : 0,\n\n            resizable : false,\n\n            cellCls : 'b-verticaltimeaxiscolumn',\n            locked  : true,\n\n            flex : 1,\n\n            alwaysClearCell : false\n        };\n    }\n\n    get isFocusable() {\n        return false;\n    }\n\n    construct(data) {\n        super.construct(...arguments);\n\n        this.view = new VerticalTimeAxis({\n            model  : this.grid.timeAxisViewModel,\n            client : this.grid\n        });\n    }\n\n    renderer({ cellElement, size }) {\n        this.view.render(cellElement);\n\n        size.height = this.view.height;\n    }\n\n    // This function is not meant to be called by any code other than Base#getCurrentConfig().\n    // It extracts the current configs (fields) for the column, removing irrelevant ones\n    getCurrentConfig(options) {\n        const result = super.getCurrentConfig(options);\n\n        // Remove irrelevant configs\n        delete result.id;\n        delete result.region;\n        delete result.type;\n        delete result.field;\n        delete result.ariaLabel;\n        delete result.cellAriaLabel;\n\n        return result;\n    }\n}\n\nColumnStore.registerColumnType(VerticalTimeAxisColumn);\n","import Base from '../../Core/Base.js';\n\n/**\n * @module Scheduler/eventlayout/HorizontalLayout\n */\n\n/**\n * Base class for horizontal layouts (HorizontalLayoutPack and HorizontalLayoutStack). Should not be used directly,\n * instead specify {@link Scheduler.view.mixin.SchedulerEventRendering#config-eventLayout} in Scheduler config (stack,\n * pack or none):\n *\n * @example\n * let scheduler = new Scheduler({\n *   eventLayout: 'stack'\n * });\n *\n * @abstract\n * @private\n */\nexport default class HorizontalLayout extends Base {\n    static get defaultConfig() {\n        return {\n            nbrOfBandsByResource        : {},\n            bandIndexToPxConvertFn      : null,\n            bandIndexToPxConvertThisObj : null\n        };\n    }\n\n    clearCache(resource) {\n        if (resource) {\n            delete this.nbrOfBandsByResource[resource.id];\n        }\n        else {\n            this.nbrOfBandsByResource = {};\n        }\n    }\n\n    /**\n     * This method performs layout on an array of event render data and returns amount of _bands_. Band is a multiplier of a\n     * configured {@link Scheduler.view.Scheduler#config-rowHeight} to calculate total row height required to fit all\n     * events.\n     * This method should not be used directly, it is called by the Scheduler during the row rendering process.\n     * @param {EventRenderData[]} events Unordered array of event render data, sorting may be required\n     * @param {Scheduler.model.ResourceModel} resource The resource for which the events are being laid out.\n     * @returns {Number}\n     */\n    applyLayout(events, resource) {\n        // Return number of bands required\n        return this.nbrOfBandsByResource[resource.id] = this.layoutEventsInBands(events, resource);\n    }\n\n    /**\n     * This method iterates over events and calculates top position for each of them. Default layouts calculate\n     * positions to avoid events overlapping horizontally (except for the 'none' layout). Pack layout will squeeze events to a single\n     * row by reducing their height, Stack layout will increase the row height and keep event height intact.\n     * This method should not be used directly, it is called by the Scheduler during the row rendering process.\n     * @param {EventRenderData[]} events Unordered array of event render data, sorting may be required\n     * @param {Scheduler.model.ResourceModel} resource The resource for which the events are being laid out.\n     */\n    layoutEventsInBands(events, resource) {\n        throw new Error('Implement in subclass');\n    }\n}\n","import HorizontalLayout from './HorizontalLayout.js';\nimport PackMixin from './PackMixin.js';\n\n/**\n * @module Scheduler/eventlayout/HorizontalLayoutPack\n */\n\n/**\n * Handles layout of events within a row (resource) in horizontal mode. Packs events (adjusts their height) to fit\n * available row height\n *\n * @extends Scheduler/eventlayout/HorizontalLayout\n * @mixes Scheduler/eventlayout/PackMixin\n * @private\n */\nexport default class HorizontalLayoutPack extends HorizontalLayout.mixin(PackMixin) {\n    static get $name() {\n        return 'HorizontalLayoutPack';\n    }\n\n    static get configurable() {\n        return {\n            type : 'pack'\n        };\n    }\n\n    // Packs the events to consume as little space as possible\n    layoutEventsInBands(events) {\n        const result = this.packEventsInBands(events, (event, j, slot, slotSize) => {\n            event.height = slotSize;\n            event.top    = slot.start + (j * slotSize);\n        });\n\n        events.forEach(event => {\n            Object.assign(\n                event,\n                this.bandIndexToPxConvertFn.call(\n                    this.bandIndexToPxConvertThisObj || this,\n                    event.top,\n                    event.height,\n                    event.eventRecord,\n                    event.resourceRecord\n                )\n            );\n        });\n\n        return result;\n    }\n}\n","import HorizontalLayout from './HorizontalLayout.js';\n\n/**\n * @module Scheduler/eventlayout/HorizontalLayoutStack\n */\n\n/**\n * Handles layout of events within a row (resource) in horizontal mode. Stacks events, increasing row height when to fit\n * all overlapping events.\n *\n * This layout is used by default in horizontal mode.\n *\n * @extends Scheduler/eventlayout/HorizontalLayout\n * @private\n */\nexport default class HorizontalLayoutStack extends HorizontalLayout {\n    static get $name() {\n        return 'HorizontalLayoutStack';\n    }\n\n    static get configurable() {\n        return {\n            type : 'stack'\n        };\n    }\n\n    // Input: Array of event layout data\n    // heightRun is used when pre-calculating row heights, taking a cheaper path\n    layoutEventsInBands(events, resource, heightRun = false) {\n        let verticalPosition = 0;\n\n        do {\n            let eventIndex = 0,\n                event      = events[0];\n\n            while (event) {\n                if (!heightRun) {\n                    // Apply band height to the event cfg\n                    event.top = this.bandIndexToPxConvertFn.call(\n                        this.bandIndexToPxConvertThisObj || this,\n                        verticalPosition,\n                        event.eventRecord,\n                        event.resourceRecord\n                    );\n                }\n\n                // Remove it from the array and continue searching\n                events.splice(eventIndex, 1);\n\n                eventIndex = this.findClosestSuccessor(event, events);\n                event = events[eventIndex];\n            }\n\n            verticalPosition++;\n        } while (events.length > 0);\n\n        // Done!\n        return verticalPosition;\n    }\n\n    // <remove-on-release>\n    // TODO: optimize this for better performance with many events per resource\n    // </remove-on-release>\n    findClosestSuccessor(eventRenderData, events) {\n        const\n            { endMS, group } = eventRenderData,\n            isMilestone      = eventRenderData.eventRecord && eventRenderData.eventRecord.duration === 0;\n\n        let minGap      = Infinity,\n            closest,\n            gap,\n            event;\n\n        for (let i = 0, l = events.length; i < l; i++) {\n            event = events[i];\n            gap = event.startMS - endMS;\n\n            if (\n                gap >= 0 && gap < minGap &&\n                // Two milestones should not overlap\n                (gap > 0 || event.endMS - event.startMS > 0 || !isMilestone)\n            ) {\n                // Events are sorted by group, so when we find first event with a different group, we can stop iteration\n                if (this.grouped && group !== event.group) {\n                    break;\n                }\n                closest = i;\n                minGap  = gap;\n            }\n        }\n\n        return closest;\n    }\n}\n","import InstancePlugin from '../../../Core/mixin/InstancePlugin.js';\nimport AttachToProjectMixin from '../../data/mixin/AttachToProjectMixin.js';\nimport StringHelper from '../../../Core/helper/StringHelper.js';\nimport EventHelper from '../../../Core/helper/EventHelper.js';\n\n/**\n * @module Scheduler/feature/base/ResourceTimeRangesBase\n */\n\n/**\n * Abstract base class for ResourceTimeRanges and ResourceNonWorkingTime features.\n * You should not use this class directly.\n *\n * @extends Core/mixin/InstancePlugin\n * @abstract\n */\nexport default class ResourceTimeRangesBase extends InstancePlugin.mixin(AttachToProjectMixin) {\n    //region Config\n\n    static configurable = {\n        /**\n         * Specify value to use for the tabIndex attribute of range elements\n         * @config {Number}\n         * @category Misc\n         */\n        tabIndex : null,\n\n        entityName : 'resourceTimeRange'\n    };\n\n    static get pluginConfig()  {\n        return {\n            chain    : ['getEventsToRender', 'onEventDataGenerated', 'noFeatureElementsInAxis'],\n            override : ['matchScheduleCell', 'resolveResourceRecord']\n        };\n    }\n\n    // Let Scheduler know if we have ResourceTimeRanges in view or not\n    noFeatureElementsInAxis() {\n        const { timeAxis } = this.client;\n        return !this.needsRefresh && this.store && !this.store.storage.values.some(t => timeAxis.isTimeSpanInAxis(t));\n    }\n\n    //endregion\n\n    //region Init\n\n    doDisable(disable) {\n        if (this.client.isPainted) {\n            this.client.refresh();\n        }\n\n        super.doDisable(disable);\n    }\n\n    updateTabIndex() {\n        if (!this.isConfiguring) {\n            this.client.refresh();\n        }\n    }\n\n    //endregion\n\n    getEventsToRender(resource, events) {\n        throw new Error('Implement in subclass');\n    }\n\n    // Called for each event during render, allows manipulation of render data. Adjust any resource time ranges\n    // (chained function from Scheduler)\n    onEventDataGenerated(renderData) {\n        const\n            me                       = this,\n            { eventRecord, iconCls } = renderData;\n\n        if (me.shouldInclude(eventRecord)) {\n            if (me.client.isVertical) {\n                renderData.width = renderData.resourceRecord.columnWidth || me.client.resourceColumnWidth;\n            }\n            else {\n                renderData.top = 0;\n            }\n\n            // Flag that we should fill entire row/col\n            renderData.fillSize = true;\n            // Add our own cls\n            renderData.wrapperCls['b-sch-resourcetimerange'] = 1;\n            if (me.rangeCls) {\n                renderData.wrapperCls[me.rangeCls] = 1;\n            }\n            renderData.wrapperCls[`b-sch-color-${eventRecord.timeRangeColor}`] = eventRecord.timeRangeColor;\n            // Add label\n            renderData.eventContent.text = eventRecord.name;\n            renderData.children.push(renderData.eventContent);\n\n            // Allow configuring tabIndex\n            renderData.tabIndex = me.tabIndex != null ? String(me.tabIndex) : null;\n\n            // Add icon\n            if (iconCls?.length > 0) {\n                renderData.children.unshift({\n                    tag       : 'i',\n                    className : iconCls.toString()\n                });\n            }\n\n            // Event data for DOMSync comparison\n            renderData.eventId = me.generateElementId(eventRecord);\n        }\n    }\n\n    /**\n     * Generates ID from the passed time range record\n     * @param {Scheduler.model.TimeSpan} record\n     * @returns {String} Generated ID for the DOM element\n     * @internal\n     */\n    generateElementId(record) {\n        return record.domId;\n    }\n\n    resolveResourceTimeRangeRecord(rangeElement) {\n        return rangeElement?.closest(`.${this.rangeCls}`)?.elementData.eventRecord;\n    }\n\n    getElementFromResourceTimeRangeRecord(record) {\n        // return this.client.foregroundCanvas.querySelector(`[data-event-id=\"${record.domId}\"]`);\n        return this.client.foregroundCanvas.syncIdMap[record.domId];\n    }\n\n    resolveResourceRecord(event) {\n        const record = this.overridden.resolveResourceRecord(...arguments);\n\n        return record || this.resolveResourceTimeRangeRecord(event.target || event)?.resource;\n    }\n\n    shouldInclude(eventRecord) {\n        throw new Error('Implement in subclass');\n    }\n\n    // Called when a ResourceTimeRangeModel is manipulated, relays to Scheduler#onInternalEventStoreChange which updates to UI\n    onStoreChange(event) {\n        // Edge case for scheduler not using any events, it has to refresh anyway to get rid of ResourceTimeRanges\n        if (event.action === 'removeall' || event.action === 'dataset') {\n            this.needsRefresh = true;\n        }\n\n        this.client.onInternalEventStoreChange(event);\n\n        this.needsRefresh = false;\n    }\n\n    // Override to let scheduler find the time cell from a resource time range element\n    matchScheduleCell(target) {\n        let cell = this.overridden.matchScheduleCell(target);\n\n        if (!cell && this.enableMouseEvents) {\n            const\n                { client }   = this,\n                rangeElement = target.closest(`.${this.rangeCls}`);\n\n            cell = rangeElement && client.getCell({\n                record : client.isHorizontal ? rangeElement.elementData.resource : client.store.first,\n                column : client.timeAxisColumn\n            });\n        }\n\n        return cell;\n    }\n\n    handleRangeMouseEvent(domEvent) {\n        const\n            me           = this,\n            rangeElement = domEvent.target.closest(`.${me.rangeCls}`);\n\n        if (rangeElement) {\n            const\n                eventName               = EventHelper.eventNameMap[domEvent.type] ?? StringHelper.capitalize(domEvent.type),\n                resourceTimeRangeRecord = me.resolveResourceTimeRangeRecord(rangeElement);\n\n            me.client.trigger(me.entityName + eventName, {\n                feature                    : me,\n                [`${me.entityName}Record`] : resourceTimeRangeRecord,\n                resourceRecord             : me.client.resourceStore.getById(resourceTimeRangeRecord.resourceId),\n                domEvent\n            });\n        }\n    }\n\n    updateEnableMouseEvents(enable) {\n        const\n            me         = this,\n            { client } = me;\n\n        me.mouseEventsDetacher?.();\n        me.mouseEventsDetacher = null;\n\n        if (enable) {\n            function attachMouseEvents() {\n                me.mouseEventsDetacher = EventHelper.on({\n                    element     : client.foregroundCanvas,\n                    delegate    : `.${me.rangeCls}`,\n                    mousedown   : 'handleRangeMouseEvent',\n                    mouseup     : 'handleRangeMouseEvent',\n                    click       : 'handleRangeMouseEvent',\n                    dblclick    : 'handleRangeMouseEvent',\n                    contextmenu : 'handleRangeMouseEvent',\n                    mouseover   : 'handleRangeMouseEvent',\n                    mouseout    : 'handleRangeMouseEvent',\n                    thisObj     : me\n                });\n            }\n\n            client.whenVisible(attachMouseEvents);\n        }\n\n        client.element.classList.toggle('b-interactive-resourcetimeranges', Boolean(enable));\n    }\n}\n\n// No feature based styling needed, do not add a cls to Scheduler\nResourceTimeRangesBase.featureClass = '';\n","import Popup from '../../Core/widget/Popup.js';\n\n/**\n * @module Scheduler/view/DependencyEditor\n */\n\n/**\n * A dependency editor popup.\n *\n * @extends Core/widget/Popup\n * @private\n */\nexport default class DependencyEditor extends Popup {\n\n    static get $name() {\n        return 'DependencyEditor';\n    }\n\n    static get defaultConfig() {\n        return {\n            items     : [],\n            draggable : {\n                handleSelector : ':not(button,.b-field-inner)' // blacklist buttons and field inners\n            },\n            axisLock : 'flexible'\n        };\n    }\n\n    processWidgetConfig(widget) {\n        const { dependencyEditFeature } = this;\n\n        if (widget.ref === 'lagField' && !dependencyEditFeature.showLagField) {\n            return false;\n        }\n        if (widget.ref === 'deleteButton' && !dependencyEditFeature.showDeleteButton) {\n            return false;\n        }\n\n        return super.processWidgetConfig(widget);\n    }\n\n    afterShow(...args) {\n        const { deleteButton } = this.widgetMap;\n\n        // Only show delete button if the dependency record belongs to a store\n        if (deleteButton) {\n            deleteButton.hidden = !this.record.isPartOfStore();\n        }\n\n        super.afterShow(...args);\n    }\n\n    onInternalKeyDown(event) {\n        this.trigger('keyDown', { event });\n        super.onInternalKeyDown(event);\n    }\n}\n","import GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport ObjectHelper from '../../Core/helper/ObjectHelper.js';\nimport Rectangle from '../../Core/helper/util/Rectangle.js';\nimport '../../Core/widget/DisplayField.js';\nimport '../../Core/widget/DurationField.js';\nimport DependencyEditor from '../view/DependencyEditor.js';\nimport InstancePlugin from '../../Core/mixin/InstancePlugin.js';\nimport DependencyModel from '../model/DependencyModel.js';\nimport Duration from '../../Core/data/Duration.js';\n\n/**\n * @module Scheduler/feature/DependencyEdit\n */\n\n/**\n * Feature that displays a popup containing fields for editing a dependency. Requires the\n * {@link Scheduler.feature.Dependencies} feature to be enabled. Double click a line in the demo below to show the\n * editor.\n *\n * {@inlineexample Scheduler/feature/Dependencies.js}\n *\n * ## Customizing the built-in widgets\n *\n * ```javascript\n *  const scheduler = new Scheduler({\n *      columns : [\n *          { field : 'name', text : 'Name', width : 100 }\n *      ],\n *      features : {\n *          dependencies   : true,\n *          dependencyEdit : {\n *              editorConfig : {\n *                  items : {\n *                      // Custom label for the type field\n *                      typeField : {\n *                          label : 'Kind'\n *                      }\n *                  },\n *\n *                  bbar : {\n *                      items : {\n *                          // Hiding save button\n *                          saveButton : {\n *                              hidden : true\n *                          }\n *                      }\n *                  }\n *              }\n *          }\n *      }\n *  });\n * ```\n *\n * ## Built in widgets\n *\n * | Widget ref             | Type                              | Weight | Description               |\n * |------------------------|-----------------------------------|--------|---------------------------|\n * | `fromNameField`        | {@link Core.widget.DisplayField}  | 100    | From task name (readonly) |\n * | `toNameField`          | {@link Core.widget.DisplayField}  | 200    | To task name (readonly)   |\n * | `typeField`            | {@link Core.widget.Combo}         | 300    | Edit type                 |\n * | `lagField`             | {@link Core.widget.DurationField} | 400    | Edit lag                  |\n *\n * The built in buttons are:\n *\n * | Widget ref             | Type                       | Weight | Description                       |\n * |------------------------|----------------------------|--------|-----------------------------------|\n * | `saveButton`           | {@link Core.widget.Button} | 100    | Save button on the bbar           |\n * | `deleteButton`         | {@link Core.widget.Button} | 200    | Delete button on the bbar         |\n * | `cancelButton`         | {@link Core.widget.Button} | 300    | Cancel editing button on the bbar |\n *\n * This feature is **off** by default.\n * For info on enabling it, see {@link Grid.view.mixin.GridFeatures}.\n *\n * @extends Core/mixin/InstancePlugin\n * @demo Scheduler/dependencies\n * @classtype dependencyEdit\n * @feature\n */\nexport default class DependencyEdit extends InstancePlugin {\n\n    // <debug>\n    // region Localization test\n    static localization = [\n        'L{StartToStart}',\n        'L{StartToEnd}',\n        'L{EndToStart}',\n        'L{EndToEnd}'\n    ];\n    // endregion\n    // </debug>\n\n    //region Config\n\n    static get $name() {\n        return 'DependencyEdit';\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * True to hide this editor if a click is detected outside it (defaults to true)\n             * @config {Boolean}\n             * @default\n             * @category Editor\n             */\n            autoClose : true,\n\n            /**\n             * True to save and close this panel if ENTER is pressed in one of the input fields inside the panel.\n             * @config {Boolean}\n             * @default\n             * @category Editor\n             */\n            saveAndCloseOnEnter : true,\n\n            /**\n             * True to show a delete button in the form.\n             * @config {Boolean}\n             * @default\n             * @category Editor widgets\n             */\n            showDeleteButton : true,\n\n            /**\n             * The event that shall trigger showing the editor. Defaults to `dependencydblclick`, set to empty string or\n             * `null` to disable editing of dependencies.\n             * @config {String}\n             * @default\n             * @category Editor\n             */\n            triggerEvent : 'dependencydblclick',\n\n            /**\n             * True to show the lag field for the dependency\n             * @config {Boolean}\n             * @default\n             * @category Editor widgets\n             */\n            showLagField : false,\n\n            dependencyRecord : null,\n\n            /**\n             * Default editor configuration, used to configure the Popup.\n             * @config {PopupConfig}\n             * @category Editor\n             */\n            editorConfig : {\n                title       : 'L{Edit dependency}',\n                localeClass : this,\n                closable    : true,\n\n                defaults : {\n                    localeClass : this\n                },\n                items : {\n                    /**\n                     * Reference to the from name\n                     * @member {Core.widget.DisplayField} fromNameField\n                     * @readonly\n                     */\n                    fromNameField : {\n                        type   : 'display',\n                        weight : 100,\n                        label  : 'L{From}'\n                    },\n                    /**\n                     * Reference to the to name field\n                     * @member {Core.widget.DisplayField} toNameField\n                     * @readonly\n                     */\n                    toNameField : {\n                        type   : 'display',\n                        weight : 200,\n                        label  : 'L{To}'\n                    },\n                    /**\n                     * Reference to the type field\n                     * @member {Core.widget.Combo} typeField\n                     * @readonly\n                     */\n                    typeField : {\n                        type                  : 'combo',\n                        weight                : 300,\n                        label                 : 'L{Type}',\n                        name                  : 'type',\n                        editable              : false,\n                        valueField            : 'id',\n                        displayField          : 'name',\n                        localizeDisplayFields : true,\n                        buildItems            : function() {\n                            const dialog = this.parent;\n\n                            return Object.keys(DependencyModel.Type).map(type => ({\n                                id        : DependencyModel.Type[type],\n                                name      : dialog.L(type),\n                                localeKey : type\n                            }));\n                        }\n                    },\n\n                    /**\n                     * Reference to the lag field\n                     * @member {Core.widget.DurationField} lagField\n                     * @readonly\n                     */\n                    lagField : {\n                        type          : 'duration',\n                        weight        : 400,\n                        label         : 'L{Lag}',\n                        name          : 'lag',\n                        allowNegative : true\n                    }\n                },\n\n                bbar : {\n                    defaults : {\n                        localeClass : this\n                    },\n                    items : {\n                        foo : {\n                            type : 'widget',\n                            cls  : 'b-label-filler'\n                        },\n                        /**\n                         * Reference to the save button, if used\n                         * @member {Core.widget.Button} saveButton\n                         * @readonly\n                         */\n                        saveButton : {\n                            color : 'b-green',\n                            text  : 'L{Save}'\n                        },\n                        /**\n                         * Reference to the delete button, if used\n                         * @member {Core.widget.Button} deleteButton\n                         * @readonly\n                         */\n                        deleteButton : {\n                            color : 'b-gray',\n                            text  : 'L{Delete}'\n                        },\n                        /**\n                         * Reference to the cancel button, if used\n                         * @member {Core.widget.Button} cancelButton\n                         * @readonly\n                         */\n                        cancelButton : {\n                            color : 'b-gray',\n                            text  : 'L{Object.Cancel}'\n                        }\n                    }\n                }\n            }\n        };\n    }\n\n    //endregion\n\n    //region Init & destroy\n\n    construct(client, config) {\n        const me = this;\n\n        client.dependencyEdit = me;\n\n        super.construct(client, config);\n\n        if (!client.features.dependencies) {\n            throw new Error('Dependencies feature required when using DependencyEdit');\n        }\n\n        me.clientListenersDetacher = client.ion({\n            [me.triggerEvent] : me.onActivateEditor,\n            thisObj           : me\n        });\n    }\n\n    doDestroy() {\n        this.clientListenersDetacher();\n        this.editor?.destroy();\n        super.doDestroy();\n    }\n\n    //endregion\n\n    //region Editing\n\n    changeEditorConfig(config) {\n        const\n            me                         = this,\n            { autoClose, cls, client } = me;\n\n        return ObjectHelper.assign({\n            owner        : client,\n            align        : 'b-t',\n            id           : `${client.id}-dependency-editor`, // no-sanity\n            autoShow     : false,\n            anchor       : true,\n            scrollAction : 'realign',\n            clippedBy    : [client.timeAxisSubGridElement, client.bodyContainer],\n            constrainTo  : globalThis,\n            autoClose,\n            cls\n        }, config);\n    }\n\n    //endregion\n\n    //region Save\n\n    get isValid() {\n        return Object.values(this.editor.widgetMap).every(field => {\n            if (!field.name || field.hidden) {\n                return true;\n            }\n\n            return field.isValid !== false;\n        });\n    }\n\n    get values() {\n        const values = {};\n\n        this.editor.eachWidget(widget => {\n            if (!widget.name || widget.hidden) return;\n\n            values[widget.name] = widget.value;\n        }, true);\n\n        return values;\n    }\n\n    /**\n     * Template method, intended to be overridden. Called before the dependency record has been updated.\n     * @param {Scheduler.model.DependencyModel} dependencyRecord The dependency record\n     *\n     **/\n    onBeforeSave(dependencyRecord) {}\n\n    /**\n     * Template method, intended to be overridden. Called after the dependency record has been updated.\n     * @param {Scheduler.model.DependencyModel} dependencyRecord The dependency record\n     *\n     **/\n    onAfterSave(dependencyRecord) {}\n\n    /**\n     * Updates record being edited with values from the editor\n     * @private\n     */\n    updateRecord(dependencyRecord) {\n        const { values } = this;\n\n        // Engine does not understand { magnitude, unit } syntax\n        if (values.lag) {\n            values.lagUnit = values.lag.unit;\n            values.lag = values.lag.magnitude;\n        }\n\n        // Type replaces fromSide/toSide, if they are used\n        if ('type' in values) {\n            dependencyRecord.fromSide != null && (values.fromSide = null);\n            dependencyRecord.toSide != null && (values.toSide = null);\n        }\n\n        // Chronograph doesn't filter out undefined fields, it nullifies them instead\n        // https://github.com/bryntum/chronograph/issues/11\n        ObjectHelper.cleanupProperties(values, true);\n\n        dependencyRecord.set(values);\n    }\n\n    //endregion\n\n    //region Events\n\n    onPopupKeyDown({ event }) {\n        if (event.key === 'Enter' && this.saveAndCloseOnEnter && event.target.tagName.toLowerCase() === 'input') {\n            // Need to prevent this key events from being fired on whatever receives focus after the editor is hidden\n            event.preventDefault();\n\n            this.onSaveClick();\n        }\n    }\n\n    onSaveClick() {\n        if (this.save()) {\n            this.editor.hide();\n        }\n    }\n\n    onDeleteClick() {\n        this.deleteDependency();\n        this.editor.hide();\n    }\n\n    onCancelClick() {\n        this.editor.hide();\n    }\n\n    //region Editing\n\n    // Called from editDependency() to actually show the editor\n    internalShowEditor(dependencyRecord) {\n        const\n            me         = this,\n            { client } = me;\n\n        let showPoint = me.lastPointerDownCoordinate;\n\n        /**\n         * Fires on the owning Scheduler before an dependency is displayed in the editor.\n         * This may be listened for to allow an application to take over dependency editing duties. Returning `false`\n         * stops the default editing UI from being shown.\n         * @event beforeDependencyEdit\n         * @on-owner\n         * @param {Scheduler.view.Scheduler} source The scheduler\n         * @param {Scheduler.feature.DependencyEdit} dependencyEdit The dependencyEdit feature\n         * @param {Scheduler.model.DependencyModel} dependencyRecord The record about to be shown in the editor.\n         * @preventable\n         */\n        if (client.trigger('beforeDependencyEdit', {\n            dependencyEdit : me,\n            dependencyRecord\n        }) === false) {\n            return;\n        }\n\n        const editor = me.getEditor(dependencyRecord);\n\n        me.loadRecord(dependencyRecord);\n\n        /**\n         * Fires on the owning Scheduler when the editor for a dependency is available but before it is shown. Allows\n         * manipulating fields before the widget is shown.\n         * @event beforeDependencyEditShow\n         * @on-owner\n         * @param {Scheduler.view.Scheduler} source The scheduler\n         * @param {Scheduler.feature.DependencyEdit} dependencyEdit The dependencyEdit feature\n         * @param {Scheduler.model.DependencyModel} dependencyRecord The record about to be shown in the editor.\n         * @param {Core.widget.Popup} editor The editor popup\n         */\n        client.trigger('beforeDependencyEditShow', {\n            dependencyEdit : me,\n            dependencyRecord,\n            editor\n        });\n\n        if (!showPoint) {\n            const center = Rectangle.from(me.client.element).center;\n\n            showPoint = [center.x - editor.width / 2, center.y - editor.height / 2];\n        }\n\n        editor.showBy(showPoint);\n    }\n\n    /**\n     * Opens a popup to edit the passed dependency.\n     * @param {Scheduler.model.DependencyModel} dependencyRecord The dependency to edit\n     */\n    editDependency(dependencyRecord) {\n        if (this.client.readOnly || dependencyRecord.readOnly) {\n            return;\n        }\n\n        this.internalShowEditor(dependencyRecord);\n    }\n\n    //endregion\n\n    //region Save\n\n    /**\n     * Gets an editor instance. Creates on first call, reuses on consecutive\n     * @internal\n     * @returns {Scheduler.view.DependencyEditor} Editor popup\n     */\n    getEditor() {\n        const me = this;\n\n        let { editor } = me;\n\n        if (editor) {\n            return editor;\n        }\n\n        editor = me.editor = DependencyEditor.new({\n            dependencyEditFeature : me,\n            autoShow              : false,\n            anchor                : true,\n            scrollAction          : 'realign',\n            constrainTo           : globalThis,\n            autoClose             : me.autoClose,\n            cls                   : me.cls,\n            rootElement           : me.client.rootElement,\n            internalListeners     : {\n                keydown : me.onPopupKeyDown,\n                thisObj : me\n            }\n        }, me.editorConfig);\n\n        if (editor.items.length === 0) {\n            console.warn('Editor configured without any `items`');\n        }\n\n        // assign widget refs\n        editor.eachWidget(widget => {\n            const ref = widget.ref || widget.id;\n            // don't overwrite if already defined\n            if (ref && !me[ref]) {\n                me[ref] = widget;\n            }\n        });\n\n        me.saveButton?.ion({ click : 'onSaveClick', thisObj : me });\n        me.deleteButton?.ion({ click : 'onDeleteClick', thisObj : me });\n        me.cancelButton?.ion({ click : 'onCancelClick', thisObj : me });\n\n        return me.editor;\n    }\n\n    //endregion\n\n    //region Delete\n\n    /**\n     * Sets fields values from record being edited\n     * @private\n     */\n    loadRecord(dependency) {\n        const me = this;\n\n        me.fromNameField.value = dependency.fromEvent.name;\n        me.toNameField.value = dependency.toEvent.name;\n\n        if (me.lagField) {\n            me.lagField.value = new Duration(dependency.lag, dependency.lagUnit);\n        }\n\n        me.editor.record = me.dependencyRecord = dependency;\n    }\n\n    //endregion\n\n    //region Stores\n\n    /**\n     * Saves the changes (applies them to record if valid, if invalid editor stays open)\n     * @private\n     * @fires beforeDependencySave\n     * @fires beforeDependencyAdd\n     * @fires afterDependencySave\n     * @returns {*}\n     */\n    async save() {\n        const\n            me                           = this,\n            { client, dependencyRecord } = me;\n\n        if (!dependencyRecord || !me.isValid) {\n            return;\n        }\n\n        const { dependencyStore, values } = me;\n\n        /**\n         * Fires on the owning Scheduler before a dependency is saved\n         * @event beforeDependencySave\n         * @on-owner\n         * @param {Scheduler.view.Scheduler} source The scheduler instance\n         * @param {Scheduler.model.DependencyModel} dependencyRecord The dependency about to be saved\n         * @param {Object} values The new values\n         * @preventable\n         */\n        if (client.trigger('beforeDependencySave', {\n            dependencyRecord,\n            values\n        }) !== false) {\n            me.onBeforeSave(dependencyRecord);\n\n            me.updateRecord(dependencyRecord);\n\n            // Check if this is a new record\n            if (dependencyStore && !dependencyRecord.stores.length) {\n                /**\n                 * Fires on the owning Scheduler before a dependency is added\n                 * @event beforeDependencyAdd\n                 * @on-owner\n                 * @param {Scheduler.view.Scheduler} source The scheduler\n                 * @param {Scheduler.feature.DependencyEdit} dependencyEdit The dependency edit feature\n                 * @param {Scheduler.model.DependencyModel} dependencyRecord The dependency about to be added\n                 * @preventable\n                 */\n                if (client.trigger('beforeDependencyAdd', { dependencyRecord, dependencyEdit : me }) === false) {\n                    return;\n                }\n\n                dependencyStore.add(dependencyRecord);\n            }\n\n            await client.project?.commitAsync();\n\n            /**\n             * Fires on the owning Scheduler after a dependency is successfully saved\n             * @event afterDependencySave\n             * @on-owner\n             * @param {Scheduler.view.Scheduler} source The scheduler instance\n             * @param {Scheduler.model.DependencyModel} dependencyRecord The dependency about to be saved\n             */\n            client.trigger('afterDependencySave', { dependencyRecord });\n\n            me.onAfterSave(dependencyRecord);\n        }\n\n        return dependencyRecord;\n    }\n\n    /**\n     * Delete dependency being edited\n     * @private\n     * @fires beforeDependencyDelete\n     */\n    async deleteDependency() {\n        const { client, editor, dependencyRecord } = this;\n\n        /**\n         * Fires on the owning Scheduler before a dependency is deleted\n         * @event beforeDependencyDelete\n         * @on-owner\n         * @param {Scheduler.view.Scheduler} source The scheduler instance\n         * @param {Scheduler.model.DependencyModel} dependencyRecord The dependency record about to be deleted\n         * @preventable\n         */\n        if (client.trigger('beforeDependencyDelete', { dependencyRecord }) !== false) {\n            if (editor.containsFocus) {\n                editor.revertFocus();\n            }\n\n            client.dependencyStore.remove(dependencyRecord);\n            await client.project?.commitAsync();\n\n            return true;\n        }\n\n        return false;\n    }\n\n    get dependencyStore() {\n        return this.client.dependencyStore;\n    }\n    //endregion\n\n    //region Events\n\n    onActivateEditor({ dependency, event }) {\n        if (!this.disabled) {\n            this.lastPointerDownCoordinate = [event.clientX, event.clientY];\n            this.editDependency(dependency);\n        }\n    }\n\n    //endregion\n\n}\n\nGridFeatureManager.registerFeature(DependencyEdit, false);\n","import DomHelper from '../../Core/helper/DomHelper.js';\nimport InstancePlugin from '../../Core/mixin/InstancePlugin.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport Delayable from '../../Core/mixin/Delayable.js';\n\n/**\n * @module Scheduler/feature/ScheduleContext\n */\n\n/**\n * Allow visually selecting a schedule \"cell\" by clicking, or {@link #config-triggerEvent any other pointer gesture}.\n *\n * This feature is **disabled** by default\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         // Configure as a truthy value to enable the feature\n *         scheduleContext : {\n *             triggerEvent : 'hover',\n *             renderer     : (context, element) => {\n *                 element.innerText = '😎';\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * The contextual details are available in the {@link #property-context} property.\n *\n * **Note that the context is cleared upon change of {@link Scheduler.view.Scheduler#property-viewPreset}\n * such as when zooming in or out.**\n *\n * @extends Core/mixin/InstancePlugin\n * @inlineexample Scheduler/feature/ScheduleContext.js\n * @classtype scheduleContext\n * @feature\n */\nexport default class ScheduleContext extends InstancePlugin.mixin(Delayable) {\n    static get $name() {\n        return 'ScheduleContext';\n    }\n\n    static delayable = {\n        syncContextElement : 'raf'\n    };\n\n    static configurable = {\n        /**\n         * The pointer event type to use to update the context. May be `'hover'` to highlight the\n         * tick context when moving the mouse across the timeline.\n         * @config {'click'|'hover'|'contextmenu'|'mousedown'}\n         * @default\n         */\n        triggerEvent : 'click',\n\n        /**\n         * A function (or the name of a function) which may mutate the contents of the context overlay\n         * element which tracks the active resource/tick context.\n         * @config {String|Function}\n         * @param {TimelineContext} context The context being highlighted.\n         * @param {HTMLElement} element The context highlight element. This will be empty each time.\n         */\n        renderer : null,\n\n        /**\n         * The active context.\n         * @member {TimelineContext} timelineContext\n         * @readonly\n         */\n        context : {\n            $config : {\n                // Reject non-changes so that when using mousemove, we only update the context\n                // when it changes.\n                equal(c1, c2) {\n                    return c1?.index === c2?.index &&\n                        c1?.tickParentIndex === c2?.tickParentIndex &&\n                        !((c1?.tickStartDate || 0) - (c2?.tickStartDate || 0));\n                }\n            }\n        }\n    };\n\n    /**\n     * The contextual information about which cell was clicked on and highlighted.\n     *\n     * When the {@link Scheduler.view.Scheduler#property-viewPreset} is changed (such as when zooming)\n     * the context is cleared and the highlight is removed.\n     *\n     * @member {Object} context\n     * @property {Scheduler.view.TimelineBase} context.source The owning Scheduler\n     * @property {Date} context.date Date at mouse position\n     * @property {Scheduler.model.TimeSpan} context.tick A record which encapsulates the time axis tick clicked on.\n     * @property {Number} context.tickIndex The index of the time axis tick clicked on.\n     * @property {Date} context.tickStartDate The start date of the current time axis tick\n     * @property {Date} context.tickEndDate The end date of the current time axis tick\n     * @property {Grid.row.Row} context.row Clicked row (in horizontal mode only)\n     * @property {Number} context.index Index of clicked resource\n     * @property {Scheduler.model.ResourceModel} context.resourceRecord Resource record\n     * @property {MouseEvent} context.event Browser event\n     */\n\n    construct(client, config) {\n        super.construct(client, config);\n\n        const\n            { triggerEvent } = this,\n            listeners        = {\n                datachange              : 'syncContextElement',\n                timeaxisviewmodelupdate : 'onTimeAxisViewModelUpdate',\n                presetchange            : 'clearContext',\n                thisObj                 : this\n            };\n\n        // If mousemove is our trigger, we cab use the client's timelineContextChange event\n        if (triggerEvent === 'mouseover') {\n            listeners.timelineContextChange = 'onTimelineContextChange';\n        }\n        // Otherwise, we have to listen for the required events on Schedule and events\n        else {\n            // Context menu will be expected to update the context if click or mousedown\n            // is the triggerEvent. Context menu is a mousedown gesture.\n            if (triggerEvent === 'click' || triggerEvent === 'mousedown') {\n                listeners.schedulecontextmenu = 'onScheduleContextGesture';\n            }\n\n            Object.assign(listeners, {\n                [`schedule${triggerEvent}`] : 'onScheduleContextGesture',\n                [`event${triggerEvent}`]    : 'onScheduleContextGesture',\n                ...listeners\n            });\n        }\n\n        // required to work\n        client.useBackgroundCanvas = true;\n\n        client.ion(listeners);\n        client.rowManager.ion({\n            rowheight : 'syncContextElement',\n            thisObj   : this\n        });\n    }\n\n    changeTriggerEvent(triggerEvent) {\n        // Both these things should route through to using the client's timelineContextChange event\n        if (triggerEvent === 'hover' || triggerEvent === 'mousemove') {\n            triggerEvent = 'mouseover';\n        }\n        return triggerEvent;\n    }\n\n    get element() {\n        return this._element || (this._element = DomHelper.createElement({\n            parent    : this.client.backgroundCanvas,\n            className : 'b-schedule-selected-tick'\n        }));\n    }\n\n    // Handle the Client's own timelineContextChange event which it maintains on mousemove\n    onTimelineContextChange({ context }) {\n        this.context = context;\n    }\n\n    // Handle the scheduleclick or eventclick Scheduler events if we re not using mouseover\n    onScheduleContextGesture(context) {\n        this.context = context;\n    }\n\n    onTimeAxisViewModelUpdate({ source : timeAxisViewModel }) {\n        // Just a mutation of existing tick details, sync the element\n        if (timeAxisViewModel.timeAxis.includes(this.context?.tick)) {\n            this.syncContextElement();\n        }\n        // The tick has gone, we have moved to a new ViewPreset, so clear the context.\n        else {\n            this.clearContext();\n        }\n    }\n\n    clearContext() {\n        this.context = null;\n    }\n\n    updateContext(context, oldContext) {\n        this.syncContextElement();\n    }\n\n    syncContextElement() {\n        if (this.context && this.enabled) {\n            const\n                me  = this,\n                {\n                    client,\n                    element,\n                    context,\n                    renderer\n                }   = me,\n                {\n                    isVertical\n                }   = client,\n                {\n                    style\n                }   = element,\n                row = isVertical ? client.rowManager.rows[0] : client.getRowFor(context.resourceRecord);\n\n            if (row) {\n                const\n                    {\n                        tickStartDate,\n                        tickEndDate,\n                        resourceRecord\n                    } = context,\n                    // get the position clicked based on dates\n                    renderData = client.currentOrientation.getTimeSpanRenderData({\n                        startDate   : tickStartDate,\n                        endDate     : tickEndDate,\n                        startDateMS : tickStartDate.getTime(),\n                        endDateMS   : tickEndDate.getTime()\n                    }, resourceRecord);\n\n                let top, width, height;\n\n                if (isVertical) {\n                    top = renderData.top;\n                    width = renderData.resourceWidth;\n                    height = renderData.height;\n                }\n                else {\n                    top = row.top;\n                    width = renderData.width;\n                    height = row.height;\n                }\n\n                // Move to current cell\n                style.display = '';\n                style.width = `${width}px`;\n                style.height = `${height}px`;\n                DomHelper.setTranslateXY(element, renderData.left, top);\n\n                // In case we updated on a datachange action : 'remove' or 'add' event.\n                context.index = row.index;\n\n                // Undo any contents added by the renderer last time round.\n                element.innerHTML = '';\n\n                // Show the context and the element to the renderer\n                renderer && me.callback(renderer, me, [context, element]);\n            }\n            // No row for resource might mean it's scrolled out of view or filtered out\n            // so just hide so that the next valid sync can restore it to visibility\n            else {\n                style.display = 'none';\n            }\n        }\n        else {\n            this.element.style.display = 'none';\n        }\n    }\n}\n\nScheduleContext.featureClass = 'b-scheduler-context';\n\nGridFeatureManager.registerFeature(ScheduleContext, false, ['Scheduler']);\n","import InstancePlugin from '../../Core/mixin/InstancePlugin.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport './ScheduleContext.js';\n\n/**\n * @module Scheduler/feature/EventCopyPaste\n */\n\n/**\n * Allow using [Ctrl/CMD + C/X] and [Ctrl/CMD + V] to copy/cut and paste events.\n *\n * This feature also adds entries to the {@link Scheduler/feature/EventMenu} for copying & cutting (see example below\n * for how to configure) and to the {@link Scheduler/feature/ScheduleMenu} for pasting.\n *\n * You can configure how a newly pasted record is named using {@link #function-generateNewName}.\n *\n * {@inlineexample Scheduler/feature/EventCopyPaste.js}\n *\n * If you want to highlight the paste location when clicking in the schedule, consider enabling the\n * {@link Scheduler/feature/ScheduleContext} feature.\n *\n * <div class=\"note\">When used with Scheduler Pro, pasting will bypass any constraint set on the event to allow the\n * copy to be assigned the targeted date.</div>\n *\n * This feature is **enabled** by default.\n *\n * ## Customize menu items\n *\n * See {@link Scheduler/feature/EventMenu} and {@link Scheduler/feature/ScheduleMenu} for more info on customizing the\n * menu items supplied by the feature. This snippet illustrates the concept:\n *\n * ```javascript\n * // Custom copy text + remove cut option from event menu:\n * const scheduler = new Scheduler({\n *     features : {\n *         eventMenu : {\n *             items : {\n *                 copyEvent : {\n *                     text : 'Copy booking'\n *                 },\n *                 cutEvent  : false\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * ## Keyboard shortcuts\n *\n * The feature has the following default keyboard shortcuts:\n *\n * | Keys       | Action   | Action description                                |\n * |------------|----------|---------------------------------------------------|\n * | `Ctrl`+`C` | *copy*   | Copies selected event(s) into the clipboard.      |\n * | `Ctrl`+`X` | *cut*    | Cuts out selected event(s) into the clipboard.    |\n * | `Ctrl`+`V` | *paste*  | Insert copied or cut event(s) from the clipboard. |\n *\n * <div class=\"note\">Please note that <code>Ctrl</code> is the equivalent to <code>Command</code> and <code>Alt</code>\n * is the equivalent to <code>Option</code> for Mac users</div>\n *\n * For more information on how to customize keyboard shortcuts, please see\n * [our guide](#Scheduler/guides/customization/keymap.md).\n *\n * ## Multi assigned events\n *\n * In a Scheduler that uses single assignment, copying and then pasting creates a clone of the event and assigns it\n * to the target resource. Cutting and pasting moves the original event to the target resource.\n *\n * In a Scheduler using multi assignment, the behaviour is slightly more complex. Cutting and pasting reassigns the\n * event to the target, keeping other assignments of the same event intact. The behaviour for copying and pasting is\n * configurable using the {@link #config-copyPasteAction} config. It accepts two values:\n *\n * * `'clone'` - The default, the event is cloned and the clone is assigned to the target resource. Very similar to the\n *   behaviour with single assignment (event count goes up by 1).\n * * `'assign'` - The original event is assigned to the target resource (event count is unaffected).\n *\n * This snippet shows how to reconfigure it:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         eventCopyPaste : {\n *             copyPasteAction : 'assign'\n *         }\n *     }\n * });\n * ```\n *\n * <div class=\"note\">Copying multiple assignments of the same event will always result in all but the first assignment\n * being removed on paste, since paste targets a single resource and an event can only be assigned to a resource once.\n * </div>\n *\n * @extends Core/mixin/InstancePlugin\n * @classtype eventCopyPaste\n * @feature\n */\n\nexport default class EventCopyPaste extends InstancePlugin {\n    static $name = 'EventCopyPaste';\n\n    static pluginConfig = {\n        assign : [\n            'copyEvents',\n            'pasteEvents'\n        ],\n        chain : [\n            'populateEventMenu',\n            'populateScheduleMenu',\n            'onEventDataGenerated'\n        ]\n    };\n\n    static configurable = {\n        /**\n         * The field to use as the name field when updating the name of copied records\n         * @config {String}\n         * @default\n         */\n        nameField : 'name',\n\n        /**\n         * See {@link #keyboard-shortcuts Keyboard shortcuts} for details\n         * @config {Object<String,String>}\n         */\n        keyMap : {\n            'Ctrl+C' : 'copy',\n            'Ctrl+X' : 'cut',\n            'Ctrl+V' : 'paste'\n        },\n\n        /**\n         * How to handle a copy paste operation when the host uses multi assignment. Either:\n         *\n         * - `'clone'`  - The default, clone the copied event, assigning the clone to the target resource.\n         * - `'assign'` - Add an assignment for the existing event to the target resource.\n         *\n         * For single assignment mode, it always uses the `'clone'` behaviour.\n         *\n         * @config {'clone'|'assign'}\n         * @default\n         */\n        copyPasteAction : 'clone'\n    };\n\n    clipboardRecords = [];\n\n    construct(scheduler, config) {\n        super.construct(scheduler, config);\n\n        scheduler.ion({\n            eventclick    : this.onEventClick,\n            scheduleclick : this.onScheduleClick,\n            projectChange : () => {\n                this.clearClipboard();\n                this._cellClickedContext = null;\n            },\n            thisObj : this\n        });\n\n        this.scheduler = scheduler;\n    }\n\n    // Used in events to separate events from different features from each other\n    entityName = 'event';\n\n    onEventDataGenerated(eventData) {\n        const { assignmentRecord } = eventData;\n\n        // No assignmentRecord for resource time ranges, which we want to ignore anyway\n        if (assignmentRecord) {\n            eventData.cls['b-cut-item'] = assignmentRecord.meta.isCut;\n        }\n    }\n\n    onEventClick(context) {\n        this._cellClickedContext = null;\n    }\n\n    onScheduleClick(context) {\n        this._cellClickedContext = context;\n    }\n\n    isActionAvailable({ event }) {\n        const cellEdit = this.client.features.cellEdit;\n\n        // No action if\n        // 1. there is selected text on the page\n        // 2. cell editing is active\n        // 3. cursor is not in the grid (filter bar etc)\n        // 4. focus is on specialrow\n        return !this.disabled &&\n            globalThis.getSelection().toString().length === 0 &&\n            !cellEdit?.isEditing &&\n            Boolean(event.target.closest('.b-timeaxissubgrid')) &&\n            !this.client.focusedCell?.isSpecialRow;\n    }\n\n    copy() {\n        this.copyEvents();\n    }\n\n    cut() {\n        this.copyEvents(undefined, true);\n    }\n\n    paste() {\n        this.pasteEvents();\n    }\n\n    /**\n     * Copy events (when using single assignment mode) or assignments (when using multi assignment mode) to clipboard to\n     * paste later\n     * @fires beforeCopy\n     * @fires copy\n     * @param {Scheduler.model.EventModel[]|Scheduler.model.AssignmentModel[]} [records] Pass records to copy them,\n     * leave out to copying current selection\n     * @param {Boolean} [isCut] Copies by default, pass `true` to cut instead\n     * @category Edit\n     */\n    copyEvents(records = this.scheduler.selectedAssignments, isCut = false) {\n        const\n            me                        = this,\n            { scheduler, entityName } = me;\n\n        if (!records?.length) {\n            return;\n        }\n\n        let assignmentRecords = records.slice(); // Slice to not lose records if selection changes\n\n        if (records[0].isEventModel) {\n            assignmentRecords = records.map(r => r.assignments).flat();\n        }\n\n        // Prevent cutting readOnly events\n        if (isCut) {\n            assignmentRecords = assignmentRecords.filter(a => !a.event.readOnly);\n        }\n\n        const eventRecords = assignmentRecords.map(a => a.event);\n\n        /**\n         * Fires on the owning Scheduler before a copy action is performed, return `false` to prevent the action\n         * @event beforeCopy\n         * @preventable\n         * @on-owner\n         * @param {Scheduler.view.Scheduler} source Owner scheduler\n         * @param {Scheduler.model.EventModel[]} records Deprecated, will be removed in 6.0. Use eventRecords instead.\n         * @param {Scheduler.model.EventModel[]} eventRecords The event records about to be copied\n         * @param {Scheduler.model.AssignmentModel[]} assignmentRecords The assignment records about to be copied\n         * @param {Boolean} isCut `true` if this is a cut action\n         * @param {String} entityName 'event' to distinguish this event from other beforeCopy events\n         */\n        if (!assignmentRecords.length || scheduler.readOnly || scheduler.trigger('beforeCopy', {\n            assignmentRecords, records : eventRecords, eventRecords, isCut, entityName\n        }) === false) {\n            return;\n        }\n\n        /**\n         * Fires on the owning Scheduler after a copy action is performed.\n         * @event copy\n         * @on-owner\n         * @param {Scheduler.view.Scheduler} source Owner scheduler\n         * @param {Scheduler.model.EventModel[]} eventRecords The event records that were copied\n         * @param {Scheduler.model.AssignmentModel[]} assignmentRecords The assignment records that were copied\n         * @param {Boolean} isCut `true` if this is a cut action\n         * @param {String} entityName 'event' to distinguish this event from other copy events\n         */\n        if (assignmentRecords.length > 0) {\n            scheduler.trigger('copy', { assignmentRecords, eventRecords, isCut, entityName });\n        }\n\n        me._isCut    = isCut;\n        // records is used when call comes from context menu where the current event is the context\n        me.clipboard = { assignmentRecords, eventRecords };\n\n        scheduler.assignmentStore.forEach(assignment => {\n            assignment.meta.isCut = isCut && assignmentRecords.includes(assignment);\n        });\n\n        // refresh to call onEventDataGenerated and reapply the cls for records where the cut was canceled\n        scheduler.refreshWithTransition();\n    }\n\n    /**\n     * Paste events or assignments to specified date and resource\n     * @fires beforePaste\n     * @fires paste\n     * @param {Date} [date] Date where the events or assignments will be pasted\n     * @param {Scheduler.model.ResourceModel} [resourceRecord] Resource to assign the pasted events or assignments to\n     * @category Edit\n     */\n    pasteEvents(date, resourceRecord) {\n        const\n            me                                   = this,\n            { clipboard, scheduler, entityName } = me;\n\n        if (!clipboard) {\n            return;\n        }\n\n        const\n            { assignmentRecords, eventRecords }  = clipboard,\n            isCut                                = me._isCut;\n        let reason;\n\n        if (arguments.length === 0) {\n            const context  = me._cellClickedContext || {};\n            date           = context.date;\n            resourceRecord = context.resourceRecord;\n        }\n\n        if (resourceRecord) {\n            // No pasting to readOnly resources\n            if (resourceRecord.readOnly) {\n                reason = 'resourceReadOnly';\n            }\n\n            resourceRecord = resourceRecord.$original;\n        }\n\n        if (!scheduler.allowOverlap) {\n            const pasteWouldResultInOverlap = assignmentRecords.some(assignmentRecord => !scheduler.isDateRangeAvailable(\n                assignmentRecord.event.startDate,\n                assignmentRecord.event.endDate,\n                isCut ? assignmentRecord.event : null,\n                assignmentRecord.resource)\n            );\n\n            if (pasteWouldResultInOverlap) {\n                reason = 'overlappingEvents';\n            }\n        }\n\n        /**\n         * Fires on the owning Scheduler if a paste action is not allowed\n         * @event pasteNotAllowed\n         * @on-owner\n         * @param {Scheduler.view.Scheduler} source Owner scheduler\n         * @param {Scheduler.model.EventModel[]} eventRecords\n         * @param {Scheduler.model.AssignmentModel[]} assignmentRecords\n         * @param {Date} date The paste date\n         * @param {Scheduler.model.ResourceModel} resourceRecord The target resource record\n         * @param {Boolean} isCut `true` if this is a cut action\n         * @param {String} entityName 'event' to distinguish this event from other `pasteNotAllowed` events\n         * @param {'overlappingEvents'|'resourceReadOnly'} reason A string id to use for displaying an error message to the user.\n         */\n        if (reason) {\n            scheduler.trigger('pasteNotAllowed', {\n                assignmentRecords,\n                records        : eventRecords,\n                eventRecords,\n                resourceRecord : resourceRecord || assignmentRecords[0].resource,\n                date,\n                isCut,\n                entityName,\n                reason\n            });\n            return;\n        }\n\n        /**\n         * Fires on the owning Scheduler before a paste action is performed, return `false` to prevent the action\n         * @event beforePaste\n         * @preventable\n         * @on-owner\n         * @param {Scheduler.view.Scheduler} source Owner scheduler\n         * @param {Scheduler.model.EventModel[]} records Deprecated, will be removed in 6.0. Use eventRecords instead.\n         * @param {Scheduler.model.EventModel[]} eventRecords The events about to be pasted\n         * @param {Scheduler.model.AssignmentModel[]} assignmentRecords The assignments about to be pasted\n         * @param {Date} date The date when the pasted events will be scheduled\n         * @param {Scheduler.model.ResourceModel} resourceRecord The target resource record, the clipboard\n         * event records will be assigned to this resource.\n         * @param {Boolean} isCut `true` if this is a cut action\n         * @param {String} entityName 'event' to distinguish this event from other beforePaste events\n         */\n        if (\n            !clipboard ||\n            scheduler.trigger('beforePaste',\n                {\n                    assignmentRecords,\n                    records        : eventRecords,\n                    eventRecords,\n                    resourceRecord : resourceRecord || assignmentRecords[0].resource,\n                    date,\n                    isCut,\n                    entityName\n                }) === false\n        ) {\n            return;\n        }\n\n        let toFocus = null;\n\n        const\n            pastedEvents = new Set(),\n            pastedEventRecords = [];\n\n        for (const assignmentRecord of assignmentRecords) {\n            let { event }            = assignmentRecord;\n            const\n                targetResourceRecord = resourceRecord || assignmentRecord.resource,\n                targetDate           = date || assignmentRecord.event.startDate;\n\n            // Pasting targets a specific resource, we cannot have multiple assignments to the same so remove all but\n            // the first (happens when pasting multiple assignments of the same event)\n            if (pastedEvents.has(event)) {\n                if (isCut) {\n                    assignmentRecord.remove();\n                }\n                continue;\n            }\n\n            pastedEvents.add(event);\n\n            // Cut always means reassign\n            if (isCut) {\n                assignmentRecord.meta.isCut = false;\n                assignmentRecord.resource   = targetResourceRecord;\n                toFocus                     = assignmentRecord;\n            }\n            // Copy creates a new event in single assignment, or when configured to copy\n            else if (scheduler.eventStore.usesSingleAssignment || me.copyPasteAction === 'clone') {\n                event      = event.copy();\n                event.name = me.generateNewName(event);\n                scheduler.eventStore.add(event);\n                event.assign(targetResourceRecord);\n                toFocus = scheduler.assignmentStore.last;\n            }\n            // Safeguard against pasting on a resource where the event is already assigned,\n            // a new assignment in multiassign mode will only change the date in such case\n            else if (!event.resources.includes(targetResourceRecord)) {\n                const newAssignmentRecord    = assignmentRecord.copy();\n                newAssignmentRecord.resource = targetResourceRecord;\n                [toFocus]                    = scheduler.assignmentStore.add(newAssignmentRecord);\n            }\n\n            event.startDate = targetDate;\n\n            // Pro specific, to allow event to appear where pasted\n            if (event.constraintDate) {\n                event.constraintDate = null;\n            }\n\n            pastedEventRecords.push(event);\n        }\n\n        /**\n         * Fires on the owning Scheduler after a paste action is performed.\n         * @event paste\n         * @on-owner\n         * @param {Scheduler.view.Scheduler} source Owner scheduler\n         * @param {Scheduler.model.EventModel[]} eventRecords Original events\n         * @param {Scheduler.model.EventModel[]} pastedEventRecords Pasted events\n         * @param {Scheduler.model.AssignmentModel[]} assignmentRecords Pasted assignments\n         * @param {Date} date date Pasted to this date\n         * @param {Scheduler.model.ResourceModel} resourceRecord The target resource record\n         * @param {Boolean} isCut `true` if this is a cut action\n         * @param {String} entityName 'event' to distinguish this event from other paste events\n         */\n        if (clipboard) {\n            scheduler.trigger('paste', { assignmentRecords, pastedEventRecords, eventRecords, resourceRecord, date, isCut, entityName });\n        }\n\n        // Focus the last pasted assignment\n        const detacher = scheduler.ion({\n            renderEvent({ assignmentRecord }) {\n                if (assignmentRecord === toFocus) {\n                    scheduler.navigateTo(assignmentRecord, { scrollIntoView : false });\n                    detacher();\n                }\n            }\n        });\n\n        if (isCut) {\n            me.clearClipboard();\n        }\n    }\n\n    /**\n     * Clears the clipboard and refreshes the UI\n     */\n    clearClipboard() {\n        const me = this;\n        if (me._isCut) {\n            me.clipboard.assignmentRecords.forEach(assignment => {\n                assignment.meta.isCut = false;\n            });\n            me.scheduler.refreshWithTransition();\n            me._isCut = false;\n        }\n        // reset clipboard\n        me.clipboard = null;\n    }\n\n    populateEventMenu({ assignmentRecord, items }) {\n        const\n            me            = this,\n            { scheduler } = me;\n\n        if (!scheduler.readOnly) {\n            items.copyEvent = {\n                text        : 'L{copyEvent}',\n                localeClass : me,\n                icon        : 'b-icon b-icon-copy',\n                weight      : 110,\n                onItem      : () => {\n                    const assignments = scheduler.isAssignmentSelected(assignmentRecord) ? scheduler.selectedAssignments : [assignmentRecord];\n\n                    me.copyEvents(assignments);\n                }\n            };\n\n            items.cutEvent = {\n                text        : 'L{cutEvent}',\n                localeClass : me,\n                icon        : 'b-icon b-icon-cut',\n                weight      : 120,\n                disabled    : assignmentRecord.event.readOnly,\n                onItem      : () => {\n                    const assignments = scheduler.isAssignmentSelected(assignmentRecord) ? scheduler.selectedAssignments : [assignmentRecord];\n                    me.copyEvents(assignments, true);\n                }\n            };\n        }\n    }\n\n    populateScheduleMenu({ items, resourceRecord }) {\n        const\n            me            = this,\n            { scheduler } = me;\n\n        if (!scheduler.readOnly && me.clipboard) {\n            items.pasteEvent = {\n                text        : 'L{pasteEvent}',\n                localeClass : me,\n                icon        : 'b-icon b-icon-paste',\n                disabled    : scheduler.resourceStore.count === 0 || resourceRecord.readOnly,\n                weight      : 110,\n                onItem      : ({\n                    date, resourceRecord\n                }) => me.pasteEvents(date, resourceRecord, scheduler.getRowFor(resourceRecord))\n            };\n        }\n    }\n\n    /**\n     * A method used to generate the name for a copy pasted record. By defaults appends \"- 2\", \"- 3\" as a suffix.\n     *\n     * @param {Scheduler.model.EventModel} eventRecord The new eventRecord being pasted\n     * @returns {String}\n     */\n    generateNewName(eventRecord) {\n        const originalName = eventRecord[this.nameField];\n\n        let counter = 2;\n\n        while (this.client.eventStore.findRecord(this.nameField, `${originalName} - ${counter}`)) {\n            counter++;\n        }\n\n        return `${originalName} - ${counter}`;\n    }\n}\n\nEventCopyPaste.featureClass = 'b-event-copypaste';\n\nGridFeatureManager.registerFeature(EventCopyPaste, true, 'Scheduler');\n","import DragBase from './base/DragBase.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\nimport DomHelper from '../../Core/helper/DomHelper.js';\nimport DomSync from '../../Core/helper/DomSync.js';\nimport Rectangle from '../../Core/helper/util/Rectangle.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport EventHelper from '../../Core/helper/EventHelper.js';\n\n/**\n * @module Scheduler/feature/EventDrag\n */\n\n/**\n * Allows user to drag and drop events within the scheduler, to change startDate or resource assignment.\n *\n * This feature is **enabled** by default\n *\n * ## Customizing the drag drop tooltip\n *\n * To show custom HTML in the tooltip, please see the {@link #config-tooltipTemplate} config. Example:\n *\n * ```javascript\n * features: {\n *     eventDrag : {\n *         // A minimal start date tooltip\n *         tooltipTemplate : ({ eventRecord, startDate }) => {\n *             return DateHelper.format(startDate, 'HH:mm');\n *         }\n *     }\n * }\n * ```\n *\n * ## Constraining the drag drop area\n *\n * You can constrain how the dragged event is allowed to move by using the following configs\n * * {@link #config-constrainDragToResource} Resource fixed, only allowed to change start date\n * * {@link #config-constrainDragToTimeSlot} Start date is fixed, only move between resources\n * * {@link Scheduler.view.Scheduler#config-getDateConstraints} A method on the Scheduler instance\n *    which lets you define the date range for the dragged event programmatically\n *\n * ```js\n * // Enable dragging + constrain drag to current resource\n * const scheduler = new Scheduler({\n *     features : {\n *         eventDrag : {\n *             constrainDragToResource : true\n *         }\n *     }\n * });\n * ```\n *\n * ## Drag drop events from outside\n *\n * Dragging unplanned events from an external grid is a very popular use case. There are\n * several demos showing you how to do this. Please see the [Drag from grid demo](../examples/dragfromgrid)\n * and study the **Drag from grid guide** to learn more.\n *\n * ## Drag drop events to outside target\n *\n * You can also drag events outside the schedule area by setting {@link #config-constrainDragToTimeline} to `false`. You\n * should also either:\n * * provide a {@link #config-validatorFn} to programmatically define if a drop location is valid or not\n * * configure a {@link #config-externalDropTargetSelector} CSS selector to define where drops are allowed\n *\n * See [this demo](../examples/drag-outside) to see this in action.\n *\n * ## Validating drag drop\n *\n * It is easy to programmatically decide what is a valid drag drop operation. Use the {@link #config-validatorFn}\n * and return either `true` / `false` (optionally a message to show to the user).\n *\n * ```javascript\n * features : {\n *     eventDrag : {\n *        validatorFn({ eventRecords, newResource }) {\n *            const task  = eventRecords[0],\n *                  valid = newResource.role === task.resource.role;\n *\n *            return {\n *                valid   : newResource.role === task.resource.role,\n *                message : valid ? '' : 'Resource role does not match required role for this task'\n *            };\n *        }\n *     }\n * }\n * ```\n *\n * See [this demo](../examples/validation) to see validation in action.\n *\n * If you instead want to do a single validation upon drop, you can listen to {@link #event-beforeEventDropFinalize}\n * and set the `valid` flag on the context object provided.\n *\n * ```javascript\n *   const scheduler = new Scheduler({\n *      listeners : {\n *          beforeEventDropFinalize({ context }) {\n *              const { eventRecords } = context;\n *              // Don't allow dropping events in the past\n *              context.valid = Date.now() <= eventRecords[0].startDate;\n *          }\n *      }\n *  });\n * ```\n *\n * ## Preventing drag of certain events\n *\n * To prevent certain events from being dragged, you have two options. You can set {@link Scheduler.model.EventModel#field-draggable}\n * to `false` in your data, or you can listen for the {@link Scheduler.view.Scheduler#event-beforeEventDrag} event and\n * return `false` to block the drag.\n *\n * ```javascript\n * new Scheduler({\n *    listeners : {\n *        beforeEventDrag({ eventRecord }) {\n *            // Don't allow dragging events that have already started\n *            return Date.now() <= eventRecord.startDate;\n *        }\n *    }\n * })\n * ```\n *\n * @extends Scheduler/feature/base/DragBase\n * @demo Scheduler/basic\n * @inlineexample Scheduler/feature/EventDrag.js\n * @classtype eventDrag\n * @feature\n */\nexport default class EventDrag extends DragBase {\n    //region Config\n\n    static get $name() {\n        return 'EventDrag';\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * Template used to generate drag tooltip contents.\n             * ```javascript\n             * const scheduler = new Scheduler({\n             *     features : {\n             *         eventDrag : {\n             *             dragTipTemplate({eventRecord, startText}) {\n             *                 return `${eventRecord.name}: ${startText}`\n             *             }\n             *         }\n             *     }\n             * });\n             * ```\n             * @config {Function} tooltipTemplate\n             * @param {Object} data Tooltip data\n             * @param {Scheduler.model.EventModel} data.eventRecord\n             * @param {Boolean} data.valid Currently over a valid drop target or not\n             * @param {Date} data.startDate New start date\n             * @param {Date} data.endDate New end date\n             * @returns {String}\n             */\n\n            /**\n             * Set to true to only allow dragging events within the same resource.\n             * @member {Boolean} constrainDragToResource\n             */\n            /**\n             * Set to true to only allow dragging events within the same resource.\n             * @config {Boolean}\n             * @default\n             */\n            constrainDragToResource : false,\n\n            /**\n             * Set to true to only allow dragging events to different resources, and disallow rescheduling by dragging.\n             * @member {Boolean} constrainDragToTimeSlot\n             */\n            /**\n             * Set to true to only allow dragging events to different resources, and disallow rescheduling by dragging.\n             * @config {Boolean}\n             * @default\n             */\n            constrainDragToTimeSlot : false,\n\n            /**\n             * A CSS selector specifying elements outside the scheduler element which are valid drop targets.\n             * @config {String}\n             */\n            externalDropTargetSelector : null,\n\n            /**\n             * An empty function by default, but provided so that you can perform custom validation on the item being\n             * dragged. This function is called during the drag and drop process and also after the drop is made.\n             * Return `true` if the new position is valid, `false` to prevent the drag.\n             *\n             * ```javascript\n             * features : {\n             *     eventDrag : {\n             *         validatorFn({ eventRecords, newResource }) {\n             *             const\n             *                 task  = eventRecords[0],\n             *                 valid = newResource.role === task.resource.role;\n             *\n             *             return {\n             *                 valid   : newResource.role === task.resource.role,\n             *                 message : valid ? '' : 'Resource role does not match required role for this task'\n             *             };\n             *         }\n             *     }\n             * }\n             * ```\n             * @param {Object} context A drag drop context object\n             * @param {Date} context.startDate New start date\n             * @param {Date} context.endDate New end date\n             * @param {Scheduler.model.AssignmentModel[]} context.assignmentRecords Assignment records which were dragged\n             * @param {Scheduler.model.EventModel[]} context.eventRecords Event records which were dragged\n             * @param {Scheduler.model.ResourceModel} context.newResource New resource record\n             * @param {Scheduler.model.EventModel} context.targetEventRecord Currently hovering this event record\n             * @param {Event} event The event object\n             * @returns {Boolean|Object} `true` if this validation passes, `false` if it does not.\n             *\n             * Or an object with 2 properties: `valid` -  Boolean `true`/`false` depending on validity,\n             * and `message` - String with a custom error message to display when invalid.\n             * @config {Function}\n             */\n            validatorFn : (context, event) => {},\n\n            /**\n             * The `this` reference for the validatorFn\n             * @config {Object}\n             */\n            validatorFnThisObj : null,\n\n            /**\n             * When the host Scheduler is `{@link Scheduler.view.mixin.EventSelection#config-multiEventSelect}: true`\n             * then, there are two modes of dragging *within the same Scheduler*.\n             *\n             * Non unified means that all selected events are dragged by the same number of resource rows.\n             *\n             * Unified means that all selected events are collected together and dragged as one, and are all dropped\n             * on the same targeted resource row at the same targeted time.\n             * @member {Boolean} unifiedDrag\n             */\n            /**\n             * When the host Scheduler is `{@link Scheduler.view.mixin.EventSelection#config-multiEventSelect}: true`\n             * then, there are two modes of dragging *within the same Scheduler*.\n             *\n             * Non unified means that all selected events are dragged by the same number of resource rows.\n             *\n             * Unified means that all selected events are collected together and dragged as one, and are all dropped\n             * on the same targeted resource row at the same targeted time.\n             * @config {Boolean}\n             * @default false\n             */\n            unifiedDrag : null,\n\n            /**\n             * A hook that allows manipulating the position the drag proxy snaps to. Manipulate the `snapTo` property\n             * to alter snap position.\n             *\n             * ```javascript\n             * const scheduler = new Scheduler({\n             *     features : {\n             *         eventDrag : {\n             *             snapToPosition({ eventRecord, snapTo }) {\n             *                 if (eventRecord.late) {\n             *                     snapTo.x = 400;\n             *                 }\n             *             }\n             *         }\n             *     }\n             * });\n             * ```\n             *\n             * @config {Function}\n             * @param {Object} context\n             * @param {Scheduler.model.AssignmentModel} context.assignmentRecord Dragged assignment\n             * @param {Scheduler.model.EventModel} context.eventRecord Dragged event\n             * @param {Scheduler.model.ResourceModel} context.resourceRecord Currently over this resource\n             * @param {Date} context.startDate Start date for current position\n             * @param {Date} context.endDate End date for current position\n             * @param {Object} context.snapTo\n             * @param {Number} context.snapTo.x X to snap to\n             * @param {Number} context.snapTo.y Y to snap to\n             */\n            snapToPosition : null,\n\n            /**\n             * A modifier key (CTRL, SHIFT, ALT, META) that when pressed will copy an event instead of moving it. Set to\n             * empty string to disable copying\n             * @prp {'CTRL'|'ALT'|'SHIFT'|'META'|''}\n             * @default\n             */\n            copyKey : 'SHIFT',\n\n            /**\n             * Event can be copied two ways: either by adding new assignment to an existing event ('assignment'), or\n             * by copying the event itself ('event'). 'auto' mode will pick 'event' for a single-assignment mode (when\n             * event has `resourceId` field) and 'assignment' mode otherwise.\n             * @prp {'auto'|'assignment'|'event'}\n             * @default\n             */\n            copyMode : 'auto',\n\n            /**\n             * Mode of the current drag drop operation.\n             * @member {'move'|'copy'}\n             * @readonly\n             */\n            mode : 'move',\n\n            capitalizedEventName : null\n        };\n    }\n\n    afterConstruct() {\n        this.capitalizedEventName = this.capitalizedEventName || this.client.capitalizedEventName;\n        super.afterConstruct(...arguments);\n    }\n\n    //endregion\n\n    changeMode(value) {\n        const { dragData, copyMode } = this;\n\n        // Do not create assignments in case scheduler doesn't use multiple assignments\n        // Do not allow to copy recurring events\n        if (\n            (copyMode === 'event' || copyMode === 'auto' ||\n                copyMode === 'assignment' && !this.scheduler.eventStore.usesSingleAssignment) &&\n            (!dragData || dragData.eventRecords.every(r => !r.isRecurring))\n        ) {\n            return value;\n        }\n    }\n\n    updateMode(mode) {\n        if (this.dragData) {\n            if (mode === 'copy') {\n                this.setCopying();\n            }\n            else {\n                this.setMoving();\n            }\n\n            /**\n             * Triggered when drag mode is changed, for example when copy key is\n             * pressed or released while dragging.\n             * @event eventDragModeChange\n             * @param {String} mode Drag mode, could be either 'move', 'copy', or 'auto'\n             * @on-owner\n             */\n            this.client.trigger('eventDragModeChange', { mode });\n        }\n    }\n\n    setCopying() {\n        const { dragData } = this;\n\n        if (!dragData) {\n            return;\n        }\n\n        // Check if proxies are added to the DOM by checking if any of them is\n        if (!dragData.eventBarCopies.some(el => el.isConnected)) {\n            dragData.eventBarCopies.forEach(el => {\n                el.classList.add('b-drag-proxy-copy');\n                // hidden class can be added by the drag feature if we're dragging event outside\n                el.classList.remove('b-hidden');\n\n                dragData.context.grabbedParent.appendChild(el);\n                // Mark this node as ignored for the DomSync\n                el.retainElement = true;\n            });\n        }\n        else {\n            dragData.eventBarCopies.forEach(el => {\n                el.classList.remove('b-hidden');\n            });\n        }\n    }\n\n    setMoving() {\n        const { dragData } = this;\n\n        if (!dragData) {\n            return;\n        }\n\n        dragData.eventBarCopies.forEach(el => {\n            el.classList.add('b-hidden');\n        });\n    }\n\n    //region Events\n\n    /**\n     * Fired on the owning Scheduler to allow implementer to use asynchronous finalization by setting `context.async = true`\n     * in the listener, to show a confirmation popup etc.\n     * ```javascript\n     *  scheduler.on('beforeeventdropfinalize', ({ context }) => {\n     *      context.async = true;\n     *      setTimeout(() => {\n     *          // async code don't forget to call finalize\n     *          context.finalize();\n     *      }, 1000);\n     *  })\n     * ```\n     *\n     * For synchronous one-time validation, simply set `context.valid` to true or false.\n     * ```javascript\n     *  scheduler.on('beforeeventdropfinalize', ({ context }) => {\n     *      context.valid = false;\n     *  })\n     * ```\n     * @event beforeEventDropFinalize\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source Scheduler instance\n     * @param {Object} context\n     * @param {Boolean} context.async Set true to not finalize the drag-drop operation immediately (e.g. to wait for user confirmation)\n     * @param {Scheduler.model.EventModel[]} context.eventRecords Event records being dragged\n     * @param {Scheduler.model.AssignmentModel[]} context.assignmentRecords Assignment records being dragged\n     * @param {Scheduler.model.EventModel} context.targetEventRecord Event record for drop target\n     * @param {Scheduler.model.ResourceModel} context.newResource Resource record for drop target\n     * @param {Boolean} context.valid Set this to `false` to abort the drop immediately.\n     * @param {Function} context.finalize Call this method after an **async** finalization flow, to finalize the drag-drop operation. This method accepts one\n     * argument: pass `true` to update records, or `false` to ignore changes\n     * @param {MouseEvent} domEvent Browser event\n     */\n\n    /**\n     * Fired on the owning Scheduler after event drop\n     * @event afterEventDrop\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source\n     * @param {Scheduler.model.AssignmentModel[]} assignmentRecords\n     * @param {Scheduler.model.EventModel[]} eventRecords\n     * @param {Boolean} valid\n     * @param {Object} context\n     * @param {MouseEvent} domEvent Browser event\n     */\n\n    /**\n     * Fired on the owning Scheduler when an event is dropped\n     * @event eventDrop\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source\n     * @param {Scheduler.model.EventModel[]} eventRecords\n     * @param {Scheduler.model.AssignmentModel[]} assignmentRecords\n     * @param {HTMLElement} externalDropTarget The HTML element dropped upon, if drop happened on a valid external drop target\n     * @param {Boolean} isCopy\n     * @param {Object} context\n     * @param {Scheduler.model.EventModel} context.targetEventRecord Event record for drop target\n     * @param {Scheduler.model.ResourceModel} context.newResource Resource record for drop target\n     * @param {MouseEvent} domEvent Browser event\n     */\n\n    /**\n     * Fired on the owning Scheduler before event dragging starts. Return `false` to prevent the action.\n     * @event beforeEventDrag\n     * @on-owner\n     * @preventable\n     * @param {Scheduler.view.Scheduler} source Scheduler instance\n     * @param {Scheduler.model.EventModel} eventRecord Event record the drag starts from\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record the drag starts from\n     * @param {Scheduler.model.EventModel[]} eventRecords Event records being dragged\n     * @param {Scheduler.model.AssignmentModel[]} assignmentRecords Assignment records being dragged\n     * @param {MouseEvent} event Browser event DEPRECATED (replaced by domEvent)\n     * @param {MouseEvent} domEvent Browser event\n     */\n\n    /**\n     * Fired on the owning Scheduler when event dragging starts\n     * @event eventDragStart\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source Scheduler instance\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record the drag starts from\n     * @param {Scheduler.model.EventModel[]} eventRecords Event records being dragged\n     * @param {Scheduler.model.AssignmentModel[]} assignmentRecords Assignment records being dragged\n     * @param {MouseEvent} event Browser event DEPRECATED (replaced by domEvent)\n     * @param {MouseEvent} domEvent Browser event\n     */\n\n    /**\n     * Fired on the owning Scheduler when event is dragged\n     * @event eventDrag\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source Scheduler instance\n     * @param {Scheduler.model.EventModel[]} eventRecords Event records being dragged\n     * @param {Scheduler.model.AssignmentModel[]} assignmentRecords Assignment records being dragged\n     * @param {Date} startDate Start date for the current location\n     * @param {Date} endDate End date for the current location\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record the drag started from\n     * @param {Scheduler.model.ResourceModel} newResource Resource at the current location\n     * @param {Object} context\n     * @param {Boolean} context.valid Set this to `false` to signal that the current drop position is invalid.\n     * @param {MouseEvent} domEvent Browser event\n     */\n\n    /**\n     * Fired on the owning Scheduler after an event drag operation has been aborted\n     * @event eventDragAbort\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source Scheduler instance\n     * @param {Scheduler.model.EventModel[]} eventRecords Event records being dragged\n     * @param {Scheduler.model.AssignmentModel[]} assignmentRecords Assignment records being dragged\n     * @param {MouseEvent} domEvent Browser event\n     */\n    /**\n     * Fired on the owning Scheduler after an event drag operation regardless of the operation being cancelled or not\n     * @event eventDragReset\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source Scheduler instance\n     */\n    //endregion\n\n    //region Data layer\n\n    // Deprecated. Use this.client instead\n    get scheduler() {\n        return this.client;\n    }\n\n    //endregion\n\n    //#region Drag lifecycle\n\n    onAfterDragStart(event) {\n        const\n            me                        = this,\n            { context : { element } } = event;\n\n        super.onAfterDragStart(event);\n\n        me.handleKeyDownOrMove(event.event);\n\n        me.keyEventDetacher = EventHelper.on({\n            // In case we drag event between scheduler focused event gets moved and focus\n            // moves to the body. We only need to read the key from this event\n            element : DomHelper.getRootElement(element),\n            keydown : me.handleKeyDownOrMove,\n            keyup   : me.handleKeyUp,\n            thisObj : me\n        });\n    }\n\n    onDragReset(event) {\n        super.onDragReset(event);\n\n        this.keyEventDetacher?.();\n\n        this.mode = 'move';\n    }\n\n    onDrop(event) {\n        // Always remove proxy on drop\n        this.dragData.eventBarCopies?.forEach(el => el.remove());\n\n        return super.onDrop(event);\n    }\n\n    //#endregion\n\n    //region Drag events\n\n    getDraggableElement(el) {\n        return el?.closest(this.drag.targetSelector);\n    }\n\n    resolveEventRecord(eventElement, client = this.client) {\n        return client.resolveEventRecord(eventElement);\n    }\n\n    isElementDraggable(el, event) {\n        const\n            me           = this,\n            { client }   = me,\n            eventElement = me.getDraggableElement(el);\n\n        if (!eventElement || me.disabled || client.readOnly) {\n            return false;\n        }\n\n        // displaying something resizable within the event?\n        if (el.matches('[class$=\"-handle\"]')) {\n            return false;\n        }\n\n        const eventRecord = me.resolveEventRecord(eventElement, client);\n\n        if (!eventRecord || !eventRecord.isDraggable || eventRecord.readOnly) {\n            return false;\n        }\n\n        // Hook for features that need to prevent drag\n        const prevented = client[`is${me.capitalizedEventName}ElementDraggable`]?.(\n            eventElement, eventRecord, el, event\n        ) === false;\n\n        return !prevented;\n    }\n\n    getTriggerParams(dragData) {\n        const { assignmentRecords, eventRecords, resourceRecord, browserEvent : domEvent } = dragData;\n\n        return {\n            // `context` is now private, but used in WebSocketHelper\n            context : dragData,\n            eventRecords,\n            resourceRecord,\n            assignmentRecords,\n            event   : domEvent, // Deprecated, remove on  6.0?\n            domEvent\n        };\n    }\n\n    triggerBeforeEventDrag(eventType, event) {\n        return this.client.trigger(eventType, event);\n    }\n\n    triggerEventDrag(dragData, start) {\n        this.client.trigger('eventDrag', Object.assign(this.getTriggerParams(dragData), {\n            startDate   : dragData.startDate,\n            endDate     : dragData.endDate,\n            newResource : dragData.newResource\n        }));\n    }\n\n    triggerDragStart(dragData) {\n        this.client.navigator.skipNextClick = true;\n\n        this.client.trigger('eventDragStart', this.getTriggerParams(dragData));\n    }\n\n    triggerDragAbort(dragData) {\n        this.client.trigger('eventDragAbort', this.getTriggerParams(dragData));\n    }\n\n    triggerDragAbortFinalized(dragData) {\n        this.client.trigger('eventDragAbortFinalized', this.getTriggerParams(dragData));\n    }\n\n    triggerAfterDrop(dragData, valid) {\n        const me = this;\n\n        me.currentOverClient.trigger('afterEventDrop', Object.assign(me.getTriggerParams(dragData), {\n            valid\n        }));\n\n        if (!valid) {\n            // Edge cases:\n            // 1. If this drag was a no-op, and underlying data was changed while drag was ongoing (e.g. web socket\n            // push), we need to manually force a view refresh to ensure a correct render state\n            //\n            // or\n            // 2. Events were removed before we dropped at an invalid point\n            const\n                { assignmentStore, eventStore } = me.client,\n                needRefresh                     = me.dragData.initialAssignmentsState.find(({\n                    resource, assignment\n                }, i) => {\n                    return !assignmentStore.includes(assignment) ||\n                        !eventStore.includes(assignment.event) ||\n                        resource.id !== me.dragData.assignmentRecords[i]?.resourceId;\n                });\n\n            if (needRefresh) {\n                me.client.refresh();\n            }\n        }\n        // Reset the skipNextClick after a potential click event fires. https://github.com/bryntum/support/issues/5135\n        me.client.setTimeout(() => me.client.navigator.skipNextClick = false, 10);\n    }\n\n    handleKeyDownOrMove(event) {\n        if (this.mode !== 'copy') {\n            if (event.key && EventHelper.specialKeyFromEventKey(event.key) === this.copyKey.toLowerCase() || event[`${this.copyKey.toLowerCase()}Key`]) {\n                this.mode = 'copy';\n            }\n        }\n    }\n\n    handleKeyUp(event) {\n        if (EventHelper.specialKeyFromEventKey(event.key) === this.copyKey.toLowerCase()) {\n            this.mode = 'move';\n        }\n    }\n\n    //endregion\n\n    //region Finalization & validation\n\n    /**\n     * Checks if an event can be dropped on the specified position.\n     * @private\n     * @returns {Boolean} Valid (true) or invalid (false)\n     */\n    isValidDrop(dragData) {\n        const\n            { newResource, resourceRecord } = dragData,\n            sourceRecord                    = dragData.draggedEntities[0];\n\n        // Only allowed to drop outside scheduler element if we hit an element matching the externalDropTargetSelector\n        if (!newResource) {\n            return (!this.constrainDragToTimeline && this.externalDropTargetSelector) ? Boolean(dragData.browserEvent.target.closest(this.externalDropTargetSelector)) : false;\n        }\n\n        // Not allowed to drop an event on a group header or a readOnly resource\n        if (newResource.isSpecialRow || newResource.readOnly) {\n            return false;\n        }\n\n        // Not allowed to assign an event twice to the same resource\n        if (resourceRecord !== newResource) {\n            return !sourceRecord.event.resources.includes(newResource);\n        }\n\n        return true;\n    }\n\n    checkDragValidity(dragData, event) {\n        const\n            me        = this,\n            scheduler = me.currentOverClient;\n\n        let result;\n\n        // Cannot assign anything to readOnly resources\n        if (dragData.newResource?.readOnly) {\n            return false;\n        }\n\n        // First make sure there's no overlap, if not run the external validatorFn\n        if (!scheduler.allowOverlap && !scheduler.isDateRangeAvailable(\n            dragData.startDate,\n            dragData.endDate,\n            dragData.draggedEntities[0],\n            dragData.newResource\n        )) {\n            result = {\n                valid   : false,\n                message : me.L('L{eventOverlapsExisting}')\n            };\n        }\n        else {\n            result = me.validatorFn.call(\n                me.validatorFnThisObj || me,\n                dragData,\n                event\n            );\n        }\n\n        if (!result || result.valid) {\n            // Hook for features to have a say on validity\n            result = scheduler['checkEventDragValidity']?.(dragData, event) ?? result;\n        }\n\n        return result;\n    }\n\n    //endregion\n\n    //region Update records\n\n    /**\n     * Update events being dragged.\n     * @private\n     * @param context Drag data.\n     */\n    async updateRecords(context) {\n        const\n            me                            = this,\n            fromScheduler                                          = me.client,\n            toScheduler                                            = me.currentOverClient,\n            copyKeyPressed                                         = me.mode === 'copy',\n            { draggedEntities, timeDiff, initialAssignmentsState } = context,\n            originalStartDate                                      = initialAssignmentsState[0].startDate,\n            droppedStartDate                                       = me.adjustStartDate(originalStartDate, timeDiff);\n\n        let result;\n\n        if (!context.externalDropTarget) {\n            // Dropping dragged event completely outside the time axis is not allowed\n            if (!toScheduler.timeAxis.timeSpanInAxis(droppedStartDate, DateHelper.add(droppedStartDate, draggedEntities[0].event.durationMS, 'ms'))) {\n                context.valid = false;\n            }\n\n            if (context.valid) {\n                fromScheduler.eventStore.suspendAutoCommit();\n                toScheduler.eventStore.suspendAutoCommit();\n\n                result = await me.updateAssignments(fromScheduler, toScheduler, context, copyKeyPressed);\n\n                fromScheduler.eventStore.resumeAutoCommit();\n                toScheduler.eventStore.resumeAutoCommit();\n            }\n        }\n\n        // Might be flagged invalid in updateAssignments() above, if drop did not lead to any change\n        // (for example if dropped on non-working-time in Pro)\n        if (context.valid) {\n            // Tell the world there was a successful drop\n            toScheduler.trigger('eventDrop', Object.assign(me.getTriggerParams(context), {\n                isCopy               : copyKeyPressed,\n                copyMode             : me.copyMode,\n                domEvent             : context.browserEvent,\n                targetEventRecord    : context.targetEventRecord,\n                targetResourceRecord : context.newResource,\n                externalDropTarget   : context.externalDropTarget\n            }));\n        }\n\n        return result;\n    }\n\n    /**\n     * Update assignments being dragged\n     * @private\n     */\n    async updateAssignments(fromScheduler, toScheduler, context, copy) {\n        // The code is written to emit as few store events as possible\n        const\n            me                  = this,\n            { copyMode }        = me,\n            isCrossScheduler    = (fromScheduler !== toScheduler),\n            { isVertical }      = toScheduler,\n            {\n                assignmentStore : fromAssignmentStore,\n                eventStore      : fromEventStore\n            }                   = fromScheduler,\n            {\n                assignmentStore : toAssignmentStore,\n                eventStore      : toEventStore\n            }                   = toScheduler,\n            // When using TreeGroup in horizontal mode, store != resourceStore. Does not apply for vertical mode.\n            fromResourceStore   = fromScheduler.isVertical ? fromScheduler.resourceStore : fromScheduler.store,\n            toResourceStore     = isVertical ? toScheduler.resourceStore : toScheduler.store,\n            {\n                eventRecords,\n                assignmentRecords,\n                timeDiff,\n                initialAssignmentsState,\n                resourceRecord : fromResource,\n                newResource    : toResource\n            }                   = context,\n            { unifiedDrag }     = me,\n            // For an empty target event store, check if it has usesSingleAssignment explicitly set, otherwise use\n            // the value from the source event store\n            useSingleAssignment = (toEventStore.usesSingleAssignment ||\n                (toEventStore.usesSingleAssignment !== false && fromEventStore.usesSingleAssignment)),\n            // this value has clear semantic only for same scheduler case\n            effectiveCopyMode   = copyMode === 'event'\n                ? 'event'\n                : copyMode === 'assignment'\n                    ? 'assignment'\n                    : useSingleAssignment ? 'event' : 'assignment',\n            event1Date          = me.adjustStartDate(assignmentRecords[0].event.startDate, timeDiff),\n            eventsToAdd         = [],\n            eventsToRemove      = [],\n            assignmentsToAdd    = [],\n            assignmentsToRemove = [],\n            eventsToCheck       = [],\n            eventsToBatch       = new Set(),\n            resourcesInStore    = fromResourceStore.getAllDataRecords();\n\n        fromScheduler.suspendRefresh();\n        toScheduler.suspendRefresh();\n\n        let updated      = false,\n            updatedEvent = false,\n            indexDiff; // By how many resource rows has the drag moved.\n\n        if (isCrossScheduler) {\n            // The difference in indices via first dragged event will help us find resources for all the rest of the\n            // events accordingly\n            indexDiff = toResourceStore.indexOf(toResource) - fromResourceStore.indexOf(fromResource);\n        }\n        else if (me.constainDragToResource) {\n            indexDiff = 0;\n        }\n        else if (isVertical && toResourceStore.isGrouped) {\n            indexDiff = resourcesInStore.indexOf(fromResource) - resourcesInStore.indexOf(toResource);\n        }\n        else {\n            indexDiff = fromResourceStore.indexOf(fromResource) - fromResourceStore.indexOf(toResource);\n        }\n\n        if (isVertical) {\n            // <remove-on-release>\n            // TODO: Broken after merge, figure it out\n            // </remove-on-release>\n            eventRecords.forEach((draggedEvent, i) => {\n                const eventBar = context.eventBarEls[i];\n\n                delete draggedEvent.instanceMeta(fromScheduler).hasTemporaryDragElement;\n\n                // If it was created by a call to scheduler.currentOrientation.addTemporaryDragElement\n                // then release it back to be available to DomSync next time the rendered event block\n                // is synced.\n                if (eventBar.dataset.transient) {\n                    eventBar.remove();\n                }\n            });\n        }\n\n        const\n            eventBarEls          = context.eventBarEls.slice(),\n            addedEvents          = [],\n            // this map holds references between original assignment and its copy\n            copiedAssignmentsMap = {};\n\n        // Using for to support await inside\n        for (let i = 0; i < assignmentRecords.length; i++) {\n            const originalAssignment = assignmentRecords[i];\n\n            // Reassigned when dropped on other scheduler, thus not const\n            let draggedEvent = originalAssignment.event,\n                draggedAssignment;\n\n            if (copy) {\n                draggedAssignment                           = originalAssignment.copy();\n                copiedAssignmentsMap[originalAssignment.id] = draggedAssignment;\n            }\n            else {\n                draggedAssignment = originalAssignment;\n            }\n\n            if (!draggedAssignment.isOccurrenceAssignment && (!fromAssignmentStore.includes(originalAssignment) || !fromEventStore.includes(draggedEvent))) {\n                // Event was removed externally during the drag, just remove element from DOM (DomSync already has\n                // tried to clean it up at this point, but could not due to retainElement being set)\n                eventBarEls[i].remove();\n                eventBarEls.splice(i, 1);\n                assignmentRecords.splice(i, 1);\n                i--;\n                continue;\n            }\n\n            const\n                initialState           = initialAssignmentsState[i],\n                originalEventRecord    = draggedEvent,\n                originalStartDate      = initialState.startDate,\n                // grabbing resource early, since after \".copy()\" the record won't belong to any store\n                // and \".getResources()\" won't work. If it's a move to another scheduler, ensure the\n                // array still has a length. The process function will do an assign as opposed\n                // to a reassignment\n                originalResourceRecord = initialState.resource,\n                // Calculate new startDate (and round it) based on timeDiff up here, might be added to another\n                // event store below in which case it is invalidated. But this is anyway the target date\n                newStartDate           = this.constrainDragToTimeSlot\n                    ? originalStartDate\n                    : (unifiedDrag\n                        ? event1Date\n                        : me.adjustStartDate(originalStartDate, timeDiff));\n\n            if (fromAssignmentStore !== toAssignmentStore) {\n                // Single assignment from a multi assigned event dragged over, event needs to be copied over\n                // Same if we hold the copy key\n                const keepEvent = originalEventRecord.assignments.length > 1 || copy;\n\n                let newAssignment;\n\n                if (copy) {\n                    // In a copy mode dragged assignment is already a copy\n                    newAssignment = draggedAssignment;\n                }\n                else {\n                    newAssignment                              = draggedAssignment.copy();\n                    copiedAssignmentsMap[draggedAssignment.id] = newAssignment;\n                }\n\n                // Pro Engine does not seem to handle having the event already in place on the copied assignment,\n                // replacing it with id to have events bucket properly set up on commit\n                if (newAssignment.event && !useSingleAssignment) {\n                    newAssignment.event    = newAssignment.event.id;\n                    newAssignment.resource = newAssignment.resource.id;\n                }\n\n                if (!copy) {\n                    // If we're not copying, remove assignment from source scheduler\n                    assignmentsToRemove.push(draggedAssignment);\n                }\n\n                // If it was the last assignment, the event should also be removed\n                if (!keepEvent) {\n                    eventsToRemove.push(originalEventRecord);\n                }\n\n                // If event does not already exist in target scheduler a copy is added\n                // if we're copying the event, we always need to create new record\n                if (\n                    copy && (copyMode === 'event' || (copyMode === 'auto' && toEventStore.usesSingleAssignment)) ||\n                    !toEventStore.getById(originalEventRecord.id)\n                ) {\n                    draggedEvent = toEventStore.createRecord({\n                        ...originalEventRecord.data,\n                        // If we're copying the event (not making new assignment to existing), we need to generate\n                        // phantom id to link event to the assignment record\n                        id       : copy && (copyMode === 'event' || copyMode === 'auto') ? undefined : originalEventRecord.id,\n                        // Engine gets mad if not nulled\n                        calendar : null\n                    });\n\n                    newAssignment.set({\n                        eventId : draggedEvent.id,\n                        event   : draggedEvent\n                    });\n\n                    eventsToAdd.push(draggedEvent);\n                }\n\n                // And add it to the target scheduler\n                // <remove-on-release>\n                // TODO: Should be handled on the data layer ideally\n                // </remove-on-release>\n                if (!useSingleAssignment) {\n                    assignmentsToAdd.push(newAssignment);\n                }\n                draggedAssignment = newAssignment;\n            }\n\n            let newResource    = toResource,\n                reassignedFrom = null;\n\n            if (!unifiedDrag) {\n                if (!isCrossScheduler) {\n                    // If not dragging events as a unified block, distribute each to a new resource\n                    // using the same offset as the dragged event.\n                    if (indexDiff !== 0) {\n                        let newIndex;\n                        if (isVertical && toResourceStore.isGrouped) {\n                            newIndex    = Math.max(\n                                Math.min(\n                                    resourcesInStore.indexOf(originalResourceRecord) - indexDiff,\n                                    resourcesInStore.length - 1\n                                ),\n                                0\n                            );\n                            newResource = resourcesInStore[newIndex];\n                        }\n                        else {\n                            newIndex = Math.max(\n                                Math.min(\n                                    fromResourceStore.indexOf(originalResourceRecord) - indexDiff,\n                                    fromResourceStore.count - 1\n                                ),\n                                0\n                            );\n\n                            newResource = fromResourceStore.getAt(newIndex);\n\n                            // Exclude group headers, footers, summary row etc\n                            if (newResource.isSpecialRow) {\n                                newResource = fromResourceStore.getNext(newResource, false, true) || fromResourceStore.getPrevious(newResource, false, true);\n                            }\n                        }\n\n                        newResource = newResource?.$original;\n                    }\n                    else {\n                        newResource = originalResourceRecord;\n                    }\n                }\n                // we have a resource for first dragged event in toResource\n                else if (i > 0) {\n                    const draggedEventResourceIndex = fromResourceStore.indexOf(originalResourceRecord);\n                    newResource                     = toResourceStore.getAt(draggedEventResourceIndex + indexDiff) || newResource;\n                }\n            }\n\n            const isCrossResource = draggedAssignment.resourceId !== newResource.id;\n\n            // Cannot rely on assignment generation to detect update, since it might be a new assignment\n            // <remove-on-release>\n            // TODO: what about a case when we drag between schedulers which have different resource with same ids?\n            // </remove-on-release>\n            if (isCrossResource) {\n                reassignedFrom = fromResourceStore.getById(draggedAssignment.resourceId);\n\n                if (copy && fromAssignmentStore === toAssignmentStore) {\n                    // Scheduler Core patch\n                    // need to completely clear the resource/resourceId on the copied assignment, before setting the new\n                    // otherwise, what happens is that in the `$beforeChange.resource/Id` are still\n                    // stored the resource/Id of the original assignment\n                    // then, when finalizing commit, Core engine performs this:\n                    //     // First silently revert any data change (used by buckets), otherwise it won't be detected by `set()`\n                    //     me.setData(me.$beforeChange)\n                    // and then updates the data to new, which is recorded as UpdateAction in the STM with old/new data\n                    // then, when that update action in STM is undo-ed, the old data is written back to the record\n                    // and newly added assignment is pointing to the old resource\n                    // then, when STM action is redo-ed, a \"duplicate assignment\" exception is thrown\n                    // this is covered with the test:\n                    // Scheduler/tests/features/EventDragCopy.t.js -> Should not remove the original when undo-ing the copy-drag action (\"multi-assignment\")\n                    draggedAssignment.setData({\n                        resource   : null,\n                        resourceId : null\n                    });\n                    // eof Scheduler Core patch\n\n                    draggedAssignment.resource = newResource;\n                    draggedAssignment.event    = toEventStore.getById(draggedAssignment.eventId);\n\n                    const shouldCopyEvent = copyMode === 'event' || (fromEventStore.usesSingleAssignment && copyMode === 'auto');\n\n                    if (shouldCopyEvent) {\n                        draggedEvent = draggedEvent.copy();\n                        // need to clear the `endDate` of the copy\n                        // this is because when we drag the copy to a different position on the timeline\n                        // it will set the new start date and re-calculate end date\n                        // as a result, in STM transaction for this drag-copy there will be \"add\" action\n                        // and \"update\" action and NO COMMIT in the middle\n                        // so when re-doing this transaction the duration change is lost\n                        // this is covered with the test:\n                        // \"Scheduler/tests/features/EventDragCopy.t.js -> Should not remove the original when undo-ing the copy-drag action (usesSingleAssignment)\",\n                        // Before doing it, save a copy of endDate in meta object, considering timeDiff: that's because below it will check if event is in timeAxis.\n                        draggedEvent.meta.endDateCached = me.adjustStartDate(draggedEvent.endDate, timeDiff);\n                        draggedEvent.endDate = null;\n\n                        draggedAssignment.event = draggedEvent;\n\n                        if (toEventStore.usesSingleAssignment) {\n                            draggedEvent.resource   = newResource;\n                            draggedEvent.resourceId = newResource.id;\n                        }\n                    }\n\n                    if (\n                        !toAssignmentStore.find(a => a.eventId === draggedAssignment.eventId && a.resourceId === draggedAssignment.resourceId) &&\n                        !assignmentsToAdd.find(r => r.eventId === draggedAssignment.eventId && r.resourceId === draggedAssignment.resourceId)\n                    ) {\n                        shouldCopyEvent && eventsToAdd.push(draggedEvent);\n                        assignmentsToAdd.push(draggedAssignment);\n                    }\n                }\n                else {\n                    draggedAssignment.resource = newResource;\n                }\n\n                // Actual events should be batched, not data for new events when dragging between\n                draggedEvent.isEvent && eventsToBatch.add(draggedEvent);\n                updated = true;\n\n                // When dragging an occurrence, the assignment is only temporary. We have to tag the newResource along\n                // to be picked up by the occurrence -> event conversion\n                // <remove-on-release>\n                // TODO: A hack, figure a better way out\n                // </remove-on-release>\n                if (draggedEvent.isOccurrence) {\n                    draggedEvent.set('newResource', newResource);\n                }\n\n                // <remove-on-release>\n                // TODO: Should be handled on the datalayer somehow, but it is kind of edge casey\n                // </remove-on-release>\n                if (isCrossScheduler && useSingleAssignment) {\n                    // In single assignment mode, when dragged to another scheduler it will not copy the assignment\n                    // over but instead set the resourceId of the event. To better match expected behaviour\n                    draggedEvent.resourceId = newResource.id;\n                }\n            }\n            else {\n                if (\n                    copy &&\n                    (copyMode === 'event' || (copyMode === 'auto' && fromEventStore.usesSingleAssignment)) &&\n                    !eventsToAdd.includes(draggedEvent)\n                ) {\n                    draggedEvent = draggedEvent.copy();\n                    // see the comment above\n                    draggedEvent.meta.endDateCached = me.adjustStartDate(draggedEvent.endDate, timeDiff);\n                    draggedEvent.endDate = null;\n\n                    eventsToAdd.push(draggedEvent);\n\n                    draggedAssignment.event = draggedEvent;\n\n                    if (toEventStore.usesSingleAssignment) {\n                        draggedEvent.set({\n                            resource   : newResource,\n                            resourceId : newResource.id\n                        });\n                    }\n\n                    // Always add assignment to the store to allow proper element reuse\n                    assignmentsToAdd.push(draggedAssignment);\n                }\n            }\n\n            // Same for event\n            if (!eventsToCheck.find(ev => ev.draggedEvent === draggedEvent) && !DateHelper.isEqual(draggedEvent.startDate, newStartDate)) {\n\n                // only do for non occurence records\n                while (!draggedEvent.isOccurrence && draggedEvent.isBatchUpdating) {\n                    draggedEvent.endBatch(true);\n                }\n\n                // for same scheduler with multi-assignments, and copyMode === assignment, need to keep the start date\n                // because user intention is to create a new assignment, not re-schedule the event\n                // but only for cross-resource dragging, same resource dragging has semantic of regular drag\n                // <remove-on-release>\n                // TODO should also keep the proxy element on the same X coordinate\n                // </remove-on-release>\n                const shouldKeepStartDate = copy && !isCrossScheduler && !useSingleAssignment && effectiveCopyMode === 'assignment' && isCrossResource;\n\n                if (!shouldKeepStartDate) {\n                    draggedEvent.startDate = newStartDate;\n\n                    eventsToCheck.push({ draggedEvent, originalStartDate });\n                }\n\n                draggedEvent.isEvent && eventsToBatch.add(draggedEvent);\n                updatedEvent = true;\n            }\n\n            // Hook for features that need to do additional processing on drop (used by NestedEvents)\n            toScheduler.processEventDrop({\n                eventRecord    : draggedEvent,\n                resourceRecord : newResource,\n                element        : i === 0 ? context.context.element : context.context.relatedElements[i - 1],\n                context,\n                toScheduler,\n                reassignedFrom,\n                eventsToAdd,\n                addedEvents,\n                draggedAssignment\n            });\n\n            // There are two cases to consider when triggering this event - `copy` and `move` mode. In case we are\n            // copying the assignment (we can also copy the event) draggedAssignment will point to the copy of the\n            // original assignment record. Same for draggedEvent. These records are new records which are not yet added\n            // to the store and they contain correct state of the drop - which event is going to be assigned to which\n            // resource on what time.\n            // These records possess no knowledge about original records which they were cloned from. And that might be\n            // useful. Let's say you want to copy assignment (or event) to every row in the way. You need to know start\n            // row and the end row. That information is kept in the `originalAssignment` record. Which might be identical\n            // to the `draggedAssignment` record in `move` mode.\n            toScheduler.trigger('processEventDrop', {\n                originalAssignment,\n                draggedAssignment,\n                context,\n                copyMode,\n                isCopy : copy\n            });\n        }\n\n        fromAssignmentStore.remove(assignmentsToRemove);\n        fromEventStore.remove(eventsToRemove);\n        toAssignmentStore.add(assignmentsToAdd);\n\n        // Modify syncIdMap on the FGCanvas to make sure elements get animated nicely to new position\n        if (copy && fromAssignmentStore === toAssignmentStore) {\n            const { syncIdMap } = fromScheduler.foregroundCanvas;\n\n            Object.entries(copiedAssignmentsMap).forEach(([originalId, cloneRecord]) => {\n                const element = syncIdMap[originalId];\n                delete syncIdMap[originalId];\n                syncIdMap[cloneRecord.id] = element;\n            });\n        }\n\n        eventsToAdd.length && addedEvents.push(...toEventStore.add(eventsToAdd));\n\n        // When not constrained to timeline we are dragging a clone and need to manually do some cleanup if\n        // dropped in view\n        if (!me.constrainDragToTimeline) {\n            // go through assignmentRecords again after events has been added to toEventStore (if any)\n            // now we have updated assignment ids and can properly reuse event HTML elements\n            for (let i = 0; i < assignmentRecords.length; i++) {\n                const\n                    assignmentRecord     = copiedAssignmentsMap[assignmentRecords[i].id] || assignmentRecords[i],\n                    originalDraggedEvent = assignmentRecord.event,\n                    // try to get dragged event from addedEvents array, it will be there with updated ids\n                    // if toScheduler is different\n                    draggedEvent         = addedEvents?.find(r => r.id === originalDraggedEvent.id) || originalDraggedEvent,\n                    eventBar             = context.eventBarEls[i],\n                    element              = i === 0 ? context.context.element : context.context.relatedElements[i - 1],\n                    // Determine if in time axis here also, since the records date might be invalidated further below\n                    inTimeAxis           = toScheduler.isInTimeAxis(draggedEvent);\n\n                // after checking if is in time axis, imeta.endDateCached can be deleted\n                delete draggedEvent.meta.endDateCached;\n\n                if (!copy) {\n                    // Remove original element properly\n                    DomSync.removeChild(eventBar.parentElement, eventBar);\n                }\n\n                if (draggedEvent.resource && (isVertical || toScheduler.rowManager.getRowFor(draggedEvent.resource)) && inTimeAxis) {\n                    // Nested events are added to correct parent by the feature\n                    if (!draggedEvent.parent || draggedEvent.parent.isRoot) {\n                        const elRect = Rectangle.from(element, toScheduler.foregroundCanvas, true);\n\n                        // Ensure that after inserting the dragged element clone into the toScheduler's foregroundCanvas\n                        // it's at the same visual position that it was dragged to.\n                        DomHelper.setTopLeft(element, elRect.y, elRect.x);\n\n                        // Add element properly, so that DomSync will reuse it on next update\n                        DomSync.addChild(toScheduler.foregroundCanvas, element, draggedEvent.assignments[0].id);\n\n                        isCrossScheduler && toScheduler.processCrossSchedulerEventDrop({\n                            eventRecord : draggedEvent,\n                            toScheduler\n                        });\n                    }\n\n                    element.classList.remove('b-sch-event-hover', 'b-active', 'b-drag-proxy', 'b-dragging');\n                    element.retainElement = false;\n                }\n            }\n        }\n\n        addedEvents?.forEach(added => eventsToBatch.add(added));\n\n        // addedEvents order is the same with [context.element, ..context.relatedElements]\n        // Any added or removed events or assignments => something changed\n        if (assignmentsToRemove.length || eventsToRemove.length || assignmentsToAdd.length || eventsToAdd.length) {\n            updated = true;\n        }\n\n        // Commit changes to affected projects\n        if (updated || updatedEvent) {\n            // By batching event changes when using single assignment we avoid two updates, without it there will be one\n            // for date change and one when changed assignment updates resourceId on the event\n            useSingleAssignment && eventsToBatch.forEach(eventRecord => eventRecord.beginBatch());\n\n            await Promise.all([\n                toScheduler.project !== fromScheduler.project ? toScheduler.project.commitAsync() : null,\n                fromScheduler.project.commitAsync()\n            ]);\n\n            // End batch in engine friendly way, avoiding to have `set()` trigger another round of calculations\n            useSingleAssignment && eventsToBatch.forEach(eventRecord => eventRecord.endBatch(false, true));\n        }\n\n        if (!updated) {\n            // Engine might have reverted the date change, in which case this should be considered an invalid op\n            updated = eventsToCheck.some(({ draggedEvent, originalStartDate }) =>\n                !DateHelper.isEqual(draggedEvent.startDate, originalStartDate)\n            );\n        }\n\n        // Resumes self twice if not cross scheduler, but was suspended twice above also so all good\n        toScheduler.resumeRefresh();\n        fromScheduler.resumeRefresh();\n\n        if (assignmentRecords.length > 0) {\n            if (!updated) {\n                context.valid = false;\n            }\n            else {\n                // Always force re-render of the bars, to return them to their original position when:\n                // * Fill ticks leading to small date adjustment not actually changing the DOM\n                //   (https://github.com/bryntum/support/issues/630)\n                // * Dragging straight down with multiselection, events in the last resource will still be assigned to\n                //   that resource = no change in the DOM (https://github.com/bryntum/support/issues/6293)\n                eventBarEls.forEach(el => delete el.lastDomConfig);\n\n                // Not doing full refresh above, to allow for animations\n                toScheduler.refreshWithTransition();\n\n                if (isCrossScheduler) {\n                    fromScheduler.refreshWithTransition();\n\n                    toScheduler.selectedEvents = addedEvents;\n                }\n            }\n        }\n    }\n\n    //endregion\n\n    //region Drag data\n\n    getProductDragContext(dragData) {\n        const\n            me                                = this,\n            { currentOverClient : scheduler } = me,\n            target                            = dragData.browserEvent.target,\n            previousResolvedResource          = dragData.newResource || dragData.resourceRecord,\n            previousTargetEventRecord         = dragData.targetEventRecord;\n\n        let\n            targetEventRecord = scheduler ? me.resolveEventRecord(target, scheduler) : null,\n            newResource, externalDropTarget;\n\n        // Ignore if over dragged event\n        if (dragData.eventRecords.includes(targetEventRecord)) {\n            targetEventRecord = null;\n        }\n\n        if (me.constrainDragToResource) {\n            newResource = dragData.resourceRecord;\n        }\n        else if (!me.constrainDragToTimeline) {\n            newResource = me.resolveResource();\n        }\n        else if (scheduler) {\n            newResource = me.resolveResource() || dragData.newResource || dragData.resourceRecord;\n        }\n\n        const\n            { assignmentRecords, eventRecords } = dragData,\n            isOverNewResource                   = previousResolvedResource !== newResource;\n\n        let valid = Boolean(newResource && !newResource.isSpecialRow);\n\n        if (!newResource && me.externalDropTargetSelector) {\n            externalDropTarget = target.closest(me.externalDropTargetSelector);\n            valid              = Boolean(externalDropTarget);\n        }\n\n        return {\n            valid,\n            externalDropTarget,\n            eventRecords,\n            assignmentRecords,\n            newResource,\n            targetEventRecord,\n            dirty         : isOverNewResource || targetEventRecord !== previousTargetEventRecord,\n            proxyElements : [dragData.context.element, ...dragData.context.relatedElements || []]\n        };\n    }\n\n    getMinimalDragData(info) {\n        const\n            me                = this,\n            { scheduler }     = me,\n            element           = me.getElementFromContext(info),\n            eventRecord       = me.resolveEventRecord(element, scheduler),\n            resourceRecord    = scheduler.resolveResourceRecord(element),\n            assignmentRecord  = scheduler.resolveAssignmentRecord(element),\n            assignmentRecords = assignmentRecord ? [assignmentRecord] : [];\n\n        // We multi drag other selected events if the dragged event is already selected, or the ctrl key is pressed\n        if (assignmentRecord && (scheduler.isAssignmentSelected(assignmentRecords[0]) || (me.drag.startEvent.ctrlKey && scheduler.multiEventSelect))) {\n            assignmentRecords.push.apply(assignmentRecords, me.getRelatedRecords(assignmentRecord));\n        }\n\n        const eventRecords = [...new Set(assignmentRecords.map(assignment => assignment.event))];\n\n        return {\n            eventRecord,\n            resourceRecord,\n            assignmentRecord,\n            eventRecords,\n            assignmentRecords\n        };\n    }\n\n    setupProductDragData(info) {\n        const\n            me            = this,\n            { scheduler } = me,\n            element       = me.getElementFromContext(info),\n            {\n                eventRecord,\n                resourceRecord,\n                assignmentRecord,\n                assignmentRecords\n            }             = me.getMinimalDragData(info),\n            eventBarEls   = [];\n\n        if (me.constrainDragToResource && !resourceRecord) {\n            throw new Error('Resource could not be resolved for event: ' + eventRecord.id);\n        }\n\n        let dateConstraints;\n\n        if (me.constrainDragToTimeline) {\n            dateConstraints = me.getDateConstraints?.(resourceRecord, eventRecord);\n\n            const\n                constrainRectangle = me.constrainRectangle = me.getConstrainingRectangle(dateConstraints, resourceRecord, eventRecord),\n                eventRegion        = Rectangle.from(element, scheduler.timeAxisSubGridElement);\n\n            super.setupConstraints(\n                constrainRectangle,\n                eventRegion,\n                scheduler.timeAxisViewModel.snapPixelAmount,\n                Boolean(dateConstraints.start)\n            );\n        }\n\n        // Collecting all elements to drag\n        assignmentRecords.forEach(assignment => {\n            let eventBarEl = scheduler.getElementFromAssignmentRecord(assignment, true);\n\n            if (!eventBarEl) {\n                eventBarEl = scheduler.currentOrientation.addTemporaryDragElement(assignment.event, assignment.resource);\n            }\n\n            eventBarEls.push(eventBarEl);\n        });\n\n        return {\n            record          : assignmentRecord,\n            draggedEntities : assignmentRecords,\n            dateConstraints : dateConstraints?.start ? dateConstraints : null,\n            // Create copies of the elements\n            eventBarCopies  : eventBarEls.map(el => me.createProxy(el)),\n            eventBarEls\n        };\n    }\n\n    getDateConstraints(resourceRecord, eventRecord) {\n        const\n            { scheduler }           = this,\n            externalDateConstraints = scheduler.getDateConstraints?.(resourceRecord, eventRecord);\n\n        let minDate, maxDate;\n\n        if (this.constrainDragToTimeSlot) {\n            minDate = eventRecord.startDate;\n            maxDate = eventRecord.endDate;\n        }\n        else if (externalDateConstraints) {\n            minDate = externalDateConstraints.start;\n            maxDate = externalDateConstraints.end;\n        }\n\n        return {\n            start : minDate,\n            end   : maxDate\n        };\n    }\n\n    getConstrainingRectangle(dateRange, resourceRecord, eventRecord) {\n        return this.scheduler.getScheduleRegion(this.constrainDragToResource && resourceRecord, eventRecord, true, dateRange && {\n            start : dateRange.start, end : dateRange.end\n        });\n    }\n\n    /**\n     * Initializes drag data (dates, constraints, dragged events etc). Called when drag starts.\n     * @private\n     * @param info\n     * @returns {*}\n     */\n    getDragData(info) {\n        const dragData = this.getMinimalDragData(info) || {};\n\n        return {\n            ...super.getDragData(info),\n            ...dragData,\n            initialAssignmentsState : dragData.assignmentRecords.map(assignment => ({\n                startDate : assignment.event.startDate,\n                resource  : assignment.resource,\n                assignment\n            }))\n        };\n    }\n\n    /**\n     * Provide your custom implementation of this to allow additional selected records to be dragged together with the original one.\n     * @param {Scheduler.model.AssignmentModel} assignmentRecord The assignment about to be dragged\n     * @returns {Scheduler.model.AssignmentModel[]} An array of assignment records to drag together with the original\n     */\n    getRelatedRecords(assignmentRecord) {\n        return this.scheduler.selectedAssignments.filter(selectedRecord => selectedRecord !== assignmentRecord && !selectedRecord.resource.readOnly && selectedRecord.event.isDraggable);\n    }\n\n    /**\n     * Get correct axis coordinate depending on schedulers mode (horizontal -> x, vertical -> y). Also takes milestone\n     * layout into account.\n     * @private\n     * @param {Scheduler.model.EventModel} eventRecord Record being dragged\n     * @param {HTMLElement} element Element being dragged\n     * @param {Number[]} coord XY coordinates\n     * @returns {Number|Number[]} X,Y or XY\n     */\n    getCoordinate(eventRecord, element, coord) {\n        const scheduler = this.currentOverClient;\n\n        if (scheduler.isHorizontal) {\n            let x = coord[0];\n\n            // Adjust coordinate for milestones if using a layout mode, since they are aligned differently than events\n            if (scheduler.milestoneLayoutMode !== 'default' && eventRecord.isMilestone) {\n                switch (scheduler.milestoneAlign) {\n                    case 'center':\n                        x += element.offsetWidth / 2;\n                        break;\n                    case 'end':\n                        x += element.offsetWidth;\n                        break;\n                }\n            }\n\n            return x;\n        }\n        else {\n            let y = coord[1];\n            // Adjust coordinate for milestones if using a layout mode, since they are aligned differently than events\n            if (scheduler.milestoneLayoutMode !== 'default' && eventRecord.isMilestone) {\n                switch (scheduler.milestoneAlign) {\n                    case 'center':\n                        y += element.offsetHeight / 2;\n                        break;\n                    case 'end':\n                        y += element.offsetHeight;\n                        break;\n                }\n            }\n\n            return y;\n        }\n    }\n\n    /**\n     * Get resource record occluded by the drag proxy.\n     * @private\n     * @returns {Scheduler.model.ResourceModel}\n     */\n    resolveResource() {\n        const\n            me                 = this,\n            client             = me.currentOverClient,\n            { isHorizontal }   = client,\n            {\n                context,\n                browserEvent,\n                dragProxy\n            }                  = me.dragData,\n            element            = dragProxy || context.element,\n            // Page coords for elementFromPoint\n            pageRect           = Rectangle.from(element, null, true),\n            y                  = (client.isVertical || me.unifiedDrag) ? context.clientY : pageRect.center.y,\n            // Local coords to resolve resource in vertical\n            localRect          = Rectangle.from(element, client.timeAxisSubGridElement, true),\n            { x : lx, y : ly } = localRect.center,\n            eventTarget        = me.getMouseMoveEventTarget(browserEvent);\n\n        let resource = null;\n\n        if (client.element.contains(eventTarget)) {\n            // This is benchmarked as the fastest way to find a Grid Row from a viewport Y coordinate\n            // so use it in preference to elementFromPoint (which causes a forced synchronous layout) in horizontal mode.\n            if (isHorizontal) {\n                const row = client.rowManager.getRowAt(y);\n\n                resource = row && client.store.getAt(row.dataIndex);\n            }\n            else {\n                // In vertical mode, just use the X coordinate to find out which resource we are under.\n                // The method requires that a .b-sch-timeaxis-cell element be passed.\n                // There is only one in vertical mode, so use that.\n                resource = client.resolveResourceRecord(client.timeAxisSubGridElement.querySelector('.b-sch-timeaxis-cell'), [lx, ly]);\n            }\n        }\n\n        return resource;\n    }\n\n    //endregion\n\n    //region Other stuff\n\n    adjustStartDate(startDate, timeDiff) {\n        const\n            scheduler = this.currentOverClient;\n\n        startDate = scheduler.timeAxis.roundDate(new Date(startDate - 0 + timeDiff), scheduler.snapRelativeToEventStartDate ? startDate : false);\n\n        return this.constrainStartDate(startDate);\n    }\n\n    getRecordElement(assignmentRecord) {\n        return this.client.getElementFromAssignmentRecord(assignmentRecord, true);\n    }\n\n    // Used by the Dependencies feature to draw lines to the drag proxy instead of the original event element\n    getProxyElement(assignmentRecord) {\n        if (this.isDragging) {\n            const index = this.dragData.assignmentRecords.indexOf(assignmentRecord);\n\n            if (index >= 0) {\n                return this.dragData.proxyElements[index];\n            }\n        }\n\n        return null;\n    }\n\n    //endregion\n\n    //#region Salesforce hooks\n\n    getMouseMoveEventTarget(event) {\n        return event.target;\n    }\n\n    //#endregion\n}\n\nGridFeatureManager.registerFeature(EventDrag, true, 'Scheduler');\nGridFeatureManager.registerFeature(EventDrag, false, 'ResourceHistogram');\n","import DragCreateBase from './base/DragCreateBase.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\nimport ObjectHelper from '../../Core/helper/ObjectHelper.js';\nimport DomHelper from '../../Core/helper/DomHelper.js';\n\n/**\n * @module Scheduler/feature/EventDragCreate\n */\n\n/**\n * Feature that allows the user to create new events by dragging in empty parts of the scheduler rows.\n *\n * {@inlineexample Scheduler/feature/EventDragCreate.js}\n *\n * This feature is **enabled** by default.\n *\n * <div class=\"note\">Incompatible with the {@link Scheduler.feature.EventDragSelect EventDragSelect} and\n * {@link Scheduler.feature.Pan Pan} features. If either of those features are enabled, this feature has no effect.\n * </div>\n *\n * ## Conditionally preventing drag creation\n *\n * To conditionally prevent drag creation for a certain resource or a certain timespan, you listen for the\n * {@link #event-beforeDragCreate} event, add your custom logic to it and return `false` to prevent the operation\n * from starting. For example to not allow drag creation on the topmost resource:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     listeners : {\n *         beforeDragCreate({ resource }) {\n *             // Prevent drag creating on the topmost resource\n *             if (resource === scheduler.resourceStore.first) {\n *                 return false;\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * @extends Scheduler/feature/base/DragCreateBase\n * @demo Scheduler/basic\n * @classtype eventDragCreate\n * @feature\n */\nexport default class EventDragCreate extends DragCreateBase {\n    //region Config\n\n    static $name = 'EventDragCreate';\n\n    static configurable = {\n        /**\n         * An empty function by default, but provided so that you can perform custom validation on the event being\n         * created. Return `true` if the new event is valid, `false` to prevent an event being created.\n         * @param {Object} context A drag create context\n         * @param {Date} context.startDate Event start date\n         * @param {Date} context.endDate Event end date\n         * @param {Scheduler.model.EventModel} context.record Event record\n         * @param {Scheduler.model.ResourceModel} context.resourceRecord Resource record\n         * @param {Event} event The event object\n         * @returns {Boolean} `true` if this validation passes\n         * @config {Function}\n         */\n        validatorFn : () => true,\n\n        /**\n         * Locks the layout during drag create, overriding the default behaviour that uses the same rendering\n         * pathway for drag creation as for already existing events.\n         *\n         * This more closely resembles the behaviour of versions prior to 4.2.0.\n         *\n         * @config {Boolean}\n         * @default\n         */\n        lockLayout : false\n    };\n\n    //endregion\n\n    //region Events\n\n    /**\n     * Fires on the owning Scheduler after the new event has been created.\n     * @event dragCreateEnd\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source\n     * @param {Scheduler.model.EventModel} eventRecord The new `EventModel` record.\n     * @param {Scheduler.model.ResourceModel} resourceRecord The resource for the row in which the event is being\n     * created.\n     * @param {MouseEvent} event The ending mouseup event.\n     * @param {HTMLElement} eventElement The DOM element representing the newly created event un the UI.\n     */\n\n    /**\n     * Fires on the owning Scheduler at the beginning of the drag gesture. Returning `false` from a listener prevents\n     * the drag create operation from starting.\n     *\n     * ```javascript\n     * const scheduler = new Scheduler({\n     *     listeners : {\n     *         beforeDragCreate({ date }) {\n     *             // Prevent drag creating events in the past\n     *             return date >= Date.now();\n     *         }\n     *     }\n     * });\n     * ```\n     *\n     * @event beforeDragCreate\n     * @on-owner\n     * @preventable\n     * @param {Scheduler.view.Scheduler} source\n     * @param {Scheduler.model.ResourceModel} resourceRecord\n     * @param {Date} date The datetime associated with the drag start point.\n     */\n\n    /**\n     * Fires on the owning Scheduler after the drag start has created a new Event record.\n     * @event dragCreateStart\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source\n     * @param {Scheduler.model.EventModel} eventRecord The event record being created\n     * @param {Scheduler.model.ResourceModel} resourceRecord The resource record\n     * @param {HTMLElement} eventElement The element representing the new event.\n     */\n\n    /**\n     * Fires on the owning Scheduler to allow implementer to prevent immediate finalization by setting\n     * `data.context.async = true` in the listener, to show a confirmation popup etc\n     * ```javascript\n     *  scheduler.on('beforedragcreatefinalize', ({context}) => {\n     *      context.async = true;\n     *      setTimeout(() => {\n     *          // async code don't forget to call finalize\n     *          context.finalize();\n     *      }, 1000);\n     *  })\n     * ```\n     * @event beforeDragCreateFinalize\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source Scheduler instance\n     * @param {Scheduler.model.EventModel} eventRecord The event record being created\n     * @param {Scheduler.model.ResourceModel} resourceRecord The resource record\n     * @param {HTMLElement} eventElement The element representing the new Event record\n     * @param {Object} context\n     * @param {Boolean} context.async Set true to handle drag create asynchronously (e.g. to wait for user\n     * confirmation)\n     * @param {Function} context.finalize Call this method to finalize drag create. This method accepts one\n     * argument: pass true to update records, or false, to ignore changes\n     */\n\n    /**\n     * Fires on the owning Scheduler at the end of the drag create gesture whether or not\n     * a new event was created by the gesture.\n     * @event afterDragCreate\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source\n     * @param {Scheduler.model.EventModel} eventRecord The event record being created\n     * @param {Scheduler.model.ResourceModel} resourceRecord The resource record\n     * @param {HTMLElement} eventElement The element representing the created event record\n     */\n\n    //endregion\n\n    //region Init\n\n    get scheduler() {\n        return this.client;\n    }\n\n    get store() {\n        return this.client.eventStore;\n    }\n\n    get project() {\n        return this.client.project;\n    }\n\n    updateLockLayout(lock) {\n        this.dragActiveCls = `b-dragcreating${lock ? ' b-dragcreate-lock' : ''}`;\n    }\n\n    //endregion\n\n    //region Scheduler specific implementation\n\n    handleBeforeDragCreate(drag, eventRecord, event) {\n        const { resourceRecord } = drag;\n\n        if (resourceRecord.readOnly || !this.scheduler.resourceStore.isAvailable(resourceRecord)) {\n            return false;\n        }\n\n        const\n            { scheduler }      = this,\n            // For resources with a calendar, ensure the date is inside a working time range\n            isWorkingTime      = !scheduler.isSchedulerPro || eventRecord.ignoreResourceCalendar || resourceRecord.isWorkingTime(drag.mousedownDate),\n            result             = isWorkingTime && scheduler.trigger('beforeDragCreate', {\n                resourceRecord,\n                date : drag.mousedownDate,\n                event\n            });\n\n        // Save date constraints\n        this.dateConstraints = scheduler.getDateConstraints?.(resourceRecord, eventRecord);\n\n        return result;\n    }\n\n    dragStart(drag) {\n        const\n            me               = this,\n            { client }       = me,\n            {\n                eventStore,\n                assignmentStore,\n                enableEventAnimations\n            }                  = client,\n            { resourceRecord } = drag,\n            eventRecord        = me.createEventRecord(drag),\n            resourceRecords    = [resourceRecord];\n\n        eventRecord.set('duration', DateHelper.diff(eventRecord.startDate, eventRecord.endDate, eventRecord.durationUnit, true));\n\n        // It's only a provisional event until gesture is completed (possibly longer if an editor dialog is shown after)\n        eventRecord.isCreating = true;\n\n        // Flag used by rendering to not draw a zero length event being drag created as a milestone\n        eventRecord.meta.isDragCreating = true;\n\n        // force the transaction canceling in the taskeditor early\n        // this is because we are going to add a new event record to the store, and it has to be out of the\n        // task editor's stm transaction\n        // now there's a re-entrant protection in that method, so hopefully when it will be called by the\n        // editor itself that's ok\n        // `taskEdit === false` in some cases, so can't just use `?.` here\n        client.features.taskEdit && client.features.taskEdit.doCancel();\n\n        // This presents the event to be scheduled for validation at the proposed mouse/date point\n        // If rejected, we cancel operation\n        if (me.handleBeforeDragCreate(drag, eventRecord, drag.event) === false) {\n            return false;\n        }\n\n        me.captureStm(true);\n\n        let assignmentRecords = [];\n\n        if (resourceRecord) {\n            assignmentRecords = assignmentStore.assignEventToResource(eventRecord, resourceRecord);\n        }\n\n        // Vetoable beforeEventAdd allows cancel of this operation\n        if (client.trigger('beforeEventAdd', { eventRecord, resourceRecords, assignmentRecords }) === false) {\n            assignmentStore.remove(assignmentRecords);\n            return false;\n        }\n\n        // When configured to lock layout during drag create, set a flag that HorizontalRendering will pick up to\n        // exclude the new event from the layout calculations. It will then be at the topmost position in the \"cell\"\n        if (me.lockLayout) {\n            eventRecord.meta.excludeFromLayout = true;\n        }\n\n        client.onEventCreated?.(eventRecord);\n\n        client.enableEventAnimations = false;\n        eventStore.addAsync(eventRecord).then(() => client.enableEventAnimations = enableEventAnimations);\n\n        // Element must be created synchronously, not after the project's normalizing delays.\n        // Overrides the check for isEngineReady in VerticalRendering so that the newly added record\n        // will be rendered when we call refreshRows.\n        client.isCreating = true;\n        client.refreshRows();\n        client.isCreating = false;\n\n        // Set the element we are dragging\n        drag.itemElement = drag.element = client.getElementFromEventRecord(eventRecord);\n\n        // If the resource row is very tall, the event may have been rendered outside of the\n        // visible viewport. If so, scroll it into view.\n        if (!DomHelper.isInView(drag.itemElement)) {\n            client.scrollable.scrollIntoView(drag.itemElement, {\n                animate    : true,\n                edgeOffset : client.barMargin\n            });\n        }\n\n        return super.dragStart(drag);\n    }\n\n    checkValidity(context, event) {\n        const\n            me         = this,\n            { client } = me;\n\n        // Nicer for users of validatorFn\n        context.resourceRecord = me.dragging.resourceRecord;\n        return (\n            client.allowOverlap ||\n            client.isDateRangeAvailable(context.startDate, context.endDate, context.eventRecord, context.resourceRecord)\n        ) && me.createValidatorFn.call(me.validatorFnThisObj || me, context, event);\n    }\n\n    // Determine if resource already has events or not\n    isRowEmpty(resourceRecord) {\n        const events = this.store.getEventsForResource(resourceRecord);\n        return !events || !events.length;\n    }\n\n    //endregion\n\n    triggerBeforeFinalize(event) {\n        this.client.trigger(`beforeDragCreateFinalize`, event);\n    }\n\n    /**\n     * Creates an event by the event object coordinates\n     * @param {Object} drag The Bryntum event object\n     * @private\n     */\n    createEventRecord(drag) {\n        const\n            me          = this,\n            { client }  = me,\n            dimension   = client.isHorizontal ? 'X' : 'Y',\n            {\n                timeAxis,\n                eventStore,\n                weekStartDay\n            }           = client,\n            {\n                event,\n                mousedownDate\n            }           = drag,\n            draggingEnd = me.draggingEnd = event[`page${dimension}`] > drag.startEvent[`page${dimension}`],\n            eventConfig = {\n                name      : eventStore.modelClass.fieldMap.name.defaultValue || me.L('L{Object.newEvent}'),\n                startDate : draggingEnd ? DateHelper.floor(mousedownDate, timeAxis.resolution, null, weekStartDay) : mousedownDate,\n                endDate   : draggingEnd ? mousedownDate : DateHelper.ceil(mousedownDate, timeAxis.resolution, null, weekStartDay)\n            };\n\n        // if project model has been imported from Gantt, we have to define constraint data directly to correct\n        // auto-scheduling while dragCreate\n        if (client.project.isGanttProjectMixin) {\n            ObjectHelper.assign(eventConfig, {\n                constraintDate : eventConfig.startDate,\n                constraintType : 'startnoearlierthan'\n            });\n        }\n\n        return eventStore.createRecord(eventConfig);\n    }\n\n    async internalUpdateRecord(context, eventRecord) {\n        await super.internalUpdateRecord(context, eventRecord);\n\n        // Toggle isCreating after ending batch, to make sure assignments can become persistable\n        if (!this.client.hasEventEditor) {\n            context.eventRecord.isCreating = false;\n        }\n    }\n\n    async finalizeDragCreate(context) {\n        const { meta } = context.eventRecord;\n\n        // Remove the layout lock flag, event will jump into place as part of the finalization\n        meta.excludeFromLayout = false;\n        // Also allow new event to become a milestone now\n        meta.isDragCreating    = false;\n\n        const transferred = await super.finalizeDragCreate(context);\n\n        // if STM capture has NOT been transferred to the\n        // event editor, we need to finalize the STM transaction / release the capture\n        if (!transferred) {\n            this.freeStm(true);\n        }\n        else {\n            // otherwise just freeing our capture\n            this.hasStmCapture = false;\n        }\n\n        return transferred;\n    }\n\n    async cancelDragCreate(context) {\n        await super.cancelDragCreate(context);\n\n        this.freeStm(false);\n    }\n\n    getTipHtml(...args) {\n        const\n            html        = super.getTipHtml(...args),\n            { element } = this.tip;\n\n        element.classList.add('b-sch-dragcreate-tooltip');\n        element.classList.toggle('b-too-narrow', this.dragging.context.tooNarrow);\n\n        return html;\n    }\n\n    onAborted(context) {\n        const { eventRecord, resourceRecord } = context;\n\n        // The product this is being used in may not have resources.\n        this.store.unassignEventFromResource?.(eventRecord, resourceRecord);\n        this.store.remove(eventRecord);\n    }\n}\n\nGridFeatureManager.registerFeature(EventDragCreate, true, 'Scheduler');\nGridFeatureManager.registerFeature(EventDragCreate, false, 'ResourceHistogram');\n","import TooltipBase from './base/TooltipBase.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport StringHelper from '../../Core/helper/StringHelper.js';\nimport { parseAlign } from '../../Core/helper/util/Rectangle.js';\n\n/**\n * @module Scheduler/feature/EventTooltip\n */\n\n// Alignment offsets to clear any dependency terminals depending on whether\n// the tooltip is aligned top/bottom (1) or left/right (2) as parsed from the\n// align string by Rectangle's parseAlign\nconst\n    zeroOffset = [0, 0],\n    depOffset  = [\n        null, [0, 10], [10, 0]\n    ];\n\n/**\n * Displays a tooltip when hovering events. The template used to render the tooltip can be customized, see {@link #config-template}.\n * Config options are also applied to the tooltip shown, see {@link Core.widget.Tooltip} for available options.\n *\n * ## Showing local data\n * To show a basic \"local\" tooltip (with data available in the Event record) upon hover:\n * ```javascript\n * new Scheduler({\n *   features : {\n *     eventTooltip : {\n *         // Tooltip configs can be used here\n *         align : 'l-r' // Align left to right,\n *         // A custom HTML template\n *         template : data => `<dl>\n *           <dt>Assigned to:</dt>\n *              <dt>Time:</dt>\n *              <dd>\n *                  ${DateHelper.format(data.eventRecord.startDate, 'LT')} - ${DateHelper.format(data.eventRecord.endDate, 'LT')}\n *              </dd>\n *              ${data.eventRecord.get('note') ? `<dt>Note:</dt><dd>${data.eventRecord.note}</dd>` : ''}\n *\n *              ${data.eventRecord.get('image') ? `<dt>Image:</dt><dd><img class=\"image\" src=\"${data.eventRecord.get('image')}\"/></dd>` : ''}\n *          </dl>`\n *     }\n *   }\n * });\n * ```\n *\n * ## Showing remotely loaded data\n * Loading remote data into the event tooltip is easy. Simply use the {@link #config-template} and return a Promise which yields the content to show.\n * ```javascript\n * new Scheduler({\n *   features : {\n *     eventTooltip : {\n *        template : ({ eventRecord }) => AjaxHelper.get(`./fakeServer?name=${eventRecord.name}`).then(response => response.text())\n *     }\n *   }\n * });\n * ```\n *\n * This feature is **enabled** by default\n *\n * By default, the tooltip {@link Core.widget.Widget#config-scrollAction realigns on scroll}\n * meaning that it will stay aligned with its target should a scroll interaction make the target move.\n *\n * If this is causing performance issues in a Scheduler, such as if there are many dozens of events\n * visible, you can configure this feature with `scrollAction: 'hide'`. This feature's configuration is\n * applied to the tooltip, so that will mean that the tooltip will hide if its target is moved by a\n * scroll interaction.\n *\n * @extends Scheduler/feature/base/TooltipBase\n * @demo Scheduler/basic\n * @inlineexample Scheduler/feature/EventTooltip.js\n * @classtype eventTooltip\n * @feature\n */\nexport default class EventTooltip extends TooltipBase {\n    //region Config\n\n    static get $name() {\n        return 'EventTooltip';\n    }\n\n    static get defaultConfig() {\n        return {\n            /**\n             * A function which receives data about the event and returns a string,\n             * or a Promise yielding a string (for async tooltips), to be displayed in the tooltip.\n             * This method will be called with an object containing the fields below\n             * @param {Object} data\n             * @param {Scheduler.model.EventModel} data.eventRecord\n             * @param {Date} data.startDate\n             * @param {Date} data.endDate\n             * @param {String} data.startText\n             * @param {String} data.endText\n             * @config {Function} template\n             */\n            template : data => `\n                ${data.eventRecord.name ? StringHelper.xss`<div class=\"b-sch-event-title\">${data.eventRecord.name}</div>` : ''}\n                ${data.startClockHtml}\n                ${data.endClockHtml}`,\n\n            cls : 'b-sch-event-tooltip',\n\n            monitorRecordUpdate : true,\n\n            /**\n             * Defines what to do if document is scrolled while the tooltip is visible.\n             *\n             * Valid values: ´null´: do nothing, ´hide´: hide the tooltip or ´realign´: realign to the target if possible.\n             *\n             * @config {'hide'|'realign'|null}\n             * @default\n             */\n            scrollAction : 'hide'\n        };\n    }\n\n    /**\n     * The event which the tooltip feature has been activated for.\n     * @member {Scheduler.model.EventModel} eventRecord\n     * @readonly\n     */\n\n    //endregion\n\n    construct(client, config) {\n        const me = this;\n\n        super.construct(client, config);\n\n        if (typeof me.align === 'string') {\n            me.align = { align : me.align };\n        }\n    }\n\n    onPaint({ firstPaint }) {\n        super.onPaint(...arguments);\n\n        if (firstPaint) {\n            const\n                me           = this,\n                dependencies = me.client.features.dependencies;\n\n            if (dependencies) {\n                me.tooltip.ion({\n                    beforeAlign({ source : tooltip, offset = zeroOffset }) {\n                        const\n                            { edgeAligned }   = parseAlign(tooltip.align.align),\n                            depTerminalOffset = dependencies.disabled ? zeroOffset : depOffset[edgeAligned];\n\n                        // Add the spec's offset to the offset necessitated by dependency terminals\n                        arguments[0].offset = [\n                            offset[0] + depTerminalOffset[0],\n                            offset[1] + depTerminalOffset[1]\n                        ];\n                    }\n                });\n            }\n        }\n    }\n}\n\nGridFeatureManager.registerFeature(EventTooltip, true, 'Scheduler');\nGridFeatureManager.registerFeature(EventTooltip, false, 'ResourceHistogram');\n","import InstancePlugin from '../../Core/mixin/InstancePlugin.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport DomHelper from '../../Core/helper/DomHelper.js';\nimport DomSync from '../../Core/helper/DomSync.js';\n\n/**\n * @module Scheduler/feature/StickyEvents\n */\n\nconst zeroMargins = { width : 0, height : 0 };\n\n/**\n * This feature applies native `position: sticky` to event contents in horizontal mode, keeping the contents in view as\n * long as possible on scroll. For vertical mode it uses a programmatic solution to achieve the same result.\n *\n * Assign `eventRecord.stickyContents = false` to disable stickiness on a per event level (docs for\n * {@link Scheduler/model/EventModel#field-stickyContents}).\n *\n * This feature is **enabled** by default.\n *\n * ### Note\n * If a complex {@link Scheduler.view.Scheduler#config-eventRenderer} is used to create a DOM structure within the\n * `.b-sch-event-content` element, then application CSS will need to be written to cancel the stickiness on the\n * `.b-sch-event-content` element, and make some inner content element(s) sticky.\n *\n * @extends Core/mixin/InstancePlugin\n * @classtype stickyEvents\n * @feature\n */\nexport default class StickyEvents extends InstancePlugin {\n    static $name = 'StickyEvents';\n\n    static type = 'stickyEvents';\n\n    static pluginConfig = {\n        chain : ['onEventDataGenerated']\n    };\n\n    construct(scheduler, config) {\n        super.construct(scheduler, config);\n\n        if (scheduler.isVertical) {\n            this.toUpdate = new Set();\n\n            scheduler.ion({\n                scroll           : 'onSchedulerScroll',\n                horizontalScroll : 'onHorizontalScroll',\n                thisObj          : this,\n                prio             : 10000\n            });\n        }\n    }\n\n    onEventDataGenerated(renderData) {\n        if (this.client.isHorizontal) {\n            renderData.wrapperCls['b-disable-sticky'] = renderData.eventRecord.stickyContents === false;\n        }\n        else {\n            this.syncEventContentPosition(renderData, undefined, true);\n            this.updateStyles();\n        }\n    }\n\n    //region Vertical mode\n\n    onSchedulerScroll() {\n        if (!this.disabled) {\n            this.verticalSyncAllEventsContentPosition(this.client);\n        }\n    }\n\n    // Have to sync also on horizontal scroll, since we reuse elements and dom configs\n    onHorizontalScroll({ subGrid }) {\n        if (subGrid === this.client.timeAxisSubGrid) {\n            this.verticalSyncAllEventsContentPosition(this.client);\n        }\n    }\n\n    updateStyles() {\n        for (const { contentEl, style } of this.toUpdate) {\n            DomHelper.applyStyle(contentEl, style);\n        }\n\n        this.toUpdate.clear();\n    }\n\n    verticalSyncAllEventsContentPosition(scheduler) {\n        const { resourceMap } = scheduler.currentOrientation;\n\n        for (const eventsData of resourceMap.values()) {\n            for (const { renderData, elementConfig } of Object.values(eventsData)) {\n                const args = [renderData];\n\n                if (elementConfig && renderData.eventRecord.isResourceTimeRange) {\n                    args.push(elementConfig.children[0]);\n                }\n\n                this.syncEventContentPosition.apply(this, args);\n            }\n        }\n        this.toUpdate.size && this.updateStyles();\n    }\n\n    syncEventContentPosition(renderData, eventContent = renderData.eventContent, duringGeneration = false) {\n        if (\n            this.disabled ||\n            // Allow client disable stickiness for certain events\n            renderData.eventRecord.stickyContents === false\n        ) {\n            return;\n        }\n\n        const\n            { client }        = this,\n            {\n                eventRecord,\n                resourceRecord,\n                useEventBuffer,\n                bufferAfterWidth,\n                bufferBeforeWidth,\n                top,\n                height\n            }                 = renderData,\n            scrollPosition    = client.scrollable.y,\n            wrapperEl         = duringGeneration ? null : client.getElementFromEventRecord(eventRecord, resourceRecord, true),\n            contentEl         = wrapperEl && DomSync.getChild(wrapperEl, 'event.content'),\n            meta              = eventRecord.instanceMeta(client),\n            style             = typeof eventContent.style === 'string'\n                ? (eventContent.style = DomHelper.parseStyle(eventContent.style))\n                : eventContent.style || (eventContent.style = {});\n\n        // Do not process events being dragged\n        if (wrapperEl?.classList.contains('b-dragging')) {\n            return;\n        }\n\n        let start       = top,\n            contentSize = height,\n            end         = start + contentSize;\n\n        if (useEventBuffer) {\n            start += bufferBeforeWidth;\n            contentSize = contentSize - bufferBeforeWidth - bufferAfterWidth;\n            end = start + contentSize;\n        }\n\n        // Only process non-milestones that are partially out of view\n        if (start < scrollPosition && end >= scrollPosition && !eventRecord.isMilestone) {\n            const\n                contentWidth = contentEl?.offsetWidth,\n                justify      = contentEl?.parentNode && DomHelper.getStyleValue(contentEl.parentNode, 'justifyContent'),\n                c            = justify === 'center' ? (renderData.width - contentWidth) / 2 : 0,\n                eventStart   = start,\n                eventEnd     = eventStart + contentSize - 1;\n\n            // Only process non-milestone events. Milestones have no width.\n            // If there's no offsetWidth, it's still b-released, so we cannot measure it.\n            // If the event starts off the left edge, but its right edge is still visible,\n            // translate the contentEl to compensate. If not, undo any translation.\n            if ((!contentEl || contentWidth) && eventStart < scrollPosition && eventEnd >= scrollPosition) {\n                const\n                    edgeSizes = this.getEventContentMargins(contentEl),\n                    maxOffset = contentEl\n                        ? (contentSize - contentEl.offsetHeight - edgeSizes.height) - c\n                        : Number.MAX_SAFE_INTEGER,\n                    offset = Math.min(scrollPosition - eventStart, maxOffset - 2);\n\n                style.transform = offset > 0 ? `translateY(${offset}px)` : '';\n                meta.stuck = true;\n            }\n            else {\n                style.transform = '';\n                meta.stuck = false;\n            }\n\n            if (contentEl) {\n                this.toUpdate.add({\n                    contentEl,\n                    style\n                });\n            }\n        }\n        else if (contentEl && meta.stuck) {\n            style.transform = '';\n            meta.stuck = false;\n\n            this.toUpdate.add({\n                contentEl,\n                style\n            });\n        }\n    }\n\n    // Only measure the margins of an event's contentEl once\n    getEventContentMargins(contentEl) {\n        if (contentEl?.classList.contains('b-sch-event-content')) {\n            return DomHelper.getEdgeSize(contentEl, 'margin');\n        }\n        return zeroMargins;\n    }\n\n    //endregion\n\n    doDisable() {\n        super.doDisable(...arguments);\n\n        if (!this.isConfiguring) {\n            this.client.refreshWithTransition();\n        }\n    }\n}\n\nGridFeatureManager.registerFeature(StickyEvents, true, 'Scheduler');\nGridFeatureManager.registerFeature(StickyEvents, false, 'ResourceHistogram');\n","import AbstractTimeRanges from './AbstractTimeRanges.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\nimport DomHelper from '../../Core/helper/DomHelper.js';\nimport Rectangle from '../../Core/helper/util/Rectangle.js';\nimport AttachToProjectMixin from '../data/mixin/AttachToProjectMixin.js';\nimport TimeSpan from '../model/TimeSpan.js';\n\n/**\n * @module Scheduler/feature/TimeRanges\n */\n\n/**\n * Feature that renders global ranges of time in the timeline. Use this feature to visualize a `range` like a 1 hr lunch\n * or some important point in time (a `line`, i.e. a range with 0 duration). This feature can also show a current time\n * indicator if you set {@link #config-showCurrentTimeLine} to true. To style the rendered elements, use the\n * {@link Scheduler.model.TimeSpan#field-cls cls} field of the `TimeSpan` class.\n *\n * {@inlineexample Scheduler/feature/TimeRanges.js}\n *\n * Each time range is represented by an instances of {@link Scheduler.model.TimeSpan}, held in a simple\n * {@link Core.data.Store}. The feature uses {@link Scheduler/model/ProjectModel#property-timeRangeStore} defined on the\n * project by default. The store's persisting/loading is handled by Crud Manager (if it's used by the component).\n *\n * Note that the feature uses virtualized rendering, only the currently visible ranges are available in the DOM.\n *\n * This feature is **off** by default. For info on enabling it, see {@link Grid.view.mixin.GridFeatures}.\n *\n * ## Showing an icon in the time range header\n *\n * You can use Font Awesome icons easily (or set any other icon using CSS) by using the {@link Scheduler.model.TimeSpan#field-iconCls}\n * field. The JSON data below will show a flag icon:\n *\n * ```json\n * {\n *     \"id\"        : 5,\n *     \"iconCls\"   : \"b-fa b-fa-flag\",\n *     \"name\"      : \"v5.0\",\n *     \"startDate\" : \"2019-02-07 15:45\"\n * },\n * ```\n *\n * ## Recurring time ranges\n *\n * The feature supports recurring ranges in case the provided store and models\n * have {@link Scheduler/data/mixin/RecurringTimeSpansMixin} and {@link Scheduler/model/mixin/RecurringTimeSpan}\n * mixins applied:\n *\n * ```javascript\n * // We want to use recurring time ranges so we make a special model extending standard TimeSpan model with\n * // RecurringTimeSpan which adds recurrence support\n * class MyTimeRange extends RecurringTimeSpan(TimeSpan) {}\n *\n * // Define a new store extending standard Store with RecurringTimeSpansMixin mixin to add recurrence support to the\n * // store. This store will contain time ranges.\n * class MyTimeRangeStore extends RecurringTimeSpansMixin(Store) {\n *     static get defaultConfig() {\n *         return {\n *             // use our new MyResourceTimeRange model\n *             modelClass : MyTimeRange\n *         };\n *     }\n * };\n *\n * // Instantiate store for timeRanges using our new classes\n * const timeRangeStore = new MyTimeRangeStore({\n *     data : [{\n *         id             : 1,\n *         resourceId     : 'r1',\n *         startDate      : '2019-01-01T11:00',\n *         endDate        : '2019-01-01T13:00',\n *         name           : 'Lunch',\n *         // this time range should repeat every day\n *         recurrenceRule : 'FREQ=DAILY'\n *     }]\n * });\n *\n * const scheduler = new Scheduler({\n *     ...\n *     features : {\n *         timeRanges : true\n *     },\n *\n *     crudManager : {\n *         // store for \"timeRanges\" feature\n *         timeRangeStore\n *     }\n * });\n * ```\n *\n * @extends Scheduler/feature/AbstractTimeRanges\n * @classtype timeRanges\n * @feature\n * @demo Scheduler/timeranges\n */\nexport default class TimeRanges extends AbstractTimeRanges.mixin(AttachToProjectMixin) {\n    //region Config\n\n    static get $name() {\n        return 'TimeRanges';\n    }\n\n    static get defaultConfig() {\n        return {\n            store : true\n        };\n    }\n\n    static configurable = {\n        /**\n         * Store that holds the time ranges (using the {@link Scheduler.model.TimeSpan} model or subclass thereof).\n         * A store will be automatically created if none is specified.\n         * @config {Core.data.Store|StoreConfig}\n         * @category Misc\n         */\n        store : {\n            modelClass : TimeSpan\n        },\n\n        /**\n         * The interval (as amount of ms) defining how frequently the current timeline will be updated\n         * @config {Number}\n         * @default\n         * @category Misc\n         */\n        currentTimeLineUpdateInterval : 10000,\n\n        /**\n         * The date format to show in the header for the current time line (when {@link #config-showCurrentTimeLine} is configured).\n         * See {@link Core.helper.DateHelper} for the possible formats to use.\n         * @config {String}\n         * @default\n         * @category Common\n         */\n        currentDateFormat : 'HH:mm',\n\n        /**\n         * Show a line indicating current time. Either `true` or `false` or a {@link Scheduler.model.TimeSpan}\n         * configuration object to apply to this special time range (allowing you to provide a custom text):\n         *\n         * ```javascript\n         * showCurrentTimeLine : {\n         *     name : 'Now'\n         * }\n         * ```\n         *\n         * The line carries the CSS class name `b-sch-current-time`, and this may be used to add custom styling to it.\n         *\n         * @prp {Boolean|TimeSpanConfig}\n         * @default\n         * @category Common\n         */\n        showCurrentTimeLine : false\n    };\n\n    //endregion\n\n    //region Init & destroy\n\n    doDestroy() {\n        this.storeDetacher?.();\n\n        super.doDestroy();\n    }\n\n    /**\n     * Returns the TimeRanges which occur within the client Scheduler's time axis.\n     * @property {Scheduler.model.TimeSpan[]}\n     */\n    get timeRanges() {\n        const me        = this;\n\n        if (!me._timeRanges) {\n            const { store } = me;\n\n            let { records } = store;\n\n            if (store.recurringEvents) {\n                const {\n                    startDate,\n                    endDate\n                } = me.client.timeAxis;\n\n                records = records.flatMap(timeSpan => {\n                    // Collect occurrences for the recurring events in the record set\n                    if (timeSpan.isRecurring) {\n                        return timeSpan.getOccurrencesForDateRange(startDate, endDate);\n                    }\n\n                    return timeSpan;\n                });\n            }\n\n            if (me.currentTimeLine) {\n                // Avoid polluting store records\n                if (!store.recurringEvents) {\n                    records = records.slice();\n                }\n\n                records.push(me.currentTimeLine);\n            }\n\n            me._timeRanges = records;\n        }\n\n        return me._timeRanges;\n    }\n    //endregion\n\n    //region Current time line\n\n    attachToProject(project) {\n        super.attachToProject(project);\n        const me = this;\n\n        me.projectTimeZoneChangeDetacher?.();\n\n        if (me.showCurrentTimeLine) {\n\n            // Update currentTimeLine immediately after a time zone change\n            me.projectTimeZoneChangeDetacher = me.client.project?.ion({ timeZoneChange : () => me.updateCurrentTimeLine() });\n\n            // Update currentTimeLine if its already created\n            if (me.currentTimeLine) {\n                me.updateCurrentTimeLine();\n            }\n        }\n    }\n\n    initCurrentTimeLine() {\n        const me = this;\n\n        if (me.currentTimeLine || !me.showCurrentTimeLine) {\n            return;\n        }\n\n        const data = typeof me.showCurrentTimeLine === 'object' ? me.showCurrentTimeLine : {};\n\n        me.currentTimeLine = me.store.modelClass.new({\n            id  : 'currentTime', // no-sanity\n            cls : 'b-sch-current-time'\n        }, data);\n\n        me.currentTimeInterval = me.setInterval(() => me.updateCurrentTimeLine(), me.currentTimeLineUpdateInterval);\n\n        me._timeRanges = null;\n\n        me.updateCurrentTimeLine();\n    }\n\n    updateCurrentTimeLine() {\n        const\n            me                  = this,\n            { currentTimeLine } = me;\n\n        currentTimeLine.timeZone = me.project?.timeZone;\n        currentTimeLine.setLocalDate('startDate', new Date());\n        currentTimeLine.endDate = currentTimeLine.startDate;\n\n        if (!currentTimeLine.originalData.name) {\n            currentTimeLine.name = DateHelper.format(currentTimeLine.startDate, me.currentDateFormat);\n        }\n\n        me.renderRanges();\n    }\n\n    hideCurrentTimeLine() {\n        const me = this;\n\n        if (!me.currentTimeLine) {\n            return;\n        }\n\n        me.clearInterval(me.currentTimeInterval);\n        me.currentTimeLine = null;\n\n        me.refresh();\n    }\n\n    updateShowCurrentTimeLine(show) {\n        if (show) {\n            this.initCurrentTimeLine();\n        }\n        else {\n            this.hideCurrentTimeLine();\n        }\n    }\n\n    //endregion\n\n    //region Menu items\n\n    /**\n     * Adds a menu item to show/hide current time line.\n     * @param {Object} options Contains menu items and extra data retrieved from the menu target.\n     * @param {Grid.column.Column} options.column Column for which the menu will be shown\n     * @param {Object<String,MenuItemConfig|Boolean|null>} options.items A named object to describe menu items\n     * @internal\n     */\n    populateTimeAxisHeaderMenu({ column, items }) {\n        items.currentTimeLine = {\n            weight   : 400,\n            text     : this.L('L{showCurrentTimeLine}'),\n            checked  : this.showCurrentTimeLine,\n            onToggle : ({ checked }) => {\n                this.showCurrentTimeLine = checked;\n            }\n        };\n    }\n\n    //endregion\n\n    //region Store\n\n    attachToStore(store) {\n        const me = this;\n\n        let renderRanges = false;\n\n        // if we had some store assigned before we need to detach it\n        if (me.storeDetacher) {\n            me.storeDetacher();\n            // then we'll need to render ranges provided by the new store\n            renderRanges = true;\n        }\n\n        me.storeDetacher = store.ion({\n            change  : 'onStoreChange',\n            refresh : 'onStoreChange',\n            thisObj : me\n        });\n\n        me._timeRanges = null;\n\n        // render ranges if needed\n        renderRanges && me.renderRanges();\n    }\n\n    /**\n     * Returns the {@link Core.data.Store store} used by this feature\n     * @property {Core.data.Store}\n     * @category Misc\n     */\n    get store() {\n        return this.client.project.timeRangeStore;\n    }\n\n    updateStore(store) {\n        const\n            me          = this,\n            { client }  = me,\n            { project } = client;\n\n        store = project.timeRangeStore;\n\n        me.attachToStore(store);\n\n        // timeRanges can be set on scheduler/gantt, for convenience. Should only be processed by the TimeRanges and not\n        // any subclasses\n        if (client.timeRanges && !client._timeRangesExposed) {\n            store.add(client.timeRanges);\n            delete client.timeRanges;\n        }\n    }\n\n    // Called by ProjectConsumer after a new store is assigned at runtime\n    attachToTimeRangeStore(store) {\n        this.store = store;\n    }\n\n    resolveTimeRangeRecord(el) {\n        return this.store.getById(el.closest(this.baseSelector).dataset.id);\n    }\n\n    onStoreChange({ type, action }) {\n        const me = this;\n\n        // Force re-evaluating of which ranges to consider for render\n        me._timeRanges = null;\n\n        // https://github.com/bryntum/support/issues/1398 - checking also if scheduler is visible to change elements\n        if (me.disabled || !me.client.isVisible || me.isConfiguring || (type === 'refresh' && action !== 'batch')) {\n            return;\n        }\n\n        me.client.runWithTransition(() => me.renderRanges(), !me.client.refreshSuspended);\n    }\n\n    //endregion\n\n    //region Drag\n\n    onDragStart(event) {\n        const\n            me                = this,\n            { context }       = event,\n            record            = me.resolveTimeRangeRecord(context.element.closest(me.baseSelector)),\n            rangeBodyEl       = me.getBodyElementByRecord(record);\n\n        context.relatedElements = [rangeBodyEl];\n\n        Object.assign(context, {\n            record,\n            rangeBodyEl,\n            originRangeX : DomHelper.getTranslateX(rangeBodyEl),\n            originRangeY : DomHelper.getTranslateY(rangeBodyEl)\n        });\n\n        super.onDragStart(event);\n\n        me.showTip(context);\n    }\n\n    onDrop(event) {\n        const { context } = event;\n\n        if (!context.valid) {\n            return this.onInvalidDrop({ context });\n        }\n\n        const\n            me          = this,\n            { client }  = me,\n            { record }  = context,\n            box         = Rectangle.from(context.rangeBodyEl),\n            newStart    = client.getDateFromCoordinate(box.getStart(client.rtl, client.isHorizontal), 'round', false),\n            wasModified = (record.startDate - newStart !== 0);\n\n        if (wasModified) {\n            record.setStartDate(newStart);\n        }\n        else {\n            me.onInvalidDrop();\n        }\n\n        me.destroyTip();\n\n        super.onDrop(event);\n    }\n\n    //endregion\n\n    //region Resize\n\n    onResizeStart({ context }) {\n        const\n            me          = this,\n            record      = me.resolveTimeRangeRecord(context.element.closest(me.baseSelector)),\n            rangeBodyEl = me.getBodyElementByRecord(record);\n\n        Object.assign(context, {\n            record,\n            rangeBodyEl\n        });\n\n        me.showTip(context);\n    }\n\n    onResizeDrag({ context }) {\n        const\n            me              = this,\n            { rangeBodyEl } = context;\n\n        if (me.client.isVertical) {\n            if (context.edge === 'top') {\n                DomHelper.setTranslateY(rangeBodyEl, context.newY);\n            }\n\n            rangeBodyEl.style.height = context.newHeight + 'px';\n        }\n        else {\n            if (context.edge === 'left') {\n                DomHelper.setTranslateX(rangeBodyEl, context.newX);\n            }\n\n            rangeBodyEl.style.width = context.newWidth + 'px';\n        }\n    }\n\n    onResize({ context }) {\n        if (!context.valid) {\n            return this.onInvalidDrop({ context });\n        }\n\n        const\n            me          = this,\n            { client }  = me,\n            { rtl }     = client,\n            record      = context.record,\n            box         = Rectangle.from(context.element),\n            startPos    = box.getStart(rtl, client.isHorizontal),\n            endPos      = box.getEnd(rtl, client.isHorizontal),\n            newStart    = client.getDateFromCoordinate(startPos, 'round', false),\n            isStart     = (rtl && context.edge === 'right') || (!rtl && context.edge === 'left') || context.edge === 'top',\n            newEnd      = client.getDateFromCoordinate(endPos, 'round', false),\n            wasModified = (isStart && record.startDate - newStart !== 0) ||\n                (newEnd && record.endDate - newEnd !== 0);\n\n        if (wasModified && newEnd > newStart) {\n            if (isStart) {\n                // could be that the drag operation placed the range with start/end outside the axis\n                record.setStartDate(newStart, false);\n            }\n            else {\n                record.setEndDate(newEnd, false);\n            }\n        }\n        else {\n            me.onInvalidResize({ context });\n        }\n\n        me.destroyTip();\n    }\n\n    onInvalidResize({ context }) {\n        const me = this;\n\n        me.resize.reset();\n        // Allow DomSync to reapply original state\n        context.rangeBodyEl.parentElement.lastDomConfig = context.rangeBodyEl.lastDomConfig = null;\n        me.renderRanges();\n\n        me.destroyTip();\n    }\n\n    //endregion\n}\n\nGridFeatureManager.registerFeature(TimeRanges, false, ['Scheduler', 'Gantt']);\n","import Base from '../../../Core/Base.js';\n\n/**\n * @module Scheduler/view/mixin/SchedulerDom\n */\n\n/**\n * Mixin with EventModel and ResourceModel <-> HTMLElement mapping functions\n *\n * @mixin\n */\nexport default Target => class SchedulerDom extends (Target || Base) {\n    static get $name() {\n        return 'SchedulerDom';\n    }\n\n    //region Get\n\n    /**\n     * Returns a single HTMLElement representing an event record assigned to a specific resource.\n     * @param {Scheduler.model.AssignmentModel} assignmentRecord An assignment record\n     * @returns {HTMLElement} The element representing the event record\n     * @category DOM\n     */\n    getElementFromAssignmentRecord(assignmentRecord, returnWrapper = false) {\n        if (this.isPainted && assignmentRecord) {\n            let wrapper = this.foregroundCanvas.syncIdMap?.[assignmentRecord.id];\n\n            // When using links, the original might not be rendered but a link might\n            if (!wrapper && assignmentRecord.resource.hasLinks) {\n                for (const link of assignmentRecord.resource.$links) {\n                    wrapper = this.foregroundCanvas.syncIdMap?.[`${assignmentRecord.id}_${link.id}`];\n\n                    if (wrapper) {\n                        break;\n                    }\n                }\n            }\n\n            // Wrapper won't have syncIdMap when saving dragcreated event from editor\n            return returnWrapper ? wrapper : wrapper?.syncIdMap?.event;\n        }\n\n        return null;\n    }\n\n    /**\n     * Returns a single HTMLElement representing an event record assigned to a specific resource.\n     * @param {Scheduler.model.EventModel} eventRecord An event record\n     * @param {Scheduler.model.ResourceModel} resourceRecord A resource record\n     * @returns {HTMLElement} The element representing the event record\n     * @category DOM\n     */\n    getElementFromEventRecord(eventRecord, resourceRecord = eventRecord.resources?.[0], returnWrapper = false) {\n        if (eventRecord.isResourceTimeRange) {\n            const wrapper = this.foregroundCanvas.syncIdMap?.[eventRecord.domId];\n\n            return returnWrapper ? wrapper : wrapper?.syncIdMap.event;\n        }\n\n        const assignmentRecord = this.assignmentStore.getAssignmentForEventAndResource(eventRecord, resourceRecord);\n        return this.getElementFromAssignmentRecord(assignmentRecord, returnWrapper);\n    }\n\n    /**\n     * Returns all the HTMLElements representing an event record.\n     *\n     * @param {Scheduler.model.EventModel} eventRecord An event record\n     * @param {Scheduler.model.ResourceModel} [resourceRecord] A resource record\n     *\n     * @returns {HTMLElement[]} The element(s) representing the event record\n     * @category DOM\n     */\n    getElementsFromEventRecord(eventRecord, resourceRecord, returnWrapper = false) {\n        // Single event instance, as array\n        if (resourceRecord) {\n            return [this.getElementFromEventRecord(eventRecord, resourceRecord, returnWrapper)];\n        }\n        // All instances\n        else {\n            return eventRecord.resources.reduce((result, resourceRecord) => {\n                const el = this.getElementFromEventRecord(eventRecord, resourceRecord, returnWrapper);\n\n                el && result.push(el);\n\n                return result;\n            }, []);\n        }\n    }\n\n    //endregion\n\n    //region Resolve\n\n    /**\n     * Resolves the resource based on a dom element or event. In vertical mode, if resolving from an element higher up in\n     * the hierarchy than event elements, then it is required to supply an coordinates since resources are virtual\n     * columns.\n     * @param {HTMLElement|Event} elementOrEvent The HTML element or DOM event to resolve a resource from\n     * @param {Number[]} [xy] X and Y coordinates, required in some cases in vertical mode, disregarded in horizontal\n     * @returns {Scheduler.model.ResourceModel} The resource corresponding to the element, or null if not found.\n     * @category DOM\n     */\n    resolveResourceRecord(elementOrEvent, xy) {\n        return this.currentOrientation.resolveRowRecord(elementOrEvent, xy);\n    }\n\n    /**\n     * Product agnostic method which yields the {@link Scheduler.model.ResourceModel} record which underpins the row which\n     * encapsulates the passed element. The element can be a grid cell, or an event element, and the result\n     * will be a {@link Scheduler.model.ResourceModel}\n     * @param {HTMLElement|Event} elementOrEvent The HTML element or DOM event to resolve a record from\n     * @returns {Scheduler.model.ResourceModel} The resource corresponding to the element, or null if not found.\n     * @category DOM\n     */\n    resolveRowRecord(elementOrEvent) {\n        return this.resolveResourceRecord(elementOrEvent);\n    }\n\n    /**\n     * Returns the event record for a DOM element\n     * @param {HTMLElement|Event} elementOrEvent The DOM node to lookup\n     * @returns {Scheduler.model.EventModel} The event record\n     * @category DOM\n     */\n    resolveEventRecord(elementOrEvent) {\n        if (elementOrEvent instanceof Event) {\n            elementOrEvent = elementOrEvent.target;\n        }\n\n        const element = elementOrEvent?.closest(this.eventSelector);\n\n        if (element) {\n            if (element.dataset.eventId) {\n                return this.eventStore.getById(element.dataset.eventId);\n            }\n\n            if (element.dataset.assignmentId) {\n                return this.assignmentStore.getById(element.dataset.assignmentId).event;\n            }\n        }\n\n        return null;\n    }\n\n    // Used by shared features to resolve an event or task\n    resolveTimeSpanRecord(element) {\n        return this.resolveEventRecord(element);\n    }\n\n    /**\n     * Returns an assignment record for a DOM element\n     * @param {HTMLElement} element The DOM node to lookup\n     * @returns {Scheduler.model.AssignmentModel} The assignment record\n     * @category DOM\n     */\n    resolveAssignmentRecord(element) {\n        const\n            eventElement     = element.closest(this.eventSelector),\n            assignmentRecord = eventElement && this.assignmentStore.getById(eventElement.dataset.assignmentId),\n            eventRecord      = eventElement && this.eventStore.getById(eventElement.dataset.eventId);\n\n        // When resolving a recurring event, we might be resolving an occurrence\n        return this.assignmentStore.getOccurrence(assignmentRecord, eventRecord);\n    }\n\n    //endregion\n\n    // Decide if a record is inside a collapsed tree node, or inside a collapsed group (using grouping feature)\n    isRowVisible(resourceRecord) {\n        // records in collapsed groups/branches etc. are removed from processedRecords\n        return this.store.indexOf(resourceRecord) >= 0;\n    }\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n};\n","import Base from '../../../Core/Base.js';\n\n/**\n * @module Scheduler/view/mixin/SchedulerDomEvents\n */\n\n/**\n * Mixin that handles dom events (click etc) for scheduler and rendered events.\n *\n * @mixin\n */\nexport default Target => class SchedulerDomEvents extends (Target || Base) {\n    static get $name() {\n        return 'SchedulerDomEvents';\n    }\n\n    //region Events\n\n    /**\n     * Triggered when user mousedowns over an empty area in the schedule.\n     * @event scheduleMouseDown\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Date} date Date at mouse position\n     * @param {Date} tickStartDate The start date of the current time axis tick\n     * @param {Date} tickEndDate The end date of the current time axis tick\n     * @param {Grid.row.Row} row Row under the mouse (in horizontal mode only)\n     * @param {Number} index Resource index\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {MouseEvent} event Browser event\n     */\n\n    /**\n     * Triggered when mouse enters an empty area in the schedule.\n     * @event scheduleMouseEnter\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Date} date Date at mouse position\n     * @param {Date} tickStartDate The start date of the current time axis tick\n     * @param {Date} tickEndDate The end date of the current time axis tick\n     * @param {Grid.row.Row} row Row under the mouse (in horizontal mode only)\n     * @param {Number} index Resource index\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {MouseEvent} event Browser event\n     */\n\n    /**\n     * Triggered when mouse leaves an empty area in the schedule.\n     * @event scheduleMouseLeave\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Date} date Date at mouse position\n     * @param {Date} tickStartDate The start date of the current time axis tick\n     * @param {Date} tickEndDate The end date of the current time axis tick\n     * @param {Grid.row.Row} row Row under the mouse (in horizontal mode only)\n     * @param {Number} index Resource index\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {MouseEvent} event Browser event\n     */\n\n    /**\n     * Triggered when user mouseups over an empty area in the schedule.\n     * @event scheduleMouseUp\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Date} date Date at mouse position\n     * @param {Date} tickStartDate The start date of the current time axis tick\n     * @param {Date} tickEndDate The end date of the current time axis tick\n     * @param {Grid.row.Row} row Row under the mouse (in horizontal mode only)\n     * @param {Number} index Resource index\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {MouseEvent} event Browser event\n     */\n\n    /**\n     * Triggered when user moves mouse over an empty area in the schedule.\n     * @event scheduleMouseMove\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Date} date Date at mouse position\n     * @param {Scheduler.model.TimeSpan} tick A record which encapsulates the time axis tick clicked on.\n     * @param {Number} tickIndex The index of the time axis tick clicked on.\n     * @param {Date} tickStartDate The start date of the current time axis tick\n     * @param {Date} tickEndDate The end date of the current time axis tick\n     * @param {Grid.row.Row} row Row under the mouse (in horizontal mode only)\n     * @param {Number} index Resource index\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {MouseEvent} event Browser event\n     */\n\n    /**\n     * Triggered when user clicks an empty area in the schedule.\n     * @event scheduleClick\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Date} date Date at mouse position\n     * @param {Scheduler.model.TimeSpan} tick A record which encapsulates the time axis tick clicked on.\n     * @param {Number} tickIndex The index of the time axis tick clicked on.\n     * @param {Date} tickStartDate The start date of the current time axis tick\n     * @param {Date} tickEndDate The end date of the current time axis tick\n     * @param {Grid.row.Row} row Row under the mouse (in horizontal mode only)\n     * @param {Number} index Resource index\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {MouseEvent} event Browser event\n     */\n\n    /**\n     * Triggered when user double-clicks an empty area in the schedule.\n     * @event scheduleDblClick\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Date} date Date at mouse position\n     * @param {Scheduler.model.TimeSpan} tick A record which encapsulates the time axis tick clicked on.\n     * @param {Number} tickIndex The index of the time axis tick clicked on.\n     * @param {Date} tickStartDate The start date of the current time axis tick\n     * @param {Date} tickEndDate The end date of the current time axis tick\n     * @param {Grid.row.Row} row Row under the mouse (in horizontal mode only)\n     * @param {Number} index Index of double-clicked resource\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {MouseEvent} event Browser event\n     */\n\n    /**\n     * Triggered when user right-clicks an empty area in the schedule.\n     * @event scheduleContextMenu\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Date} date Date at mouse position\n     * @param {Scheduler.model.TimeSpan} tick A record which encapsulates the time axis tick clicked on.\n     * @param {Number} tickIndex The index of the time axis tick clicked on.\n     * @param {Date} tickStartDate The start date of the current time axis tick\n     * @param {Date} tickEndDate The end date of the current time axis tick\n     * @param {Grid.row.Row} row Row under the mouse (in horizontal mode only)\n     * @param {Number} index Resource index\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {MouseEvent} event Browser event\n     */\n\n    /**\n     * Triggered for mouse down on an event.\n     * @event eventMouseDown\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Scheduler.model.EventModel} eventRecord Event record\n     * @param {Scheduler.model.AssignmentModel} assignmentRecord Assignment record\n     * @param {MouseEvent} event Browser event\n     */\n\n    /**\n     * Triggered for mouse up on an event.\n     * @event eventMouseUp\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Scheduler.model.EventModel} eventRecord Event record\n     * @param {Scheduler.model.AssignmentModel} assignmentRecord Assignment record\n     * @param {MouseEvent} event Browser event\n     */\n\n    /**\n     * Triggered for click on an event.\n     * @event eventClick\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Scheduler.model.EventModel} eventRecord Event record\n     * @param {Scheduler.model.AssignmentModel} assignmentRecord Assignment record\n     * @param {MouseEvent} event Browser event\n     */\n\n    /**\n     * Triggered for double-click on an event.\n     * @event eventDblClick\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Scheduler.model.EventModel} eventRecord Event record\n     * @param {Scheduler.model.AssignmentModel} assignmentRecord Assignment record\n     * @param {MouseEvent} event Browser event\n     */\n\n    /**\n     * Triggered for right-click on an event.\n     * @event eventContextMenu\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Scheduler.model.EventModel} eventRecord Event record\n     * @param {Scheduler.model.AssignmentModel} assignmentRecord Assignment record\n     * @param {MouseEvent} event Browser event\n     */\n\n    /**\n     * Triggered when the mouse enters an event bar.\n     * @event eventMouseEnter\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Scheduler.model.EventModel} eventRecord Event record\n     * @param {Scheduler.model.AssignmentModel} assignmentRecord Assignment record\n     * @param {MouseEvent} event Browser event\n     */\n\n    /**\n     * Triggered when the mouse leaves an event bar.\n     * @event eventMouseLeave\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Scheduler.model.EventModel} eventRecord Event record\n     * @param {Scheduler.model.AssignmentModel} assignmentRecord Assignment record\n     * @param {MouseEvent} event Browser event\n     */\n\n    /**\n     * Triggered for mouse over events when moving into and within an event bar.\n     *\n     * Note that `mouseover` events bubble, therefore this event will fire while moving from\n     * element to element *within* an event bar.\n     *\n     * _If only an event when moving into the event bar is required, use the {@link #event-eventMouseEnter} event._\n     * @event eventMouseOver\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Scheduler.model.EventModel} eventRecord Event record\n     * @param {Scheduler.model.AssignmentModel} assignmentRecord Assignment record\n     * @param {MouseEvent} event Browser event\n     */\n\n    /**\n     * Triggered for mouse out events within and when moving out of an event bar.\n     *\n     * Note that `mouseout` events bubble, therefore this event will fire while moving from\n     * element to element *within* an event bar.\n     *\n     * _If only an event when moving out of the event bar is required, use the {@link #event-eventMouseLeave} event._\n     * @event eventMouseOut\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Scheduler.model.EventModel} eventRecord Event record\n     * @param {Scheduler.model.AssignmentModel} assignmentRecord Assignment record\n     * @param {MouseEvent} event Browser event\n     */\n\n    //endregion\n\n    //region Event handling\n\n    getTimeSpanMouseEventParams(eventElement, event) {\n        // May have hovered a record being removed / faded out\n        const eventRecord = this.resolveEventRecord(eventElement);\n\n        return eventRecord && {\n            eventRecord,\n            resourceRecord   : this.resolveResourceRecord(eventElement),\n            assignmentRecord : this.resolveAssignmentRecord(eventElement),\n            eventElement,\n            event\n        };\n    }\n\n    getScheduleMouseEventParams(cellData, event) {\n        const resourceRecord = this.isVertical ? this.resolveResourceRecord(event) : this.store.getById(cellData.id);\n\n        return { resourceRecord };\n    }\n\n    /**\n     * Relays keydown events as eventkeydown if we have a selected task.\n     * @private\n     */\n    onElementKeyDown(event) {\n        const\n            result = super.onElementKeyDown(event),\n            me     = this;\n\n        if (me.selectedEvents.length) {\n            me.trigger(me.scheduledEventName + 'KeyDown', {\n                eventRecords      : me.selectedEvents,\n                assignmentRecords : me.selectedAssignments,\n                event,\n                // <remove-on-release>\n                // TODO: Remove for 6.0\n                // </remove-on-release>\n                eventRecord       : me.selectedEvents,\n                assignmentRecord  : me.selectedAssignments\n            });\n        }\n\n        return result;\n    }\n\n    /**\n     * Relays keyup events as eventkeyup if we have a selected task.\n     * @private\n     */\n    onElementKeyUp(event) {\n        super.onElementKeyUp(event);\n\n        const me = this;\n\n        if (me.selectedEvents.length) {\n            me.trigger(me.scheduledEventName + 'KeyUp', {\n                eventRecords      : me.selectedEvents,\n                assignmentRecords : me.selectedAssignments,\n                event,\n\n                // <remove-on-release>\n                // TODO: Remove for 6.0\n                // </remove-on-release>\n                eventRecord      : me.selectedEvents,\n                assignmentRecord : me.selectedAssignments\n            });\n        }\n    }\n\n    //endregion\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n};\n","import Base from '../../../Core/Base.js';\nimport DomClassList from '../../../Core/helper/util/DomClassList.js';\nimport HorizontalLayoutStack from '../../eventlayout/HorizontalLayoutStack.js';\nimport HorizontalLayoutPack from '../../eventlayout/HorizontalLayoutPack.js';\nimport BrowserHelper from '../../../Core/helper/BrowserHelper.js';\nimport DomHelper from '../../../Core/helper/DomHelper.js';\nimport EventHelper from '../../../Core/helper/EventHelper.js';\nimport ObjectHelper from '../../../Core/helper/ObjectHelper.js';\nimport StringHelper from '../../../Core/helper/StringHelper.js';\nimport VersionHelper from '../../../Core/helper/VersionHelper.js';\nimport Rectangle from '../../../Core/helper/util/Rectangle.js';\n\n/**\n * @module Scheduler/view/mixin/SchedulerEventRendering\n */\n\n/**\n * Layout data object used to lay out an event record.\n * @typedef {Object} EventRenderData\n * @property {Scheduler.model.EventModel} eventRecord Event instance\n * @property {Scheduler.model.ResourceModel} resourceRecord Assigned resource\n * @property {Scheduler.model.AssignmentModel} assignmentRecord Assignment instance\n * @property {Number} startMS Event start date time in milliseconds\n * @property {Number} endMS Event end date in milliseconds\n * @property {Number} height Calculated event element height\n * @property {Number} width Calculated event element width\n * @property {Number} top Calculated event element top position in the row (or column)\n * @property {Number} left Calculated event element left position in the row (or column)\n */\n\n/**\n * Functions to handle event rendering (EventModel -> dom elements).\n *\n * @mixin\n */\nexport default Target => class SchedulerEventRendering extends (Target || Base) {\n    static get $name() {\n        return 'SchedulerEventRendering';\n    }\n\n    //region Default config\n\n    static get configurable() {\n        return {\n            /**\n             * Position of the milestone text:\n             * * 'inside' - for short 1-char text displayed inside the diamond, not applicable when using\n             *   {@link #config-milestoneLayoutMode})\n             * * 'outside' - for longer text displayed outside the diamond, but inside it when using\n             *   {@link #config-milestoneLayoutMode}\n             * * 'always-outside' - outside even when combined with {@link #config-milestoneLayoutMode}\n             *\n             * @prp {'inside'|'outside'|'always-outside'}\n             * @default\n             * @category Milestones\n             */\n            milestoneTextPosition : 'outside',\n\n            /**\n             * How to align milestones in relation to their startDate. Only applies when using a `milestoneLayoutMode`\n             * other than `default`. Valid values are:\n             * * start\n             * * center (default)\n             * * end\n             * @prp {'start'|'center'|'end'}\n             * @default\n             * @category Milestones\n             */\n            milestoneAlign : 'center',\n\n            /**\n             * Factor representing the average char width in pixels used to determine milestone width when configured\n             * with `milestoneLayoutMode: 'estimate'`.\n             * @prp {Number}\n             * @default\n             * @category Milestones\n             */\n            milestoneCharWidth : 10,\n\n            /**\n             * How to handle milestones during event layout. How the milestones are displayed when part of the layout\n             * are controlled using {@link #config-milestoneTextPosition}.\n             *\n             * Options are:\n             * * default - Milestones do not affect event layout\n             * * estimate - Milestone width is estimated by multiplying text length with Scheduler#milestoneCharWidth\n             * * data - Milestone width is determined by checking EventModel#milestoneWidth\n             * * measure - Milestone width is determined by measuring label width\n             * Please note that currently text width is always determined using EventModel#name.\n             * Also note that only 'default' is supported by eventStyles line, dashed and minimal.\n             * @prp {'default'|'estimate'|'data'|'measure'}\n             * @default\n             * @category Milestones\n             */\n            milestoneLayoutMode : 'default',\n\n            /**\n             * Defines how to handle overlapping events. Valid values are:\n             * - `stack`, adjusts row height (only horizontal)\n             * - `pack`, adjusts event height\n             * - `mixed`, allows two events to overlap, more packs (only vertical)\n             * - `none`, allows events to overlap\n             *\n             * This config can also accept an object:\n             *\n             * ```javascript\n             * new Scheduler({\n             *     eventLayout : { type : 'stack' }\n             * })\n             * ```\n             *\n             * @prp {'stack'|'pack'|'mixed'|'none'|Object}\n             * @default\n             * @category Scheduled events\n             */\n            eventLayout : 'stack',\n\n            /**\n             * Override this method to provide a custom sort function to sort any overlapping events. See {@link\n             * #config-overlappingEventSorter} for more details.\n             *\n             * @param  {Scheduler.model.EventModel} a First event\n             * @param  {Scheduler.model.EventModel} b Second event\n             * @returns {Number} Return -1 to display `a` above `b`, 1 for `b` above `a`\n             * @member {Function} overlappingEventSorter\n             * @category Misc\n             */\n            /**\n             * Override this method to provide a custom sort function to sort any overlapping events. This only applies\n             * to the horizontal mode, where the order the events are sorted in determines their vertical placement\n             * within a resource.\n             *\n             * By default, overlapping events are laid out based on the start date. If the start date is equal, events\n             * with earlier end date go first. And lastly the name of events is taken into account.\n             *\n             * Here's a sample sort function, sorting on start- and end date. If this function returns -1, then event\n             * `a` is placed above event `b`:\n             *\n             * ```javascript\n             * overlappingEventSorter(a, b) {\n             *\n             *   const startA = a.startDate, endA = a.endDate;\n             *   const startB = b.startDate, endB = b.endDate;\n             *\n             *   const sameStart = (startA - startB === 0);\n             *\n             *   if (sameStart) {\n             *     return endA > endB ? -1 : 1;\n             *   } else {\n             *     return (startA < startB) ? -1 : 1;\n             *   }\n             * }\n             * ```\n             *\n             * NOTE: The algorithms (stack, pack) that lay the events out expects them to be served in chronological\n             * order, be sure to first sort by `startDate` to get predictable results.\n             *\n             * @param  {Scheduler.model.EventModel} a First event\n             * @param  {Scheduler.model.EventModel} b Second event\n             * @returns {Number} Return -1 to display `a` above `b`, 1 for `b` above `a`\n             * @config {Function}\n             * @category Misc\n             */\n            overlappingEventSorter : null,\n\n            /**\n             * Deprecated, to be removed in version 6.0. Replaced by {@link #config-overlappingEventSorter}.\n             * @deprecated Since 5.0. Use {@link #config-overlappingEventSorter} instead.\n             * @config {Function}\n             * @category Misc\n             */\n            horizontalEventSorterFn : null,\n\n            /**\n             * Control how much space to leave between the first event/last event and the resources edge (top/bottom\n             * margin within the resource row in horizontal mode, left/right margin within the resource column in\n             * vertical mode), in px. Defaults to the value of {@link Scheduler.view.Scheduler#config-barMargin}.\n             *\n             * Can be configured per resource by setting {@link Scheduler.model.ResourceModel#field-resourceMargin\n             * resource.resourceMargin}.\n             *\n             * @prp {Number}\n             * @category Scheduled events\n             */\n            resourceMargin : null,\n\n            /**\n             * By default, scheduler fade events in on load. Specify `false` to prevent this animation or specify one\n             * of the available animation types to use it (`true` equals `'fade-in'`):\n             * * fade-in (default)\n             * * slide-from-left\n             * * slide-from-top\n             * ```\n             * // Slide events in from the left on load\n             * scheduler = new Scheduler({\n             *     useInitialAnimation : 'slide-from-left'\n             * });\n             * ```\n             * @prp {Boolean|String}\n             * @default\n             * @category Misc\n             */\n            useInitialAnimation : true,\n\n            /**\n             * An empty function by default, but provided so that you can override it. This function is called each time\n             * an event is rendered into the schedule to render the contents of the event. It's called with the event,\n             * its resource and a `renderData` object which allows you to populate data placeholders inside the event\n             * template. **IMPORTANT** You should never modify any data on the EventModel inside this method.\n             *\n             * By default, the DOM markup of an event bar includes placeholders for 'cls' and 'style'. The cls property\n             * is a {@link Core.helper.util.DomClassList} which will be added to the event element. The style property\n             * is an inline style declaration for the event element.\n             *\n             * IMPORTANT: When returning content, be sure to consider how that content should be encoded to avoid XSS\n             * (Cross-Site Scripting) attacks. This is especially important when including user-controlled data such as\n             * the event's `name`. The function {@link Core.helper.StringHelper#function-encodeHtml-static} as well as\n             * {@link Core.helper.StringHelper#function-xss-static} can be helpful in these cases.\n             *\n             * ```javascript\n             *  eventRenderer({ eventRecord, resourceRecord, renderData }) {\n             *      renderData.style = 'color:white';                 // You can use inline styles too.\n             *\n             *      // Property names with truthy values are added to the resulting elements CSS class.\n             *      renderData.cls.isImportant = this.isImportant(eventRecord);\n             *      renderData.cls.isModified = eventRecord.isModified;\n             *\n             *      // Remove a class name by setting the property to false\n             *      renderData.cls[scheduler.generatedIdCls] = false;\n             *\n             *      // Or, you can treat it as a string, but this is less efficient, especially\n             *      // if your renderer wants to *remove* classes that may be there.\n             *      renderData.cls += ' extra-class';\n             *\n             *      return StringHelper.xss`${DateHelper.format(eventRecord.startDate, 'YYYY-MM-DD')}: ${eventRecord.name}`;\n             *  }\n             * ```\n             *\n             * @param {Object} detail An object containing the information needed to render an Event.\n             * @param {Scheduler.model.EventModel} detail.eventRecord The event record.\n             * @param {Scheduler.model.ResourceModel} detail.resourceRecord The resource record.\n             * @param {Scheduler.model.AssignmentModel} detail.assignmentRecord The assignment record.\n             * @param {Object} detail.renderData An object containing details about the event rendering.\n             * @param {Scheduler.model.EventModel} detail.renderData.event The event record.\n             * @param {Core.helper.util.DomClassList|String} detail.renderData.cls An object whose property names\n             * represent the CSS class names to be added to the event bar element. Set a property's value to truthy or\n             * falsy to add or remove the class name based on the property name. Using this technique, you do not have\n             * to know whether the class is already there, or deal with concatenation.\n             * @param {Core.helper.util.DomClassList|String} detail.renderData.wrapperCls An object whose property names\n             * represent the CSS class names to be added to the event wrapper element. Set a property's value to truthy\n             * or falsy to add or remove the class name based on the property name. Using this technique, you do not\n             * have to know whether the class is already there, or deal with concatenation.\n             * @param {Core.helper.util.DomClassList|String} detail.renderData.iconCls An object whose property names\n             * represent the CSS class names to be added to an event icon element.\n             *\n             * Note that an element carrying this icon class is injected into the event element *after*\n             * the renderer completes, *before* the renderer's created content.\n             *\n             * To disable this if the renderer takes full control and creates content using the iconCls,\n             * you can set `renderData.iconCls = null`.\n             * @param {Number} detail.renderData.left Vertical offset position (in pixels) on the time axis.\n             * @param {Number} detail.renderData.width Width in pixels of the event element.\n             * @param {Number} detail.renderData.height Height in pixels of the event element.\n             * @param {String|Object<String,String>} detail.renderData.style Inline styles for the event bar DOM element.\n             * Use either 'border: 1px solid black' or `{ border: '1px solid black' }`\n             * @param {String|Object<String,String>} detail.renderData.wrapperStyle Inline styles for wrapper of the\n             * event bar DOM element. Use either 'border: 1px solid green' or `{ border: '1px solid green' }`\n             * @param {String} detail.renderData.eventStyle The `eventStyle` of the event. Use this to apply custom\n             * styles to the event DOM element\n             * @param {String} detail.renderData.eventColor The `eventColor` of the event. Use this to set a custom\n             * color for the rendered event\n             * @param {DomConfig[]} detail.renderData.children An array of DOM configs used as children to the\n             * `b-sch-event` element. Can be populated with additional DOM configs to have more control over contents.\n             * @returns {String|Object} A simple string, or a custom object which will be applied to the\n             * {@link #config-eventBodyTemplate}, creating the actual HTML\n             * @config {Function}\n             * @category Scheduled events\n             */\n            eventRenderer : null,\n\n            /**\n             * `this` reference for the {@link #config-eventRenderer} function\n             * @config {Object}\n             * @category Scheduled events\n             */\n            eventRendererThisObj : null,\n\n            /**\n             * Field from EventModel displayed as text in the bar when rendering\n             * @config {String}\n             * @default\n             * @category Scheduled events\n             */\n            eventBarTextField : 'name',\n\n            /**\n             * The template used to generate the markup of your events in the scheduler. To 'populate' the\n             * eventBodyTemplate with data, use the {@link #config-eventRenderer} method.\n             * @config {Function}\n             * @category Scheduled events\n             */\n            eventBodyTemplate : null,\n\n            /**\n             * The class responsible for the packing horizontal event layout process.\n             * Override this to take control over the layout process.\n             * @config {Scheduler.eventlayout.HorizontalLayout}\n             * @typings {typeof HorizontalLayout}\n             * @default\n             * @private\n             * @category Misc\n             */\n            horizontalLayoutPackClass : HorizontalLayoutPack,\n\n            /**\n             * The class name responsible for the stacking horizontal event layout process.\n             * Override this to take control over the layout process.\n             * @config {Scheduler.eventlayout.HorizontalLayout}\n             * @typings {typeof HorizontalLayout}\n             * @default\n             * @private\n             * @category Misc\n             */\n            horizontalLayoutStackClass : HorizontalLayoutStack,\n\n            /**\n             * A config object used to configure the resource columns in vertical mode.\n             * See {@link Scheduler.view.ResourceHeader} for more details on available properties.\n             *\n             * ```\n             * new Scheduler({\n             *   resourceColumns : {\n             *     columnWidth    : 100,\n             *     headerRenderer : ({ resourceRecord }) => `${resourceRecord.id} - ${resourceRecord.name}`\n             *   }\n             * })\n             * ```\n             * @config {ResourceHeaderConfig}\n             * @category Resources\n             */\n            resourceColumns : null,\n\n            /**\n             * Path to load resource images from. Used by the resource header in vertical mode and the\n             * {@link Scheduler.column.ResourceInfoColumn} in horizontal mode. Set this to display miniature\n             * images for each resource using their `image` or `imageUrl` fields.\n             *\n             * * `image` represents image name inside the specified `resourceImagePath`,\n             * * `imageUrl` represents fully qualified image URL.\n             *\n             *  If set and a resource has no `imageUrl` or `image` specified it will try show miniature using\n             *  the resource's name with {@link #config-resourceImageExtension} appended.\n             *\n             * **NOTE**: The path should end with a `/`:\n             *\n             * ```\n             * new Scheduler({\n             *   resourceImagePath : 'images/resources/'\n             * });\n             * ```\n             * @config {String}\n             * @category Resources\n             */\n            resourceImagePath : null,\n\n            /**\n             * Generic resource image, used when provided `imageUrl` or `image` fields or path calculated from resource\n             * name are all invalid. If left blank, resource name initials will be shown when no image can be loaded.\n             * @default\n             * @config {String}\n             * @category Resources\n             */\n            defaultResourceImageName : null,\n\n            /**\n             * Resource image extension, used when creating image path from resource name.\n             * @default\n             * @config {String}\n             * @category Resources\n             */\n            resourceImageExtension : '.jpg',\n\n            /**\n             * Controls how much space to leave between stacked event bars in px.\n             *\n             * Can be configured per resource by setting {@link Scheduler.model.ResourceModel#field-barMargin\n             * resource.barMargin}.\n             *\n             * @config {Number} barMargin\n             * @default\n             * @category Scheduled events\n             */\n\n            // Used to animate events on first render\n            isFirstRender : true,\n\n            initialAnimationDuration : 2000,\n\n            /**\n             * When an event bar has a width less than this value, it gets the CSS class `b-sch-event-narrow`\n             * added. You may apply custom CSS rules using this class.\n             *\n             * In vertical mode, this class causes the text to be rotated so that it runs vertically.\n             * @default\n             * @config {Number}\n             * @category Scheduled events\n             */\n            narrowEventWidth : 10,\n\n            internalEventLayout : null,\n            eventPositionMode   : 'translate',\n            eventScrollMode     : 'move'\n        };\n    }\n\n    //endregion\n\n    //region Settings\n\n    changeEventLayout(eventLayout) {\n        // Pass layout config to internal config to normalize its form\n        this.internalEventLayout = eventLayout;\n\n        // Return normalized string type\n        return this.internalEventLayout.type;\n    }\n\n    changeInternalEventLayout(eventLayout) {\n        return this.getEventLayout(eventLayout);\n    }\n\n    updateInternalEventLayout(eventLayout, oldEventLayout) {\n        const me = this;\n\n        if (oldEventLayout) {\n            me.element.classList.remove(`b-eventlayout-${oldEventLayout.type}`);\n        }\n\n        me.element.classList.add(`b-eventlayout-${eventLayout.type}`);\n\n        if (!me.isConfiguring) {\n            me.refreshWithTransition();\n\n            me.trigger('stateChange');\n        }\n    }\n\n    changeHorizontalEventSorterFn(fn) {\n        VersionHelper.deprecate('Scheduler', '6.0.0', 'Replaced by overlappingEventSorter()');\n        this.overlappingEventSorter = fn;\n    }\n\n    updateOverlappingEventSorter(fn) {\n        if (!this.isConfiguring) {\n            this.refreshWithTransition();\n        }\n    }\n\n    //endregion\n\n    //region Layout helpers\n\n    // Wraps string config to object with type\n    getEventLayout(value) {\n        if (value?.isModel) {\n            value = value.eventLayout || this.internalEventLayout;\n        }\n\n        if (typeof value === 'string') {\n            value = { type : value };\n        }\n\n        return value;\n    }\n\n    /**\n     * Get event layout handler. The handler decides the vertical placement of events within a resource.\n     * Returns null if no eventLayout is used (if {@link #config-eventLayout} is set to \"none\")\n     * @internal\n     * @returns {Scheduler.eventlayout.HorizontalLayout}\n     * @readonly\n     * @category Scheduled events\n     */\n    getEventLayoutHandler(eventLayout) {\n        const me = this;\n\n        if (!me.isHorizontal) {\n            return null;\n        }\n\n        const\n            { timeAxisViewModel, horizontal } = me,\n            { type }                          = eventLayout;\n\n        if (!me.layouts) {\n            me.layouts = {};\n        }\n\n        switch (type) {\n            // stack, adjust row height to fit all events\n            case 'stack': {\n                if (!me.layouts.horizontalStack) {\n                    me.layouts.horizontalStack = new me.horizontalLayoutStackClass(ObjectHelper.assign({\n                        scheduler                   : me,\n                        timeAxisViewModel,\n                        bandIndexToPxConvertFn      : horizontal.layoutEventVerticallyStack,\n                        bandIndexToPxConvertThisObj : horizontal\n                    }, eventLayout));\n                }\n\n                return me.layouts.horizontalStack;\n            }\n            // pack, fit all events in available height by adjusting their height\n            case 'pack': {\n                if (!me.layouts.horizontalPack) {\n                    me.layouts.horizontalPack = new me.horizontalLayoutPackClass(ObjectHelper.assign({\n                        scheduler                   : me,\n                        timeAxisViewModel,\n                        bandIndexToPxConvertFn      : horizontal.layoutEventVerticallyPack,\n                        bandIndexToPxConvertThisObj : horizontal\n                    }, eventLayout));\n                }\n\n                return me.layouts.horizontalPack;\n            }\n            default:\n                return null;\n        }\n    }\n\n    //endregion\n\n    //region Resource header/columns\n\n    // NOTE: The configs below are initially applied to the resource header in `TimeAxisColumn#set mode`\n\n    /**\n     * Use it to manipulate resource column properties at runtime.\n     * @property {Scheduler.view.ResourceHeader}\n     * @readonly\n     * @category Resources\n     */\n    get resourceColumns() {\n        return this.timeAxisColumn?.resourceColumns || this._resourceColumns;\n    }\n\n    /**\n     * Get resource column width. Only applies to vertical mode. To set it, assign to\n     * `scheduler.resourceColumns.columnWidth`.\n     * @property {Number}\n     * @readonly\n     * @category Resources\n     */\n    get resourceColumnWidth() {\n        return this.resourceColumns?.columnWidth || null;\n    }\n\n    //endregion\n\n    //region Event rendering\n\n    // Chainable function called with the events to render for a specific resource. Allows features to add/remove.\n    // Chained by ResourceTimeRanges\n    getEventsToRender(resource, events) {\n        return events;\n    }\n\n    /**\n     * Rerenders events for specified resource (by rerendering the entire row).\n     * @param {Scheduler.model.ResourceModel} resourceRecord\n     * @category Rendering\n     */\n    repaintEventsForResource(resourceRecord) {\n        this.currentOrientation.repaintEventsForResource(resourceRecord);\n    }\n\n    /**\n     * Rerenders the events for all resources connected to the specified event\n     * @param {Scheduler.model.EventModel} eventRecord\n     * @private\n     */\n    repaintEvent(eventRecord) {\n        const resources = this.eventStore.getResourcesForEvent(eventRecord);\n        resources.forEach(resourceRecord => this.repaintEventsForResource(resourceRecord));\n    }\n\n    // Returns a resource specific resourceMargin, falling back to Schedulers setting\n    // This fn could be made public to allow hooking it as an alternative to only setting this in data\n    getResourceMargin(resourceRecord) {\n        return resourceRecord?.resourceMargin ?? this.resourceMargin;\n    }\n\n    // Returns a resource specific barMargin, falling back to Schedulers setting\n    // This fn could be made public to allow hooking it as an alternative to only setting this in data\n    getBarMargin(resourceRecord) {\n        return resourceRecord?.barMargin ?? this.barMargin;\n    }\n\n    // Returns a resource specific rowHeight, falling back to Schedulers setting\n    // Prio order: Height from record, configured height\n    // This fn could be made public to allow hooking it as an alternative to only setting this in data\n    getResourceHeight(resourceRecord) {\n        return resourceRecord.rowHeight ?? (this.isHorizontal ? this.rowHeight : this.getResourceWidth(resourceRecord));\n    }\n\n    getResourceWidth(resourceRecord) {\n        return resourceRecord.columnWidth ?? this.resourceColumnWidth;\n    }\n\n    // Similar to getResourceHeight(), but for usage later in the process to take height set by renderers into account.\n    // Cant be used earlier in the process because then the row will grow\n    // Prio order: Height requested by renderer, height from record, configured height\n    getAppliedResourceHeight(resourceRecord) {\n        const row = this.getRowById(resourceRecord);\n\n        return row?.maxRequestedHeight ?? this.getResourceHeight(resourceRecord);\n    }\n\n    // Combined convenience getter for destructuring on calling side\n    // Second arg only passed for nested events, handled by NestedEvent feature\n    getResourceLayoutSettings(resourceRecord, parentEventRecord = null) {\n        const\n            resourceMargin = this.getResourceMargin(resourceRecord, parentEventRecord),\n            rowHeight      = this.getAppliedResourceHeight(resourceRecord, parentEventRecord);\n\n        return {\n            barMargin     : this.getBarMargin(resourceRecord, parentEventRecord),\n            contentHeight : Math.max(rowHeight - resourceMargin * 2, 1),\n            rowHeight,\n            resourceMargin\n        };\n    }\n\n    getEventStyle(eventRecord, resourceRecord) {\n        return eventRecord.eventStyle || resourceRecord.eventStyle || this.eventStyle;\n    }\n\n    getEventColor(eventRecord, resourceRecord) {\n        return eventRecord.eventColor || eventRecord.event?.eventColor || eventRecord.parent?.eventColor || resourceRecord.eventColor || this.eventColor;\n    }\n\n    //endregion\n\n    //region Template\n\n    /**\n     * Generates data used in the template when rendering an event. For example which css classes to use. Also applies\n     * #eventBodyTemplate and calls the {@link #config-eventRenderer}.\n     * @private\n     * @param {Scheduler.model.EventModel} eventRecord Event to generate data for\n     * @param {Scheduler.model.ResourceModel} resourceRecord Events resource\n     * @param {Boolean|Object} includeOutside Specify true to get boxes for timespans outside the rendered zone in both\n     * dimensions. This option is used when calculating dependency lines, and we need to include routes from timespans\n     * which may be outside the rendered zone.\n     * @param {Boolean} includeOutside.timeAxis Pass as `true` to include timespans outside the TimeAxis's bounds\n     * @param {Boolean} includeOutside.viewport Pass as `true` to include timespans outside the vertical timespan viewport's bounds.\n     * @returns {Object} Data to use in event template, or `undefined` if the event is outside the rendered zone.\n     */\n    generateRenderData(eventRecord, resourceRecord, includeOutside = { viewport : true }) {\n        // <remove-on-release>\n        // TODO: Change this fn to accept an assignment instead of event + resource\n        // </remove-on-release>\n        const\n            me               = this,\n            // generateRenderData calculates layout for events which are outside the vertical viewport\n            // because the RowManager needs to know a row height.\n            renderData       = me.currentOrientation.getTimeSpanRenderData(eventRecord, resourceRecord, includeOutside),\n            { isEvent }      = eventRecord,\n            { eventResize }  = me.features,\n            // Don't want events drag created to zero duration to render as milestones\n            isMilestone      = !eventRecord.meta.isDragCreating && eventRecord.isMilestone,\n            // $originalId allows lookup to yield same result for original resources and linked resources\n            assignmentRecord = isEvent && eventRecord.assignments.find(a => a.resourceId === resourceRecord.$originalId),\n            // Events inner element, will be populated by renderer and/or eventBodyTemplate\n            eventContent     = {\n                className : 'b-sch-event-content',\n                role      : 'presentation',\n                dataset   : {\n                    taskBarFeature : 'content'\n                }\n            };\n\n        if (renderData) {\n            renderData.tabIndex = '0';\n\n            let resizable = eventRecord.isResizable;\n\n            if (eventResize && resizable) {\n                if (renderData.startsOutsideView) {\n                    if (resizable === true) {\n                        resizable = 'end';\n                    }\n                    else if (resizable === 'start') {\n                        resizable = false;\n                    }\n                }\n                if (renderData.endsOutsideView) {\n                    if (resizable === true) {\n                        resizable = 'start';\n                    }\n                    else if (resizable === 'end') {\n                        resizable = false;\n                    }\n                }\n\n                // Let the feature veto start/end handles\n                if (resizable) {\n                    if (me.isHorizontal) {\n                        if ((!me.rtl && !eventResize.leftHandle) || (me.rtl && !eventResize.rightHandle)) {\n                            resizable = resizable === 'start' ? false : 'end';\n                        }\n                        else if ((!me.rtl && !eventResize.rightHandle) || (me.rtl && !eventResize.leftHandle)) {\n                            resizable = resizable === 'end' ? false : 'start';\n                        }\n                    }\n                    else {\n                        if (!eventResize.topHandle) {\n                            resizable = resizable === 'start' ? false : 'end';\n                        }\n                        else if (!eventResize.bottomHandle) {\n                            resizable = resizable === 'end' ? false : 'start';\n                        }\n                    }\n                }\n            }\n\n            // Event record cls properties are now DomClassList instances, so clone them\n            // so that they can be manipulated here and by renderers.\n            // Truthy value means the key will be added as a class name.\n            // ResourceTimeRanges applies custom cls to wrapper.\n            const\n                // Boolean needed here, otherwise DomSync will dig into comparing the modifications\n                isDirty           = Boolean(\n                    eventRecord.hasPersistableChanges || assignmentRecord?.hasPersistableChanges\n                ),\n                clsListObj        = {\n                    [resourceRecord.cls]      : resourceRecord.cls,\n                    [me.generatedIdCls]       : !eventRecord.isOccurrence && eventRecord.hasGeneratedId,\n                    [me.dirtyCls]             : isDirty,\n                    [me.committingCls]        : eventRecord.isCommitting,\n                    [me.endsOutsideViewCls]   : renderData.endsOutsideView,\n                    [me.startsOutsideViewCls] : renderData.startsOutsideView,\n                    'b-clipped-start'         : renderData.clippedStart,\n                    'b-clipped-end'           : renderData.clippedEnd,\n                    'b-iscreating'            : eventRecord.isCreating,\n                    'b-rtl'                   : me.rtl\n                },\n                wrapperClsListObj = {\n                    [`${me.eventCls}-parent`] : resourceRecord.isParent,\n                    'b-readonly'              : eventRecord.readOnly || assignmentRecord?.readOnly,\n                    'b-linked-resource'       : resourceRecord.isLinked,\n                    'b-original-resource'     : resourceRecord.hasLinks\n                },\n                clsList           = eventRecord.isResourceTimeRange ? new DomClassList() : eventRecord.internalCls.clone(),\n                wrapperClsList    = eventRecord.isResourceTimeRange ? eventRecord.internalCls.clone() : new DomClassList();\n\n            renderData.wrapperStyle = '';\n\n            // mark as wrapper to make sure fire render events for this level only\n            renderData.isWrap = true;\n\n            // Event specifics, things that do not apply to ResourceTimeRanges\n            if (isEvent) {\n                const selected = assignmentRecord && me.isAssignmentSelected(assignmentRecord);\n\n                ObjectHelper.assign(clsListObj, {\n                    [me.eventCls]                          : 1,\n                    'b-milestone'                          : isMilestone,\n                    'b-sch-event-narrow'                   : !isMilestone && renderData.width < me.narrowEventWidth,\n                    [me.fixedEventCls]                     : eventRecord.isDraggable === false,\n                    [`b-sch-event-resizable-${resizable}`] : Boolean(eventResize && !eventRecord.readOnly),\n                    [me.eventSelectedCls]                  : selected,\n                    [me.eventAssignHighlightCls]           : me.eventAssignHighlightCls && !selected && me.isEventSelected(eventRecord),\n                    'b-recurring'                          : eventRecord.isRecurring,\n                    'b-occurrence'                         : eventRecord.isOccurrence,\n                    'b-inactive'                           : eventRecord.inactive\n                });\n\n                renderData.eventId  = eventRecord.id;\n\n                const\n                    eventStyle   = me.getEventStyle(eventRecord, resourceRecord),\n                    eventColor   = me.getEventColor(eventRecord, resourceRecord),\n                    hasAnimation = me.isFirstRender && me.useInitialAnimation && globalThis.bryntum.noAnimations !== true;\n\n                ObjectHelper.assign(wrapperClsListObj, {\n                    [`${me.eventCls}-wrap`] : 1,\n                    'b-milestone-wrap'      : isMilestone\n                });\n\n                if (hasAnimation) {\n                    const\n                        index   = renderData.row ? renderData.row.index : (renderData.top - me.scrollTop) / me.tickSize,\n                        delayMS = index / 20 * 1000;\n\n                    renderData.wrapperStyle = `animation-delay: ${delayMS}ms;`;\n                    me.maxDelay = Math.max(me.maxDelay || 0, delayMS);\n\n                    // Add an extra delay to wait for the most delayed animation to finish\n                    // before we call stopInitialAnimation. In this way, we allow them all to finish\n                    // before we remove the b-initial-${me._useInitialAnimation} class.\n                    if (!me.initialAnimationDetacher) {\n                        me.initialAnimationDetacher = EventHelper.on({\n                            element  : me.foregroundCanvas,\n                            delegate : me.eventSelector,\n\n                            // Just listen for the first animation end fired by our event els\n                            once         : true,\n                            animationend : () => me.setTimeout({\n                                fn                : 'stopInitialAnimation',\n                                delay             : me.maxDelay,\n                                cancelOutstanding : true\n                            }),\n                            // Fallback in case animation is interrupted\n                            expires : {\n                                alt   : 'stopInitialAnimation',\n                                delay : me.initialAnimationDuration + me.maxDelay\n                            },\n                            thisObj : me\n                        });\n                    }\n                }\n\n                renderData.eventColor = eventColor;\n                renderData.eventStyle = eventStyle;\n\n                // <remove-on-release>\n                // TODO: Deprecate assignment, use assignmentRecord\n                // </remove-on-release>\n                renderData.assignmentRecord = renderData.assignment = assignmentRecord;\n            }\n\n            // If not using a wrapping div, this cls will be added to event div for correct rendering\n            renderData.wrapperCls = ObjectHelper.assign(wrapperClsList, wrapperClsListObj);\n\n            renderData.cls = ObjectHelper.assign(clsList, clsListObj);\n            renderData.iconCls = new DomClassList(eventRecord.get(me.eventBarIconClsField) || eventRecord.iconCls);\n\n            // ResourceTimeRanges applies custom style to the wrapper\n            if (eventRecord.isResourceTimeRange) {\n                renderData.style = '';\n                renderData.wrapperStyle += eventRecord.style || '';\n            }\n            // Others to inner\n            else {\n                renderData.style = eventRecord.style || '';\n            }\n\n            // <remove-on-release>\n            // TODO: Deprecate resource in favor of resourceRecord\n            // </remove-on-release>\n            renderData.resource = renderData.resourceRecord = resourceRecord;\n            renderData.resourceId = renderData.rowId;\n\n            if (isEvent) {\n                let childContent = null,\n                    milestoneLabelConfig = null,\n                    value;\n\n                if (me.eventRenderer) {\n                    // User has specified a renderer fn, either to return a simple string, or an object intended for the eventBodyTemplate\n                    const\n                        rendererValue = me.eventRenderer.call(me.eventRendererThisObj || me, {\n                            eventRecord,\n                            resourceRecord,\n                            assignmentRecord : renderData.assignmentRecord,\n                            renderData\n                        });\n\n                    // If the user's renderer coerced it into a string, recreate a DomClassList.\n                    if (typeof renderData.cls === 'string') {\n                        renderData.cls = new DomClassList(renderData.cls);\n                    }\n\n                    if (typeof renderData.wrapperCls === 'string') {\n                        renderData.wrapperCls = new DomClassList(renderData.wrapperCls);\n                    }\n\n                    // Same goes for iconCls\n                    if (typeof renderData.iconCls === 'string') {\n                        renderData.iconCls = new DomClassList(renderData.iconCls);\n                    }\n\n                    if (me.eventBodyTemplate) {\n                        value = me.eventBodyTemplate(rendererValue);\n                    }\n                    else {\n                        value = rendererValue;\n                    }\n                }\n                else if (me.eventBodyTemplate) {\n                    // User has specified an eventBodyTemplate, but no renderer - just apply the entire event record data.\n                    value = me.eventBodyTemplate(eventRecord);\n                }\n                else if (me.eventBarTextField) {\n                    // User has specified a field in the data model to read from\n                    value = StringHelper.encodeHtml(eventRecord[me.eventBarTextField] || '');\n                }\n\n                if (!me.eventBodyTemplate || Array.isArray(value)) {\n                    eventContent.children = [];\n\n                    // Give milestone a dedicated label element so we can use padding\n                    if (isMilestone && (me.milestoneLayoutMode === 'default' || me.milestoneTextPosition === 'always-outside') && value != null && value !== '') {\n                        eventContent.children.unshift(milestoneLabelConfig = {\n                            tag      : 'label',\n                            children : []\n                        });\n                    }\n\n                    if (renderData.iconCls?.length) {\n                        eventContent.children.unshift({\n                            tag       : 'i',\n                            className : renderData.iconCls\n                        });\n                    }\n\n                    // Array, assumed to contain DOM configs for eventContent children (or milestone label)\n                    if (Array.isArray(value)) {\n                        (milestoneLabelConfig || eventContent).children.push(...value);\n                    }\n                    // Likely HTML content\n                    else if (StringHelper.isHtml(value)) {\n                        if (eventContent.children.length) {\n                            childContent = {\n                                tag   : 'span',\n                                class : 'b-event-text-wrap',\n                                html  : value\n                            };\n                        }\n                        else {\n                            eventContent.children = null;\n                            eventContent.html = value;\n                        }\n                    }\n                    // DOM config or plain string can be used as is\n                    else if (typeof value === 'string' || typeof value === 'object') {\n                        childContent = value;\n                    }\n                    // Other, use string\n                    else if (value != null) {\n                        childContent = String(value);\n                    }\n\n                    // Must allow empty string as valid content\n                    if (childContent != null) {\n                        // Milestones have content in their label, other events in their \"body\"\n                        (milestoneLabelConfig || eventContent).children.push(childContent);\n                        renderData.cls.add('b-has-content');\n                    }\n\n                    if (eventContent.html != null || eventContent.children.length) {\n                        renderData.children.push(eventContent);\n                    }\n                }\n                else {\n                    eventContent.html = value;\n                    renderData.children.push(eventContent);\n                }\n            }\n\n            const { eventStyle, eventColor } = renderData;\n\n            // Renderers have last say on style & color\n            renderData.wrapperCls[`b-sch-style-${eventStyle || 'none'}`] = 1;\n\n            // Named colors are applied as a class to the wrapper\n            if (DomHelper.isNamedColor(eventColor)) {\n                renderData.wrapperCls[`b-sch-color-${eventColor}`] = eventColor;\n            }\n            else if (eventColor) {\n                const colorProp = eventStyle ? 'color' : 'background-color';\n\n                renderData.style = `${colorProp}:${eventColor};` + renderData.style;\n                renderData.wrapperCls['b-sch-custom-color'] = 1;\n            }\n            else {\n                renderData.wrapperCls[`b-sch-color-none`] = 1;\n            }\n\n            // Milestones has to apply styling to b-sch-event-content\n            if (renderData.style && isMilestone && eventContent) {\n                eventContent.style = renderData.style;\n                delete renderData.style;\n            }\n\n            // If there are any iconCls entries...\n            renderData.cls['b-sch-event-withicon'] = renderData.iconCls?.length;\n\n            // For comparison in sync, cheaper than comparing DocumentFragments\n            renderData.eventContent = eventContent;\n\n            renderData.wrapperChildren = [];\n\n            // Method which features may chain in to\n            me.onEventDataGenerated(renderData);\n        }\n\n        return renderData;\n    }\n\n    /**\n     * A method which may be chained by features. It is called when an event's render\n     * data is calculated so that features may update the style, class list or body.\n     * @param {Object} eventData\n     * @internal\n     */\n    onEventDataGenerated(eventData) {}\n\n    //endregion\n\n    //region Initial animation\n\n    changeUseInitialAnimation(name) {\n        return name === true ? 'fade-in' : name;\n    }\n\n    updateUseInitialAnimation(name, old) {\n        const { classList } = this.element;\n\n        if (old) {\n            classList.remove(`b-initial-${old}`);\n        }\n\n        if (name) {\n            classList.add(`b-initial-${name}`);\n\n            // Transition block for FF, to not interfere with animations\n            if (BrowserHelper.isFirefox) {\n                classList.add('b-prevent-event-transitions');\n            }\n        }\n    }\n\n    /**\n     * Restarts initial events animation with new value {@link #config-useInitialAnimation}.\n     * @param {Boolean|String} initialAnimation new initial animation value\n     * @category Misc\n     */\n    restartInitialAnimation(initialAnimation) {\n        const me = this;\n\n        me.initialAnimationDetacher?.();\n        me.initialAnimationDetacher = null;\n\n        me.useInitialAnimation = initialAnimation;\n        me.isFirstRender = true;\n        me.refresh();\n    }\n\n    stopInitialAnimation() {\n        const me = this;\n\n        me.initialAnimationDetacher();\n        me.isFirstRender = false;\n\n        // Prevent any further initial animations\n        me.useInitialAnimation = false;\n\n        // Remove transition block for FF a bit later, to not interfere with animations\n        if (BrowserHelper.isFirefox) {\n            me.setTimeout(() => me.element.classList.remove('b-prevent-event-transitions'), 100);\n        }\n    }\n\n    //endregion\n\n    //region Milestones\n\n    /**\n     * Determines width of a milestones label. How width is determined is decided by configuring\n     * {@link #config-milestoneLayoutMode}. Please note that text width is always determined using the events\n     * {@link Scheduler/model/EventModel#field-name}.\n     * @param {Scheduler.model.EventModel} eventRecord\n     * @param {Scheduler.model.ResourceModel} resourceRecord\n     * @returns {Number}\n     * @category Milestones\n     */\n    getMilestoneLabelWidth(eventRecord, resourceRecord) {\n        const\n            me   = this,\n            mode = me.milestoneLayoutMode,\n            size = me.getResourceLayoutSettings(resourceRecord).contentHeight;\n\n        if (mode === 'measure') {\n            const\n                html    = StringHelper.encodeHtml(eventRecord.name),\n                color   = me.getEventColor(eventRecord, resourceRecord),\n                style   = me.getEventStyle(eventRecord, resourceRecord),\n                element = me.milestoneMeasureElement || (me.milestoneMeasureElement = DomHelper.createElement({\n                    className : {\n                        'b-sch-event-wrap'       : 1,\n                        'b-milestone-wrap'       : 1,\n                        'b-measure'              : 1,\n                        [`b-sch-color-${color}`] : color,\n                        [`b-sch-style-${style}`] : style\n                    },\n                    children : [\n                        {\n                            className : 'b-sch-event b-milestone',\n                            children  : [\n                                {\n                                    className : 'b-sch-event-content',\n                                    children  : [\n                                        { tag : 'label' }\n                                    ]\n                                }\n                            ]\n                        }\n                    ],\n                    parent : me.foregroundCanvas\n                }));\n\n            // DomSync should not touch\n            element.retainElement = true;\n\n            element.style.fontSize = `${size}px`;\n\n            if (me.milestoneTextPosition === 'always-outside') {\n                const label = element.firstElementChild.firstElementChild.firstElementChild;\n\n                label.innerHTML = html;\n\n                const bounds = Rectangle.from(label, label.parentElement);\n\n                // +2 for a little margin\n                return bounds.left + bounds.width + 2;\n            }\n            else {\n                // b-sch-event-content\n                element.firstElementChild.firstElementChild.innerHTML = `<label></label>${html}`;\n\n                return element.firstElementChild.offsetWidth;\n            }\n        }\n\n        if (mode === 'estimate') {\n            return eventRecord.name.length * me.milestoneCharWidth + (me.milestoneTextPosition === 'always-outside' ? size : 0);\n        }\n\n        if (mode === 'data') {\n            return eventRecord.milestoneWidth;\n        }\n\n        return 0;\n    }\n\n    updateMilestoneLayoutMode(mode) {\n        const\n            me            = this,\n            alwaysOutside = me.milestoneTextPosition === 'always-outside';\n\n        me.element.classList.toggle('b-sch-layout-milestones', mode !== 'default' && !alwaysOutside);\n        me.element.classList.toggle('b-sch-layout-milestone-labels', mode !== 'default' && alwaysOutside);\n\n        if (!me.isConfiguring) {\n            me.refreshWithTransition();\n        }\n    }\n\n    updateMilestoneTextPosition(position) {\n        this.element.classList.toggle('b-sch-layout-milestone-text-position-inside', position === 'inside');\n\n        this.updateMilestoneLayoutMode(this.milestoneLayoutMode);\n    }\n\n    updateMilestoneAlign() {\n        if (!this.isConfiguring) {\n            this.refreshWithTransition();\n        }\n    }\n\n    updateMilestoneCharWidth() {\n        if (!this.isConfiguring) {\n            this.refreshWithTransition();\n        }\n    }\n\n    // endregion\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n};\n","import Base from '../../../Core/Base.js';\nimport Store from '../../../Core/data/Store.js';\nimport GlobalEvents from '../../../Core/GlobalEvents.js';\nimport DomHelper from '../../../Core/helper/DomHelper.js';\nimport VersionHelper from '../../../Core/helper/VersionHelper.js';\nimport ProjectConsumer from '../../data/mixin/ProjectConsumer.js';\n\n/**\n * @module Scheduler/view/mixin/SchedulerStores\n */\n\n/**\n * Functions for store assignment and store event listeners.\n *\n * @mixin\n * @extends Scheduler/data/mixin/ProjectConsumer\n */\nexport default Target => class SchedulerStores extends ProjectConsumer(Target || Base) {\n    static get $name() {\n        return 'SchedulerStores';\n    }\n\n    //region Default config\n\n    // This is the static definition of the Stores we consume from the project, and\n    // which we must provide *TO* the project if we or our CrudManager is configured\n    // with them.\n    // The property name is the store name, and within that there is the dataName which\n    // is the property which provides static data definition. And there is a listeners\n    // definition which specifies the listeners *on this object* for each store.\n    //\n    // To process incoming stores, implement an updateXxxxxStore method such\n    // as `updateEventStore(eventStore)`.\n    //\n    // To process an incoming Project implement `updateProject`. __Note that\n    // `super.updateProject(...arguments)` must be called first.__\n    static get projectStores() {\n        return {\n            resourceStore : {\n                dataName : 'resources'\n            },\n\n            eventStore : {\n                dataName  : 'events',\n                // eslint-disable-next-line bryntum/no-listeners-in-lib\n                listeners : {\n                    batchedUpdate   : 'onEventStoreBatchedUpdate',\n                    changePreCommit : 'onInternalEventStoreChange',\n                    commitStart     : 'onEventCommitStart',\n                    commit          : 'onEventCommit',\n                    exception       : 'onEventException',\n                    idchange        : 'onEventIdChange',\n                    beforeLoad      : 'onBeforeLoad'\n                }\n            },\n\n            assignmentStore : {\n                dataName  : 'assignments',\n                // eslint-disable-next-line bryntum/no-listeners-in-lib\n                listeners : {\n                    changePreCommit : 'onAssignmentChange', // In EventSelection.js\n                    commitStart     : 'onAssignmentCommitStart',\n                    commit          : 'onAssignmentCommit',\n                    exception       : 'onAssignmentException',\n                    beforeRemove    : {\n                        fn   : 'onAssignmentBeforeRemove',\n                        // We must go last in case an app vetoes a remove\n                        // by returning false from a handler.\n                        prio : -1000\n                    }\n                }\n            },\n\n            dependencyStore : {\n                dataName : 'dependencies'\n            },\n\n            calendarManagerStore   : {},\n            timeRangeStore         : {},\n            resourceTimeRangeStore : {}\n        };\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * Overridden to *not* auto create a store at the Scheduler level.\n             * The store is the {@link Scheduler.data.ResourceStore} of the backing project\n             * @config {Core.data.Store}\n             * @private\n             */\n            store : null,\n\n            /**\n             * The name of the start date parameter that will be passed to in every `eventStore` load request.\n             * @config {String}\n             * @category Data\n             */\n            startParamName : 'startDate',\n\n            /**\n             * The name of the end date parameter that will be passed to in every `eventStore` load request.\n             * @config {String}\n             * @category Data\n             */\n            endParamName : 'endDate',\n\n            /**\n             * Set to true to include `startDate` and `endDate` params indicating the currently viewed date range.\n             * Dates are formatted using the same format as the `startDate` field on the EventModel\n             * (e.g. 2023-03-08T00:00:00+01:00).\n             *\n             * Enabled by default in version 6.0 and above.\n             *\n             * @config {Boolean}\n             */\n            passStartEndParameters : VersionHelper.checkVersion('core', '6.0', '>='),\n\n            /**\n             * Class that should be used to instantiate a CrudManager in case it's provided as a simple object to\n             * {@link #config-crudManager} config.\n             * @config {Scheduler.data.CrudManager}\n             * @typings {typeof CrudManager}\n             * @category Data\n             */\n            crudManagerClass : null,\n\n            /**\n             * Get/set the CrudManager instance\n             * @member {Scheduler.data.CrudManager} crudManager\n             * @category Data\n             */\n            /**\n             * Supply a {@link Scheduler.data.CrudManager} instance or a config object if you want to use\n             * CrudManager for handling data.\n             * @config {CrudManagerConfig|Scheduler.data.CrudManager}\n             * @category Data\n             */\n            crudManager : null\n        };\n    }\n\n    //endregion\n\n    //region Project\n\n    updateProject(project, oldProject) {\n        super.updateProject(project, oldProject);\n\n        this.detachListeners('schedulerStores');\n\n        project.ion({\n            name    : 'schedulerStores',\n            refresh : 'onProjectRefresh',\n            thisObj : this\n        });\n    }\n\n    // Called when project changes are committed, before data is written back to records (but still ready to render\n    // since data is fetched from engine)\n    onProjectRefresh({ isInitialCommit }) {\n        const me = this;\n\n        // Only update the UI immediately if we are visible\n        if (me.isVisible) {\n            if (isInitialCommit) {\n                if (me.isVertical) {\n                    me.refreshAfterProjectRefresh = false;\n                    me.refreshWithTransition();\n                }\n            }\n\n            if (me.navigateToAfterRefresh) {\n                me.navigateTo(me.navigateToAfterRefresh);\n                me.navigateToAfterRefresh = null;\n            }\n\n            if (me.refreshAfterProjectRefresh) {\n                me.refreshWithTransition(false, !isInitialCommit);\n                me.refreshAfterProjectRefresh = false;\n            }\n        }\n        // Otherwise wait till next time we get painted (shown, or a hidden ancestor shown)\n        else {\n            me.whenVisible('refresh', me, [true]);\n        }\n    }\n\n    //endregion\n\n    //region CrudManager\n\n    changeCrudManager(crudManager) {\n        const me = this;\n\n        if (crudManager && !crudManager.isCrudManager) {\n            //<debug>\n            if (!me.crudManagerClass) {\n                throw new Error('No CrudManager class configured on CrudManager\\'s View');\n            }\n            //</debug>\n\n            // CrudManager injects itself into is Scheduler's _crudManager property\n            // because code it triggers needs to access it through its getter.\n            crudManager = me.crudManagerClass.new({\n                scheduler : me\n            }, crudManager);\n        }\n        // config setter will veto because of above described behaviour\n        // of setting the property early on creation\n        me._crudManager = crudManager;\n\n        me.bindCrudManager(crudManager);\n    }\n\n    //endregion\n\n    //region Row store\n\n    get store() {\n        // Vertical uses a dummy store\n        if (!this._store && this.isVertical) {\n            // <remove-on-release>\n            // TODO: Make this store readonly, since we are using single cell approach\n            // </remove-on-release>\n            this._store = new Store({\n                data : [\n                    {\n                        id  : 'verticalTimeAxisRow', // no-sanity\n                        cls : 'b-verticaltimeaxis-row'\n                    }\n                ]\n            });\n        }\n\n        return super.store;\n    }\n\n    set store(store) {\n        super.store = store;\n    }\n\n    // Wrap w/ transition refreshFromRowOnStoreAdd() inherited from Grid\n    refreshFromRowOnStoreAdd(row, { isExpand, records }) {\n        const args = arguments;\n\n        this.runWithTransition(() => {\n            // Postpone drawing of events for a new resource until the following project refresh. Previously the draw\n            // would not happen because engine was not ready, but now when we allow commits and can read values during\n            // commit that block is no longer there\n            this.currentOrientation.suspended = !isExpand && !records.some(r => r.isLinked);\n\n            super.refreshFromRowOnStoreAdd(row, ...args);\n\n            this.currentOrientation.suspended = false;\n        }, !isExpand);\n    }\n\n    onStoreAdd(event) {\n        super.onStoreAdd(event);\n\n        if (this.isPainted) {\n            this.calculateRowHeights(event.records);\n        }\n    }\n\n    onStoreUpdateRecord({ source : store, record, changes }) {\n        // Ignore engine changes that do not affect row rendering\n        let ignoreCount = 0;\n\n        if ('assigned' in changes) {\n            ignoreCount++;\n        }\n\n        if ('calendar' in changes) {\n            ignoreCount++;\n        }\n\n        if (ignoreCount !== Object.keys(changes).length) {\n            super.onStoreUpdateRecord(...arguments);\n        }\n    }\n\n    //endregion\n\n    //region ResourceStore\n\n    updateResourceStore(resourceStore) {\n        // Reconfigure grid if resourceStore is backing the rows\n        if (resourceStore && this.isHorizontal) {\n            resourceStore.metaMapId = this.id;\n            this.store = resourceStore;\n        }\n    }\n\n    get usesDisplayStore() {\n        return this.store !== this.resourceStore;\n    }\n\n    //endregion\n\n    //region Events\n\n    onEventIdChange(params) {\n        this.currentOrientation.onEventStoreIdChange && this.currentOrientation.onEventStoreIdChange(params);\n    }\n\n    /**\n     * Listener to the batchedUpdate event which fires when a field is changed on a record which\n     * is batch updating. Occasionally UIs must keep in sync with batched changes.\n     * For example, the EventResize feature performs batched updating of the startDate/endDate\n     * and it tells its client to listen to batchedUpdate.\n     * @private\n     */\n    onEventStoreBatchedUpdate(event) {\n        if (this.listenToBatchedUpdates) {\n            return this.onInternalEventStoreChange(event);\n        }\n    }\n\n    /**\n     * Calls appropriate functions for current event layout when the event store is modified.\n     * @private\n     */\n    // Named as Internal to avoid naming collision with wrappers that relay events\n    onInternalEventStoreChange(params) {\n        // Too early, bail out\n        // Also bail out if this is a reassign using resourceId, any updates will be handled by AssignmentStore instead\n        if (!this.isPainted || !this._mode || params.isAssign || this.assignmentStore.isRemovingAssignment) {\n            return;\n        }\n\n        // Only respond if we are visible. If not, defer until we are shown\n        if (this.isVisible) {\n            this.currentOrientation.onEventStoreChange(params);\n        }\n        else {\n            this.whenVisible(this.onInternalEventStoreChange, this, [params]);\n        }\n    }\n\n    /**\n     * Refreshes committed events, to remove dirty/committing flag.\n     * CSS is added\n     * @private\n     */\n    onEventCommit({ changes }) {\n        let resourcesToRepaint = [...changes.added, ...changes.modified].map(\n            eventRecord => this.eventStore.getResourcesForEvent(eventRecord)\n        );\n\n        // getResourcesForEvent returns an array, so need to flatten resourcesToRepaint\n        resourcesToRepaint = Array.prototype.concat.apply([], resourcesToRepaint);\n\n        // repaint relevant resource rows\n        new Set(resourcesToRepaint).forEach(\n            resourceRecord => this.repaintEventsForResource(resourceRecord)\n        );\n    }\n\n    /**\n     * Adds the committing flag to changed events before commit.\n     * @private\n     */\n    onEventCommitStart({ changes }) {\n        const { currentOrientation, committingCls } = this;\n        // Committing sets a flag in meta that during event rendering applies a CSS class. But to not mess up drag and\n        // drop between resources no redraw is performed before committing, so class is never applied to the element(s).\n        // Applying here instead\n        [...changes.added, ...changes.modified].forEach(eventRecord =>\n            eventRecord.assignments.forEach(\n                assignmentRecord => currentOrientation.toggleCls(assignmentRecord, committingCls, true)\n            )\n        );\n    }\n\n    // Clear committing flag\n    onEventException({ action }) {\n        if (action === 'commit') {\n            const { changes } = this.eventStore;\n\n            [...changes.added, ...changes.modified, ...changes.removed].forEach(eventRecord =>\n                this.repaintEvent(eventRecord)\n            );\n        }\n    }\n\n    onAssignmentCommit({ changes }) {\n        this.repaintEventsForAssignmentChanges(changes);\n    }\n\n    onAssignmentCommitStart({ changes }) {\n        const { currentOrientation, committingCls } = this;\n\n        [...changes.added, ...changes.modified].forEach(assignmentRecord => {\n            currentOrientation.toggleCls(assignmentRecord, committingCls, true);\n        });\n    }\n\n    // Clear committing flag\n    onAssignmentException({ action }) {\n        if (action === 'commit') {\n            this.repaintEventsForAssignmentChanges(this.assignmentStore.changes);\n        }\n    }\n\n    repaintEventsForAssignmentChanges(changes) {\n        const resourcesToRepaint = [...changes.added, ...changes.modified, ...changes.removed].map(\n            assignmentRecord => assignmentRecord.getResource()\n        );\n\n        // repaint relevant resource rows\n        new Set(resourcesToRepaint).forEach(\n            resourceRecord => this.repaintEventsForResource(resourceRecord)\n        );\n    }\n\n    onAssignmentBeforeRemove({ records, removingAll }) {\n        if (removingAll) {\n            return;\n        }\n\n        const me = this;\n\n        let moveTo;\n\n        // Deassigning the active assignment\n        if (!me.isConfiguring &&\n            // If we have current active assignment or we scheduled navigating to an assignment, we should check\n            // if we're removing that assignment in order to avoid navigating to it\n            (me.navigateToAfterRefresh || me.activeAssignment && records.includes(me.activeAssignment))\n        ) {\n            // If next navigation target is removed, clean up the flag\n            if (records.includes(me.navigateToAfterRefresh)) {\n                me.navigateToAfterRefresh = null;\n            }\n            // If being done by a keyboard gesture then look for a close target until we find an existing record, not\n            // scheduled for removal. Otherwise, push focus outside of the Scheduler.\n            // This condition will react not only on meaningful keyboard action - like pressing DELETE key on selected\n            // event - but also in case user started dragging and pressed CTRL (or any other key) in process.\n            // https://github.com/bryntum/support/issues/3479\n            if (GlobalEvents.lastInteractionType === 'key') {\n                // Look for a close target until we find an existing record, not scheduled for removal. Provided\n                // assignment position in store is arbitrary as well as order of removed records, it does not make much\n                // sense trying to apply any specific order to them. Existing assignment next to any removed one is as\n                // good as any.\n                for (let i = 0, l = records.length; i < l && !moveTo; i++) {\n                    const assignment = records[i];\n\n                    if (assignment.resource && assignment.resource.isModel) {\n                        // Find next record\n                        let next = me.getNext(assignment);\n\n                        // If next record is not found or also removed, look for previous. This should not become a\n                        // performance bottleneck because we only can get to this code if project is committing, if\n                        // records are removed on a dragdrop listener and user pressed any key after mousedown, or if\n                        // user is operating with a keyboard and pressed [DELETE] to remove multiple records.\n                        if (!next || records.includes(next)) {\n                            next = me.getPrevious(assignment);\n                        }\n\n                        if (next && !records.includes(next)) {\n                            moveTo = next;\n                        }\n                    }\n                }\n            }\n\n            // Move focus away from the element which will soon have no backing data.\n            if (moveTo) {\n                // Although removing records from assignment store will trigger project commit and consequently\n                // `refresh` event on the project which will use this record to navigate to, some tests expect\n                // immediate navigation\n                me.navigateTo(moveTo);\n                me.navigateToAfterRefresh = moveTo;\n            }\n            // Focus must exit the Scheduler's subgrid, otherwise, if a navigation\n            // key gesture is delivered before the outgoing event's element has faded\n            // out and been removed, navigation will be attempted from a deleted\n            // event. Animated hiding is problematic.\n            //\n            // We cannot just revertFocus() because that might move focus back to an\n            // element in a floating EventEditor which is not yet faded out and\n            // been removed. Animated hiding is problematic.\n            //\n            // We cannot focus scheduler.timeAxisColumn.element because the browser\n            // would scroll it in some way if we have horizontal overflow.\n            //\n            // The only thing we can know about to focus here is the Scheduler itself.\n            else {\n                DomHelper.focusWithoutScrolling(me.focusElement);\n            }\n        }\n    }\n\n    //endregion\n\n    //region TimeRangeStore & TimeRanges\n\n    /**\n     * Inline time ranges, will be loaded into an internally created store if {@link Scheduler.feature.TimeRanges}\n     * is enabled.\n     * @config {Scheduler.model.TimeSpan[]|TimeSpanConfig[]} timeRanges\n     * @category Data\n     */\n\n    /**\n     * Get/set time ranges, applies to the backing project's TimeRangeStore.\n     * @member {Scheduler.model.TimeSpan[]} timeRanges\n     * @accepts {Scheduler.model.TimeSpan[]|TimeSpanConfig[]}\n     * @category Data\n     */\n\n    /**\n     * Get/set the time ranges store instance or config object for {@link Scheduler.feature.TimeRanges} feature.\n     * @member {Core.data.Store} timeRangeStore\n     * @accepts {Core.data.Store|StoreConfig}\n     * @category Data\n     */\n\n    /**\n     * The time ranges store instance for {@link Scheduler.feature.TimeRanges} feature.\n     * @config {Core.data.Store|StoreConfig} timeRangeStore\n     * @category Data\n     */\n\n    set timeRanges(timeRanges) {\n        this.project.timeRanges = timeRanges;\n    }\n\n    get timeRanges() {\n        return this.project.timeRanges;\n    }\n\n    //endregion\n\n    //region ResourceTimeRangeStore\n\n    /**\n     * Inline resource time ranges, will be loaded into an internally created store if\n     * {@link Scheduler.feature.ResourceTimeRanges} is enabled.\n     * @prp {Scheduler.model.ResourceTimeRangeModel[]} resourceTimeRanges\n     * @accepts {Scheduler.model.ResourceTimeRangeModel[]|ResourceTimeRangeModelConfig[]}\n     * @category Data\n     */\n\n    /**\n     * Get/set the resource time ranges store instance for {@link Scheduler.feature.ResourceTimeRanges} feature.\n     * @member {Scheduler.data.ResourceTimeRangeStore} resourceTimeRangeStore\n     * @accepts {Scheduler.data.ResourceTimeRangeStore|ResourceTimeRangeStoreConfig}\n     * @category Data\n     */\n\n    /**\n     * Resource time ranges store instance or config object for {@link Scheduler.feature.ResourceTimeRanges} feature.\n     * @config {Scheduler.data.ResourceTimeRangeStore|ResourceTimeRangeStoreConfig} resourceTimeRangeStore\n     * @category Data\n     */\n\n    set resourceTimeRanges(resourceTimeRanges) {\n        this.project.resourceTimeRanges = resourceTimeRanges;\n    }\n\n    get resourceTimeRanges() {\n        return this.project.resourceTimeRanges;\n    }\n\n    //endregion\n\n    //region Other functions\n\n    onBeforeLoad({ params }) {\n        this.applyStartEndParameters(params);\n    }\n\n    /**\n     * Get events grouped by timeAxis ticks from resources array\n     * @category Data\n     * @param {Scheduler.model.ResourceModel[]} resources An array of resources to process. If not passed, all resources\n     * will be used.\n     * @param {Function} filterFn filter function to filter events if required. Optional.\n     * @private\n     */\n    getResourcesEventsPerTick(resources, filterFn) {\n        const\n            { timeAxis, resourceStore } = this,\n            eventsByTick                = [];\n\n        resources = resources || resourceStore.records;\n        resources.forEach(resource => {\n            resource.events.forEach(event => {\n                if (!timeAxis.isTimeSpanInAxis(event) || (filterFn && !filterFn.call(this, { resource, event }))) {\n                    return;\n                }\n                // getTickFromDate may return float if event starts/ends in a middle of a tick\n                let startTick = Math.floor(timeAxis.getTickFromDate(event.startDate)),\n                    endTick = Math.ceil(timeAxis.getTickFromDate(event.endDate));\n\n                // if startDate/endDate of the event is out of timeAxis' bounds, use first/last tick id instead\n                if (startTick == -1) {\n                    startTick = 0;\n                }\n\n                if (endTick === -1) {\n                    endTick = timeAxis.ticks.length;\n                }\n\n                do {\n                    if (!eventsByTick[startTick]) {\n                        eventsByTick[startTick] = [event];\n                    }\n                    else {\n                        eventsByTick[startTick].push(event);\n                    }\n                } while (++startTick < endTick);\n            });\n        });\n\n        return eventsByTick;\n    }\n\n    //endregion\n\n    //region WidgetClass\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n\n    //endregion\n};\n","import Base from '../../../Core/Base.js';\nimport DomHelper from '../../../Core/helper/DomHelper.js';\n\n/**\n * @module Scheduler/view/mixin/SchedulerScroll\n */\n\nconst\n    defaultScrollOptions = {\n        block      : 'nearest',\n        edgeOffset : 20\n    },\n    unrenderedScrollOptions = {\n        highlight : false,\n        focus     : false\n    };\n\n/**\n * Functions for scrolling to events, dates etc.\n *\n * @mixin\n */\nexport default Target => class SchedulerScroll extends (Target || Base) {\n    static get $name() {\n        return 'SchedulerScroll';\n    }\n\n    //region Scroll to event\n\n    /**\n     * Scrolls an event record into the viewport.\n     * If the resource store is a tree store, this method will also expand all relevant parent nodes to locate the event.\n     *\n     * This function is not applicable for events with multiple assignments, please use #scrollResourceEventIntoView instead.\n     *\n     * @param {Scheduler.model.EventModel} eventRecord the event record to scroll into view\n     * @param {ScrollOptions} [options] How to scroll.\n     * @returns {Promise} A Promise which resolves when the scrolling is complete.\n     * @async\n     * @category Scrolling\n     */\n    async scrollEventIntoView(eventRecord, options = defaultScrollOptions) {\n        const\n            me        = this,\n            resources = eventRecord.resources || [eventRecord];\n\n        if (resources.length > 1) {\n            throw new Error('scrollEventIntoView() is not applicable for events with multiple assignments, please use scrollResourceEventIntoView() instead.');\n        }\n\n        if (!resources.length) {\n            console.warn('You have asked to scroll to an event which is not assigned to a resource');\n        }\n\n        await me.scrollResourceEventIntoView(resources[0], eventRecord, options);\n    }\n\n    /**\n     * Scrolls an assignment record into the viewport.\n     *\n     * If the resource store is a tree store, this method will also expand all relevant parent nodes\n     * to locate the event.\n     *\n     * @param {Scheduler.model.AssignmentModel} assignmentRecord A resource record an event record is assigned to\n     * @param {ScrollOptions} [options] How to scroll.\n     * @returns {Promise} A Promise which resolves when the scrolling is complete.\n     * @category Scrolling\n     */\n    scrollAssignmentIntoView(assignmentRecord, ...args) {\n        return this.scrollResourceEventIntoView(assignmentRecord.resource, assignmentRecord.event, ...args);\n    }\n\n    /**\n     * Scrolls a resource event record into the viewport.\n     *\n     * If the resource store is a tree store, this method will also expand all relevant parent nodes\n     * to locate the event.\n     *\n     * @param {Scheduler.model.ResourceModel} resourceRecord A resource record an event record is assigned to\n     * @param {Scheduler.model.EventModel} eventRecord An event record to scroll into view\n     * @param {ScrollOptions} [options] How to scroll.\n     * @returns {Promise} A Promise which resolves when the scrolling is complete.\n     * @category Scrolling\n     * @async\n     */\n    async scrollResourceEventIntoView(resourceRecord, eventRecord, options = defaultScrollOptions) {\n        const\n            me             = this,\n            eventStart     = eventRecord.startDate,\n            eventEnd       = eventRecord.endDate,\n            eventIsOutside = eventRecord.isScheduled && eventStart < me.timeAxis.startDate | ((eventEnd > me.timeAxis.endDate) << 1);\n\n        // <remove-on-release>\n        // TODO: Remove in 6.0\n        // </remove-on-release>\n        if (arguments.length > 3) {\n            options = arguments[3];\n        }\n\n        let el;\n\n        if (options.edgeOffset == null) {\n            options.edgeOffset = 20;\n        }\n\n        // Make sure event is within TimeAxis time span unless extendTimeAxis passed as false.\n        // The EventEdit feature passes false because it must not mutate the TimeAxis.\n        // Bitwise flag:\n        //  1 === start is before TimeAxis start.\n        //  2 === end is after TimeAxis end.\n        if (eventIsOutside && options.extendTimeAxis !== false) {\n            const currentTimeSpanRange = me.timeAxis.endDate - me.timeAxis.startDate;\n\n            // Event is too wide, expand the range to encompass it.\n            if (eventIsOutside === 3) {\n                me.setTimeSpan(\n                    new Date(eventStart.valueOf() - currentTimeSpanRange / 2),\n                    new Date(eventEnd.valueOf()  + currentTimeSpanRange / 2)\n                );\n            }\n            else if (me.infiniteScroll) {\n                const\n                    { visibleDateRange } = me,\n                    visibleMS = visibleDateRange.endMS - visibleDateRange.startMS,\n                    // If event starts before time axis, scroll to a date one full viewport after target date\n                    // (reverse for an event starting after time axis), to allow a scroll animation\n                    sign = eventIsOutside & 1 ? 1 : -1;\n\n                await me.setTimeSpan(\n                    new Date(eventStart.valueOf()  - currentTimeSpanRange / 2),\n                    new Date(eventStart.valueOf() + currentTimeSpanRange / 2),\n                    {\n                        visibleDate : new Date(eventEnd.valueOf() + (sign * visibleMS))\n                    }\n                );\n            }\n            // Event is partially or wholly outside but will fit.\n            // Move the TimeAxis to include it. That will maintain visual position.\n            else {\n                // Event starts before\n                if (eventIsOutside & 1) {\n                    me.setTimeSpan(\n                        new Date(eventStart),\n                        new Date(eventStart.valueOf() + currentTimeSpanRange)\n                    );\n                }\n                // Event ends after\n                else {\n                    me.setTimeSpan(\n                        new Date(eventEnd.valueOf() - currentTimeSpanRange),\n                        new Date(eventEnd)\n                    );\n                }\n            }\n        }\n\n        if (me.store.tree) {\n            // If we're a tree, ensure parents are expanded first\n            await me.expandTo?.(resourceRecord);\n        }\n\n        // Handle nested events too\n        if (eventRecord.parent && !eventRecord.parent.isRoot) {\n            await this.scrollEventIntoView(eventRecord.parent);\n        }\n\n        // Establishing element to scroll to\n        el = me.getElementFromEventRecord(eventRecord, resourceRecord);\n\n        if (el) {\n            // It's usually the event wrapper that holds focus\n            if (!DomHelper.isFocusable(el)) {\n                el = el.parentNode;\n            }\n\n            const scroller = me.timeAxisSubGrid.scrollable;\n\n            // Force horizontalscroll to be triggered directly on scroll instead of on next frame, to have events\n            // already drawn when promise resolves\n            me.timeAxisSubGrid.forceScrollUpdate = true;\n            // Scroll into view with animation and highlighting if needed.\n            await scroller.scrollIntoView(el, options);\n        }\n        // If event is wholly outside of the range and we are not allowed to extend\n        // the range, then we cannot perform the operation.\n        else if (eventIsOutside === 3 && options.extendTimeAxis === false) {\n            console.warn('You have asked to scroll to an event which is outside the current view and extending timeaxis is disabled');\n        }\n        else if (!eventRecord.isOccurrence && !me.eventStore.isAvailable(eventRecord)) {\n            console.warn('You have asked to scroll to an event which is not available');\n        }\n        else if (eventRecord.isScheduled) {\n            // Event scheduled but not rendered, scroll to calculated location\n            await me.scrollUnrenderedEventIntoView(resourceRecord, eventRecord, options);\n        }\n        else {\n            // Event not scheduled, just scroll resource row into view\n            await me.scrollResourceIntoView(resourceRecord, options);\n        }\n    }\n\n    /**\n     * Scrolls an unrendered event into view. Internal function used from #scrollResourceEventIntoView.\n     * @private\n     * @category Scrolling\n     */\n    scrollUnrenderedEventIntoView(resourceRec, eventRec, options = defaultScrollOptions) {\n        // We must only resolve when the event's element has been painted\n        // *and* the scroll has fully completed.\n        return new Promise(resolve => {\n            const\n                me               = this,\n                // Knock out highlight and focus options. They must be applied after the scroll\n                // has fully completed and we have an element. Use a default edgeOffset of 20.\n                modifiedOptions  = Object.assign({ edgeOffset : 20 }, options, unrenderedScrollOptions),\n                scroller         = me.timeAxisSubGrid.scrollable,\n                box              = me.getResourceEventBox(eventRec, resourceRec),\n                scrollerViewport = scroller.viewport;\n\n            // Event may fall on a time not included by workingTime settings\n            if (!scrollerViewport || !box) {\n                resolve();\n                return;\n            }\n\n            // In case of subPixel position, scroll the whole pixel into view\n            box.x = Math.ceil(box.x);\n            box.y = Math.ceil(box.y);\n\n            if (me.rtl) {\n                // RTL scrolls in negative direction but coordinates are still LTR\n                box.translate(-me.timeAxisViewModel.totalSize + scrollerViewport.width, 0);\n            }\n\n            // Note use of scroller.scrollLeft here. We need the natural DOM scrollLeft value\n            // not the +ve X position along the scrolling axis.\n            box.translate(scrollerViewport.x - scroller.scrollLeft, scrollerViewport.y - scroller.y);\n\n            const\n                // delta         = scroller.getDeltaTo(box, modifiedOptions)[me.isHorizontal ? 'xDelta' : 'yDelta'],\n                onEventRender = async({ eventRecord, element, targetElement }) => {\n                    if (eventRecord === eventRec) {\n                        // Vertical's renderEvent is different to horizontal's\n                        const el = element || targetElement;\n\n                        detacher();\n\n                        // Don't resolve until the scroll has fully completed.\n                        await initialScrollPromise;\n\n                        options.highlight && DomHelper.highlight(el);\n                        options.focus && el.focus();\n\n                        resolve();\n                    }\n                },\n                // On either paint or repaint of the event, resolve the scroll promise and detach the listeners.\n                detacher = me.ion({\n                    renderEvent : onEventRender\n                }),\n                initialScrollPromise = scroller.scrollIntoView(box, modifiedOptions);\n        });\n    }\n\n    /**\n     * Scrolls the specified resource into view, works for both horizontal and vertical modes.\n     * @param {Scheduler.model.ResourceModel} resourceRecord A resource record an event record is assigned to\n     * @param {ScrollOptions} [options] How to scroll.\n     * @returns {Promise} A promise which is resolved when the scrolling has finished.\n     * @category Scrolling\n     */\n    scrollResourceIntoView(resourceRecord, options = defaultScrollOptions) {\n        if (this.isVertical) {\n            return this.currentOrientation.scrollResourceIntoView(resourceRecord, options);\n        }\n        else {\n            return this.scrollRowIntoView(resourceRecord, options);\n        }\n    }\n\n    //endregion\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n};\n","import Base from '../../../Core/Base.js';\n\n/**\n * @module Scheduler/view/mixin/SchedulerRegions\n */\n\n/**\n * Functions to get regions (bounding boxes) for scheduler, events etc.\n *\n * @mixin\n */\nexport default Target => class SchedulerRegions extends (Target || Base) {\n    static get $name() {\n        return 'SchedulerRegions';\n    }\n\n    //region Orientation dependent regions\n\n    /**\n     * Gets the region represented by the schedule and optionally only for a single resource. The view will ask the\n     * scheduler for the resource availability by calling getResourceAvailability. By overriding that method you can\n     * constrain events differently for different resources.\n     * @param {Scheduler.model.ResourceModel} resourceRecord (optional) The resource record\n     * @param {Scheduler.model.EventModel} eventRecord (optional) The event record\n     * @returns {Core.helper.util.Rectangle} The region of the schedule\n     */\n    getScheduleRegion(resourceRecord, eventRecord, local = true, dateConstraints) {\n        return this.currentOrientation.getScheduleRegion(...arguments);\n    }\n\n    /**\n     * Gets the region, relative to the timeline view element, representing the passed resource and optionally just for a certain date interval.\n     * @param {Scheduler.model.ResourceModel} resourceRecord The resource record\n     * @param {Date} startDate A start date constraining the region\n     * @param {Date} endDate An end date constraining the region\n     * @returns {Core.helper.util.Rectangle} A Rectangle which encapsulates the resource time span\n     */\n    getResourceRegion(resourceRecord, startDate, endDate) {\n        return this.currentOrientation.getRowRegion(...arguments);\n    }\n\n    //endregion\n\n    //region ResourceEventBox\n\n    getAssignmentEventBox(assignmentRecord, includesOutside) {\n        return this.getResourceEventBox(assignmentRecord.event, assignmentRecord.resource, includesOutside);\n    }\n\n    /**\n     * Get the region for a specified resources specified event.\n     * @param {Scheduler.model.EventModel} eventRecord\n     * @param {Scheduler.model.ResourceModel} resourceRecord\n     * @param {Boolean} includeOutside Specify true to get boxes for events outside of the rendered zone in both\n     *   dimensions. This option is used when calculating dependency lines, and we need to include routes from events\n     *   which may be outside the rendered zone.\n     * @returns {Core.helper.util.Rectangle}\n     */\n    getResourceEventBox(eventRecord, resourceRecord, includeOutside = false, roughly = false) {\n        return this.currentOrientation.getResourceEventBox(...arguments);\n    }\n\n    //endregion\n\n    //region Item box\n\n    /**\n     * Gets box for displayed item designated by the record. If several boxes are displayed for the given item\n     * then the method returns all of them. Box coordinates are in view coordinate system.\n     *\n     * Boxes outside scheduling view timeaxis timespan and inside collapsed rows (if row defining store is a tree store)\n     * will not be returned. Boxes outside scheduling view vertical visible area (i.e. boxes above currently visible\n     * top row or below currently visible bottom row) will be calculated approximately.\n     *\n     * @param {Scheduler.model.EventModel} event\n     * @returns {Object|Object[]}\n     * @returns {Boolean} return.isPainted Whether the box was calculated for the rendered scheduled record or was\n     *    approximately calculated for the scheduled record outside of the current vertical view area.\n     * @returns {Number} return.top\n     * @returns {Number} return.bottom\n     * @returns {Number} return.start\n     * @returns {Number} return.end\n     * @returns {'before'|'after'} return.relPos if the item is not rendered then provides a view relative\n     * position one of 'before', 'after'\n     * @internal\n     */\n    getItemBox(event, includeOutside = false) {\n        return event.resources.map(resource => this.getResourceEventBox(event, resource, includeOutside));\n    }\n\n    //endregion\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n};\n","import Base from '../../../Core/Base.js';\nimport ObjectHelper from '../../../Core/helper/ObjectHelper.js';\n\n/**\n * @module Scheduler/view/mixin/SchedulerState\n */\n\nconst copyProperties = [\n    'eventLayout',\n    'mode',\n    'eventColor',\n    'eventStyle',\n    'tickSize',\n    'fillTicks'\n];\n\n/**\n * A Mixin for Scheduler that handles state. It serializes the following scheduler properties, in addition to what\n * is already stored by its superclass {@link Grid/view/mixin/GridState}:\n *\n * * eventLayout\n * * barMargin\n * * mode\n * * tickSize\n * * zoomLevel\n * * eventColor\n * * eventStyle\n *\n * See {@link Grid.view.mixin.GridState} and {@link Core.mixin.State} for more information on state.\n *\n * @mixin\n */\nexport default Target => class SchedulerState extends (Target || Base) {\n    static get $name() {\n        return 'SchedulerState';\n    }\n\n    /**\n     * Gets or sets scheduler's state. Check out {@link Scheduler.view.mixin.SchedulerState} mixin\n     * and {@link Grid.view.mixin.GridState} for more details.\n     * @member {Object} state\n     * @property {String} state.eventLayout\n     * @property {String} state.eventStyle\n     * @property {String} state.eventColor\n     * @property {Number} state.barMargin\n     * @property {Number} state.tickSize\n     * @property {Boolean} state.fillTicks\n     * @property {Number} state.zoomLevel\n     * @property {'horizontal'|'vertical'} state.mode\n     * @property {Object[]} state.columns\n     * @property {Boolean} state.readOnly\n     * @property {Number} state.rowHeight\n     * @property {Object} state.scroll\n     * @property {Number} state.scroll.scrollLeft\n     * @property {Number} state.scroll.scrollTop\n     * @property {Array} state.selectedRecords\n     * @property {String} state.selectedCell\n     * @property {String} state.style\n     * @property {Object} state.subGrids\n     * @property {Object} state.store\n     * @property {Object} state.store.sorters\n     * @property {Object} state.store.groupers\n     * @property {Object} state.store.filters\n     * @category State\n     */\n\n    /**\n     * Get scheduler's current state for serialization. State includes rowHeight, headerHeight, readOnly, selectedCell,\n     * selectedRecordId, column states and store state etc.\n     * @returns {Object} State object to be serialized\n     * @private\n     */\n    getState() {\n        return ObjectHelper.copyProperties(super.getState(), this, copyProperties);\n    }\n\n    /**\n     * Apply previously stored state.\n     * @param {Object} state\n     * @private\n     */\n    applyState(state) {\n        this.suspendRefresh();\n\n        let propsToCopy = copyProperties.slice();\n\n        if (state?.eventLayout === 'layoutFn') {\n            delete state.eventLayout;\n            propsToCopy.splice(propsToCopy.indexOf('eventLayout'), 1);\n        }\n\n        // Zoom level will set tick size, no need to update model additionally\n        if (state?.zoomLevelOptions?.width) {\n            propsToCopy = propsToCopy.filter(p => p !== 'tickSize');\n        }\n\n        ObjectHelper.copyProperties(this, state, propsToCopy);\n\n        super.applyState(state);\n\n        this.resumeRefresh(true);\n    }\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n};\n","import BrowserHelper from '../../../Core/helper/BrowserHelper.js';\nimport DomSync from '../../../Core/helper/DomSync.js';\nimport Base from '../../../Core/Base.js';\nimport Model from '../../../Core/data/Model.js';\nimport ArrayHelper from '../../../Core/helper/ArrayHelper.js';\nimport DomHelper from '../../../Core/helper/DomHelper.js';\nimport Rectangle from '../../../Core/helper/util/Rectangle.js';\nimport DateHelper from '../../../Core/helper/DateHelper.js';\nimport AttachToProjectMixin from '../../data/mixin/AttachToProjectMixin.js';\n\n/**\n * @module Scheduler/view/orientation/HorizontalRendering\n */\n\n/**\n * @typedef HorizontalRenderData\n * @property {Scheduler.model.EventModel} eventRecord\n * @property {Date} start Span start\n * @property {Date} end Span end\n * @property {String} rowId Id of the resource row\n * @property {DomConfig[]} children Child elements\n * @property {Number} startMS Wrap element start in milliseconds\n * @property {Number} endMS Span Wrap element end in milliseconds\n * @property {Number} durationMS Wrap duration in milliseconds (not just a difference between start and end)\n * @property {Number} innerStartMS Actual event start in milliseconds\n * @property {Number} innerEndMS Actual event end in milliseconds\n * @property {Number} innerDurationMS Actual event duration in milliseconds\n * @property {Boolean} startsOutsideView True if span starts before time axis start\n * @property {Boolean} endsOutsideView True if span ends after time axis end\n * @property {Number} left Absolute left coordinate of the wrap element\n * @property {Number} width\n * @property {Number} top Absolute top coordinate of the wrap element (can be changed by layout)\n * @property {Number} height\n * @property {Boolean} clippedStart True if start is clipped\n * @property {Boolean} clippedEnd True if end is clipped\n * @private\n */\n\nconst\n    releaseEventActions = {\n        releaseElement : 1, // Not used at all at the moment\n        reuseElement   : 1  // Used by some other element\n    },\n    renderEventActions  = {\n        newElement      : 1,\n        reuseOwnElement : 1,\n        reuseElement    : 1\n    },\n    MAX_WIDTH           = 9999999,\n    heightEventSorter   = ({ startDateMS : lhs }, { startDateMS : rhs }) => lhs - rhs,\n    chronoFields        = {\n        startDate : 1,\n        endDate   : 1,\n        duration  : 1\n    };\n\nfunction getStartEnd(scheduler, eventRecord, useEnd, fieldName, useEventBuffer) {\n    // Must use Model.get in order to get latest values in case we are inside a batch.\n    // EventResize changes the endDate using batching to enable a tentative change\n    // via the batchedUpdate event which is triggered when changing a field in a batch.\n    // Fall back to accessor if propagation has not populated date fields.\n    const\n        { timeAxis }     = scheduler,\n        date             = eventRecord.isBatchUpdating && !useEventBuffer ? eventRecord.get(fieldName) : eventRecord[fieldName],\n        hasBatchedChange = eventRecord.hasBatchedChange?.(fieldName),\n        // fillTicks shouldn't be used during resizing for changing date for smooth animation.\n        // correct date will be applied after resize, when `isResizing` will be falsy\n        useTickDates     = scheduler.fillTicks && (!eventRecord.meta?.isResizing || !hasBatchedChange);\n\n    if (useTickDates) {\n        let tick = timeAxis.getTickFromDate(date);\n\n        if (tick >= 0) {\n            // If date matches a tick start/end, use the earlier tick\n            if (useEnd && tick === Math.round(tick) && tick > 0) {\n                tick--;\n            }\n\n            const\n                tickIndex  = Math.floor(tick),\n                tickRecord = timeAxis.getAt(tickIndex);\n\n            return tickRecord[fieldName].getTime();\n        }\n    }\n\n    return date?.getTime();\n}\n\n/**\n * Handles event rendering in Schedulers horizontal mode. Reacts to project/store changes to keep the UI up to date.\n *\n * @internal\n */\nexport default class HorizontalRendering extends Base.mixin(AttachToProjectMixin) {\n    //region Config & Init\n\n    static $name = 'HorizontalRendering';\n\n    static get configurable() {\n        return {\n            // It's needed to adjust visible date range in Export. Set to 100 to render additional 100px\n            // worth of ticks which helps to scroll faster during export and fixes\n            // issue when scrollToDate cannot reach panel end date on exceptionally narrow view\n            scrollBuffer : 0,\n\n            /**\n             * Amount of pixels to extend the current visible range at both ends with when deciding which events to\n             * render. Only applies when using labels or for milestones\n             * @config {Number}\n             * @default\n             */\n            bufferSize : 150,\n\n            verticalBufferSize : 150\n        };\n    }\n\n    static get properties() {\n        return {\n            // Map with event DOM configs, keyed by resource id\n            resourceMap            : new Map(),\n            // Map with visible events DOM configs, keyed by row instance\n            rowMap                 : new Map(),\n            eventConfigs           : [],\n            // Flag to avoid transitioning on first refresh\n            isFirstRefresh         : true,\n            toDrawOnProjectRefresh : new Set(),\n            toDrawOnDataReady      : new Set()\n        };\n    }\n\n    construct(scheduler) {\n        const me = this;\n\n        me.client = me.scheduler = scheduler;\n\n        me.eventSorter = me.eventSorter.bind(scheduler);\n\n        // Catch scroll before renderers are called\n        scheduler.scrollable.ion({\n            scroll  : 'onEarlyScroll',\n            prio    : 1,\n            thisObj : me\n        });\n\n        scheduler.rowManager.ion({\n            name            : 'rowManager',\n            renderDone      : 'onRenderDone',\n            removeRows      : 'onRemoveRows',\n            translateRow    : 'onTranslateRow',\n            offsetRows      : 'onOffsetRows',\n            beforeRowHeight : 'onBeforeRowHeightChange',\n            thisObj         : me\n        });\n\n        super.construct({});\n    }\n\n    init() {}\n\n    updateVerticalBufferSize() {\n        const { rowManager } = this.scheduler;\n\n        if (this.scheduler.isPainted) {\n            // Refresh rows when vertical buffer size changes to trigger event repaint. Required for the export feature.\n            rowManager.renderRows(rowManager.rows);\n        }\n    }\n\n    //endregion\n\n    //region Region, dates & coordinates\n\n    get visibleDateRange() {\n        return this._visibleDateRange;\n    }\n\n    getDateFromXY(xy, roundingMethod, local, allowOutOfRange = false) {\n        const { scheduler } = this;\n\n        let coord = xy[0];\n\n        if (!local) {\n            coord = this.translateToScheduleCoordinate(coord);\n        }\n\n        coord = scheduler.getRtlX(coord);\n\n        return scheduler.timeAxisViewModel.getDateFromPosition(coord, roundingMethod, allowOutOfRange);\n    }\n\n    translateToScheduleCoordinate(x) {\n        const\n            { scheduler } = this,\n            { scrollable } = scheduler.timeAxisSubGrid;\n\n        let result = x - scheduler.timeAxisSubGridElement.getBoundingClientRect().left - globalThis.scrollX;\n\n        // Because we use getBoundingClientRect's left, we have to adjust for page scroll.\n        // The vertical counterpart uses the _bodyRectangle which was created with that adjustment.\n\n        if (scheduler.rtl) {\n            result += scrollable.maxX - Math.abs(scheduler.scrollLeft);\n        }\n        else {\n            result += scheduler.scrollLeft;\n        }\n\n        return result;\n    }\n\n    translateToPageCoordinate(x) {\n        const\n            { scheduler } = this,\n            { scrollable } = scheduler.timeAxisSubGrid;\n\n        let result = x + scheduler.timeAxisSubGridElement.getBoundingClientRect().left;\n\n        if (scheduler.rtl) {\n            result -= scrollable.maxX - Math.abs(scheduler.scrollLeft);\n        }\n        else {\n            result -= scheduler.scrollLeft;\n        }\n\n        return result;\n    }\n\n    /**\n     * Gets the region, relative to the page, represented by the schedule and optionally only for a single resource.\n     * This method will call getDateConstraints to allow for additional resource/event based constraints. By overriding\n     * that method you can constrain events differently for different resources.\n     * @param {Scheduler.model.ResourceModel} [resourceRecord] (optional) The row record\n     * @param {Scheduler.model.EventModel} [eventRecord] (optional) The event record\n     * @returns {Core.helper.util.Rectangle} The region of the schedule\n     */\n    getScheduleRegion(resourceRecord, eventRecord, local = true, dateConstraints, stretch = false) {\n        const\n            me                                   = this,\n            { scheduler }                        = me,\n            { timeAxisSubGridElement, timeAxis } = scheduler,\n            resourceMargin                       = (!stretch || resourceRecord) && scheduler.getResourceMargin(resourceRecord) || 0;\n\n        let region;\n\n        if (resourceRecord) {\n            const eventElement = eventRecord && scheduler.getElementsFromEventRecord(eventRecord, resourceRecord)[0];\n\n            region = Rectangle.from(scheduler.getRowById(resourceRecord.id).getElement('normal'), timeAxisSubGridElement);\n\n            if (eventElement) {\n                const eventRegion = Rectangle.from(eventElement, timeAxisSubGridElement);\n\n                region.y = eventRegion.y;\n                region.bottom = eventRegion.bottom;\n            }\n            else {\n                region.y = region.y + resourceMargin;\n                region.bottom = region.bottom - resourceMargin;\n            }\n        }\n        else {\n            // <remove-on-release>\n            // TODO: This is what the function that was removed here did.\n            // </remove-on-release>\n            // The coordinate space needs to be sorted out here!\n            region = Rectangle.from(timeAxisSubGridElement).moveTo(null, 0);\n            region.width = timeAxisSubGridElement.scrollWidth;\n\n            region.y = region.y + resourceMargin;\n            region.bottom = region.bottom - resourceMargin;\n        }\n\n        const\n            taStart         = timeAxis.startDate,\n            taEnd           = timeAxis.endDate;\n\n        dateConstraints = (dateConstraints?.start && dateConstraints) || scheduler.getDateConstraints?.(resourceRecord, eventRecord) || {\n            start : taStart,\n            end   : taEnd\n        };\n\n        let startX          = scheduler.getCoordinateFromDate(dateConstraints.start ? DateHelper.max(taStart, dateConstraints.start) : taStart),\n            endX            = scheduler.getCoordinateFromDate(dateConstraints.end ? DateHelper.min(taEnd, dateConstraints.end) : taEnd);\n\n        if (!local) {\n            startX = me.translateToPageCoordinate(startX);\n            endX = me.translateToPageCoordinate(endX);\n        }\n\n        region.left = Math.min(startX, endX);\n        region.right = Math.max(startX, endX);\n\n        return region;\n    }\n\n    /**\n     * Gets the Region, relative to the timeline view element, representing the passed row and optionally just for a\n     * certain date interval.\n     * @param {Core.data.Model} rowRecord The row record\n     * @param {Date} startDate A start date constraining the region\n     * @param {Date} endDate An end date constraining the region\n     * @returns {Core.helper.util.Rectangle} The Rectangle which encapsulates the row\n     */\n    getRowRegion(rowRecord, startDate, endDate) {\n        const\n            { scheduler } = this,\n            { timeAxis }  = scheduler,\n            row           = scheduler.getRowById(rowRecord.id);\n\n        // might not be rendered\n        if (!row) {\n            return null;\n        }\n\n        const\n            taStart    = timeAxis.startDate,\n            taEnd      = timeAxis.endDate,\n            start      = startDate ? DateHelper.max(taStart, startDate) : taStart,\n            end        = endDate ? DateHelper.min(taEnd, endDate) : taEnd,\n            startX     = scheduler.getCoordinateFromDate(start),\n            endX       = scheduler.getCoordinateFromDate(end, true, true),\n            y          = row.top,\n            x          = Math.min(startX, endX),\n            bottom     = y + row.offsetHeight;\n\n        return new Rectangle(x, y, Math.max(startX, endX) - x, bottom - y);\n    }\n\n    getResourceEventBox(eventRecord, resourceRecord, includeOutside, roughly = false) {\n        const resourceData = this.resourceMap.get(resourceRecord.id);\n\n        let eventLayout  = null,\n            approx       = false;\n\n        if (resourceData) {\n            eventLayout = resourceData.eventsData.find(d => d.eventRecord === eventRecord);\n        }\n\n        // Outside of view, layout now if supposed to be included\n        if (!eventLayout) {\n            eventLayout = this.getTimeSpanRenderData(\n                eventRecord,\n                resourceRecord,\n                { viewport : true, timeAxis : includeOutside }\n            );\n\n            approx = true;\n        }\n\n        if (eventLayout) {\n            // Event layout is relative to row, need to make to absolute before returning\n            const\n                rowBox      = this.scheduler.rowManager.getRecordCoords(resourceRecord, true, roughly),\n                absoluteTop = eventLayout.top + rowBox.top,\n                box         = new Rectangle(eventLayout.left, absoluteTop, eventLayout.width, eventLayout.height);\n\n            // Flag informing other parts of the code that this box is approximated\n            box.layout = !approx;\n            box.rowTop = rowBox.top;\n            box.rowBottom = rowBox.bottom;\n\n            box.resourceId = resourceRecord.id;\n\n            return box;\n        }\n\n        return null;\n    }\n\n    //endregion\n\n    //region Element <-> Record mapping\n\n    resolveRowRecord(elementOrEvent) {\n        const\n            me             = this,\n            { scheduler }  = me,\n            element        = elementOrEvent.nodeType ? elementOrEvent : elementOrEvent.target,\n            // Fix for FF on Linux having text nodes as event.target\n            el             = element.nodeType === Element.TEXT_NODE ? element.parentElement : element,\n            eventNode      = el.closest(scheduler.eventSelector);\n\n        if (eventNode) {\n            return me.resourceStore.getById(eventNode.dataset.resourceId);\n        }\n\n        return scheduler.getRecordFromElement(el);\n    }\n\n    //endregion\n\n    //region Project\n\n    attachToProject(project) {\n        super.attachToProject(project);\n\n        this.refreshAllWhenReady = true;\n\n        // Perform a full clear when replacing the project, to not leave any references to old project in DOM\n        if (!this.scheduler.isConfiguring) {\n            this.clearAll({ clearDom : true });\n        }\n\n        project?.ion({\n            name            : 'project',\n            refresh         : 'onProjectRefresh',\n            commitFinalized : 'onProjectCommitFinalized',\n            thisObj         : this\n        });\n    }\n\n    onProjectCommitFinalized() {\n        const { scheduler, toDrawOnDataReady, project } = this;\n\n        // Only update the UI immediately if we are visible\n        if (scheduler.isVisible) {\n            if (scheduler.isPainted && !scheduler.refreshSuspended) {\n                // If this is a timezone commit, we got here from a store dataset\n                // We need to do a full refresh\n                if (!toDrawOnDataReady.size && project.timeZone != null && project.ignoreRecordChanges) {\n                    project.resourceStore.forEach(r => toDrawOnDataReady.add(r.id));\n                }\n                if (toDrawOnDataReady.size) {\n                    this.clearResources(toDrawOnDataReady);\n                    this.refreshResources(toDrawOnDataReady);\n                }\n\n                toDrawOnDataReady.clear();\n            }\n        }\n        // Otherwise wait till next time we get painted (shown, or a hidden ancestor shown)\n        else {\n            scheduler.whenVisible('refreshRows');\n        }\n    }\n\n    onProjectRefresh({ isCalculated, isInitialCommit }) {\n        const\n            me                                    = this,\n            { scheduler, toDrawOnProjectRefresh } = me;\n\n        // Only update the UI immediately if we are visible\n        if (scheduler.isVisible) {\n            if (scheduler.isPainted && !scheduler.isConfiguring && !scheduler.refreshSuspended) {\n                // Either refresh all rows (on for example dataset or when delayed calculations are finished)\n                if (me.refreshAllWhenReady || (isInitialCommit && isCalculated)) {\n                    scheduler.calculateAllRowHeights(true);\n                    const { rowManager } = scheduler;\n\n                    // Rows rendered? Refresh\n                    if (rowManager.topRow) {\n                        me.clearAll();\n\n                        // Refresh only if it won't be refreshed elsewhere (SchedulerStore#onProjectRefresh())\n                        if (!scheduler.refreshAfterProjectRefresh) {\n                            // If refresh was suspended when replacing the dataset in a scrolled view we might end up with a\n                            // topRow outside of available range -> reset it. Call renderRows() to mimic what normally happens\n                            // when refresh is not suspended\n                            if (rowManager.topRow.dataIndex >= scheduler.store.count) {\n                                scheduler.renderRows(false);\n                            }\n                            else {\n                                // Don't transition first refresh / early render\n                                scheduler.refreshWithTransition(false, !me.isFirstRefresh && isCalculated && !isInitialCommit);\n                            }\n                        }\n\n                        me.isFirstRefresh = false;\n                    }\n                    // No rows yet, reinitialize (happens if initial project empty and then non empty project assigned)\n                    else {\n                        rowManager.reinitialize();\n                    }\n\n                    me.refreshAllWhenReady = false;\n                }\n                // Or only affected rows (if any)\n                else if (toDrawOnProjectRefresh.size) {\n                    me.refreshResources(toDrawOnProjectRefresh);\n                }\n\n                toDrawOnProjectRefresh.clear();\n            }\n        }\n        // Otherwise wait till next time we get painted (shown, or a hidden ancestor shown)\n        else {\n            scheduler.whenVisible('refresh', scheduler, [true]);\n        }\n    }\n\n    //endregion\n\n    //region AssignmentStore\n\n    attachToAssignmentStore(assignmentStore) {\n        this.refreshAllWhenReady = true;\n\n        super.attachToAssignmentStore(assignmentStore);\n\n        if (assignmentStore) {\n            assignmentStore.ion({\n                name             : 'assignmentStore',\n                changePreCommit  : 'onAssignmentStoreChange',\n                refreshPreCommit : 'onAssignmentStoreRefresh',\n                thisObj          : this\n            });\n        }\n    }\n\n    onAssignmentStoreChange({ source, action, records : assignmentRecords = [], replaced, changes }) {\n        const\n            me                = this,\n            { scheduler }     = me,\n            resourceIds       = new Set(assignmentRecords.flatMap(assignmentRecord => ([\n                assignmentRecord.resourceId,\n                // Also include any linked resources (?. twice since resource might not be resolved and point to id)\n                ...assignmentRecord.resource?.$links?.map(link => link.id) ?? []\n            ])));\n\n        // Ignore assignment changes caused by removing resources, the remove will redraw things anyway\n        // Also ignore case when resource id is changed. In this case row will be refreshed by the grid\n        if (me.resourceStore.isRemoving || me.resourceStore.isChangingId) {\n            return;\n        }\n\n        switch (action) {\n            // These operations will invalidate the graph, need to draw later\n            case 'dataset': {\n                // Ignore dataset when using single assignment mode\n                if (!me.eventStore.usesSingleAssignment) {\n                    if (resourceIds.size) {\n                        me.refreshResourcesWhenReady(resourceIds);\n                    }\n                    else {\n                        me.clearAll();\n                        scheduler.refreshWithTransition();\n                    }\n                }\n                return;\n            }\n\n            // <remove-on-release>\n            // TODO: Don't think updateMultiple below is covered by any test...\n            // </remove-on-release>\n\n            case 'add':\n            case 'remove':\n            case 'updateMultiple':\n                me.refreshResourcesWhenReady(resourceIds);\n                return;\n\n            case 'removeall':\n                me.refreshAllWhenReady = true;\n                return;\n\n            case 'replace':\n                // Gather resources from both the old record and the new one\n                replaced.forEach(([oldAssignment, newAssignment]) => {\n                    resourceIds.add(oldAssignment.resourceId);\n                    resourceIds.add(newAssignment.resourceId);\n                });\n                // And refresh them\n                me.refreshResourcesWhenReady(resourceIds);\n                return;\n\n            // These operations won't invalidate the graph, redraw now\n            case 'filter':\n                me.clearAll();\n                scheduler.calculateAllRowHeights(true);\n                scheduler.refreshWithTransition();\n                return;\n\n            case 'update': {\n                if ('eventId' in changes || 'resourceId' in changes || 'id' in changes) {\n                    // When reassigning, clear old resource also\n                    if ('resourceId' in changes) {\n                        resourceIds.add(changes.resourceId.oldValue);\n                    }\n\n                    // When chaining stores in single assignment mode, we might not be the project store\n                    if (source === scheduler.project.assignmentStore) {\n                        me.refreshResourcesOnDataReady(resourceIds);\n                    }\n                    // Refresh directly when we are not\n                    else {\n                        me.refreshResources(resourceIds);\n                    }\n                }\n                break;\n            }\n\n            case 'clearchanges': {\n                const { added, modified, removed } = changes;\n\n                // If modified records appear in the clearchanges action we need to refresh entire view\n                // because we have not enough information about previously assigned resource\n                if (modified.length) {\n                    scheduler.refreshWithTransition();\n                }\n                else {\n                    added.forEach(r => resourceIds.add(r.resourceId));\n                    removed.forEach(r => resourceIds.add(r.resourceId));\n\n                    me.refreshResourcesOnDataReady(resourceIds);\n                }\n            }\n        }\n    }\n\n    onAssignmentStoreRefresh({ action, records }) {\n        if (action === 'batch') {\n            this.clearAll();\n            this.scheduler.refreshWithTransition();\n        }\n    }\n\n    //endregion\n\n    //region EventStore\n\n    attachToEventStore(eventStore) {\n        this.refreshAllWhenReady = true;\n\n        super.attachToEventStore(eventStore);\n\n        if (eventStore) {\n            eventStore.ion({\n                name             : 'eventStore',\n                refreshPreCommit : 'onEventStoreRefresh',\n                thisObj          : this\n            });\n        }\n    }\n\n    onEventStoreRefresh({ action }) {\n        if (action === 'batch') {\n            const { scheduler } = this;\n            if (scheduler.isEngineReady && scheduler.isPainted) {\n                this.clearAll();\n                scheduler.refreshWithTransition();\n            }\n        }\n    }\n\n    onEventStoreChange({ action, records : eventRecords = [], record, replaced, changes, source }) {\n        const\n            me                  = this,\n            { scheduler }       = me,\n            isResourceTimeRange = source.isResourceTimeRangeStore,\n            resourceIds         = new Set();\n\n        if (!scheduler.isPainted) {\n            return;\n        }\n\n        eventRecords.forEach(eventRecord => {\n            // Update all resource rows to which this event is assigned *if* the resourceStore\n            // contains that resource (We could have filtered the resourceStore)\n            const renderedEventResources = eventRecord.$linkedResources?.filter(r => me.resourceStore.includes(r));\n\n            // When rendering a Gantt project, the project model also passes through here -> no `resources`\n            renderedEventResources?.forEach(resourceRecord => resourceIds.add(resourceRecord.id));\n        });\n\n        if (isResourceTimeRange) {\n            switch (action) {\n                // - dataset cant pass through same path as events, which relies on project being invalidated. and\n                // resource time ranges does not pass through engine\n                // - removeall also needs special path, since no resources to redraw will be collected\n                case 'removeall':\n                case 'dataset':\n                    me.clearAll();\n                    scheduler.refreshWithTransition();\n                    return;\n            }\n\n            me.refreshResources(resourceIds);\n        }\n        else {\n            switch (action) {\n                // No-ops\n                case 'batch': // Handled elsewhere, don't want it to clear again\n                case 'sort':  // Order in EventStore does not matter, so these actions are no-ops\n                case 'group':\n                case 'move':\n                    return;\n\n                case 'remove':\n                    // Remove is a no-op since assignment will also be removed\n                    return;\n\n                case 'clearchanges':\n                    me.clearAll();\n                    scheduler.refreshWithTransition();\n                    return;\n\n                case 'dataset': {\n                    me.clearAll();\n                    // This is mainly for chained stores, where data is set from main store without project being\n                    // invalidated. Nothing to wait for, refresh now\n                    if (scheduler.isEngineReady) {\n                        scheduler.refreshWithTransition();\n                    }\n                    else {\n                        me.refreshAllWhenReady = true;\n                    }\n                    return;\n                }\n\n                case 'add':\n                case 'updateMultiple':\n                    // Just refresh below\n                    break;\n\n                case 'replace':\n                    // Gather resources from both the old record and the new one\n                    replaced.forEach(([, newEvent]) => {\n                        // Old cleared by changed assignment\n                        newEvent.resources.map(resourceRecord => resourceIds.add(resourceRecord.id));\n                    });\n                    break;\n\n                case 'removeall':\n                case 'filter':\n                    // Filter might be caused by add retriggering filters, in which case we need to refresh later\n                    if (!scheduler.isEngineReady) {\n                        me.refreshAllWhenReady = true;\n                        return;\n                    }\n\n                    // Clear all when filtering for simplicity. If that turns out to give bad performance, one would need to\n                    // figure out which events was filtered out and only clear their resources.\n                    me.clearAll();\n                    scheduler.calculateAllRowHeights(true);\n                    scheduler.refreshWithTransition();\n                    return;\n\n                case 'update': {\n                    // Check if changes are graph related or not\n                    const allChrono = record.$entity\n                        ? !Object.keys(changes).some(name => !record.$entity.getField(name))\n                        : !Object.keys(changes).some(name => !chronoFields[name]);\n\n                    let dateChanges = 0;\n                    'startDate' in changes && dateChanges++;\n                    'endDate' in changes && dateChanges++;\n                    'duration' in changes && dateChanges++;\n\n                    if ('resourceId' in changes) {\n                        resourceIds.add(changes.resourceId.oldValue);\n                    }\n\n                    // If we have a set of resources to update, refresh them.\n                    // Always redraw non chrono changes (name etc) and chrono changes that can affect appearance\n                    if (\n                        resourceIds.size && (\n                            !allChrono ||\n                            // skip case when changed \"duration\" only (w/o start/end affected)\n                            dateChanges && !('duration' in changes && dateChanges === 1) ||\n                            'percentDone' in changes ||\n                            'inactive' in changes ||\n                            'constraintDate' in changes ||\n                            'constraintType' in changes ||\n                            'segments' in changes\n                        )\n                    ) {\n                        // if we are finalizing data loading let's delay the resources refresh till all the\n                        // propagation results get into stores\n                        if (me.project?.propagatingLoadChanges || me.project?.isWritingData) {\n                            me.refreshResourcesOnDataReady(resourceIds);\n                        }\n                        else {\n                            me.refreshResources(resourceIds);\n                        }\n                    }\n                    return;\n                }\n            }\n\n            me.refreshResourcesWhenReady(resourceIds);\n        }\n    }\n\n    //endregion\n\n    //region ResourceStore\n\n    attachToResourceStore(resourceStore) {\n\n        this.refreshAllWhenReady = true;\n\n        super.attachToResourceStore(resourceStore);\n\n        if (resourceStore) {\n            this.clearAll({ clearLayoutCache : true });\n\n            resourceStore.ion({\n                name            : 'resourceStore',\n                changePreCommit : 'onResourceStoreChange',\n                thisObj         : this\n            });\n        }\n    }\n\n    get resourceStore() {\n        return this.client.store;\n    }\n\n    onResourceStoreChange({ action, isExpand, records, changes }) {\n        const\n            me          = this,\n            // Update link + original when asked for link\n            resourceIds = records?.flatMap(r => r.isLinked ? [r.id, r.$originalId] : [r.id]);\n\n        if (!me.scheduler.isPainted) {\n            return;\n        }\n\n        switch (action) {\n            case 'add':\n                // #635 Events disappear when toggling other node\n                // If we are expanding project won't fire refresh event\n                if (!isExpand) {\n                    // Links won't cause calculations, refresh now\n                    if (records.every(r => r.isLinked)) {\n                        me.refreshResources(resourceIds);\n                    }\n                    // Otherwise refresh when project is ready\n                    else {\n                        me.refreshResourcesWhenReady(resourceIds);\n                    }\n                }\n                return;\n            case 'update': {\n                // Ignore changes from project commit, if they affect events they will be redrawn anyway\n                // Also ignore explicit transformation of leaf <-> parent\n                if (!me.project.isBatchingChanges && !changes.isLeaf) {\n                    // Resource changes might affect events, refresh\n                    me.refreshResources(resourceIds);\n                }\n                return;\n            }\n            case 'filter':\n                // Bail out on filter action. Map was already updated on `refresh` event triggered before this `change`\n                // one. And extra records are removed from rowMap by `onRemoveRows`\n                return;\n            case 'removeall':\n                me.clearAll({ clearLayoutCache : true });\n                return;\n\n                // We must not clear all resources when whole dataset changes\n                // https://github.com/bryntum/support/issues/3292\n            case 'dataset':\n                return;\n        }\n\n        resourceIds && me.clearResources(resourceIds);\n    }\n\n    //endregion\n\n    //region RowManager\n\n    onTranslateRow({ row }) {\n        // Newly added rows are translated prior to having an id, rule those out since they will be rendered later\n        if (row.id != null) {\n            // Event layouts are stored relative to the resource, only need to rerender the row to have its absolute\n            // position updated to match new translation\n            this.refreshEventsForResource(row, false);\n        }\n    }\n\n    // RowManager error correction, cached layouts will no longer match.\n    // Redraw to have events correctly positioned for dependency feature to draw to their elements\n    onOffsetRows() {\n        this.clearAll();\n        this.doUpdateTimeView();\n    }\n\n    // Used to pre-calculate row heights\n    calculateRowHeight(resourceRecord) {\n        const\n            { scheduler } = this,\n            rowHeight     = scheduler.getResourceHeight(resourceRecord),\n            eventLayout   = scheduler.getEventLayout(resourceRecord),\n            layoutType    = eventLayout.type;\n\n        if (\n            layoutType === 'stack' &&\n            scheduler.isEngineReady &&\n            !resourceRecord.isSpecialRow &&\n            // Generated parents when TreeGrouping do not have assigned bucket\n            resourceRecord.assigned?.size > 1\n        ) {\n            const\n                {\n                    assignmentStore,\n                    eventStore,\n                    timeAxis\n                }               = scheduler,\n                {\n                    barMargin,\n                    resourceMargin,\n                    contentHeight\n                }               = scheduler.getResourceLayoutSettings(resourceRecord),\n                // When using an AssignmentStore we will get all events for the resource even if the EventStore is\n                // filtered\n                eventFilter     = (eventStore.isFiltered || assignmentStore.isFiltered) && (eventRecord =>\n                    eventRecord.assignments.some(a => a.resource === resourceRecord.$original && assignmentStore.includes(a))),\n                events          = eventStore\n                    .getEvents({\n                        resourceRecord,\n                        includeOccurrences : scheduler.enableRecurringEvents,\n                        startDate          : timeAxis.startDate,\n                        endDate            : timeAxis.endDate,\n                        filter             : eventFilter\n                    })\n                    .sort(heightEventSorter)\n                    .map(eventRecord => {\n                        const\n                            // Must use Model.get in order to get latest values in case we are inside a batch.\n                            // EventResize changes the endDate using batching to enable a tentative change\n                            // via the batchedUpdate event which is triggered when changing a field in a batch.\n                            // Fall back to accessor if propagation has not populated date fields.\n                            startDate = eventRecord.isBatchUpdating ? eventRecord.get('startDate') : eventRecord.startDate,\n                            endDate   = eventRecord.isBatchUpdating ? eventRecord.get('endDate') : eventRecord.endDate || startDate;\n\n                        return {\n                            eventRecord,\n                            resourceRecord,\n                            startMS : startDate.getTime(),\n                            endMS   : endDate.getTime()\n                        };\n                    }),\n                layoutHandler = scheduler.getEventLayoutHandler(eventLayout),\n                nbrOfBandsRequired = layoutHandler.layoutEventsInBands(events, resourceRecord, true);\n\n            if (layoutHandler.type === 'layoutFn') {\n                return nbrOfBandsRequired;\n            }\n\n            return (nbrOfBandsRequired * contentHeight) + ((nbrOfBandsRequired - 1) * barMargin) + resourceMargin * 2;\n        }\n\n        return rowHeight;\n    }\n\n    //endregion\n\n    //region TimeAxis\n\n    doUpdateTimeView() {\n        const { scrollable } = this.scheduler.timeAxisSubGrid;\n\n        // scrollLeft is the DOM's concept which is -ve in RTL mode.\n        // scrollX i always the +ve scroll offset from the origin.\n        // Both may be needed for different calculations.\n        this.updateFromHorizontalScroll(scrollable.x);\n    }\n\n    onTimeAxisViewModelUpdate() {\n        const\n            me            = this,\n            { scheduler } = me;\n\n        me.clearAll();\n\n        // If refresh is suspended, update timeView as soon as refresh gets unsuspended\n        if (scheduler.refreshSuspended) {\n            me.detachListeners('renderingSuspend');\n\n            scheduler.ion({\n                name : 'renderingSuspend',\n                resumeRefresh({ trigger }) {\n                    // This code will try to refresh rows, but resumeRefresh event doesn't guarantee rowManager rows are\n                    // in actual state. e.g. if resources were removed during a suspended refresh rowManager won't get a\n                    // chance to update them until `refresh` event from the project. We can safely update the view only\n                    // if engine in ready (not committing), otherwise we leave refresh a liability of normal project refresh\n                    // logic. Covered by SchedulerRendering.t.js\n                    // https://github.com/bryntum/support/issues/1462\n                    if (scheduler.isEngineReady && trigger) {\n                        me.doUpdateTimeView();\n                    }\n                },\n                thisObj : me,\n                once    : true\n            });\n        }\n\n        // Call update anyway. If refresh is suspended this call will only update visible date range and will not redraw rows\n        me.doUpdateTimeView();\n    }\n\n    //endregion\n\n    //region Dependency connectors\n\n    /**\n     * Gets displaying item start side\n     *\n     * @param {Scheduler.model.EventModel} eventRecord\n     * @returns {'start'|'end'|'top'|'bottom'} 'start' / 'end' / 'top' / 'bottom'\n     */\n    getConnectorStartSide(eventRecord) {\n        return 'start';\n    }\n\n    /**\n     * Gets displaying item end side\n     *\n     * @param {Scheduler.model.EventModel} eventRecord\n     * @returns {'start'|'end'|'top'|'bottom'} 'start' / 'end' / 'top' / 'bottom'\n     */\n    getConnectorEndSide(eventRecord) {\n        return 'end';\n    }\n\n    //endregion\n\n    //region Scheduler hooks\n\n    refreshRows(reLayoutEvents) {\n        if (reLayoutEvents) {\n            this.clearAll();\n        }\n    }\n\n    // Clear events in case they use date as part of displayed info\n    onLocaleChange() {\n        this.clearAll();\n    }\n\n    // Called when viewport size changes\n    onViewportResize(width, height, oldWidth, oldHeight) {\n        // We don't draw events for all rendered rows, \"refresh\" when height changes to make sure events in previously\n        // invisible rows gets displayed\n        if (height > oldHeight) {\n            this.onRenderDone();\n        }\n    }\n\n    // Called from EventDrag\n    onDragAbort({ context, dragData }) {\n        // Aborted a drag in a scrolled scheduler, with origin now out of view. Element is no longer needed\n        if (this.resourceStore.indexOf(dragData.record.resource) < this.scheduler.topRow.dataIndex) {\n            context.element.remove();\n        }\n    }\n\n    // Called from EventSelection\n    toggleCls(assignmentRecord, cls, add = true, useWrapper = false) {\n        const\n            element      = this.client.getElementFromAssignmentRecord(assignmentRecord, useWrapper),\n            // <remove-on-release>\n            // TODO: Should be assignmentRecord.resourceId, but breaks engine. Hoping https://github.com/bryntum/bryntum-suite/pull/1252 will fix it\n            // </remove-on-release>\n            resourceData = this.resourceMap.get(assignmentRecord.isModel ? assignmentRecord.get('resourceId') : assignmentRecord.resourceId),\n            eventData    = resourceData?.eventsData.find(d => d.eventId === assignmentRecord.eventId);\n\n        // Update cached config\n        if (eventData) {\n            eventData[useWrapper ? 'wrapperCls' : 'cls'][cls] = add;\n        }\n\n        // Live update element\n        if (element) {\n            // Update element\n            element.classList[add ? 'add' : 'remove'](cls);\n            // And its DOM config\n            element.lastDomConfig.className[cls] = add;\n        }\n    }\n\n    // React to rows being removed, refreshes view without any relayouting needed since layout is cached relative to row\n    onRemoveRows({ rows }) {\n        rows.forEach(row => this.rowMap.delete(row));\n        this.onRenderDone();\n    }\n\n    // Reset renderer flag before any renderers are called\n    onEarlyScroll() {\n        this.rendererCalled = false;\n    }\n\n    // If vertical scroll did not cause a renderer to be called we still want to update since we only draw events in\n    // view, \"independent\" from their rows\n    updateFromVerticalScroll() {\n        this.fromScroll = true;\n        if (!this.rendererCalled) {\n            this.onRenderDone();\n        }\n    }\n\n    // Update header range on horizontal scroll. No need to draw any tasks, Gantt only cares about vertical scroll\n    updateFromHorizontalScroll(scrollX) {\n        const\n            me            = this,\n            {\n                scheduler,\n                // scrollBuffer is an export only thing\n                scrollBuffer\n            } = me,\n            {\n                timeAxisSubGrid,\n                timeAxis,\n                rtl\n            }             = scheduler,\n            { width }     = timeAxisSubGrid,\n            { totalSize } = scheduler.timeAxisViewModel,\n            start         = scrollX,\n            // If there are few pixels left from the right most position then just render all remaining ticks,\n            // there wouldn't be many. It makes end date reachable with more page zoom levels while not having any poor\n            // implications.\n            // 5px to make TimeViewRangePageZoom test stable in puppeteer.\n            returnEnd     = timeAxisSubGrid.scrollable.maxX !== 0 && Math.abs(timeAxisSubGrid.scrollable.maxX) <= Math.round(start) + 5,\n            startDate     = scheduler.getDateFromCoord({ coord : Math.max(0, start - scrollBuffer), ignoreRTL : true }),\n            endDate       = returnEnd ? timeAxis.endDate : (scheduler.getDateFromCoord({ coord : start + width + scrollBuffer, ignoreRTL : true }) || timeAxis.endDate);\n\n        if (startDate && !scheduler._viewPresetChanging) {\n            me._visibleDateRange = { startDate, endDate, startMS : startDate.getTime(), endMS : endDate.getTime() };\n            me.viewportCoords  = rtl\n                // RTL starts all the way to the right (and goes in opposite direction)\n                ? { left : totalSize - scrollX - width + scrollBuffer, right : totalSize - scrollX - scrollBuffer }\n                // LTR all the way to the left\n                : { left : scrollX - scrollBuffer, right : scrollX + width + scrollBuffer };\n\n            // Update timeaxis header making it display the new dates\n            const range = scheduler.timeView.range = { startDate, endDate };\n\n            scheduler.onVisibleDateRangeChange(range);\n\n            // If refresh is suspended, someone else is responsible for updating the UI later\n            if (!scheduler.refreshSuspended && scheduler.rowManager.rows.length) {\n                // Gets here too early in Safari for ResourceHistogram. ResizeObserver triggers a scroll before rows are\n                // rendered first time. Could not track down why, bailing out\n                if (scheduler.rowManager.rows[0].id === null) {\n                    return;\n                }\n\n                me.fromScroll = true;\n                scheduler.rowManager.rows.forEach(row => me.refreshEventsForResource(row, false, false));\n\n                me.onRenderDone();\n            }\n        }\n    }\n\n    // Called from SchedulerEventRendering\n    repaintEventsForResource(resourceRecord) {\n        this.refreshResources([resourceRecord.id]);\n    }\n\n    onBeforeRowHeightChange() {\n        // Row height is cached per resource, all have to be re-laid out\n        this.clearAll();\n    }\n\n    //endregion\n\n    //region Refresh resources\n\n    refreshResourcesOnDataReady(resourceIds) {\n        resourceIds.forEach(id => this.toDrawOnDataReady.add(id));\n    }\n\n    /**\n     * Clears resources directly and redraws them on next project refresh\n     * @param {Number[]|String[]} resourceIds\n     * @private\n     */\n    refreshResourcesWhenReady(resourceIds) {\n        this.clearResources(resourceIds);\n        resourceIds.forEach(id => this.toDrawOnProjectRefresh.add(id));\n    }\n\n    /**\n     * Clears and redraws resources directly. Respects schedulers refresh suspension\n     * @param {Number[]|String[]} ids Resource ids\n     * @param {Boolean} [transition] Use transition or not\n     * @private\n     */\n    refreshResources(ids, transition = true) {\n        const\n            me            = this,\n            { scheduler } = me,\n            rows          = [],\n            noRows        = [];\n\n        me.clearResources(ids);\n\n        if (!scheduler.refreshSuspended) {\n            ids.forEach(id => {\n                const row = scheduler.getRowById(id);\n                if (row) {\n                    rows.push(row);\n                }\n                else {\n                    noRows.push(row);\n                }\n            });\n\n            scheduler.runWithTransition(() => {\n                // Rendering rows populates row heights, but not all resources might have a row in view\n                scheduler.calculateRowHeights(noRows.map(id => this.resourceStore.getById(id)), true);\n\n                // Render those that do\n                scheduler.rowManager.renderRows(rows);\n            }, transition);\n        }\n    }\n\n    //endregion\n\n    //region Stack & pack\n\n    layoutEventVerticallyStack(bandIndex, eventRecord, resourceRecord) {\n        const { barMargin, resourceMargin, contentHeight } = this.scheduler.getResourceLayoutSettings(resourceRecord, eventRecord.parent);\n\n        return bandIndex === 0\n            ? resourceMargin\n            : resourceMargin + bandIndex * contentHeight + bandIndex * barMargin;\n    }\n\n    layoutEventVerticallyPack(topFraction, heightFraction, eventRecord, resourceRecord) {\n        const\n            {\n                barMargin,\n                resourceMargin,\n                contentHeight\n            }               = this.scheduler.getResourceLayoutSettings(resourceRecord, eventRecord.parent),\n            count           = 1 / heightFraction,\n            bandIndex       = topFraction * count, // \"y\" within row\n            height          = (contentHeight - ((count - 1) * barMargin)) * heightFraction,\n            top             = resourceMargin + bandIndex * height + bandIndex * barMargin;\n\n        return {\n            top, height\n        };\n    }\n\n    //endregion\n\n    //region Render\n\n    /**\n     * Used by event drag features to bring into existence event elements that are outside of the rendered block.\n     * @param {Scheduler.model.TimeSpan} eventRecord The event to render\n     * @param {Scheduler.model.ResourceModel} [resourceRecord] The event to render\n     * @private\n     */\n    addTemporaryDragElement(eventRecord, resourceRecord = eventRecord.resource) {\n        const\n            { scheduler } = this,\n            renderData    = scheduler.generateRenderData(eventRecord, resourceRecord, { timeAxis : true, viewport : true });\n\n        renderData.absoluteTop = renderData.row\n            ? (renderData.top + renderData.row.top)\n            : scheduler.getResourceEventBox(eventRecord, resourceRecord, true).top;\n\n        const\n            domConfig = this.renderEvent(renderData),\n            { dataset } = domConfig;\n\n        delete domConfig.tabIndex;\n        delete dataset.eventId;\n        delete dataset.resourceId;\n        delete dataset.assignmentId;\n        delete dataset.syncId;\n        dataset.transient = true;\n        domConfig.parent = this.scheduler.foregroundCanvas;\n\n        // So that the regular DomSyncing which may happen during scroll does not\n        // sweep up and reuse the temporary element.\n        domConfig.retainElement = true;\n\n        const result = DomHelper.createElement(domConfig);\n\n        result.innerElement = result.firstChild;\n\n        eventRecord.instanceMeta(scheduler).hasTemporaryDragElement = true;\n\n        return result;\n    }\n\n    // Earlier start dates are above later tasks\n    // If same start date, longer tasks float to top\n    // If same start + duration, sort by name\n    // Fn can be called with layout date or event records (from EventNavigation)\n    eventSorter(a, b) {\n        if (this.overlappingEventSorter) {\n            return this.overlappingEventSorter(a.eventRecord || a, b.eventRecord || b);\n        }\n\n        const\n            // <remove-on-release>\n            // TODO: Rename startMS -> startDateMS to not have to have isModel check here (and to be consistent)\n            // </remove-on-release>\n            startA    = a.isModel ? a.startDateMS : a.dataStartMS || a.startMS, // dataXX are used if configured with fillTicks\n            endA      = a.isModel ? a.endDateMS : a.dataEndMS || a.endMS,\n            startB    = b.isModel ? b.startDateMS : b.dataStartMS || b.startMS,\n            endB      = b.isModel ? b.endDateMS :  b.dataEndMS || b.endMS,\n            nameA     = a.isModel ? a.name : a.eventRecord.name,\n            nameB     = b.isModel ? b.name : b.eventRecord.name;\n\n        return startA - startB || endB - endA || (nameA < nameB ? -1 : nameA == nameB ? 0 : 1);\n    }\n\n    /**\n     * Converts a start/endDate into a MS value used when rendering the event. If scheduler is configured with\n     * `fillTicks: true` the value returned will be snapped to tick start/end.\n     * @private\n     * @param {Scheduler.model.TimeSpan} eventRecord\n     * @param {String} startDateField\n     * @param {String} endDateField\n     * @param {Boolean} useEventBuffer\n     * @param {Scheduler.model.ResourceModel} resourceRecord\n     * @returns {Object} Object of format { startMS, endMS, durationMS }\n     */\n    calculateMS(eventRecord, startDateField, endDateField, useEventBuffer, resourceRecord) {\n        const\n            me                    = this,\n            { scheduler }         = me,\n            { timeAxisViewModel } = scheduler;\n\n        let startMS    = getStartEnd(scheduler, eventRecord, false, startDateField, useEventBuffer),\n            endMS      = getStartEnd(scheduler, eventRecord, true, endDateField, useEventBuffer),\n            durationMS = endMS - startMS;\n\n        if (scheduler.milestoneLayoutMode !== 'default' && durationMS === 0) {\n            const\n                pxPerMinute = timeAxisViewModel.getSingleUnitInPixels('minute'),\n                lengthInPx  = scheduler.getMilestoneLabelWidth(eventRecord, resourceRecord),\n                duration    = lengthInPx * (1 / pxPerMinute);\n\n            durationMS = duration * 60 * 1000;\n\n            if (scheduler.milestoneTextPosition === 'always-outside') {\n                // Milestone is offset half a diamond to the left (compensated in CSS with padding) for the layout pass,\n                // to take diamond corner into account\n                const\n                    diamondSize = scheduler.getResourceLayoutSettings(resourceRecord, eventRecord.parent).contentHeight,\n                    diamondMS   = diamondSize * (1 / pxPerMinute) * 60 * 1000;\n                startMS -= diamondMS / 2;\n                endMS = startMS + durationMS;\n            }\n            else {\n                switch (scheduler.milestoneAlign) {\n                    case 'start':\n                    case 'left':\n                        endMS = startMS + durationMS;\n                        break;\n                    case 'end':\n                    case 'right':\n                        endMS = startMS;\n                        startMS = endMS - durationMS;\n                        break;\n                    default: // using center as default\n                        endMS = startMS + durationMS / 2;\n                        startMS = endMS - durationMS;\n                        break;\n                }\n            }\n        }\n\n        return {\n            startMS,\n            endMS,\n            durationMS\n        };\n    }\n\n    /**\n     * Returns event render data except actual position information.\n     * @param timeSpan\n     * @param rowRecord\n     * @returns {HorizontalRenderData}\n     * @private\n     */\n    setupRenderData(timeSpan, rowRecord) {\n        const\n            me                             = this,\n            { scheduler }                  = me,\n            {\n                timeAxis,\n                timeAxisViewModel\n            }                              = scheduler,\n            {\n                preamble,\n                postamble\n            }                              = timeSpan,\n            useEventBuffer                 = me.isProHorizontalRendering && scheduler.features.eventBuffer?.enabled &&\n                (preamble || postamble) && !timeSpan.isMilestone,\n            pxPerMinute                    = timeAxisViewModel.getSingleUnitInPixels('minute'),\n            { isBatchUpdating }            = timeSpan,\n            startDateField                 = useEventBuffer ? 'wrapStartDate' : 'startDate',\n            endDateField                   = useEventBuffer ? 'wrapEndDate' : 'endDate',\n            // Must use Model.get in order to get latest values in case we are inside a batch.\n            // EventResize changes the endDate using batching to enable a tentative change\n            // via the batchedUpdate event which is triggered when changing a field in a batch.\n            // Fall back to accessor if propagation has not populated date fields.\n            // Use endDate accessor if duration has not been propagated to create endDate\n            timespanStart                  = isBatchUpdating && !useEventBuffer ? timeSpan.get(startDateField) : timeSpan[startDateField],\n            // Allow timespans to be rendered even when they are missing an end date\n            timespanEnd                    = isBatchUpdating && !useEventBuffer ? timeSpan.get(endDateField) : timeSpan[endDateField] || timespanStart,\n            viewStartMS                    = timeAxis.startMS,\n            viewEndMS                      = timeAxis.endMS,\n            { startMS, endMS, durationMS } = me.calculateMS(timeSpan, startDateField, endDateField, useEventBuffer, rowRecord),\n            // These flags have two components because includeOutsideViewport\n            // means that we can be calculating data for events either side of\n            // the TimeAxis.\n            // The start is outside of the view if it's before *or after* the TimeAxis range.\n            // 1 set means the start is before the TimeAxis\n            // 2 set means the start is after the TimeAxis\n            // Either way, a truthy value means that the start is outside of the TimeAxis.\n            startsOutsideView              = startMS < viewStartMS | ((startMS > viewEndMS) << 1),\n            // The end is outside of the view if it's before *or after* the TimeAxis range.\n            // 1 set means the end is after the TimeAxis\n            // 2 set means the end is before the TimeAxis\n            // Either way, a truthy value means that the end is outside of the TimeAxis.\n            endsOutsideView                = endMS > viewEndMS | ((endMS <= viewStartMS) << 1),\n            durationMinutes                = durationMS / (1000 * 60),\n            width                          = endsOutsideView ? pxPerMinute * durationMinutes : null,\n            row                            = scheduler.getRowById(rowRecord);\n\n        return {\n            eventRecord : timeSpan,\n            taskRecord  : timeSpan, // Helps with using Gantt projects in Scheduler Pro\n            start       : timespanStart,\n            end         : timespanEnd,\n            rowId       : rowRecord.id,\n            children    : [],\n            startMS,\n            endMS,\n            durationMS,\n            startsOutsideView,\n            endsOutsideView,\n            width,\n            row,\n            useEventBuffer\n        };\n    }\n\n    /**\n     * Populates render data with information about width and horizontal position of the wrap.\n     * @param {HorizontalRenderData} renderData\n     * @returns {Boolean}\n     * @private\n     */\n    fillTimeSpanHorizontalPosition(renderData) {\n        const\n            { startMS, endMS, durationMS } = renderData,\n            // With delayed calculation there is no guarantee data is normalized, might be missing a crucial component\n            result = startMS != null && endMS != null && this.calculateHorizontalPosition(renderData, startMS, endMS, durationMS);\n\n        if (result) {\n            Object.assign(renderData, result);\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Fills render data with `left` and `width` properties\n     * @param {HorizontalRenderData} renderData\n     * @param {Number} startMS\n     * @param {Number} endMS\n     * @param {Number} durationMS\n     * @returns {{left: number, width: number, clippedStart: boolean, clippedEnd: boolean}|null}\n     * @private\n     */\n    calculateHorizontalPosition(renderData, startMS, endMS, durationMS) {\n        const\n            { scheduler }   = this,\n            {\n                timeAxis,\n                timeAxisViewModel\n            }               = scheduler,\n            {\n                startsOutsideView,\n                endsOutsideView,\n                eventRecord\n            }               = renderData,\n            viewStartMS     = timeAxis.startMS,\n            pxPerMinute     = timeAxisViewModel.getSingleUnitInPixels('minute'),\n            durationMinutes = durationMS / (1000 * 60),\n            width           = endsOutsideView ? pxPerMinute * durationMinutes : null;\n\n        let endX = scheduler.getCoordinateFromDate(endMS, {\n                local            : true,\n                respectExclusion : true,\n                isEnd            : true\n            }), startX, clippedStart = false, clippedEnd = false;\n\n        // If event starts outside of view, estimate where.\n        if (startsOutsideView) {\n            startX = (startMS - viewStartMS) / (1000 * 60) * pxPerMinute;\n\n            // Flip -ve startX to being to the right of the viewport end\n            if (scheduler.rtl) {\n                startX = scheduler.timeAxisSubGrid.scrollable.scrollWidth - startX;\n            }\n        }\n        // Starts in view, calculate exactly\n        else {\n            // If end date is included in time axis but start date is not (when using time axis exclusions), snap start date to next included data\n            startX = scheduler.getCoordinateFromDate(startMS, {\n                local              : true,\n                respectExclusion   : true,\n                isEnd              : false,\n                snapToNextIncluded : endX !== -1\n            });\n\n            clippedStart = startX === -1;\n        }\n\n        if (endsOutsideView) {\n            // Have to clip the events in Safari when using stickyEvents, it does not support `overflow: clip`\n            if (BrowserHelper.isSafari && scheduler.features.stickyEvents && timeAxis.endMS  || (endX === -1 && !timeAxis.continuous)) {\n                endX = scheduler.getCoordinateFromDate(timeAxis.endMS);\n            }\n            else {\n                // Parentheses needed\n                endX = startX + width * (scheduler.rtl ? -1 : 1);\n            }\n        }\n        else {\n            clippedEnd = endX === -1;\n        }\n\n        if (clippedEnd && !clippedStart) {\n            // We know where to start but not where to end, snap it (the opposite is already handled by the\n            // snapToNextIncluded flag when calculating startX above)\n            endX = scheduler.getCoordinateFromDate(endMS, {\n                local              : true,\n                respectExclusion   : true,\n                isEnd              : true,\n                snapToNextIncluded : true\n            });\n        }\n\n        // If the element is very wide there's no point in displaying it all.\n        // Indeed the element may not be displayable at extremely large widths.\n        if (width > MAX_WIDTH) {\n            // The start is before the TimeAxis start\n            if (startsOutsideView === 1) {\n                // Both ends outside - spans TimeAxis\n                if (endsOutsideView === 1) {\n                    startX = -100;\n                    endX = scheduler.timeAxisColumn.width + 100;\n                }\n                // End is in view\n                else {\n                    startX = endX - MAX_WIDTH;\n                }\n            }\n            // The end is after, but the start is in view\n            else if (endsOutsideView === 1) {\n                endX = startX + MAX_WIDTH;\n            }\n        }\n\n        if (clippedStart && clippedEnd) {\n            // Both ends excluded, but there might be some part in between that should be displayed...\n            startX = scheduler.getCoordinateFromDate(startMS, {\n                local              : true,\n                respectExclusion   : true,\n                isEnd              : false,\n                snapToNextIncluded : true,\n                max                : endMS\n            });\n\n            endX = scheduler.getCoordinateFromDate(endMS, {\n                local              : true,\n                respectExclusion   : true,\n                isEnd              : true,\n                snapToNextIncluded : true,\n                min                : startMS\n            });\n\n            if (startX === endX) {\n                // Raise flag on instance meta to avoid duplicating this logic\n                eventRecord.instanceMeta(scheduler).excluded = true;\n                // Excluded by time axis exclusion rules, render nothing\n                return null;\n            }\n        }\n\n        return {\n            left  : Math.min(startX, endX),\n            // Use min width 5 for normal events, 0 for milestones (won't have width specified at all in the\n            // end). During drag create a normal event can get 0 duration, in this case we still want it to\n            // get a min width of 5 (6px for wrapper, -1 px for event element\n            width : Math.abs(endX - startX) || (eventRecord.isMilestone && !eventRecord.meta.isDragCreating ? 0 : 6),\n            clippedStart,\n            clippedEnd\n        };\n    }\n\n    fillTimeSpanVerticalPosition(renderData, rowRecord) {\n        const\n            { scheduler }  = this,\n            { start, end } = renderData,\n            {\n                resourceMargin,\n                contentHeight\n            }              = scheduler.getResourceLayoutSettings(rowRecord);\n\n        // If filling ticks we need to also keep data's MS values, since they are used for sorting timespans\n        if (scheduler.fillTicks) {\n            renderData.dataStartMS = start.getTime();\n            renderData.dataEndMS = end.getTime();\n        }\n\n        renderData.top = Math.max(0, resourceMargin);\n\n        if (scheduler.managedEventSizing) {\n            // Timespan height should be at least 1px\n            renderData.height = contentHeight;\n        }\n    }\n\n    /**\n     * Gets timespan coordinates etc. Relative to containing row. If the timespan is outside of the zone in\n     * which timespans are rendered, that is outside of the TimeAxis, or outside of the vertical zone in which timespans\n     * are rendered, then `undefined` is returned.\n     * @private\n     * @param {Scheduler.model.TimeSpan} timeSpan TimeSpan record\n     * @param {Core.data.Model} rowRecord Row record\n     * @param {Boolean|Object} includeOutside Specify true to get boxes for timespans outside of the rendered zone in both\n     * dimensions. This option is used when calculating dependency lines, and we need to include routes from timespans\n     * which may be outside the rendered zone.\n     * @param {Boolean} includeOutside.timeAxis Pass as `true` to include timespans outside of the TimeAxis's bounds\n     * @param {Boolean} includeOutside.viewport Pass as `true` to include timespans outside of the vertical timespan viewport's bounds.\n     * @returns {{event/task: *, left: number, width: number, start: (Date), end: (Date), startMS: number, endMS: number, startsOutsideView: boolean, endsOutsideView: boolean}}\n     */\n    getTimeSpanRenderData(timeSpan, rowRecord, includeOutside = false) {\n        const\n            me                     = this,\n            { scheduler }          = me,\n            { timeAxis }           = scheduler,\n            includeOutsideTimeAxis = includeOutside === true || includeOutside.timeAxis,\n            includeOutsideViewport = includeOutside === true || includeOutside.viewport;\n\n        // If timespan is outside the TimeAxis, give up trying to calculate a layout (Unless we're including timespans\n        // outside our zone)\n        if (includeOutsideTimeAxis || timeAxis.isTimeSpanInAxis(timeSpan)) {\n            const row = scheduler.getRowById(rowRecord);\n\n            if (row || includeOutsideViewport) {\n                const data = me.setupRenderData(timeSpan, rowRecord);\n\n                if (!me.fillTimeSpanHorizontalPosition(data)) {\n                    return null;\n                }\n\n                me.fillTimeSpanVerticalPosition(data, rowRecord);\n\n                return data;\n            }\n        }\n    }\n\n    // Layout a set of events, code shared by normal event render path and nested events\n    layoutEvents(resourceRecord, allEvents, includeOutside = false, parentEventRecord, eventSorter) {\n        const\n            me                   = this,\n            { scheduler }        = me,\n            { timeAxis }         = scheduler,\n            // Generate layout data\n            eventsData           = allEvents.reduce((result, eventRecord) => {\n                // Only those in time axis (by default)\n                if ((includeOutside || timeAxis.isTimeSpanInAxis(eventRecord))) {\n                    const eventBox = scheduler.generateRenderData(eventRecord, resourceRecord, false);\n\n                    // Collect layouts of visible events\n                    if (eventBox) {\n                        result.push(eventBox);\n                    }\n                }\n\n                return result;\n            }, []);\n\n        // Ensure the events are rendered in natural order so that navigation works.\n        eventsData.sort(eventSorter ?? me.eventSorter);\n\n        let rowHeight = scheduler.getAppliedResourceHeight(resourceRecord, parentEventRecord);\n\n        const\n            // Only events and tasks should be considered during layout (not resource time ranges if any, or events\n            // being drag created when configured with lockLayout)\n            layoutEventData = eventsData.filter(({ eventRecord }) => eventRecord.isEvent && !eventRecord.meta.excludeFromLayout),\n            eventLayout     = scheduler.getEventLayout(resourceRecord, parentEventRecord),\n            layoutHandler   = scheduler.getEventLayoutHandler(eventLayout);\n\n        if (layoutHandler) {\n            const\n                {\n                    barMargin,\n                    resourceMargin,\n                    contentHeight\n                }              = scheduler.getResourceLayoutSettings(resourceRecord, parentEventRecord),\n                bandsRequired  = layoutHandler.applyLayout(layoutEventData, resourceRecord) || 1;\n\n            if (layoutHandler.type === 'layoutFn') {\n                rowHeight = bandsRequired;\n            }\n            else {\n                rowHeight = (bandsRequired * contentHeight) + ((bandsRequired - 1) * barMargin) + resourceMargin * 2;\n            }\n        }\n        // Apply z-index when event elements might overlap, to keep \"overlap order\" consistent\n        else if (layoutEventData.length > 0) {\n            for (let i = 0; i < layoutEventData.length; i++) {\n                const data = layoutEventData[i];\n                // $event-zindex scss var is 5\n                data.wrapperStyle += `;z-index:${i + 5}`;\n            }\n        }\n\n        return { rowHeight, eventsData };\n    }\n\n    // Lay out events within a resource, relative to the resource\n    layoutResourceEvents(resourceRecord, includeOutside = false) {\n        const\n            me                   = this,\n            { scheduler }        = me,\n            {\n                eventStore,\n                assignmentStore,\n                timeAxis\n            }                    = scheduler,\n            // Events for this resource\n            resourceEvents = eventStore.getEvents({\n                includeOccurrences : scheduler.enableRecurringEvents,\n                resourceRecord,\n                startDate          : timeAxis.startDate,\n                endDate            : timeAxis.endDate,\n                filter             : (assignmentStore.isFiltered || eventStore.isFiltered) && (eventRecord =>\n                    eventRecord.assignments.some(a => a.resource === resourceRecord.$original && assignmentStore.includes(a)))\n            }),\n            // Call a chainable template function on scheduler to allow features to add additional \"events\" to render\n            // Currently used by ResourceTimeRanges, CalendarHighlight & NestedEvents\n            allEvents            = scheduler.getEventsToRender(resourceRecord, resourceEvents) || [];\n\n        return me.layoutEvents(resourceRecord, allEvents, includeOutside);\n    }\n\n    // Generates a DOMConfig for an EventRecord\n    renderEvent(data, rowHeight) {\n        const\n            { scheduler }                                     = this,\n            { resourceRecord, assignmentRecord, eventRecord } = data,\n            {\n                milestoneLayoutMode    : layoutMode,\n                milestoneTextPosition  : textPosition\n            }    = scheduler,\n            // Sync using assignment id for events and event id for ResourceTimeRanges. Add eventId for occurrences to make them unique\n            syncId                                            = assignmentRecord\n                // Assignment, might be an occurrence\n                ? this.assignmentStore.getOccurrence(assignmentRecord, eventRecord).id\n                // Something else, probably a ResourceTimeRange\n                : data.eventId,\n            eventElementConfig = {\n                className : data.cls,\n                style     : data.style || '',\n                children  : data.children,\n                role      : 'presentation',\n                dataset   : {\n                    // Each feature putting contents in the event wrap should have this to simplify syncing and\n                    // element retrieval after sync\n                    taskFeature : 'event'\n                },\n                syncOptions : {\n                    syncIdField : 'taskBarFeature'\n                }\n            },\n            // Event element config, applied to existing element or used to create a new one below\n            elementConfig                        = {\n                className : data.wrapperCls,\n                tabIndex  : ('tabIndex' in data) ? data.tabIndex : -1,\n                children  : [\n                    eventElementConfig,\n                    ...data.wrapperChildren\n                ],\n                style : {\n                    top    : data.absoluteTop,\n                    left   : data.left,\n                    // ResourceTimeRanges fill row height, cannot be done earlier than this since row height is not\n                    // known initially\n                    height : data.fillSize ? rowHeight : data.height,\n                    // DomHelper appends px to dimensions when using numbers.\n                    // Do not ignore width for normal milestones, use height value. It is required to properly center\n                    // pseudo element with top/bottom labels.\n                    // Milestone part of layout that contain the label gets a width\n                    width  : (eventRecord.isMilestone && !eventRecord.meta.isDragCreating) &&\n                             ((layoutMode === 'default' && (textPosition === 'outside' || (textPosition === 'inside' && !data.width))) ||\n                                 textPosition === 'always-outside') ? data.height : data.width,\n                    style    : data.wrapperStyle,\n                    fontSize : data.height + 'px'\n                },\n                dataset : {\n                    // assignmentId is set in this function conditionally\n                    resourceId : resourceRecord.id,\n                    eventId    : data.eventId, // Not using eventRecord.id to distinguish between Event and ResourceTimeRange\n                    syncId     : resourceRecord.isLinked ? `${syncId}_${resourceRecord.id}` : syncId\n                },\n                // Will not be part of DOM, but attached to the element\n                elementData   : data,\n                // Dragging etc. flags element as retained, to not reuse/release it during that operation. Events\n                // always use assignments, but ResourceTimeRanges does not\n                retainElement : assignmentRecord?.instanceMeta(scheduler).retainElement || eventRecord.instanceMeta(scheduler).retainElement,\n                // Options for this level of sync, lower levels can have their own\n                syncOptions   : {\n                    syncIdField      : 'taskFeature',\n                    // Remove instead of release when a feature is disabled\n                    releaseThreshold : 0\n                }\n            };\n\n        // Write back the correct height for elements filling the row, to not derender them later based on wrong height\n        if (data.fillSize) {\n            data.height = rowHeight;\n        }\n\n        // Some browsers throw warnings on zIndex = ''\n        if (data.zIndex) {\n            elementConfig.zIndex = data.zIndex;\n        }\n\n        // Do not want to spam dataset with empty prop when not using assignments (ResourceTimeRanges)\n        if (assignmentRecord) {\n            elementConfig.dataset.assignmentId = assignmentRecord.id;\n        }\n\n        data.elementConfig = elementConfig;\n\n        return elementConfig;\n    }\n\n    /**\n     * Refresh events for resource record (or Row), clearing its cache and forcing DOM refresh.\n     * @param {Scheduler.model.ResourceModel} recordOrRow Record or row to refresh\n     * @param {Boolean} [force] Specify `false` to prevent clearing cache and forcing DOM refresh\n     * @internal\n     */\n    refreshEventsForResource(recordOrRow, force = true, draw = true) {\n        const\n            me     = this,\n            record = me.scheduler.store.getById(recordOrRow.isRow ? recordOrRow.id : recordOrRow),\n            row    = me.scheduler.rowManager.getRowFor(record);\n\n        if (force) {\n            me.clearResources([record]);\n        }\n\n        if (row && record) {\n            me.renderer({ row, record });\n\n            if (force && draw) {\n                me.onRenderDone();\n            }\n        }\n    }\n\n    // Returns layout for the current resource. Used by the renderer and exporter\n    getResourceLayout(resourceRecord) {\n        const me = this;\n\n        // Use cached layout if available\n        let resourceLayout = me.resourceMap.get(resourceRecord.id);\n\n        if (!resourceLayout || resourceLayout.invalid) {\n            // Previously we would bail out here if engine wasn't ready. Now we instead allow drawing in most cases,\n            // since data can be read and written during commit (previously it could not)\n            if (me.suspended) {\n                return;\n            }\n\n            resourceLayout = me.layoutResourceEvents(resourceRecord, false);\n            me.resourceMap.set(resourceRecord.id, resourceLayout);\n        }\n\n        return resourceLayout;\n    }\n\n    getEventDOMConfigForCurrentView(resourceLayout, row, left, right) {\n        const\n            me                        = this,\n            { bufferSize, scheduler } = me,\n            { labels, eventBuffer }   = scheduler.features,\n            // Left/right labels and event buffer elements require using a buffer to not derender too early\n            usesLabels                = eventBuffer?.enabled || (labels?.enabled && (labels.left || labels.right || labels.before || labels.after)),\n            { eventsData }            = resourceLayout,\n            // When scrolling, layout will be reused and any events that are still in view can reuse their DOM configs\n            reusableDOMConfigs        = me.fromScroll ? me.rowMap.get(row) : null,\n            eventDOMConfigs           = [];\n\n        let useLeft, useRight;\n\n        // Only collect configs for those actually in view\n        for (let i = 0; i < eventsData.length; i++) {\n            const layout = eventsData[i];\n\n            useLeft = left;\n            useRight = right;\n\n            // Labels/milestones requires keeping events rendered longer\n            if (usesLabels || layout.width === 0) {\n                useLeft -= bufferSize;\n                useRight += bufferSize;\n            }\n\n            if ((layout.left + layout.width) >= useLeft && layout.left <= useRight) {\n                layout.absoluteTop = layout.top + row.top;\n                // <remove-on-release>\n                // TODO: Consider using a map of maps instead of having to find() here. But it is anyhow much faster\n                //  than not reusing dom configs\n                // </remove-on-release>\n                const prevDomConfig = reusableDOMConfigs?.find(config => config.elementData.eventId === layout.eventId &&\n                    config.elementData.resourceId === layout.resourceId);\n                eventDOMConfigs.push(prevDomConfig ?? me.renderEvent(layout, resourceLayout.rowHeight));\n            }\n        }\n\n        return eventDOMConfigs;\n    }\n\n    // Called per row in \"view\", collect configs\n    renderer({ row, record : resourceRecord, size = {} }) {\n        const me = this;\n\n        // Bail out for group headers/footers\n        if (resourceRecord.isSpecialRow) {\n            // Clear any cached layout for row retooled to special row, and bail out\n            me.rowMap.delete(row);\n            return;\n        }\n\n        const\n            { left, right } = me.viewportCoords,\n            resourceLayout  = me.getResourceLayout(resourceRecord);\n\n        // Layout is suspended\n        if (!resourceLayout) {\n            return;\n        }\n\n        // Size row to fit events\n        size.height = resourceLayout.rowHeight;\n        // Avoid storing our calculated height as the rows max height, to not affect next round of calculations\n        size.transient = true;\n\n        const eventDOMConfigs = me.getEventDOMConfigForCurrentView(resourceLayout, row, left, right);\n\n        me.rowMap.set(row, eventDOMConfigs);\n\n        // Keep track if we need to draw on vertical scroll or not, to not get multiple onRenderDone() calls\n        me.rendererCalled = true;\n    }\n\n    // Called when the current row rendering \"pass\" is complete, sync collected configs to DOM\n    onRenderDone() {\n        const\n            { scheduler, rowMap, verticalBufferSize }  = this,\n            visibleEventDOMConfigs                     = [],\n            bodyTop                                    = scheduler._scrollTop ?? 0,\n            viewTop                                    = bodyTop - verticalBufferSize,\n            viewBottom                                 = bodyTop + scheduler._bodyRectangle.height + verticalBufferSize,\n            unbuffered                                 = verticalBufferSize < 0,\n            unmanagedSize                              = !scheduler.managedEventSizing;\n\n        // Event configs are collected when rows are rendered, but we do not want to waste resources on rendering\n        // events far out of view. Especially with many events per row giving large row heights, rows in the RowManagers\n        // buffer might far away -> collect events for rows within viewport + small vertical buffer\n        rowMap.forEach((eventDOMConfigs, row) => {\n            // Render events \"in view\". Export specifies a negative verticalBufferSize to disable it\n            if (unbuffered || (row.bottom > viewTop && row.top < viewBottom)) {\n                for (let i = 0; i < eventDOMConfigs.length; i++) {\n                    const\n                        config = eventDOMConfigs[i],\n                        data   = config.elementData,\n                        {\n                            absoluteTop,\n                            eventRecord\n                        } = data;\n\n                    // Conditions under which event bars are included in the DOM:\n                    //   If bufferSize is -ve, meaning render all events.\n                    //   scheduler.managedEventSizing is false.\n                    //   The event is beig drag-created or drag-resized\n                    //   The event is within the bounds of the rendered region.\n                    if (unbuffered || unmanagedSize || eventRecord.meta.isDragCreating || eventRecord.meta.isResizing || (absoluteTop + data.height > viewTop && absoluteTop < viewBottom)) {\n                        visibleEventDOMConfigs.push(config);\n                    }\n                }\n            }\n\n            // We are using cached DomConfigs. When DomSync releases an element, it also flags the config as released.\n            // Next time we pass it that very same config, it says it is released and nothing shows up.\n            //\n            // We are breaching the DomSync contract a bit with the cached approach. DomSync expects new configs on each\n            // call, so to facilitate that we clone the configs shallowly (nothing deep is affected by sync releasing).\n            // That way we can always pass it fresh unreleased configs.\n            for (let i = 0; i < eventDOMConfigs.length; i++) {\n                eventDOMConfigs[i] = { ...eventDOMConfigs[i] };\n            }\n        });\n\n        this.fromScroll = false;\n        this.visibleEventDOMConfigs = visibleEventDOMConfigs;\n\n        DomSync.sync({\n            domConfig : {\n                onlyChildren : true,\n                children     : visibleEventDOMConfigs\n            },\n            targetElement : scheduler.foregroundCanvas,\n            syncIdField   : 'syncId',\n\n            // Called by DomSync when it creates, releases or reuses elements\n            callback({ action, domConfig, lastDomConfig, targetElement, jsx }) {\n                const\n                    { reactComponent } = scheduler,\n                    // Some actions are considered first a release and then a render (reusing another element).\n                    // This gives clients code a chance to clean up before reusing an element\n                    isRelease          = releaseEventActions[action],\n                    isRender           = renderEventActions[action];\n\n                !isRelease && scheduler.processEventContent?.({\n                    jsx,\n                    action,\n                    domConfig,\n                    targetElement,\n                    isRelease,\n                    reactComponent\n                });\n\n                if (action === 'none' || !domConfig?.elementData?.isWrap) {\n                    return;\n                }\n\n                // Trigger release for events (it might be a proxy element, skip those)\n                if (isRelease && lastDomConfig?.elementData) {\n                    const\n                        { eventRecord, resourceRecord, assignmentRecord } = lastDomConfig.elementData,\n                        event = {\n                            renderData : lastDomConfig.elementData,\n                            element    : targetElement,\n                            eventRecord,\n                            resourceRecord,\n                            assignmentRecord\n                        };\n\n                    // Process event necessary in the case of release\n                    scheduler.processEventContent?.({\n                        isRelease,\n                        targetElement,\n                        reactComponent,\n                        assignmentRecord\n                    });\n\n                    // Some browsers do not blur on set to display:none, so releasing the active element\n                    // must *explicitly* move focus outwards to the view.\n                    if (targetElement === DomHelper.getActiveElement(targetElement)) {\n                        scheduler.focusElement.focus();\n                    }\n\n                    // This event is documented on Scheduler\n                    scheduler.trigger('releaseEvent', event);\n                }\n\n                if (isRender) {\n                    const\n                        { eventRecord, resourceRecord, assignmentRecord } = domConfig.elementData,\n                        event = {\n                            renderData       : domConfig.elementData,\n                            element          : targetElement,\n                            isReusingElement : action === 'reuseElement',\n                            isRepaint        : action === 'reuseOwnElement',\n                            eventRecord,\n                            resourceRecord,\n                            assignmentRecord\n                        };\n\n                    // This event is documented on Scheduler\n                    scheduler.trigger('renderEvent', event);\n                }\n            }\n        });\n    }\n\n    //endregion\n\n    //region Cache\n\n    // Clears cached resource layout\n    clearResources(recordsOrIds) {\n        recordsOrIds = ArrayHelper.asArray(recordsOrIds);\n\n        const resourceIds = recordsOrIds.map(Model.asId);\n\n        //<debug>\n        if (globalThis.DEBUG) {\n            console.log('%Clearing resources ' + Array.from(resourceIds).join(','), 'color: #770000');\n        }\n        //</debug>\n\n        resourceIds.forEach(resourceId => {\n            // Invalidate resourceLayout, keeping it around in case we need it before next refresh\n            const cached = this.resourceMap.get(resourceId);\n            if (cached) {\n                cached.invalid = true;\n            }\n\n            const row = this.scheduler.getRowById(resourceId);\n            row && this.rowMap.delete(row);\n        });\n    }\n\n    clearAll({ clearDom = false, clearLayoutCache = false } = {}) {\n        const\n            me                            = this,\n            { layouts, foregroundCanvas } = me.scheduler;\n\n        //<debug>\n        if (globalThis.DEBUG) {\n            console.log('%Clearing all', 'color: #770000');\n        }\n        //</debug>\n\n        if (clearLayoutCache && layouts) {\n            for (const layout in layouts) {\n                layouts[layout].clearCache();\n            }\n        }\n\n        // it seems `foregroundCanvas` can be missing at this point\n        // for example if scheduler instance is created w/o of `appendTo` config\n        if (foregroundCanvas && clearDom) {\n            // Start from scratch when replacing the project, to not retain anything in maps or released elements\n            foregroundCanvas.syncIdMap = foregroundCanvas.lastDomConfig = null;\n\n            for (const child of foregroundCanvas.children) {\n                child.lastDomConfig = child.elementData = null;\n            }\n        }\n\n        me.resourceMap.clear();\n        me.rowMap.clear();\n    }\n\n    //endregion\n}\n","import PackMixin from './PackMixin.js';\n\n/**\n * @module Scheduler/eventlayout/VerticalLayout\n */\n\n/**\n * Assists with event layout in vertical mode, handles `eventLayout: none|pack|mixed`\n * @private\n * @mixes Scheduler/eventlayout/PackMixin\n */\nexport default class VerticalLayout extends PackMixin() {\n\n    static get defaultConfig() {\n        return {\n            coordProp : 'leftFactor',\n            sizeProp  : 'widthFactor'\n        };\n    }\n\n    // Try to pack the events to consume as little space as possible\n    applyLayout(events, columnWidth, resourceMargin, barMargin, columnIndex, eventLayout) {\n        const\n            me         = this,\n            layoutType = eventLayout.type;\n\n        return me.packEventsInBands(events, (tplData, clusterIndex, slot, slotSize) => {\n            // Stretch events to fill available width\n            if (layoutType === 'none') {\n                tplData.width = columnWidth - resourceMargin * 2;\n                tplData.left += resourceMargin;\n            }\n            else {\n                // Fractions of resource column\n                tplData.widthFactor = slotSize;\n\n                const\n                    leftFactor      = tplData.leftFactor = slot.start + (clusterIndex * slotSize),\n                    // Number of \"columns\" in the current slot\n                    packColumnCount = Math.round(1 / slotSize),\n                    // Index among those columns for current event\n                    packColumnIndex = leftFactor / slotSize,\n                    // Width with all bar margins subtracted\n                    availableWidth  = columnWidth - resourceMargin * 2 - barMargin * (packColumnCount - 1);\n\n                // Allowing two events to overlap? Slightly offset the second\n                if (layoutType === 'mixed' && packColumnCount === 2) {\n                    tplData.left += leftFactor * columnWidth / 5 + barMargin;\n                    tplData.width = columnWidth - leftFactor * columnWidth / 5 - barMargin * 2;\n                    tplData.zIndex = 5 + packColumnIndex;\n                }\n                // Pack by default\n                else {\n                    // Fractional width\n                    tplData.width = slotSize * availableWidth;\n                    // Translate to absolute position\n                    tplData.left += leftFactor * availableWidth + resourceMargin + barMargin * packColumnIndex;\n                }\n            }\n            tplData.cls['b-sch-event-narrow'] = tplData.width < me.scheduler.narrowEventWidth;\n        });\n    }\n}\n","import Base from '../../../Core/Base.js';\nimport Delayable from '../../../Core/mixin/Delayable.js';\nimport DomHelper from '../../../Core/helper/DomHelper.js';\nimport DomSync from '../../../Core/helper/DomSync.js';\nimport ObjectHelper from '../../../Core/helper/ObjectHelper.js';\nimport VerticalLayout from '../../eventlayout/VerticalLayout.js';\nimport Rectangle from '../../../Core/helper/util/Rectangle.js';\nimport DateHelper from '../../../Core/helper/DateHelper.js';\nimport AttachToProjectMixin from '../../data/mixin/AttachToProjectMixin.js';\n\n/**\n * @module Scheduler/view/orientation/VerticalRendering\n */\n\nconst\n    releaseEventActions = {\n        releaseElement : 1, // Not used at all at the moment\n        reuseElement   : 1  // Used by some other element\n    },\n    renderEventActions  = {\n        newElement      : 1,\n        reuseOwnElement : 1,\n        reuseElement    : 1\n    },\n    chronoFields        = {\n        startDate : 1,\n        endDate   : 1,\n        duration  : 1\n    },\n    emptyObject        = Object.freeze({});\n\n/**\n * Handles event rendering in Schedulers vertical mode. Reacts to project/store changes to keep the UI up to date.\n *\n * @internal\n */\nexport default class VerticalRendering extends Base.mixin(Delayable, AttachToProjectMixin) {\n\n    //region Config & Init\n\n    static get properties() {\n        return {\n            eventMap               : new Map(),\n            resourceMap            : new Map(),\n            releasedElements       : {},\n            toDrawOnProjectRefresh : new Set(),\n            resourceBufferSize     : 1\n        };\n    }\n\n    construct(scheduler) {\n        this.client         = this.scheduler = scheduler;\n        this.verticalLayout = new VerticalLayout({ scheduler });\n\n        super.construct({});\n    }\n\n    init() {\n        const\n            me                             = this,\n            { scheduler, resourceColumns } = me;\n\n        // Resource header/columns\n        resourceColumns.resourceStore = me.resourceStore;\n\n        resourceColumns.ion({\n            name              : 'resourceColumns',\n            columnWidthChange : 'onResourceColumnWidthChange',\n            thisObj           : me\n        });\n\n        me.initialized = true;\n\n        if (scheduler.isPainted) {\n            me.renderer();\n        }\n\n        resourceColumns.availableWidth = scheduler.timeAxisSubGridElement.offsetWidth;\n    }\n\n    //endregion\n\n    //region Elements <-> Records\n\n    resolveRowRecord(elementOrEvent, xy) {\n        const\n            me            = this,\n            { scheduler } = me,\n            event         = elementOrEvent.nodeType ? null : elementOrEvent,\n            element       = event ? event.target : elementOrEvent,\n            coords        = event ? [event.borderOffsetX, event.borderOffsetY] : xy,\n            // Fix for FF on Linux having text nodes as event.target\n            el            = element.nodeType === Element.TEXT_NODE ? element.parentElement : element,\n            eventElement  = el.closest(scheduler.eventSelector);\n\n        if (eventElement) {\n            return scheduler.resourceStore.getById(eventElement.dataset.resourceId);\n        }\n\n        // Need to be inside schedule at least\n        if (!element.closest('.b-sch-timeaxis-cell')) {\n            return null;\n        }\n\n        if (!coords) {\n            throw new Error(`Vertical mode needs coordinates to resolve this element. Can also be called with a browser\n                event instead of element to extract element and coordinates from`);\n        }\n\n        if (scheduler.variableColumnWidths || scheduler.resourceStore.isGrouped) {\n            let totalWidth = 0;\n\n            for (const col of me.resourceStore) {\n                if (!col.isSpecialRow) {\n                    totalWidth += col.columnWidth || me.resourceColumns.columnWidth;\n                }\n                if (totalWidth >= coords[0]) {\n                    return col;\n                }\n            }\n\n            return null;\n        }\n\n        const index = Math.floor(coords[0] / me.resourceColumns.columnWidth);\n\n        return me.allResourceRecords[index];\n    }\n\n    toggleCls(assignmentRecord, cls, add = true, useWrapper = false) {\n        const eventData = this.eventMap.get(assignmentRecord.eventId)?.[assignmentRecord.resourceId];\n\n        if (eventData) {\n            eventData.renderData[useWrapper ? 'wrapperCls' : 'cls'][cls] = add;\n            // Element from the map cannot be trusted, might be reused in which case map is not updated to reflect that.\n            // To be safe, retrieve using `getElementFromAssignmentRecord`\n            const element = this.client.getElementFromAssignmentRecord(assignmentRecord, useWrapper);\n\n            if (element) {\n                element.classList[add ? 'add' : 'remove'](cls);\n            }\n        }\n    }\n\n    //endregion\n\n    //region Coordinate <-> Date\n\n    getDateFromXY(xy, roundingMethod, local, allowOutOfRange = false) {\n        let coord = xy[1];\n\n        if (!local) {\n            coord = this.translateToScheduleCoordinate(coord);\n        }\n\n        return this.scheduler.timeAxisViewModel.getDateFromPosition(coord, roundingMethod, allowOutOfRange);\n    }\n\n    translateToScheduleCoordinate(y) {\n        return y - this.scheduler.timeAxisSubGridElement.getBoundingClientRect().top - globalThis.scrollY;\n    }\n\n    translateToPageCoordinate(y) {\n        return y + this.scheduler.timeAxisSubGridElement.getBoundingClientRect().top + globalThis.scrollY;\n    }\n\n    //endregion\n\n    //region Regions\n\n    getResourceEventBox(event, resource) {\n        const\n            eventId    = event.id,\n            resourceId = resource.id;\n\n        let { renderData } = this.eventMap.get(eventId)?.[resourceId] || emptyObject;\n\n        if (!renderData) {\n            // Never been in view, lay it out\n            this.layoutResourceEvents(this.scheduler.resourceStore.getById(resourceId));\n\n            // Have another go at getting the layout data\n            renderData = this.eventMap.get(eventId)?.[resourceId]?.renderData;\n        }\n\n        return renderData\n            ? new Rectangle(renderData.left, renderData.top, renderData.width, renderData.bottom - renderData.top)\n            : null;\n    }\n\n    getScheduleRegion(resourceRecord, eventRecord, local) {\n        const\n            me            = this,\n            { scheduler } = me,\n            // Only interested in width / height (in \"local\" coordinates)\n            region        = Rectangle.from(scheduler.timeAxisSubGridElement, scheduler.timeAxisSubGridElement);\n\n        if (resourceRecord) {\n            // <remove-on-release>\n            // TODO: How to account for eventRecord here?\n            // </remove-on-release>\n            region.left  = me.allResourceRecords.indexOf(resourceRecord) * scheduler.resourceColumnWidth;\n            region.right = region.left + scheduler.resourceColumnWidth;\n        }\n\n        const\n            start           = scheduler.timeAxis.startDate,\n            end             = scheduler.timeAxis.endDate,\n            dateConstraints = scheduler.getDateConstraints?.(resourceRecord, eventRecord) || {\n                start,\n                end\n            },\n            startY          = scheduler.getCoordinateFromDate(DateHelper.max(start, dateConstraints.start)),\n            endY            = scheduler.getCoordinateFromDate(DateHelper.min(end, dateConstraints.end));\n\n        if (!local) {\n            region.top    = me.translateToPageCoordinate(startY);\n            region.bottom = me.translateToPageCoordinate(endY);\n        }\n        else {\n            region.top    = startY;\n            region.bottom = endY;\n        }\n\n        return region;\n    }\n\n    getRowRegion(resourceRecord, startDate, endDate) {\n        const\n            me            = this,\n            { scheduler } = me,\n            x             = me.allResourceRecords.indexOf(resourceRecord) * scheduler.resourceColumnWidth,\n            taStart       = scheduler.timeAxis.startDate,\n            taEnd         = scheduler.timeAxis.endDate,\n            start         = startDate ? DateHelper.max(taStart, startDate) : taStart,\n            end           = endDate ? DateHelper.min(taEnd, endDate) : taEnd,\n            startY        = scheduler.getCoordinateFromDate(start),\n            endY          = scheduler.getCoordinateFromDate(end, true, true),\n            y             = Math.min(startY, endY),\n            height        = Math.abs(startY - endY);\n\n        return new Rectangle(x, y, scheduler.resourceColumnWidth, height);\n    }\n\n    get visibleDateRange() {\n        const\n            scheduler = this.scheduler,\n            scrollPos = scheduler.scrollable.y,\n            height    = scheduler.scrollable.clientHeight,\n            startDate = scheduler.getDateFromCoordinate(scrollPos) || scheduler.timeAxis.startDate,\n            endDate   = scheduler.getDateFromCoordinate(scrollPos + height) || scheduler.timeAxis.endDate;\n\n        return {\n            startDate,\n            endDate,\n            startMS : startDate.getTime(),\n            endMS   : endDate.getTime()\n        };\n    }\n\n    //endregion\n\n    //region Events\n\n    // Column width changed, rerender fully\n    onResourceColumnWidthChange({ width, oldWidth }) {\n        const\n            me            = this,\n            { scheduler } = me;\n\n        // Fix width of column & header\n        me.resourceColumns.width = scheduler.timeAxisColumn.width = me.allResourceRecords.length * width;\n        me.clearAll();\n\n        // Only transition large changes, otherwise it is janky when dragging slider in demo\n        me.refresh(Math.abs(width - oldWidth) > 30);\n\n        // Not detected by resizeobserver? Need to call this for virtual scrolling to react to update\n        //        scheduler.callEachSubGrid('refreshFakeScroll');\n        //        scheduler.refreshVirtualScrollbars();\n    }\n\n    //endregion\n\n    //region Project\n\n    attachToProject(project) {\n        super.attachToProject(project);\n\n        if (project) {\n            project.ion({\n                name    : 'project',\n                refresh : 'onProjectRefresh',\n                thisObj : this\n            });\n        }\n    }\n\n    onProjectRefresh() {\n        const\n            me                                    = this,\n            { scheduler, toDrawOnProjectRefresh } = me;\n\n        // Only update the UI immediately if we are visible\n        if (scheduler.isVisible) {\n            if (scheduler.rendered && !scheduler.refreshSuspended) {\n                // Either refresh all rows (on for example dataset)\n                if (me.refreshAllWhenReady) {\n                    me.clearAll();\n                    //scheduler.refreshWithTransition();\n                    me.refresh();\n                    me.refreshAllWhenReady = false;\n                }\n                // Or only affected rows (if any)\n                else if (toDrawOnProjectRefresh.size) {\n                    me.refresh();\n                }\n\n                toDrawOnProjectRefresh.clear();\n            }\n        }\n        // Otherwise wait till next time we get painted (shown, or a hidden ancestor shown)\n        else {\n            scheduler.whenVisible('refresh', scheduler, [true]);\n        }\n    }\n\n    //endregion\n\n    //region EventStore\n\n    attachToEventStore(eventStore) {\n        super.attachToEventStore(eventStore);\n\n        this.refreshAllWhenReady = true;\n\n        if (eventStore) {\n            eventStore.ion({\n                name             : 'eventStore',\n                refreshPreCommit : 'onEventStoreRefresh',\n                thisObj          : this\n            });\n        }\n    }\n\n    onEventStoreRefresh({ action }) {\n        if (action === 'batch') {\n            this.refreshAllWhenReady = true;\n        }\n    }\n\n    onEventStoreChange({ action, records : eventRecords = [], record, replaced, changes, isAssign }) {\n        const\n            me          = this,\n            resourceIds = new Set();\n\n        eventRecords.forEach(eventRecord => {\n            // Update all resource rows to which this event is assigned *if* the resourceStore\n            // contains that resource (We could have filtered the resourceStore)\n            const renderedEventResources = eventRecord.$linkedResources?.filter(r => me.resourceStore.includes(r));\n\n            renderedEventResources?.forEach(resourceRecord => resourceIds.add(resourceRecord.id));\n        });\n\n        switch (action) {\n            // No-ops\n            case 'sort':  // Order in EventStore does not matter, so these actions are no-ops\n            case 'group':\n            case 'move':\n            case 'remove': // Remove is a no-op since assignment will also be removed\n                return;\n\n            case 'dataset':\n                me.refreshAllResourcesWhenReady();\n                return;\n\n            case 'add':\n            case 'updateMultiple':\n                // Just refresh below\n                break;\n\n            case 'replace':\n                // Gather resources from both the old record and the new one\n                replaced.forEach(([, newEvent]) => {\n                    // Old cleared by changed assignment\n                    newEvent.resources.map(resourceRecord => resourceIds.add(resourceRecord.id));\n                });\n                // And clear them\n                me.clearResources(resourceIds);\n                break;\n\n            case 'removeall':\n            case 'filter':\n                // Clear all when filtering for simplicity. If that turns out to give bad performance, one would need to\n                // figure out which events was filtered out and only clear their resources.\n                me.clearAll();\n                me.refresh();\n                return;\n\n            case 'update': {\n                // Check if changes are graph related or not\n                const allChrono = record.$entity\n                    ? !Object.keys(changes).some(name => !record.$entity.getField(name))\n                    : !Object.keys(changes).some(name => !chronoFields[name]);\n\n                // If any one of these in changes, it will affect visuals\n                let changeCount = 0;\n                if ('startDate' in changes) changeCount++;\n                if ('endDate' in changes) changeCount++;\n                if ('duration' in changes) changeCount++;\n\n                // Always redraw non chrono changes (name etc)\n                if (!allChrono || changeCount || 'percentDone' in changes || 'inactive' in changes || 'segments' in changes) {\n                    if (me.shouldWaitForInitializeAndEngineReady) {\n                        me.refreshResourcesWhenReady(resourceIds);\n                    }\n                    else {\n                        me.clearResources(resourceIds);\n                        me.refresh();\n                    }\n                }\n                return;\n            }\n        }\n\n        me.refreshResourcesWhenReady(resourceIds);\n    }\n\n    //endregion\n\n    //region ResourceStore\n\n    attachToResourceStore(resourceStore) {\n        const me = this;\n\n        super.attachToResourceStore(resourceStore);\n\n        me.refreshAllWhenReady = true;\n\n        if (me.resourceColumns) {\n            me.resourceColumns.resourceStore = resourceStore;\n        }\n\n        resourceStore.ion({\n            name             : 'resourceStore',\n            changePreCommit  : 'onResourceStoreChange',\n            refreshPreCommit : 'onResourceStoreRefresh',\n            // In vertical, resource store is not the row store but should toggle the load mask\n            load             : () => me.scheduler.unmaskBody(),\n            thisObj          : me,\n            prio             : 1 // Call before others to clear cache before redraw\n        });\n\n        if (me.initialized && me.scheduler.isPainted) {\n            // Invalidate resource range and events\n            me.firstResource = me.lastResource = null;\n            me.clearAll();\n\n            me.renderer();\n        }\n    }\n\n    onResourceStoreChange({ source : resourceStore, action, records = [], record, replaced, changes }) {\n        const\n            me              = this,\n            // records for add, record for update, replaced [[old, new]] for replace\n            resourceRecords = replaced ? replaced.map(r => r[1]) : records,\n            resourceIds     = new Set(resourceRecords.map(resourceRecord => resourceRecord.id));\n\n        // Invalidate resource range\n        me.firstResource                  = me.lastResource = null;\n        resourceStore._allResourceRecords = null;\n\n        const { allResourceRecords } = resourceStore;\n\n        // Operation that did not invalidate engine, refresh directly\n        if (me.scheduler.isEngineReady) {\n            switch (action) {\n                case 'update':\n                    if (changes?.id) {\n                        me.clearResources([changes.id.oldValue, changes.id.value]);\n                    }\n                    else {\n                        me.clearResources([record.id]);\n                    }\n                    // Only the invalidation above needed\n                    break;\n\n                case 'filter':\n                    // All filtered out resources needs clearing and so does those not filtered out since they might have\n                    // moved horizontally when others hide\n                    me.clearAll();\n                    break;\n            }\n\n            // Changing a column width means columns after that will have to be recalculated\n            // so clear all cached layouts.\n            if (changes && ('columnWidth' in changes)) {\n                me.clearAll();\n            }\n            me.refresh(true);\n        }\n        // Operation that did invalidate project, update on project refresh\n        else {\n            switch (action) {\n                case 'dataset':\n                case 'remove': // Cannot tell from which index it was removed\n                case 'removeall':\n                    me.refreshAllResourcesWhenReady();\n                    return;\n\n                case 'replace':\n                case 'add': {\n                    if (!resourceStore.isGrouped) {\n                        // Make sure all existing events following added resources are offset correctly\n                        const\n                            firstIndex = resourceRecords.reduce(\n                                (index, record) => Math.min(index, allResourceRecords.indexOf(record)),\n                                allResourceRecords.length\n                            );\n\n                        for (let i = firstIndex; i < allResourceRecords.length; i++) {\n                            resourceIds.add(allResourceRecords[i].id);\n                        }\n                    }\n                }\n            }\n\n            me.refreshResourcesWhenReady(resourceIds);\n        }\n    }\n\n    onResourceStoreRefresh({ action }) {\n        const me = this;\n\n        if (action === 'sort' || action === 'group') {\n            // Invalidate resource range & cache\n            me.firstResource = me.lastResource = me.resourceStore._allResourceRecords = null;\n            me.clearAll();\n            me.refresh();\n        }\n    }\n\n    //endregion\n\n    //region AssignmentStore\n\n    attachToAssignmentStore(assignmentStore) {\n        super.attachToAssignmentStore(assignmentStore);\n\n        this.refreshAllWhenReady = true;\n\n        if (assignmentStore) {\n            assignmentStore.ion({\n                name             : 'assignmentStore',\n                changePreCommit  : 'onAssignmentStoreChange',\n                refreshPreCommit : 'onAssignmentStoreRefresh',\n                thisObj          : this\n            });\n        }\n    }\n\n    onAssignmentStoreChange({ action, records : assignmentRecords = [], replaced, changes }) {\n        const\n            me          = this,\n            resourceIds = new Set(assignmentRecords.map(assignmentRecord => assignmentRecord.resourceId));\n\n        // Operation that did not invalidate engine, refresh directly\n        if (me.scheduler.isEngineReady) {\n            switch (action) {\n                case 'remove':\n                    me.clearResources(resourceIds);\n                    break;\n\n                case 'filter':\n                    me.clearAll();\n                    break;\n\n                case 'update': {\n                    // When reassigning, clear old resource also\n                    if ('resourceId' in changes) {\n                        resourceIds.add(changes.resourceId.oldValue);\n                    }\n\n                    // Ignore engine resolving resourceId -> resource, eventId -> event\n                    if (!Object.keys(changes).filter(field => field !== 'resource' && field !== 'event').length) {\n                        return;\n                    }\n\n                    me.clearResources(resourceIds);\n                }\n            }\n\n            me.refresh(true);\n        }\n        // Operation that did invalidate project, update on project refresh\n        else {\n            if (changes && 'resourceId' in changes) {\n                resourceIds.add(changes.resourceId.oldValue);\n            }\n\n            switch (action) {\n                case 'removeall':\n                    me.refreshAllResourcesWhenReady();\n                    return;\n\n                case 'replace':\n                    // Gather resources from both the old record and the new one\n                    replaced.forEach(([oldAssignment, newAssignment]) => {\n                        resourceIds.add(oldAssignment.resourceId);\n                        resourceIds.add(newAssignment.resourceId);\n                    });\n            }\n\n            me.refreshResourcesWhenReady(resourceIds);\n        }\n    }\n\n    onAssignmentStoreRefresh({ action, records }) {\n        if (action === 'batch') {\n            this.clearAll();\n            this.refreshAllResourcesWhenReady();\n        }\n    }\n\n    //endregion\n\n    //region View hooks\n\n    refreshRows(reLayoutEvents) {\n        if (reLayoutEvents) {\n            this.clearAll();\n            this.scheduler.refreshFromRerender = false;\n        }\n    }\n\n    // Called from SchedulerEventRendering\n    repaintEventsForResource(resourceRecord) {\n        this.renderResource(resourceRecord);\n    }\n\n    updateFromHorizontalScroll(scrollX) {\n        if (scrollX !== this.prevScrollX) {\n            this.renderer();\n            this.prevScrollX = scrollX;\n        }\n    }\n\n    updateFromVerticalScroll() {\n        this.renderer();\n    }\n\n    scrollResourceIntoView(resourceRecord, options) {\n        const\n            { scheduler } = this,\n            x             = this.allResourceRecords.indexOf(resourceRecord) * scheduler.resourceColumnWidth;\n\n        return scheduler.scrollHorizontallyTo(x, options);\n    }\n\n    get allResourceRecords() {\n        return this.scheduler.resourceStore.allResourceRecords;\n    }\n\n    // Called when viewport size changes\n    onViewportResize(width) {\n        this.resourceColumns.availableWidth = width;\n        this.renderer();\n    }\n\n    get resourceColumns() {\n        return this.scheduler.timeAxisColumn?.resourceColumns;\n    }\n\n    // Clear events in case they use date as part of displayed info\n    onLocaleChange() {\n        this.clearAll();\n    }\n\n    // No need to do anything special\n    onDragAbort() {}\n\n    onBeforeRowHeightChange() {}\n\n    onTimeAxisViewModelUpdate() {}\n\n    updateElementId() {}\n\n    releaseTimeSpanDiv() {}\n\n    //endregion\n\n    //region Dependency connectors\n\n    /**\n     * Gets displaying item start side\n     *\n     * @param {Scheduler.model.EventModel} eventRecord\n     * @returns {'top'|'left'|'bottom'|'right'} 'left' / 'right' / 'top' / 'bottom'\n     */\n    getConnectorStartSide(eventRecord) {\n        return 'top';\n    }\n\n    /**\n     * Gets displaying item end side\n     *\n     * @param {Scheduler.model.EventModel} eventRecord\n     * @returns {'top'|'left'|'bottom'|'right'} 'left' / 'right' / 'top' / 'bottom'\n     */\n    getConnectorEndSide(eventRecord) {\n        return 'bottom';\n    }\n\n    //endregion\n\n    //region Refresh resources\n\n    /**\n     * Clears resources directly and redraws them on next project refresh\n     * @param {Number[]|String[]} resourceIds\n     * @private\n     */\n    refreshResourcesWhenReady(resourceIds) {\n        this.clearResources(resourceIds);\n        resourceIds.forEach(id => this.toDrawOnProjectRefresh.add(id));\n    }\n\n    /**\n     * Clears all resources directly and redraws them on next project refresh\n     * @private\n     */\n    refreshAllResourcesWhenReady() {\n        this.clearAll();\n        this.refreshAllWhenReady = true;\n    }\n\n    //region Rendering\n\n    // Resources in view + buffer\n    get resourceRange() {\n        return this.getResourceRange(true);\n    }\n\n    // Resources strictly in view\n    get visibleResources() {\n        const { first, last } = this.getResourceRange();\n\n        return {\n            first : this.allResourceRecords[first],\n            last  : this.allResourceRecords[last]\n        };\n    }\n\n    getResourceRange(withBuffer) {\n        const\n            {\n                scheduler,\n                resourceStore\n            }                  = this,\n            {\n                resourceColumnWidth,\n                scrollX\n            }                  = scheduler,\n            {\n                scrollWidth\n            }                  = scheduler.timeAxisSubGrid.scrollable,\n            resourceBufferSize = withBuffer ? this.resourceBufferSize : 0,\n            viewportStart      = scrollX - resourceBufferSize,\n            viewportEnd        = scrollX + scrollWidth + resourceBufferSize;\n        if (!resourceStore?.count) {\n            return { first : -1, last : -1 };\n        }\n\n        // Some resources define their own width\n        if (scheduler.variableColumnWidths) {\n            let first, last = 0, start, end = 0;\n            this.allResourceRecords.forEach((resource, i) => {\n                resource.instanceMeta(scheduler).insetStart = start = end;\n                end                                         = start + resource.columnWidth;\n\n                if (start > viewportEnd) {\n                    return false;\n                }\n                if (end > viewportStart && first == null) {\n                    first = i;\n                }\n                else if (start < viewportEnd) {\n                    last = i;\n                }\n            });\n            return { first, last };\n        }\n        // We are using fixed column widths\n        else {\n            return {\n                first : Math.max(Math.floor(scrollX / resourceColumnWidth) - resourceBufferSize, 0),\n                last  : Math.min(\n                    Math.floor((scrollX + scheduler.timeAxisSubGrid.width) / resourceColumnWidth) + resourceBufferSize,\n                    this.allResourceRecords.length - 1\n                )\n            };\n        }\n    }\n\n    // Dates in view + buffer\n    get dateRange() {\n        const\n            { scheduler } = this;\n\n        let bottomDate = scheduler.getDateFromCoordinate(Math.min(\n            scheduler.scrollTop + scheduler.bodyHeight + scheduler.tickSize - 1,\n            (scheduler.virtualScrollHeight || scheduler.scrollable.scrollHeight) - 1)\n        );\n\n        // Might end up below time axis (out of ticks)\n        // <remove-on-release>\n        // TODO: Change call order on refresh to make sure this is not needed?\n        // </remove-on-release>\n        if (!bottomDate) {\n            bottomDate = scheduler.timeAxis.last.endDate;\n        }\n\n        let topDate = scheduler.getDateFromCoordinate(Math.max(scheduler.scrollTop - scheduler.tickSize, 0));\n\n        // Might end up above time axis when reconfiguring (since this happens as part of rendering)\n        if (!topDate) {\n            topDate    = scheduler.timeAxis.first.startDate;\n            bottomDate = scheduler.getDateFromCoordinate(scheduler.bodyHeight + scheduler.tickSize - 1);\n        }\n\n        return {\n            topDate,\n            bottomDate\n        };\n    }\n\n    getTimeSpanRenderData(eventRecord, resourceRecord, includeOutside = false) {\n        const\n            me             = this,\n            {\n                scheduler\n            }              = me,\n            {\n                preamble,\n                postamble\n            }              = eventRecord,\n            {\n                variableColumnWidths\n            }              = scheduler,\n            useEventBuffer = scheduler.features.eventBuffer?.enabled && me.isProVerticalRendering &&\n                (preamble || postamble) && !eventRecord.isMilestone,\n            startDateField = useEventBuffer ? 'wrapStartDate' : 'startDate',\n            endDateField   = useEventBuffer ? 'wrapEndDate' : 'endDate',\n            // Must use Model.get in order to get latest values in case we are inside a batch.\n            // EventResize changes the endDate using batching to enable a tentative change\n            // via the batchedUpdate event which is triggered when changing a field in a batch.\n            // Fall back to accessor if propagation has not populated date fields.\n            startDate      = eventRecord.isBatchUpdating && eventRecord.hasBatchedChange(startDateField) && !useEventBuffer\n                ? eventRecord.get(startDateField) : eventRecord[startDateField],\n            endDate        = eventRecord.isBatchUpdating && eventRecord.hasBatchedChange(endDateField) && !useEventBuffer\n                ? eventRecord.get(endDateField) : eventRecord[endDateField],\n            resourceMargin = scheduler.getResourceMargin(resourceRecord),\n            top            = scheduler.getCoordinateFromDate(startDate),\n            instanceMeta   = resourceRecord.instanceMeta(scheduler),\n            // Preliminary values for left & width, used for proxy. Will be changed on layout.\n            // The property \"left\" is utilized based on Scheduler's rtl setting.\n            // If RTL, then it's used as the \"right\" style position.\n            left           = variableColumnWidths ? instanceMeta.insetStart : me.allResourceRecords.indexOf(resourceRecord) * scheduler.resourceColumnWidth,\n            resourceWidth  = scheduler.getResourceWidth(resourceRecord),\n            width          = resourceWidth - resourceMargin * 2,\n            startDateMS    = startDate.getTime(),\n            endDateMS      = endDate.getTime();\n\n        let bottom = scheduler.getCoordinateFromDate(endDate),\n            height = bottom - top;\n\n        // Below, estimate height\n        if (bottom === -1) {\n            height = Math.round((endDateMS - startDateMS) * scheduler.timeAxisViewModel.getSingleUnitInPixels('millisecond'));\n            bottom = top + height;\n        }\n\n        return {\n            eventRecord,\n            resourceRecord,\n            left,\n            top,\n            bottom,\n            resourceWidth,\n            width,\n            height,\n            startDate,\n            endDate,\n            startDateMS,\n            endDateMS,\n            useEventBuffer,\n\n            children : [],\n\n            // <remove-on-release>\n            // TODO: should change there to match horizontal\n            // </remove-on-release>\n            start   : startDate,\n            end     : endDate,\n            startMS : startDateMS,\n            endMS   : endDateMS\n        };\n    }\n\n    // Earlier start dates are above later tasks\n    // If same start date, longer tasks float to top\n    // If same start + duration, sort by name\n    eventSorter(a, b) {\n        const\n            startA = a.dataStartMs || a.startDateMS, // dataXX are used if configured with fillTicks\n            endA   = a.dataEndMs || a.endDateMS,\n            startB = b.dataStartMs || b.startDateMS,\n            endB   = b.dataEndMs || b.endDateMS,\n            nameA  = a.isModel ? a.name : a.eventRecord.name,\n            nameB  = b.isModel ? b.name : b.eventRecord.name;\n\n        return startA - startB || endB - endA || (nameA < nameB ? -1 : nameA == nameB ? 0 : 1);\n    }\n\n    layoutEvents(resourceRecord, allEvents, includeOutside = false, parentEventRecord, eventSorter) {\n        const\n            me                  = this,\n            { scheduler }       = me,\n            {\n                variableColumnWidths\n            }                   = scheduler,\n            { id : resourceId } = resourceRecord,\n            instanceMeta        = resourceRecord.instanceMeta(scheduler),\n            cacheKey            = parentEventRecord ? `${resourceId}-${parentEventRecord.id}` : resourceId,\n            // Cache per resource\n            cache               = me.resourceMap.set(cacheKey, {}).get(cacheKey),\n            // Resource \"column\"\n            resourceIndex       = me.allResourceRecords.indexOf(resourceRecord),\n            {\n                barMargin,\n                resourceMargin\n            }                   = scheduler.getResourceLayoutSettings(resourceRecord, parentEventRecord);\n\n        const layoutData = allEvents.reduce((toLayout, eventRecord) => {\n            if (eventRecord.isScheduled) {\n                const\n                    renderData     = scheduler.generateRenderData(eventRecord, resourceRecord, false),\n                    // Elements will be appended to eventData during syncing\n                    eventData      = { renderData },\n                    eventResources = ObjectHelper.getMapPath(me.eventMap, renderData.eventId, {});\n\n                // Cache per event, { e1 : { r1 : { xxx }, r2 : ... }, e2 : ... }\n                // Uses renderData.eventId in favor of eventRecord.id to work with ResourceTimeRanges\n                eventResources[resourceId] = eventData;\n\n                // Cache per resource\n                cache[renderData.eventId] = eventData;\n\n                // Position ResourceTimeRanges directly, they do not affect the layout of others\n                if (renderData.fillSize) {\n                    // The property \"left\" is utilized based on Scheduler's rtl setting.\n                    // If RTL, then it's used as the \"right\" style position.\n                    renderData.left = variableColumnWidths ? instanceMeta.insetStart : resourceIndex * scheduler.resourceColumnWidth;\n\n                    renderData.width = scheduler.getResourceWidth(resourceRecord);\n                }\n                // Anything not flagged with `fillSize` should take part in layout\n                else {\n                    toLayout.push(renderData);\n                }\n            }\n\n            return toLayout;\n        }, []);\n\n        // Ensure the events are rendered in natural order so that navigation works.\n        layoutData.sort(eventSorter ?? me.eventSorter);\n\n        // Apply per resource event layout (pack, overlap or mixed)\n        me.verticalLayout.applyLayout(\n            layoutData,\n            scheduler.getResourceWidth(resourceRecord, parentEventRecord),\n            resourceMargin,\n            barMargin,\n            resourceIndex,\n            scheduler.getEventLayout(resourceRecord, parentEventRecord)\n        );\n\n        return cache;\n    }\n\n    // Calculate the layout for all events assigned to a resource. Since we are never stacking, the layout of one\n    // resource will never affect the others\n    layoutResourceEvents(resourceRecord) {\n        const\n            me                  = this,\n            { scheduler }       = me,\n            // Used in loop, reduce access time a wee bit\n            {\n                assignmentStore,\n                eventStore,\n                timeAxis\n            }                   = scheduler;\n\n        // Events for the resource, minus those that are filtered out by filtering assignments and events\n        let events = eventStore.getEvents({\n            includeOccurrences : scheduler.enableRecurringEvents,\n            resourceRecord,\n            startDate          : timeAxis.startDate,\n            endDate            : timeAxis.endDate,\n            filter             : (assignmentStore.isFiltered || eventStore.isFiltered) && (eventRecord =>\n                eventRecord.assignments.some(a => a.resource === resourceRecord && assignmentStore.includes(a)))\n        });\n\n        // Hook for features to inject additional timespans to render\n        events = scheduler.getEventsToRender(resourceRecord, events);\n\n        return me.layoutEvents(resourceRecord, events);\n    }\n\n    /**\n     * Used by event drag features to bring into existence event elements that are outside of the rendered block.\n     * @param {Scheduler.model.TimeSpan} eventRecord The event to render\n     * @private\n     */\n    addTemporaryDragElement(eventRecord) {\n        const\n            { scheduler } = this,\n            renderData    = scheduler.generateRenderData(\n                eventRecord,\n                eventRecord.resource,\n                { timeAxis : true, viewport : true }\n            );\n\n        renderData.top = renderData.row\n            ? (renderData.top + renderData.row.top)\n            : scheduler.getResourceEventBox(eventRecord, eventRecord.resource, true).top;\n\n        const\n            domConfig   = this.renderEvent({ renderData }),\n            { dataset } = domConfig;\n\n        delete domConfig.tabIndex;\n        delete dataset.eventId;\n        delete dataset.resourceId;\n        delete dataset.assignmentId;\n        delete dataset.syncId;\n        dataset.transient = true;\n        domConfig.parent  = this.scheduler.foregroundCanvas;\n\n        // So that the regular DomSyncing which may happen during scroll does not\n        // sweep up and reuse the temporary element.\n        domConfig.retainElement = true;\n\n        const result = DomHelper.createElement(domConfig);\n\n        result.innerElement = result.firstChild;\n\n        eventRecord.instanceMeta(scheduler).hasTemporaryDragElement = true;\n\n        return result;\n    }\n\n    // <remove-on-release>\n    // TODO: Pretty much identical to HorizontalRendering#renderEvent.\n    //  Make shared base class Render a single event, aborting if already in DOM.\n    // </remove-on-release>\n    // To update an event, first release its element and then render it again.\n    // The element will be reused and updated. Keeps code simpler\n    renderEvent(eventData) {\n        // No point in rendering event that already has an element\n        const\n            { scheduler } = this,\n            data          = eventData.renderData,\n            {\n                resourceRecord,\n                assignmentRecord,\n                eventRecord\n            }             = data,\n            // Event element config, applied to existing element or used to create a new one below\n            elementConfig = {\n                className : data.wrapperCls,\n                tabIndex  : -1,\n                children  : [\n                    {\n                        role      : 'presentation',\n                        className : data.cls,\n                        style     : (data.internalStyle || '') + (data.style || ''),\n                        children  : data.children,\n                        dataset   : {\n                            // Each feature putting contents in the event wrap should have this to simplify syncing and\n                            // element retrieval after sync\n                            taskFeature : 'event'\n                        },\n                        syncOptions : {\n                            syncIdField : 'taskBarFeature'\n                        }\n                    },\n                    ...data.wrapperChildren\n                ],\n                style : {\n                    top                                : data.top,\n                    [scheduler.rtl ? 'right' : 'left'] : data.left,\n                    // DomHelper appends px to dimensions when using numbers\n                    height                             : eventRecord.isMilestone ? '1em' : data.height,\n                    width                              : data.width,\n                    style                              : data.wrapperStyle || '',\n                    fontSize                           : eventRecord.isMilestone ? Math.min(data.width, 40) : null\n                },\n                dataset : {\n                    // assignmentId is set in this function conditionally\n                    resourceId : resourceRecord.id,\n                    eventId    : data.eventId, // Not using eventRecord.id to distinguish between Event and ResourceTimeRange\n                    // Sync using assignment id for events and event id for ResourceTimeRanges\n                    syncId     : assignmentRecord ? this.assignmentStore.getOccurrence(assignmentRecord, eventRecord).id : data.eventId\n\n                },\n                // Will not be part of DOM, but attached to the element\n                elementData   : eventData,\n                // Dragging etc. flags element as retained, to not reuse/release it during that operation. Events\n                // always use assignments, but ResourceTimeRanges does not\n                retainElement : (assignmentRecord || eventRecord).instanceMeta(this.scheduler).retainElement,\n                // Options for this level of sync, lower levels can have their own\n                syncOptions   : {\n                    syncIdField      : 'taskFeature',\n                    // Remove instead of release when a feature is disabled\n                    releaseThreshold : 0\n                }\n            };\n\n        elementConfig.className['b-sch-vertical'] = 1;\n\n        // Some browsers throw warnings on zIndex = ''\n        if (data.zIndex) {\n            elementConfig.zIndex = data.zIndex;\n        }\n\n        // Do not want to spam dataset with empty prop when not using assignments (ResourceTimeRanges)\n        if (assignmentRecord) {\n            elementConfig.dataset.assignmentId = assignmentRecord.id;\n        }\n\n        // Allows access to the used config later, for example to retrieve element\n        eventData.elementConfig = elementConfig;\n\n        return elementConfig;\n    }\n\n    renderResource(resourceRecord) {\n        const\n            me                          = this,\n            // Date at top and bottom for determining which events to include\n            { topDateMS, bottomDateMS } = me,\n            // Will hold element configs\n            eventDOMConfigs             = [];\n\n        let resourceEntry = me.resourceMap.get(resourceRecord.id);\n\n        // Layout all events for the resource unless already done\n        if (!resourceEntry) {\n            resourceEntry = me.layoutResourceEvents(resourceRecord);\n        }\n\n        // Iterate over all events for the resource\n        for (const eventId in resourceEntry) {\n            const\n                eventData                               = resourceEntry[eventId],\n                { endDateMS, startDateMS, eventRecord } = eventData.renderData;\n\n            if (\n                // Only collect configs for those actually in view\n                endDateMS >= topDateMS && startDateMS <= bottomDateMS &&\n                // And not being dragged, those have a temporary element already\n                !eventRecord.instanceMeta(me.scheduler).hasTemporaryDragElement\n            ) {\n                // Reuse DomConfig if available, otherwise render event to create one\n                const domConfig = eventData.elementConfig?.className !== 'b-released' && eventData.elementConfig || me.renderEvent(eventData);\n                eventDOMConfigs.push(domConfig);\n            }\n        }\n\n        return eventDOMConfigs;\n    }\n\n    isEventElement(domConfig) {\n        const className = domConfig && domConfig.className;\n\n        return className && className[this.scheduler.eventCls + '-wrap'];\n    }\n\n    get shouldWaitForInitializeAndEngineReady() {\n        return !this.initialized || (!this.scheduler.isEngineReady && !this.scheduler.isCreating);\n    }\n\n    // Single cell so only one call to this renderer, determine which events are in view and draw them.\n    // Drawing on scroll is triggered by `updateFromVerticalScroll()` and `updateFromHorizontalScroll()`\n    renderer() {\n        const\n            me                                           = this,\n            { scheduler }                                = me,\n            // Determine resource range to draw events for\n            { first : firstResource, last : lastResource } = me.resourceRange,\n            // Date at top and bottom for determining which events to include\n            { topDate, bottomDate }                        = me.dateRange,\n            syncConfigs                                    = [],\n            featureDomConfigs                              = [];\n\n        // If scheduler is creating a new event, the render needs to be synchronous, so\n        // we cannot wait for the engine to normalize - the new event will have correct data set.\n        if (me.shouldWaitForInitializeAndEngineReady) {\n            return;\n        }\n\n        //<debug>\n        if (globalThis.DEBUG) {\n            if (me.firstResource !== firstResource || me.lastResource !== lastResource) {\n                console.log(`Resources in view ${me.allResourceRecords[firstResource].id} -> ${me.allResourceRecords[lastResource].id}`);\n            }\n        }\n        //</debug>\n\n        // Update current time range, reflecting the change on the vertical time axis header\n        if (!DateHelper.isEqual(topDate, me.topDate) || !DateHelper.isEqual(bottomDate, me.bottomDate)) {\n            // Calculated values used by `renderResource()`\n            me.topDate      = topDate;\n            me.bottomDate   = bottomDate;\n            me.topDateMS    = topDate.getTime();\n            me.bottomDateMS = bottomDate.getTime();\n\n            const range = me.timeView.range = { startDate : topDate, endDate : bottomDate };\n\n            scheduler.onVisibleDateRangeChange(range);\n        }\n\n        if (firstResource !== -1 && lastResource !== -1) {\n            // Collect all events for resources in view\n            for (let i = firstResource; i <= lastResource; i++) {\n                syncConfigs.push.apply(syncConfigs, me.renderResource(me.allResourceRecords[i]));\n            }\n        }\n\n        scheduler.getForegroundDomConfigs(featureDomConfigs);\n\n        syncConfigs.push.apply(syncConfigs, featureDomConfigs);\n\n        DomSync.sync({\n            domConfig : {\n                onlyChildren : true,\n                children     : syncConfigs\n            },\n            targetElement : scheduler.foregroundCanvas,\n            syncIdField   : 'syncId',\n\n            // Called by DomHelper when it creates, releases or reuses elements\n            callback({ action, domConfig, lastDomConfig, targetElement, jsx }) {\n                const { reactComponent } = scheduler;\n                // If element is an event wrap, trigger appropriate events\n                if (me.isEventElement(domConfig) || jsx || domConfig?.elementData?.jsx) {\n                    const\n                        // Some actions are considered first a release and then a render (reusing another element).\n                        // This gives clients code a chance to clean up before reusing an element\n                        isRelease = releaseEventActions[action],\n                        isRender  = renderEventActions[action];\n\n                    if (scheduler.processEventContent?.({\n                        action,\n                        domConfig,\n                        isRelease : false,\n                        targetElement,\n                        reactComponent,\n                        jsx\n\n                    })) return;\n\n                    // If we are reusing an element that was previously released we should not trigger again\n                    if (isRelease && me.isEventElement(lastDomConfig) && !lastDomConfig.isReleased) {\n                        const\n                            data  = lastDomConfig.elementData.renderData,\n                            event = {\n                                renderData       : data,\n                                assignmentRecord : data.assignmentRecord,\n                                eventRecord      : data.eventRecord,\n                                resourceRecord   : data.resourceRecord,\n                                element          : targetElement\n                            };\n\n                        // Release any portal in React event content\n                        scheduler.processEventContent?.({\n                            isRelease,\n                            targetElement,\n                            reactComponent,\n                            assignmentRecord : data.assignmentRecord\n                        });\n\n                        // Some browsers do not blur on set to display:none, so releasing the active element\n                        // must *explicitly* move focus outwards to the view.\n                        if (targetElement === DomHelper.getActiveElement(targetElement)) {\n                            scheduler.focusElement.focus();\n                        }\n\n                        // This event is documented on Scheduler\n                        scheduler.trigger('releaseEvent', event);\n                    }\n\n                    if (isRender) {\n                        const\n                            data  = domConfig.elementData.renderData,\n                            event = {\n                                renderData       : data,\n                                assignmentRecord : data.assignmentRecord,\n                                eventRecord      : data.eventRecord,\n                                resourceRecord   : data.resourceRecord,\n                                element          : targetElement,\n                                isReusingElement : action === 'reuseElement',\n                                isRepaint        : action === 'reuseOwnElement'\n                            };\n\n                        event.reusingElement = action === 'reuseElement';\n\n                        // This event is documented on Scheduler\n                        scheduler.trigger('renderEvent', event);\n                    }\n                }\n            }\n        });\n\n        // Change in displayed resources?\n        if (me.firstResource !== firstResource || me.lastResource !== lastResource) {\n            // Update header to match\n            const range = me.resourceColumns.visibleResources = { firstResource, lastResource };\n\n            // Store which resources are currently in view\n            me.firstResource = firstResource;\n            me.lastResource  = lastResource;\n\n            scheduler.onVisibleResourceRangeChange(range);\n            scheduler.trigger('resourceRangeChange', range);\n        }\n    }\n\n    refresh(transition) {\n        this.scheduler.runWithTransition(() => this.renderer(), transition);\n    }\n\n    // To match horizontals API, used from EventDrag\n    refreshResources(resourceIds) {\n        this.clearResources(resourceIds);\n        this.refresh();\n    }\n\n    // To match horizontals API, used from EventDrag\n    refreshEventsForResource(recordOrRow, force = true, draw = true) {\n        this.refreshResources([recordOrRow.id]);\n    }\n\n    onRenderDone() {\n\n    }\n\n    //endregion\n\n    //region Other\n\n    get timeView() {\n        return this.scheduler.timeView;\n    }\n\n    //endregion\n\n    //region Cache\n\n    // Clears cached resource layout\n    clearResources(resourceIds) {\n        const { resourceMap, eventMap } = this;\n\n        //<debug>\n        if (globalThis.DEBUG) console.log('%Clearing resources ' + Array.from(resourceIds).join(','), 'color: #770000');\n        //</debug>\n\n        resourceIds.forEach(resourceId => {\n            if (resourceMap.has(resourceId)) {\n                // The *keys* of an Object are strings, so we must iterate the values\n                // and use the original eventId to look up in the Map which preserves key type.\n                Object.values(resourceMap.get(resourceId)).forEach(({ renderData : { eventId } }) => {\n                    delete eventMap.get(eventId)[resourceId];\n                });\n\n                resourceMap.delete(resourceId);\n            }\n        });\n    }\n\n    clearAll() {\n        //<debug>\n        if (globalThis.DEBUG) console.log('%Clearing all', 'color: #770000');\n        //</debug>\n\n        this.resourceMap.clear();\n        this.eventMap.clear();\n    }\n\n    //endregion\n}\n","import TimelineBase from './TimelineBase.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\nimport DomHelper from '../../Core/helper/DomHelper.js';\nimport CrudManager from '../data/CrudManager.js';\nimport DomSync from '../../Core/helper/DomSync.js';\nimport Rectangle from '../../Core/helper/util/Rectangle.js';\nimport '../localization/En.js';\n\nimport CurrentConfig from './mixin/CurrentConfig.js';\nimport Describable from './mixin/Describable.js';\nimport SchedulerDom from './mixin/SchedulerDom.js';\nimport SchedulerDomEvents from './mixin/SchedulerDomEvents.js';\nimport SchedulerEventRendering from './mixin/SchedulerEventRendering.js';\nimport SchedulerStores from './mixin/SchedulerStores.js';\nimport SchedulerScroll from './mixin/SchedulerScroll.js';\nimport SchedulerRegions from './mixin/SchedulerRegions.js';\nimport SchedulerState from './mixin/SchedulerState.js';\nimport EventSelection from './mixin/EventSelection.js';\nimport EventNavigation from './mixin/EventNavigation.js';\nimport CrudManagerView from '../crud/mixin/CrudManagerView.js';\nimport HorizontalRendering from './orientation/HorizontalRendering.js';\nimport VerticalRendering from './orientation/VerticalRendering.js';\nimport '../column/TimeAxisColumn.js';\nimport '../column/VerticalTimeAxisColumn.js';\n\n// Should always be present in Scheduler\nimport '../../Grid/feature/RegionResize.js';\n\n/**\n * @module Scheduler/view/SchedulerBase\n */\n\nconst\n    descriptionFormats = {\n        month : 'MMMM, YYYY',\n        week  : ['MMMM YYYY (Wp)', 'S{MMM} - E{MMM YYYY} (S{Wp})'],\n        day   : 'MMMM D, YYYY'\n    };\n\n/**\n * A thin base class for {@link Scheduler.view.Scheduler}. Does not include any features by default, allowing smaller\n * custom built bundles if used in place of {@link Scheduler.view.Scheduler}.\n *\n * **NOTE:** In most scenarios you do probably want to use Scheduler instead of SchedulerBase.\n *\n * @mixes Scheduler/view/mixin/Describable\n * @mixes Scheduler/view/mixin/EventNavigation\n * @mixes Scheduler/view/mixin/EventSelection\n * @mixes Scheduler/view/mixin/SchedulerDom\n * @mixes Scheduler/view/mixin/SchedulerDomEvents\n * @mixes Scheduler/view/mixin/SchedulerEventRendering\n * @mixes Scheduler/view/mixin/SchedulerRegions\n * @mixes Scheduler/view/mixin/SchedulerScroll\n * @mixes Scheduler/view/mixin/SchedulerState\n * @mixes Scheduler/view/mixin/SchedulerStores\n * @mixes Scheduler/view/mixin/TimelineDateMapper\n * @mixes Scheduler/view/mixin/TimelineDomEvents\n * @mixes Scheduler/view/mixin/TimelineEventRendering\n * @mixes Scheduler/view/mixin/TimelineScroll\n * @mixes Scheduler/view/mixin/TimelineViewPresets\n * @mixes Scheduler/view/mixin/TimelineZoomable\n * @mixes Scheduler/crud/mixin/CrudManagerView\n * @mixes Scheduler/data/mixin/ProjectConsumer\n *\n * @features Scheduler/feature/ColumnLines\n * @features Scheduler/feature/Dependencies\n * @features Scheduler/feature/DependencyEdit\n * @features Scheduler/feature/EventCopyPaste\n * @features Scheduler/feature/EventDrag\n * @features Scheduler/feature/EventDragCreate\n * @features Scheduler/feature/EventDragSelect\n * @features Scheduler/feature/EventEdit\n * @features Scheduler/feature/EventFilter\n * @features Scheduler/feature/EventMenu\n * @features Scheduler/feature/EventNonWorkingTime\n * @features Scheduler/feature/EventResize\n * @features Scheduler/feature/EventTooltip\n * @features Scheduler/feature/GroupSummary\n * @features Scheduler/feature/HeaderZoom\n * @features Scheduler/feature/Labels\n * @features Scheduler/feature/NonWorkingTime\n * @features Scheduler/feature/Pan\n * @features Scheduler/feature/ResourceMenu\n * @features Scheduler/feature/ResourceTimeRanges\n * @features Scheduler/feature/ScheduleContext\n * @features Scheduler/feature/ScheduleMenu\n * @features Scheduler/feature/ScheduleTooltip\n * @features Scheduler/feature/SimpleEventEdit\n * @features Scheduler/feature/StickyEvents\n * @features Scheduler/feature/Summary\n * @features Scheduler/feature/TimeAxisHeaderMenu\n * @features Scheduler/feature/TimeRanges\n * @features Scheduler/feature/TimeSelection\n *\n * @features Scheduler/feature/experimental/ExcelExporter\n *\n * @features Scheduler/feature/export/PdfExport\n * @features Scheduler/feature/export/exporter/MultiPageExporter\n * @features Scheduler/feature/export/exporter/MultiPageVerticalExporter\n * @features Scheduler/feature/export/exporter/SinglePageExporter\n *\n * @extends Scheduler/view/TimelineBase\n * @widget\n */\nexport default class SchedulerBase extends TimelineBase.mixin(\n    CrudManagerView,\n    Describable,\n    SchedulerDom,\n    SchedulerDomEvents,\n    SchedulerStores,\n    SchedulerScroll,\n    SchedulerState,\n    SchedulerEventRendering,\n    SchedulerRegions,\n    EventSelection,\n    EventNavigation,\n    CurrentConfig\n) {\n    //region Config\n\n    static get $name() {\n        return 'SchedulerBase';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'schedulerbase';\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * Get/set the scheduler's read-only state. When set to `true`, any UIs for modifying data are disabled.\n             * @member {Boolean} readOnly\n             * @category Misc\n             */\n            /**\n             * Configure as `true` to make the scheduler read-only, by disabling any UIs for modifying data.\n             *\n             * __Note that checks MUST always also be applied at the server side.__\n             * @config {Boolean} readOnly\n             * @default false\n             * @category Misc\n             */\n\n            /**\n             * The date to display when used as a component of a Calendar.\n             *\n             * This is required by the Calendar Mode Interface.\n             *\n             * @config {Date}\n             * @category Calendar integration\n             */\n            date : {\n                value : null,\n\n                $config : {\n                    equal : 'date'\n                }\n            },\n\n            /**\n             * Unit used to control how large steps to take when clicking the previous and next buttons in the Calendar\n             * UI. Only applies when used as a component of a Calendar.\n             *\n             * Suitable units depend on configured {@link #config-range}, a smaller or equal unit is recommended.\n             *\n             * @config {'millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year'}\n             * @default\n             * @category Calendar integration\n             */\n            stepUnit : 'week',\n\n            /**\n             * Unit used to set the length of the time axis when used as a component of a Calendar. Suitable units are\n             * `'month'`, `'week'` and `'day'`.\n             *\n             * @config {'day'|'week'|'month'}\n             * @category Calendar integration\n             * @default\n             */\n            range : 'week',\n\n            /**\n             * When the scheduler is used in a Calendar, this function provides the textual description for the\n             * Calendar's toolbar.\n             *\n             * ```javascript\n             *  descriptionRenderer : scheduler => {\n             *      const\n             *          count = scheduler.eventStore.records.filter(\n             *              eventRec => DateHelper.intersectSpans(\n             *                  scheduler.startDate, scheduler.endDate,\n             *                  eventRec.startDate, eventRec.endDate)).length,\n             *          startDate = DateHelper.format(scheduler.startDate, 'DD/MM/YYY'),\n             *          endData = DateHelper.format(scheduler.endDate, 'DD/MM/YYY');\n             *\n             *      return `${startDate} - ${endData}, ${count} event${count === 1 ? '' : 's'}`;\n             *  }\n             * ```\n             * @config {Function}\n             * @param {Scheduler.view.SchedulerBase} view The active view.\n             * @category Calendar integration\n             */\n\n            /**\n             * A method allowing you to define date boundaries that will constrain resize, create and drag drop\n             * operations. The method will be called with the Resource record, and the Event record.\n             *\n             * ```javascript\n             *  new Scheduler({\n             *      getDateConstraints(resourceRecord, eventRecord) {\n             *          // Assuming you have added these extra fields to your own EventModel subclass\n             *          const { minStartDate, maxEndDate } = eventRecord;\n             *\n             *          return {\n             *              start : minStartDate,\n             *              end   : maxEndDate\n             *          };\n             *      }\n             *  });\n             * ```\n             * @param {Scheduler.model.ResourceModel} [resourceRecord] The resource record\n             * @param {Scheduler.model.EventModel} [eventRecord] The event record\n             * @returns {Object} Constraining object containing `start` and `end` constraints. Omitting either\n             * will mean that end is not constrained. So you can prevent a resize or move from moving *before*\n             * a certain time while not constraining the end date.\n             * @returns {Date} [return.start] Start date\n             * @returns {Date} [return.end] End date\n             * @config {Function}\n             * @category Scheduled events\n             */\n            getDateConstraints : null,\n\n            /**\n             * The time axis column config for vertical {@link Scheduler.view.SchedulerBase#config-mode}.\n             *\n             * Object with {@link Scheduler.column.VerticalTimeAxisColumn} configuration.\n             *\n             * This object will be used to configure the vertical time axis column instance.\n             *\n             * The config allows configuring the `VerticalTimeAxisColumn` instance used in vertical mode with any Column options that apply to it.\n             *\n             * Example:\n             *\n             * ```javascript\n             * new Scheduler({\n             *     mode     : 'vertical',\n             *     features : {\n             *         filterBar : true\n             *     },\n             *     verticalTimeAxisColumn : {\n             *         text  : 'Filter by event name',\n             *         width : 180,\n             *         filterable : {\n             *             // add a filter field to the vertical column access header\n             *             filterField : {\n             *                 type        : 'text',\n             *                 placeholder : 'Type to search',\n             *                 onChange    : ({ value }) => {\n             *                     // filter event by name converting to lowerCase to be equal comparison\n             *                     scheduler.eventStore.filter({\n             *                         filters : event => event.name.toLowerCase().includes(value.toLowerCase()),\n             *                         replace : true\n             *                     });\n             *                 }\n             *             }\n             *         }\n             *     },\n             *     ...\n             * });\n             * ```\n             *\n             * @config {VerticalTimeAxisColumnConfig}\n             * @category Time axis\n             */\n            verticalTimeAxisColumn : {},\n\n            /**\n             * See {@link Scheduler.view.Scheduler#keyboard-shortcuts Keyboard shortcuts} for details\n             * @config {Object<String,String>} keyMap\n             * @category Common\n             */\n\n            /**\n             * If true, a new event will be created when user double-clicks on a time axis cell (if scheduler is not in\n             * read only mode).\n             *\n             * The duration / durationUnit of the new event will be 1 time axis tick (default), or it can be read from\n             * the {@link Scheduler.model.EventModel#field-duration} and\n             * {@link Scheduler.model.EventModel#field-durationUnit} fields.\n             *\n             * Set to `false` to not create events on double click.\n             * @config {Boolean|Object} createEventOnDblClick\n             * @param {Boolean} [createEventOnDblClick.useEventModelDefaults] set to `true` to set default duration\n             * based on the defaults specified by the {@link Scheduler.model.EventModel#field-duration} and\n             * {@link Scheduler.model.EventModel#field-durationUnit} fields.\n             * @default\n             * @category Scheduled events\n             */\n            createEventOnDblClick : true,\n\n            // A CSS class identifying areas where events can be scheduled using drag-create, double click etc.\n            schedulableAreaSelector : '.b-sch-timeaxis-cell',\n            scheduledEventName      : 'event',\n            sortFeatureStore        : 'resourceStore'\n        };\n    }\n\n    static get defaultConfig() {\n        return {\n            /**\n             * Scheduler mode. Supported values: horizontal, vertical\n             * @config {'horizontal'|'vertical'} mode\n             * @default\n             * @category Common\n             */\n            mode : 'horizontal',\n\n            /**\n             * CSS class to add to rendered events\n             * @config {String}\n             * @category CSS\n             * @private\n             * @default\n             */\n            eventCls : 'b-sch-event',\n\n            /**\n             * CSS class to add to cells in the timeaxis column\n             * @config {String}\n             * @category CSS\n             * @private\n             * @default\n             */\n            timeCellCls : 'b-sch-timeaxis-cell',\n\n            /**\n             * A CSS class to apply to each event in the view on mouseover (defaults to 'b-sch-event-hover').\n             * @config {String}\n             * @default\n             * @category CSS\n             * @private\n             */\n            overScheduledEventClass : 'b-sch-event-hover',\n\n            /**\n             * Set to false if you don't want to allow events overlapping times for any one resource (defaults to true).\n             * @config {Boolean}\n             * @default\n             * @category Scheduled events\n             */\n            allowOverlap : true,\n\n            /**\n             * The height in pixels of Scheduler rows.\n             * @config {Number}\n             * @default\n             * @category Common\n             */\n            rowHeight : 60,\n\n            /**\n             * Scheduler overrides Grids default implementation of {@link Grid.view.GridBase#config-getRowHeight} to\n             * pre-calculate row heights based on events in the rows.\n             *\n             * The amount of rows that are pre-calculated is limited for performance reasons. The limit is configurable\n             * by specifying the {@link Scheduler.view.SchedulerBase#config-preCalculateHeightLimit} config.\n             *\n             * The results of the calculation are cached internally.\n             *\n             * @config {Function} getRowHeight\n             * @param {Scheduler.model.ResourceModel} getRowHeight.record Resource record to determine row height for\n             * @returns {Number} Desired row height\n             * @category Layout\n             */\n\n            /**\n             * Maximum number of resources for which height is pre-calculated. If you have many events per\n             * resource you might want to lower this number to gain some initial rendering performance.\n             *\n             * Specify a falsy value to opt out of row height pre-calculation.\n             *\n             * @config {Number}\n             * @default\n             * @category Layout\n             */\n            preCalculateHeightLimit : 10000,\n\n            crudManagerClass : CrudManager,\n\n            testConfig : {\n                loadMaskError : {\n                    autoClose : 10,\n                    showDelay : 0\n                }\n            }\n        };\n    }\n\n    timeCellSelector          = '.b-sch-timeaxis-cell';\n    resourceTimeRangeSelector = '.b-sch-resourcetimerange';\n\n    // <remove-on-release>\n    // Keep this commented out to have easy access to the syntax next time we need to use it\n    // static get deprecatedEvents() {\n    //     return {\n    //         eventContextMenuBeforeShow : {\n    //             product            : 'Scheduler',\n    //             invalidAsOfVersion : '5.0.0',\n    //             message            : '`eventContextMenuBeforeShow` event is deprecated, in favor of `eventMenuBeforeShow` event. Please see https://bryntum.com/products/scheduler/docs/guide/Scheduler/upgrades/3.1.0 for more information.'\n    //         }\n    //     };\n    // }\n    // </remove-on-release>\n\n    //endregion\n\n    //region Store & model docs\n\n    // Documented here instead of in SchedulerStores since SchedulerPro uses different types\n\n    // Configs\n\n    /**\n     * Inline events, will be loaded into an internally created EventStore.\n     * @config {Scheduler.model.EventModel[]|EventModelConfig[]} events\n     * @category Data\n     */\n\n    /**\n     * The {@link Scheduler.data.EventStore} holding the events to be rendered into the scheduler (required).\n     * @config {Scheduler.data.EventStore|EventStoreConfig} eventStore\n     * @category Data\n     */\n\n    /**\n     * Inline resources, will be loaded into an internally created ResourceStore.\n     * @config {Scheduler.model.ResourceModel[]|ResourceModelConfig[]} resources\n     * @category Data\n     */\n\n    /**\n     * The {@link Scheduler.data.ResourceStore} holding the resources to be rendered into the scheduler (required).\n     * @config {Scheduler.data.ResourceStore|ResourceStoreConfig} resourceStore\n     * @category Data\n     */\n\n    /**\n     * Inline assignments, will be loaded into an internally created AssignmentStore.\n     * @config {Scheduler.model.AssignmentModel[]|Object[]} assignments\n     * @category Data\n     */\n\n    /**\n     * The optional {@link Scheduler.data.AssignmentStore}, holding assignments between resources and events.\n     * Required for multi assignments.\n     * @config {Scheduler.data.AssignmentStore|AssignmentStoreConfig} assignmentStore\n     * @category Data\n     */\n\n    /**\n     * Inline dependencies, will be loaded into an internally created DependencyStore.\n     * @config {Scheduler.model.DependencyModel[]|DependencyModelConfig[]} dependencies\n     * @category Data\n     */\n\n    /**\n     * The optional {@link Scheduler.data.DependencyStore}.\n     * @config {Scheduler.data.DependencyStore|DependencyStoreConfig} dependencyStore\n     * @category Data\n     */\n\n    // Properties\n\n    /**\n     * Get/set events, applies to the backing project's EventStore.\n     * @member {Scheduler.model.EventModel[]} events\n     * @accepts {Scheduler.model.EventModel[]|EventModelConfig[]}\n     * @category Data\n     */\n\n    /**\n     * Get/set the event store instance of the backing project.\n     * @member {Scheduler.data.EventStore} eventStore\n     * @category Data\n     */\n\n    /**\n     * Get/set resources, applies to the backing project's ResourceStore.\n     * @member {Scheduler.model.ResourceModel[]} resources\n     * @accepts {Scheduler.model.ResourceModel[]|ResourceModelConfig[]}\n     * @category Data\n     */\n\n    /**\n     * Get/set the resource store instance of the backing project\n     * @member {Scheduler.data.ResourceStore} resourceStore\n     * @category Data\n     */\n\n    /**\n     * Get/set assignments, applies to the backing project's AssignmentStore.\n     * @member {Scheduler.model.AssignmentModel[]} assignments\n     * @accepts {Scheduler.model.AssignmentModel[]|Object[]}\n     * @category Data\n     */\n\n    /**\n     * Get/set the event store instance of the backing project.\n     * @member {Scheduler.data.AssignmentStore} assignmentStore\n     * @category Data\n     */\n\n    /**\n     * Get/set dependencies, applies to the backing projects DependencyStore.\n     * @member {Scheduler.model.DependencyModel[]} dependencies\n     * @accepts {Scheduler.model.DependencyModel[]|DependencyModelConfig[]}\n     * @category Data\n     */\n\n    /**\n     * Get/set the dependencies store instance of the backing project.\n     * @member {Scheduler.data.DependencyStore} dependencyStore\n     * @category Data\n     */\n\n    //endregion\n\n    //region Events\n\n    /**\n     * Fired after rendering an event, when its element is available in DOM.\n     * @event renderEvent\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Scheduler.model.EventModel} eventRecord The event record\n     * @param {Scheduler.model.ResourceModel} resourceRecord The resource record\n     * @param {Scheduler.model.AssignmentModel} assignmentRecord The assignment record\n     * @param {Object} renderData An object containing details about the event rendering, see\n     *   {@link Scheduler.view.mixin.SchedulerEventRendering#config-eventRenderer} for details\n     * @param {Boolean} isRepaint `true` if this render is a repaint of the event, updating its existing element\n     * @param {Boolean} isReusingElement `true` if this render lead to the event reusing a released events element\n     * @param {HTMLElement} element The event bar element\n     */\n\n    /**\n     * Fired after releasing an event, useful to cleanup of custom content added on `renderEvent` or in `eventRenderer`.\n     * @event releaseEvent\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Scheduler.model.EventModel} eventRecord The event record\n     * @param {Scheduler.model.ResourceModel} resourceRecord The resource record\n     * @param {Scheduler.model.AssignmentModel} assignmentRecord The assignment record\n     * @param {Object} renderData An object containing details about the event rendering\n     * @param {HTMLElement} element The event bar element\n     */\n\n    /**\n     * Fired when clicking a resource header cell\n     * @event resourceHeaderClick\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Scheduler.model.ResourceModel} resourceRecord The resource record\n     * @param {Event} event The event\n     */\n\n    /**\n     * Fired when double clicking a resource header cell\n     * @event resourceHeaderDblclick\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Scheduler.model.ResourceModel} resourceRecord The resource record\n     * @param {Event} event The event\n     */\n\n    /**\n     * Fired when activating context menu on a resource header cell\n     * @event resourceHeaderContextmenu\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Scheduler.model.ResourceModel} resourceRecord The resource record\n     * @param {Event} event The event\n     */\n\n    /**\n     * Triggered when a keydown event is observed if there are selected events.\n     * @event eventKeyDown\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Scheduler.model.EventModel[]} eventRecords The selected event records\n     * @param {Scheduler.model.AssignmentModel[]} assignmentRecords The selected assignment records\n     * @param {KeyboardEvent} event Browser event\n     */\n\n    /**\n     * Triggered when a keyup event is observed if there are selected events.\n     * @event eventKeyUp\n     * @param {Scheduler.view.Scheduler} source This Scheduler\n     * @param {Scheduler.model.EventModel[]} eventRecords The selected event records\n     * @param {Scheduler.model.AssignmentModel[]} assignmentRecords The selected assignment records\n     * @param {KeyboardEvent} event Browser event\n     */\n\n    //endregion\n\n    //region Functions injected by features\n\n    // For documentation & typings purposes\n\n    /**\n     * Opens an editor UI to edit the passed event.\n     *\n     * *NOTE: Only available when the {@link Scheduler/feature/EventEdit EventEdit} feature is enabled.*\n     *\n     * @function editEvent\n     * @param {Scheduler.model.EventModel} eventRecord Event to edit\n     * @param {Scheduler.model.ResourceModel} [resourceRecord] The Resource record for the event.\n     * This parameter is needed if the event is newly created for a resource and has not been assigned, or when using\n     * multi assignment.\n     * @param {HTMLElement} [element] Element to anchor editor to (defaults to events element)\n     * @category Feature shortcuts\n     */\n\n    /**\n     * Returns the dependency record for a DOM element\n     *\n     * *NOTE: Only available when the {@link Scheduler/feature/Dependencies Dependencies} feature is enabled.*\n     *\n     * @function resolveDependencyRecord\n     * @param {HTMLElement} element The dependency line element\n     * @returns {Scheduler.model.DependencyModel} The dependency record\n     * @category Feature shortcuts\n     */\n\n    //endregion\n\n    //region Init\n\n    afterConstruct() {\n        const me = this;\n\n        super.afterConstruct();\n\n        me.ion({ scroll : 'onVerticalScroll', thisObj : me });\n\n        if (me.createEventOnDblClick) {\n            me.ion({ scheduledblclick : me.onTimeAxisCellDblClick });\n        }\n    }\n\n    //endregion\n\n    //region Overrides\n\n    onPaintOverride() {\n        // Internal procedure used for paint method overrides\n        // Not used in onPaint() because it may be chained on instance and Override won't be applied\n    }\n\n    //endregion\n\n    //region Config getters/setters\n\n    // Placeholder getter/setter for mixins, please make any changes needed to SchedulerStores#store instead\n    get store() {\n        return super.store;\n    }\n\n    set store(store) {\n        super.store = store;\n    }\n\n    /**\n     * Returns an object defining the range of visible resources\n     * @property {Object}\n     * @property {Scheduler.model.ResourceModel} visibleResources.first First visible resource\n     * @property {Scheduler.model.ResourceModel} visibleResources.last Last visible resource\n     * @readonly\n     * @category Resources\n     */\n    get visibleResources() {\n        const me = this;\n\n        if (me.isVertical) {\n            return me.currentOrientation.visibleResources;\n        }\n\n        return {\n            first : me.store.getById(me.firstVisibleRow?.id),\n            last  : me.store.getById(me.lastVisibleRow?.id)\n        };\n    }\n\n    //endregion\n\n    //region Event handlers\n\n    onLocaleChange() {\n        this.currentOrientation.onLocaleChange();\n\n        super.onLocaleChange();\n    }\n\n    onTimeAxisCellDblClick({ date : startDate, resourceRecord, row }) {\n        this.createEvent(startDate, resourceRecord, row);\n    }\n\n    onVerticalScroll({ scrollTop }) {\n        this.currentOrientation.updateFromVerticalScroll(scrollTop);\n    }\n\n    /**\n     * Called when new event is created.\n     * Сan be overridden to supply default record values etc.\n     * @param {Scheduler.model.EventModel} eventRecord Newly created event\n     * @category Scheduled events\n     */\n    onEventCreated(eventRecord) {}\n\n    //endregion\n\n    //region Mode\n\n    /**\n     * Checks if scheduler is in horizontal mode\n     * @returns {Boolean}\n     * @readonly\n     * @category Common\n     * @private\n     */\n    get isHorizontal() {\n        return this.mode === 'horizontal';\n    }\n\n    /**\n     * Checks if scheduler is in vertical mode\n     * @returns {Boolean}\n     * @readonly\n     * @category Common\n     * @private\n     */\n    get isVertical() {\n        return this.mode === 'vertical';\n    }\n\n    /**\n     * Get mode (horizontal/vertical)\n     * @property {'horizontal'|'vertical'}\n     * @readonly\n     * @category Common\n     */\n    get mode() {\n        return this._mode;\n    }\n\n    set mode(mode) {\n        const me = this;\n\n        me._mode = mode;\n\n        if (!me[mode]) {\n            me.element.classList.add(`b-sch-${mode}`);\n\n            if (mode === 'horizontal') {\n                me.horizontal = new HorizontalRendering(me);\n                if (me.isPainted) {\n                    me.horizontal.init();\n                }\n            }\n            else if (mode === 'vertical') {\n                me.vertical = new VerticalRendering(me);\n\n                if (me.rendered) {\n                    me.vertical.init();\n                }\n            }\n        }\n    }\n\n    get currentOrientation() {\n        return this[this.mode];\n    }\n\n    //endregion\n\n    //region Dom event dummies\n\n    // this is ugly, but needed since super cannot be called from SchedulerDomEvents mixin...\n\n    onElementKeyDown(event) {\n        return super.onElementKeyDown(event);\n    }\n\n    onElementKeyUp(event) {\n        return super.onElementKeyUp(event);\n    }\n\n    onElementMouseOver(event) {\n        return super.onElementMouseOver(event);\n    }\n\n    onElementMouseOut(event) {\n        return super.onElementMouseOut(event);\n    }\n\n    //endregion\n\n    //region Feature hooks\n\n    // Called for each event during drop\n    processEventDrop() {}\n    processCrossSchedulerEventDrop() {}\n\n    // Called before event drag starts\n    beforeEventDragStart() {}\n\n    // Called after event drag starts\n    afterEventDragStart() {}\n\n    // Called after aborting a drag\n    afterEventDragAbortFinalized() {}\n\n    // Called during event drag validation\n    checkEventDragValidity() {}\n\n    // Called after event resizing starts\n    afterEventResizeStart() {}\n\n    //endregion\n\n    //region Scheduler specific date mapping functions\n\n    get hasEventEditor() {\n        return Boolean(this.eventEditingFeature);\n    }\n\n    get eventEditingFeature() {\n        const {\n            eventEdit,\n            taskEdit,\n            simpleEventEdit\n        } = this.features;\n\n        return eventEdit?.enabled\n            ? eventEdit\n            : taskEdit?.enabled\n                ? taskEdit\n                : simpleEventEdit?.enabled ? simpleEventEdit : null;\n    }\n\n    // Method is chained by event editing features. Ensure that the event is in the store.\n    editEvent(eventRecord, resourceRecord, element) {\n        const\n            me = this,\n            {\n                eventStore,\n                assignmentStore\n            } = me;\n\n        // Abort the chain if no event editing features available\n        if (!me.hasEventEditor) {\n            return false;\n        }\n\n        if (eventRecord.eventStore !== eventStore) {\n            const\n                { enableEventAnimations } = me,\n                resourceRecords           = [];\n\n            // It's only a provisional event because we are going to edit it which will\n            // allow an opportunity to cancel the add (by removing it).\n            eventRecord.isCreating = true;\n\n            let assignmentRecords = [];\n\n            if (resourceRecord) {\n                resourceRecords.push(resourceRecord);\n                assignmentRecords = assignmentStore.assignEventToResource(eventRecord, resourceRecord);\n            }\n\n            // Vetoable beforeEventAdd allows cancel of this operation\n            if (me.trigger('beforeEventAdd', { eventRecord, resourceRecords, assignmentRecords }) === false) {\n                // Remove any assignment created above, to leave store as it was\n                assignmentStore?.remove(assignmentRecords);\n\n                return false;\n            }\n\n            me.enableEventAnimations = false;\n            eventStore.add(eventRecord);\n            me.project.commitAsync().then(() => me.enableEventAnimations = enableEventAnimations);\n\n            // Element must be created synchronously, not after the project's normalizing delays.\n            me.refreshRows();\n        }\n    }\n\n    /**\n     * Creates an event on the specified date, for the specified resource which conforms to this\n     * scheduler's {@link #config-createEventOnDblClick} setting.\n     *\n     * NOTE: If the scheduler is readonly, or resource type is invalid (group header), or if `allowOverlap` is `false`\n     * and slot is already occupied - no event is created.\n     *\n     * This method may be called programmatically by application code if the `createEventOnDblClick` setting\n     * is `false`, in which case the default values for `createEventOnDblClick` will be used.\n     *\n     * If the {@link Scheduler.feature.EventEdit} feature is active, the new event\n     * will be displayed in the event editor.\n     * @param {Date} date The date to add the event at.\n     * @param {Scheduler.model.ResourceModel} resourceRecord The resource to create the event for.\n     * @category Scheduled events\n     */\n    async createEvent(startDate, resourceRecord) {\n        const\n            me                    = this,\n            {\n                enableEventAnimations,\n                eventStore,\n                assignmentStore,\n                hasEventEditor\n            }                     = me,\n            resourceRecords       = [resourceRecord],\n            useEventModelDefaults = me.createEventOnDblClick.useEventModelDefaults,\n            defaultDuration       = useEventModelDefaults ? eventStore.modelClass.defaultValues.duration : 1,\n            defaultDurationUnit   = useEventModelDefaults ? eventStore.modelClass.defaultValues.durationUnit : me.timeAxis.unit,\n            eventRecord           = eventStore.createRecord({\n                startDate,\n                endDate      : DateHelper.add(startDate, defaultDuration, defaultDurationUnit),\n                duration     : defaultDuration,\n                durationUnit : defaultDurationUnit,\n                name         : me.L('L{Object.newEvent}')\n            });\n\n        if (me.readOnly || resourceRecord.isSpecialRow || resourceRecord.readOnly || (!me.allowOverlap && !me.isDateRangeAvailable(\n            eventRecord.startDate,\n            eventRecord.endDate,\n            null,\n            resourceRecord\n        ))) {\n            return;\n        }\n\n        me.eventEditingFeature?.captureStm(true);\n\n        // It's only a provisional event if there is an event edit feature available to\n        // cancel the add (by removing it). Otherwise it's a definite event creation.\n        eventRecord.isCreating = hasEventEditor;\n\n        me.onEventCreated(eventRecord);\n\n        const assignmentRecords = assignmentStore?.assignEventToResource(eventRecord, resourceRecord);\n\n        /**\n         * Fires before an event is added. Can be triggered by schedule double click or drag create action.\n         * @event beforeEventAdd\n         * @param {Scheduler.view.Scheduler} source The Scheduler instance\n         * @param {Scheduler.model.EventModel} eventRecord The record about to be added\n         * @param {Scheduler.model.ResourceModel[]} resourceRecords Resources that the record is assigned to\n         * @param {Scheduler.model.AssignmentModel[]} assignmentRecords The assignment records\n         * @preventable\n         */\n        if (me.trigger('beforeEventAdd', { eventRecord, resourceRecords, assignmentRecords }) === false) {\n            // Remove any assignment created above, to leave store as it was\n            assignmentStore?.remove(assignmentRecords);\n\n            me.eventEditingFeature?.freeStm(false);\n\n            return;\n        }\n\n        me.enableEventAnimations = false;\n        eventStore.add(eventRecord);\n        me.project.commitAsync().then(() => me.enableEventAnimations = enableEventAnimations);\n\n        // Element must be created synchronously, not after the project's normalizing delays.\n        // Overrides the check for isEngineReady in VerticalRendering so that the newly added record\n        // will be rendered when we call refreshRows.\n        me.isCreating = true;\n        me.refreshRows();\n        me.isCreating = false;\n\n        /**\n         * Fired when a double click or drag gesture has created a new event and added it to the event store.\n         * @event eventAutoCreated\n         * @param {Scheduler.view.Scheduler} source This Scheduler.\n         * @param {Scheduler.model.EventModel} eventRecord The new event record.\n         * @param {Scheduler.model.ResourceModel} resourceRecord The resource assigned to the new event.\n         */\n        me.trigger('eventAutoCreated', {\n            eventRecord,\n            resourceRecord\n        });\n\n        if (hasEventEditor) {\n            me.editEvent(eventRecord, resourceRecord, me.getEventElement(eventRecord));\n        }\n    }\n\n    /**\n     * Checks if a date range is allocated or not for a given resource.\n     * @param {Date} start The start date\n     * @param {Date} end The end date\n     * @param {Scheduler.model.EventModel|null} excludeEvent An event to exclude from the check (or null)\n     * @param {Scheduler.model.ResourceModel} resource The resource\n     * @returns {Boolean} True if the timespan is available for the resource\n     * @category Dates\n     */\n    isDateRangeAvailable(start, end, excludeEvent, resource) {\n        return this.eventStore.isDateRangeAvailable(start, end, excludeEvent, resource);\n    }\n    //endregion\n\n    /**\n     * Suspends UI refresh on store operations.\n     *\n     * Multiple calls to `suspendRefresh` stack up, and will require an equal number of `resumeRefresh` calls to\n     * actually resume UI refresh.\n     *\n     * @function suspendRefresh\n     * @category Rendering\n     */\n\n    /**\n     * Resumes UI refresh on store operations.\n     *\n     * Multiple calls to `suspendRefresh` stack up, and will require an equal number of `resumeRefresh` calls to\n     * actually resume UI refresh.\n     *\n     * Specify `true` as the first param to trigger a refresh if this call unblocked the refresh suspension.\n     * If the underlying project is calculating changes, the refresh will be postponed until it is done.\n     *\n     * @param {Boolean} trigger `true` to trigger a refresh, if this resume unblocks suspension\n     * @category Rendering\n     */\n    async resumeRefresh(trigger) {\n        super.resumeRefresh(false);\n\n        const me = this;\n\n        if (!me.refreshSuspended && trigger) {\n            // Do not refresh until project is in a valid state\n            if (!me.isEngineReady) {\n                // Refresh will happen because of the commit, bail out of this one after forcing rendering to consider\n                // next one a full refresh\n                me.currentOrientation.refreshAllWhenReady = true;\n                return me.project.commitAsync();\n            }\n\n            // View could've been destroyed while we waited for engine\n            if (!me.isDestroyed) {\n                // If it already is, refresh now\n                me.refreshWithTransition();\n            }\n        }\n    }\n\n    //region Appearance\n\n    // Overrides grid to take crudManager loading into account\n    toggleEmptyText() {\n        const\n            me = this;\n\n        if (me.bodyContainer) {\n            DomHelper.toggleClasses(me.bodyContainer, 'b-grid-empty', !(me.resourceStore.count > 0 || me.crudManager?.isLoading));\n        }\n    }\n\n    // Overrides Grids base implementation to return a correctly calculated height for the row. Also stores it in\n    // RowManagers height map, which is used to calculate total height etc.\n    getRowHeight(resourceRecord) {\n        if (this.isHorizontal) {\n            const height = this.currentOrientation.calculateRowHeight(resourceRecord);\n            this.rowManager.storeKnownHeight(resourceRecord.id, height);\n            return height;\n        }\n    }\n\n    // Calculates the height for specified rows. Call when changes potentially makes its height invalid\n    calculateRowHeights(resourceRecords, silent = false) {\n        // Array allowed to have nulls in it for easier code when calling this fn\n        resourceRecords.forEach(resourceRecord => resourceRecord && this.getRowHeight(resourceRecord));\n\n        if (!silent) {\n            this.rowManager.estimateTotalHeight(true);\n        }\n    }\n\n    // Calculate heights for all rows (up to the preCalculateHeightLimit)\n    calculateAllRowHeights(silent = false) {\n        const\n            { store, rowManager } = this,\n            count                 = Math.min(store.count, this.preCalculateHeightLimit);\n\n        // Allow opt out by specifying falsy value.\n        if (count) {\n            rowManager.clearKnownHeights();\n\n            for (let i = 0; i < count; i++) {\n                // This will both calculate and store the height\n                this.getRowHeight(store.getAt(i));\n            }\n\n            // Make sure height is reflected on scroller etc.\n            if (!silent) {\n                rowManager.estimateTotalHeight(true);\n            }\n        }\n    }\n\n    //endregion\n\n    //region Calendar Mode Interface\n\n    // These are all internal and match up w/CalendarMixin\n\n    /**\n     * Returns the date or ranges of included dates as an array. If only the {@link #config-startDate} is significant,\n     * the array will have that date as its only element. Otherwise, a range of dates is returned as a two-element\n     * array with `[0]` is the {@link #config-startDate} and `[1]` is the {@link #property-lastDate}.\n     * @member {Date[]}\n     * @internal\n     */\n    get dateBounds() {\n        const\n            me  = this,\n            ret = [me.startDate];\n\n        if (me.range === 'week') {\n            ret.push(me.lastDate);\n        }\n\n        return ret;\n    }\n\n    get defaultDescriptionFormat() {\n        return descriptionFormats[this.range];\n    }\n\n    /**\n     * The last day that is included in the date range. This is different than {@link #config-endDate} since that date\n     * is not inclusive. For example, an `endDate` of 2022-07-21 00:00:00 indicates that the time range ends at that\n     * time, and so 2022-07-21 is _not_ in the range. In this example, `lastDate` would be 2022-07-20 since that is the\n     * last day included in the range.\n     * @member {Date}\n     * @internal\n     */\n    get lastDate() {\n        const lastDate = this.endDate;\n\n        // endDate is \"exclusive\" because it means 00:00:00 of that day, so subtract 1\n        // to keep description consistent with human expectations.\n        return lastDate && DateHelper.add(lastDate, -1, 'day');\n    }\n\n    getEventRecord(target) {\n        target = DomHelper.getEventElement(target);\n\n        return this.resolveEventRecord(target);\n    }\n\n    getEventElement(eventRecord) {\n        return this.getElementFromEventRecord(eventRecord);\n    }\n\n    changeRange(unit) {\n        return DateHelper.normalizeUnit(unit);\n    }\n\n    updateRange(unit) {\n        if (!this.isConfiguring) {\n            const\n                currentDate = this.date,\n                newDate     = this.date = DateHelper.startOf(currentDate, unit);\n\n            // Force a span update if changing the range did not change the date\n            if (currentDate.getTime() === newDate.getTime()) {\n                this.updateDate(newDate);\n            }\n        }\n    }\n\n    changeStepUnit(unit) {\n        return DateHelper.normalizeUnit(unit);\n    }\n\n    updateDate(newDate) {\n        const\n            me    = this,\n            start = DateHelper.startOf(newDate, me.range);\n\n        me.setTimeSpan(start, DateHelper.add(start, 1, me.range));\n\n        // Cant always use newDate here in case timeAxis is filtered\n        me.visibleDate = {\n            date    : DateHelper.max(newDate, me.timeAxis.startDate),\n            block   : 'start',\n            animate : true\n        };\n\n        me.trigger('descriptionChange');\n    }\n\n    previous() {\n        this.date = DateHelper.add(this.date, -1, this.stepUnit);\n    }\n\n    next() {\n        this.date = DateHelper.add(this.date, 1, this.stepUnit);\n    }\n\n    //endregion\n\n    /**\n     * Assigns and schedules an unassigned event record (+ adds it to this Scheduler's event store unless already in it).\n     * @param {Object} config The config containing data about the event record to schedule\n     * @param {Date} config.startDate The start date\n     * @param {Scheduler.model.EventModel|EventModelConfig} config.eventRecord Event (or data for it) to assign and schedule\n     * @param {Scheduler.model.EventModel} [config.parentEventRecord] Parent event to add the event to (to nest it),\n     * only applies when using the NestedEvents feature\n     * @param {Scheduler.model.ResourceModel} config.resourceRecord Resource to assign the event to\n     * @param {HTMLElement} [config.element] The element if you are dragging an element from outside the scheduler\n     * @category Scheduled events\n     */\n    async scheduleEvent({ startDate, eventRecord, resourceRecord, element }) {\n        const me = this;\n\n        // NestedEvents has an override for this function to handle parentEventRecord\n\n        if (!me.eventStore.includes(eventRecord)) {\n            [eventRecord] = me.eventStore.add(eventRecord);\n        }\n\n        eventRecord.startDate = startDate;\n        eventRecord.assign(resourceRecord);\n\n        if (element) {\n            const eventRect = Rectangle.from(element, me.foregroundCanvas);\n\n            // Clear translate styles used by DragHelper\n            DomHelper.setTranslateXY(element, 0, 0);\n            DomHelper.setTopLeft(element, eventRect.y, eventRect.x);\n\n            DomSync.addChild(me.foregroundCanvas, element, eventRecord.assignments[0].id);\n        }\n\n        await me.project.commitAsync();\n    }\n}\n\n// Register this widget type with its Factory\nSchedulerBase.initClass();\n\n// Scheduler version is specified in TimelineBase because Gantt extends it\n"],"names":["VerticalTimeAxis","TimeAxisBase","$name","configurable","cls","sizeProperty","positionProperty","wrapText","buildHorizontalCells","me","client","stickyHeaders","featureHeaderConfigs","cellConfigs","levels","reduce","result","level","i","cells","_level$cells","push","filter","cell","start","endDate","end","startDate","map","j","role","className","headerCellCls","align","length","dataset","tickIndex","index","cellId","headerPosition","globalThis","DEBUG","date","getTime","style","top","coord","height","width","minHeight","children","html","value","getHeaderDomConfigs","widgetClassList","headerFeature","syncOptions","releaseThreshold","syncIdField","size","_$name","VerticalTimeAxisColumn","Column","type","defaults","draggable","groupable","hideable","showColumnPicker","filterable","sortable","searchable","editor","enableCellContextMenu","tooltipRenderer","minWidth","resizable","cellCls","locked","flex","alwaysClearCell","isFocusable","construct","data","arguments","view","model","grid","timeAxisViewModel","renderer","cellElement","render","getCurrentConfig","options","id","region","field","ariaLabel","cellAriaLabel","ColumnStore","registerColumnType","HorizontalLayout","Base","defaultConfig","nbrOfBandsByResource","bandIndexToPxConvertFn","bandIndexToPxConvertThisObj","clearCache","resource","applyLayout","events","layoutEventsInBands","Error","HorizontalLayoutPack","mixin","PackMixin","packEventsInBands","event","slot","slotSize","forEach","Object","assign","call","eventRecord","resourceRecord","HorizontalLayoutStack","heightRun","verticalPosition","eventIndex","splice","findClosestSuccessor","eventRenderData","endMS","group","isMilestone","duration","minGap","Infinity","closest","gap","l","startMS","grouped","ResourceTimeRangesBase","InstancePlugin","AttachToProjectMixin","tabIndex","entityName","pluginConfig","chain","override","noFeatureElementsInAxis","timeAxis","needsRefresh","store","storage","values","some","t","isTimeSpanInAxis","doDisable","disable","isPainted","refresh","updateTabIndex","isConfiguring","getEventsToRender","onEventDataGenerated","renderData","iconCls","shouldInclude","isVertical","columnWidth","resourceColumnWidth","fillSize","wrapperCls","rangeCls","timeRangeColor","eventContent","text","name","String","unshift","tag","toString","eventId","generateElementId","record","domId","resolveResourceTimeRangeRecord","rangeElement","_rangeElement$closest","elementData","getElementFromResourceTimeRangeRecord","foregroundCanvas","syncIdMap","resolveResourceRecord","_this$resolveResource","overridden","target","onStoreChange","action","onInternalEventStoreChange","matchScheduleCell","enableMouseEvents","getCell","isHorizontal","first","column","timeAxisColumn","handleRangeMouseEvent","domEvent","eventName","EventHelper","eventNameMap","StringHelper","capitalize","resourceTimeRangeRecord","trigger","feature","resourceStore","getById","resourceId","updateEnableMouseEvents","enable","_me$mouseEventsDetach","mouseEventsDetacher","attachMouseEvents","on","element","delegate","mousedown","mouseup","click","dblclick","contextmenu","mouseover","mouseout","thisObj","whenVisible","classList","toggle","Boolean","featureClass","DependencyEditor","Popup","items","handleSelector","axisLock","processWidgetConfig","widget","dependencyEditFeature","ref","showLagField","showDeleteButton","afterShow","args","deleteButton","widgetMap","hidden","isPartOfStore","onInternalKeyDown","DependencyEdit","autoClose","saveAndCloseOnEnter","triggerEvent","dependencyRecord","editorConfig","title","localeClass","closable","fromNameField","weight","label","toNameField","typeField","editable","valueField","displayField","localizeDisplayFields","buildItems","dialog","parent","keys","DependencyModel","Type","L","localeKey","lagField","allowNegative","bbar","foo","saveButton","color","cancelButton","config","dependencyEdit","features","dependencies","clientListenersDetacher","ion","onActivateEditor","doDestroy","_this$editor","destroy","changeEditorConfig","ObjectHelper","owner","autoShow","anchor","scrollAction","clippedBy","timeAxisSubGridElement","bodyContainer","constrainTo","isValid","every","eachWidget","onBeforeSave","onAfterSave","updateRecord","lag","lagUnit","unit","magnitude","fromSide","toSide","cleanupProperties","set","onPopupKeyDown","key","tagName","toLowerCase","preventDefault","onSaveClick","save","hide","onDeleteClick","deleteDependency","onCancelClick","internalShowEditor","showPoint","lastPointerDownCoordinate","getEditor","loadRecord","center","Rectangle","from","x","y","showBy","editDependency","readOnly","_me$saveButton","_me$deleteButton","_me$cancelButton","new","rootElement","internalListeners","keydown","console","warn","dependency","fromEvent","toEvent","Duration","dependencyStore","_client$project","stores","add","project","commitAsync","_client$project2","containsFocus","revertFocus","remove","disabled","clientX","clientY","GridFeatureManager","registerFeature","ScheduleContext","Delayable","delayable","syncContextElement","context","$config","equal","c1","c2","tickParentIndex","tickStartDate","listeners","datachange","timeaxisviewmodelupdate","presetchange","timelineContextChange","schedulecontextmenu","useBackgroundCanvas","rowManager","rowheight","changeTriggerEvent","_element","DomHelper","createElement","backgroundCanvas","onTimelineContextChange","onScheduleContextGesture","onTimeAxisViewModelUpdate","source","_this$context","includes","tick","clearContext","updateContext","oldContext","enabled","row","rows","getRowFor","tickEndDate","currentOrientation","getTimeSpanRenderData","startDateMS","endDateMS","resourceWidth","display","setTranslateXY","left","innerHTML","callback","EventCopyPaste","nameField","keyMap","copyPasteAction","clipboardRecords","scheduler","eventclick","onEventClick","scheduleclick","onScheduleClick","projectChange","clearClipboard","_cellClickedContext","eventData","assignmentRecord","meta","isCut","isActionAvailable","_this$client$focusedC","cellEdit","getSelection","isEditing","focusedCell","isSpecialRow","copy","copyEvents","cut","undefined","paste","pasteEvents","records","selectedAssignments","assignmentRecords","slice","isEventModel","r","assignments","flat","a","eventRecords","_isCut","clipboard","assignmentStore","assignment","refreshWithTransition","reason","$original","allowOverlap","pasteWouldResultInOverlap","isDateRangeAvailable","toFocus","pastedEvents","Set","pastedEventRecords","targetResourceRecord","targetDate","has","eventStore","usesSingleAssignment","generateNewName","last","resources","newAssignmentRecord","constraintDate","detacher","renderEvent","navigateTo","scrollIntoView","populateEventMenu","copyEvent","icon","onItem","isAssignmentSelected","cutEvent","populateScheduleMenu","pasteEvent","count","originalName","counter","findRecord","EventDrag","DragBase","constrainDragToResource","constrainDragToTimeSlot","externalDropTargetSelector","validatorFn","validatorFnThisObj","unifiedDrag","snapToPosition","copyKey","copyMode","mode","capitalizedEventName","afterConstruct","changeMode","dragData","isRecurring","updateMode","setCopying","setMoving","eventBarCopies","el","isConnected","grabbedParent","appendChild","retainElement","onAfterDragStart","handleKeyDownOrMove","keyEventDetacher","getRootElement","keyup","handleKeyUp","onDragReset","_this$keyEventDetache","onDrop","_this$dragData$eventB","getDraggableElement","drag","targetSelector","resolveEventRecord","eventElement","isElementDraggable","_client","matches","isDraggable","prevented","getTriggerParams","browserEvent","triggerBeforeEventDrag","eventType","triggerEventDrag","newResource","triggerDragStart","navigator","skipNextClick","triggerDragAbort","triggerDragAbortFinalized","triggerAfterDrop","valid","currentOverClient","needRefresh","initialAssignmentsState","find","_me$dragData$assignme","setTimeout","specialKeyFromEventKey","isValidDrop","sourceRecord","draggedEntities","constrainDragToTimeline","checkDragValidity","_dragData$newResource","message","_scheduler$checkEvent","updateRecords","fromScheduler","toScheduler","copyKeyPressed","timeDiff","originalStartDate","droppedStartDate","adjustStartDate","externalDropTarget","timeSpanInAxis","DateHelper","durationMS","suspendAutoCommit","updateAssignments","resumeAutoCommit","isCopy","targetEventRecord","isCrossScheduler","fromAssignmentStore","fromEventStore","toAssignmentStore","toEventStore","fromResourceStore","toResourceStore","fromResource","toResource","useSingleAssignment","effectiveCopyMode","event1Date","eventsToAdd","eventsToRemove","assignmentsToAdd","assignmentsToRemove","eventsToCheck","eventsToBatch","resourcesInStore","getAllDataRecords","suspendRefresh","updated","updatedEvent","indexDiff","indexOf","constainDragToResource","isGrouped","draggedEvent","eventBar","eventBarEls","instanceMeta","hasTemporaryDragElement","transient","addedEvents","copiedAssignmentsMap","originalAssignment","draggedAssignment","isOccurrenceAssignment","initialState","originalEventRecord","originalResourceRecord","newStartDate","keepEvent","newAssignment","createRecord","calendar","reassignedFrom","_newResource","newIndex","Math","max","min","getAt","getNext","getPrevious","draggedEventResourceIndex","isCrossResource","setData","shouldCopyEvent","endDateCached","isEvent","isOccurrence","ev","isEqual","isBatchUpdating","endBatch","shouldKeepStartDate","processEventDrop","relatedElements","entries","originalId","cloneRecord","originalDraggedEvent","inTimeAxis","isInTimeAxis","DomSync","removeChild","parentElement","isRoot","elRect","setTopLeft","addChild","processCrossSchedulerEventDrop","added","beginBatch","Promise","all","resumeRefresh","lastDomConfig","selectedEvents","getProductDragContext","previousResolvedResource","previousTargetEventRecord","resolveResource","isOverNewResource","dirty","proxyElements","getMinimalDragData","info","getElementFromContext","resolveAssignmentRecord","startEvent","ctrlKey","multiEventSelect","apply","getRelatedRecords","setupProductDragData","_dateConstraints","dateConstraints","_me$getDateConstraint","getDateConstraints","constrainRectangle","getConstrainingRectangle","eventRegion","setupConstraints","snapPixelAmount","eventBarEl","getElementFromAssignmentRecord","addTemporaryDragElement","createProxy","_scheduler$getDateCon","externalDateConstraints","minDate","maxDate","dateRange","getScheduleRegion","getDragData","selectedRecord","getCoordinate","milestoneLayoutMode","milestoneAlign","offsetWidth","offsetHeight","dragProxy","pageRect","localRect","lx","ly","eventTarget","getMouseMoveEventTarget","contains","getRowAt","dataIndex","querySelector","roundDate","Date","snapRelativeToEventStartDate","constrainStartDate","getRecordElement","getProxyElement","isDragging","EventDragCreate","DragCreateBase","lockLayout","updateLockLayout","lock","dragActiveCls","handleBeforeDragCreate","isAvailable","isWorkingTime","isSchedulerPro","ignoreResourceCalendar","mousedownDate","dragStart","_client$onEventCreate","enableEventAnimations","createEventRecord","resourceRecords","diff","durationUnit","isCreating","isDragCreating","taskEdit","doCancel","captureStm","assignEventToResource","excludeFromLayout","onEventCreated","addAsync","then","refreshRows","itemElement","getElementFromEventRecord","isInView","scrollable","animate","edgeOffset","barMargin","checkValidity","dragging","createValidatorFn","isRowEmpty","getEventsForResource","triggerBeforeFinalize","dimension","weekStartDay","draggingEnd","eventConfig","modelClass","fieldMap","defaultValue","floor","resolution","ceil","isGanttProjectMixin","constraintType","internalUpdateRecord","hasEventEditor","finalizeDragCreate","transferred","freeStm","hasStmCapture","cancelDragCreate","getTipHtml","tip","tooNarrow","onAborted","_this$store$unassignE","_this$store","unassignEventFromResource","zeroOffset","depOffset","EventTooltip","TooltipBase","template","xss","startClockHtml","endClockHtml","monitorRecordUpdate","onPaint","firstPaint","tooltip","beforeAlign","offset","edgeAligned","parseAlign","depTerminalOffset","zeroMargins","StickyEvents","toUpdate","scroll","horizontalScroll","prio","stickyContents","syncEventContentPosition","updateStyles","onSchedulerScroll","verticalSyncAllEventsContentPosition","onHorizontalScroll","subGrid","timeAxisSubGrid","contentEl","applyStyle","clear","resourceMap","eventsData","elementConfig","isResourceTimeRange","duringGeneration","useEventBuffer","bufferAfterWidth","bufferBeforeWidth","scrollPosition","wrapperEl","getChild","parseStyle","contentSize","contentWidth","justify","parentNode","getStyleValue","c","eventStart","eventEnd","edgeSizes","getEventContentMargins","maxOffset","Number","MAX_SAFE_INTEGER","transform","stuck","getEdgeSize","TimeRanges","AbstractTimeRanges","TimeSpan","currentTimeLineUpdateInterval","currentDateFormat","showCurrentTimeLine","_this$storeDetacher","storeDetacher","timeRanges","_timeRanges","recurringEvents","flatMap","timeSpan","getOccurrencesForDateRange","currentTimeLine","attachToProject","_me$projectTimeZoneCh","projectTimeZoneChangeDetacher","_me$client$project","timeZoneChange","updateCurrentTimeLine","initCurrentTimeLine","currentTimeInterval","setInterval","_me$project","timeZone","setLocalDate","originalData","format","renderRanges","hideCurrentTimeLine","clearInterval","updateShowCurrentTimeLine","show","populateTimeAxisHeaderMenu","checked","onToggle","attachToStore","change","timeRangeStore","updateStore","_timeRangesExposed","attachToTimeRangeStore","resolveTimeRangeRecord","baseSelector","isVisible","runWithTransition","refreshSuspended","onDragStart","rangeBodyEl","getBodyElementByRecord","originRangeX","getTranslateX","originRangeY","getTranslateY","showTip","onInvalidDrop","box","newStart","getDateFromCoordinate","getStart","rtl","wasModified","setStartDate","destroyTip","onResizeStart","onResizeDrag","edge","setTranslateY","newY","newHeight","setTranslateX","newX","newWidth","onResize","startPos","endPos","getEnd","isStart","newEnd","setEndDate","onInvalidResize","resize","reset","Target","SchedulerDom","returnWrapper","_this$foregroundCanva","_wrapper","_wrapper$syncIdMap","wrapper","hasLinks","link","$links","_this$foregroundCanva2","_eventRecord$resource","_this$foregroundCanva3","getAssignmentForEventAndResource","getElementsFromEventRecord","elementOrEvent","xy","resolveRowRecord","_elementOrEvent","Event","eventSelector","assignmentId","resolveTimeSpanRecord","getOccurrence","isRowVisible","widgetClass","SchedulerDomEvents","getTimeSpanMouseEventParams","getScheduleMouseEventParams","cellData","onElementKeyDown","scheduledEventName","onElementKeyUp","SchedulerEventRendering","milestoneTextPosition","milestoneCharWidth","eventLayout","overlappingEventSorter","horizontalEventSorterFn","resourceMargin","useInitialAnimation","eventRenderer","eventRendererThisObj","eventBarTextField","eventBodyTemplate","horizontalLayoutPackClass","horizontalLayoutStackClass","resourceColumns","resourceImagePath","defaultResourceImageName","resourceImageExtension","isFirstRender","initialAnimationDuration","narrowEventWidth","internalEventLayout","eventPositionMode","eventScrollMode","changeEventLayout","changeInternalEventLayout","getEventLayout","updateInternalEventLayout","oldEventLayout","changeHorizontalEventSorterFn","fn","VersionHelper","deprecate","updateOverlappingEventSorter","_value","isModel","getEventLayoutHandler","horizontal","layouts","horizontalStack","layoutEventVerticallyStack","horizontalPack","layoutEventVerticallyPack","_this$timeAxisColumn","_resourceColumns","_this$resourceColumns","repaintEventsForResource","repaintEvent","getResourcesForEvent","getResourceMargin","getBarMargin","getResourceHeight","rowHeight","getResourceWidth","getAppliedResourceHeight","getRowById","maxRequestedHeight","getResourceLayoutSettings","parentEventRecord","contentHeight","getEventStyle","eventStyle","getEventColor","_eventRecord$event","_eventRecord$parent","eventColor","generateRenderData","includeOutside","viewport","eventResize","$originalId","taskBarFeature","_renderData$iconCls2","isResizable","startsOutsideView","endsOutsideView","leftHandle","rightHandle","topHandle","bottomHandle","isDirty","hasPersistableChanges","clsListObj","generatedIdCls","hasGeneratedId","dirtyCls","committingCls","isCommitting","endsOutsideViewCls","startsOutsideViewCls","clippedStart","clippedEnd","wrapperClsListObj","eventCls","isParent","isLinked","clsList","DomClassList","internalCls","clone","wrapperClsList","wrapperStyle","isWrap","selected","fixedEventCls","eventSelectedCls","eventAssignHighlightCls","isEventSelected","inactive","hasAnimation","bryntum","noAnimations","scrollTop","tickSize","delayMS","maxDelay","initialAnimationDetacher","once","animationend","delay","cancelOutstanding","expires","alt","get","eventBarIconClsField","rowId","childContent","milestoneLabelConfig","rendererValue","encodeHtml","Array","isArray","_renderData$iconCls","isHtml","class","isNamedColor","colorProp","wrapperChildren","changeUseInitialAnimation","updateUseInitialAnimation","old","BrowserHelper","isFirefox","restartInitialAnimation","initialAnimation","_me$initialAnimationD","stopInitialAnimation","getMilestoneLabelWidth","milestoneMeasureElement","fontSize","firstElementChild","bounds","milestoneWidth","updateMilestoneLayoutMode","alwaysOutside","updateMilestoneTextPosition","position","updateMilestoneAlign","updateMilestoneCharWidth","SchedulerStores","ProjectConsumer","projectStores","dataName","batchedUpdate","changePreCommit","commitStart","commit","exception","idchange","beforeLoad","beforeRemove","calendarManagerStore","resourceTimeRangeStore","startParamName","endParamName","passStartEndParameters","checkVersion","crudManagerClass","crudManager","updateProject","oldProject","detachListeners","onProjectRefresh","isInitialCommit","refreshAfterProjectRefresh","navigateToAfterRefresh","changeCrudManager","isCrudManager","_crudManager","bindCrudManager","_store","Store","refreshFromRowOnStoreAdd","isExpand","suspended","onStoreAdd","calculateRowHeights","onStoreUpdateRecord","changes","ignoreCount","updateResourceStore","metaMapId","usesDisplayStore","onEventIdChange","params","onEventStoreIdChange","onEventStoreBatchedUpdate","listenToBatchedUpdates","_mode","isAssign","isRemovingAssignment","onEventStoreChange","onEventCommit","resourcesToRepaint","modified","prototype","concat","onEventCommitStart","toggleCls","onEventException","removed","onAssignmentCommit","repaintEventsForAssignmentChanges","onAssignmentCommitStart","onAssignmentException","getResource","onAssignmentBeforeRemove","removingAll","moveTo","activeAssignment","GlobalEvents","lastInteractionType","next","focusWithoutScrolling","focusElement","resourceTimeRanges","onBeforeLoad","applyStartEndParameters","getResourcesEventsPerTick","filterFn","eventsByTick","startTick","getTickFromDate","endTick","ticks","defaultScrollOptions","block","unrenderedScrollOptions","highlight","focus","SchedulerScroll","scrollEventIntoView","scrollResourceEventIntoView","scrollAssignmentIntoView","eventIsOutside","isScheduled","extendTimeAxis","currentTimeSpanRange","setTimeSpan","valueOf","infiniteScroll","visibleDateRange","visibleMS","sign","visibleDate","tree","_me$expandTo","expandTo","scroller","forceScrollUpdate","scrollUnrenderedEventIntoView","scrollResourceIntoView","resourceRec","eventRec","resolve","modifiedOptions","getResourceEventBox","scrollerViewport","translate","totalSize","scrollLeft","onEventRender","targetElement","initialScrollPromise","scrollRowIntoView","SchedulerRegions","local","getResourceRegion","getRowRegion","getAssignmentEventBox","includesOutside","roughly","getItemBox","copyProperties","SchedulerState","getState","applyState","state","_state$zoomLevelOptio","propsToCopy","zoomLevelOptions","p","releaseEventActions","releaseElement","reuseElement","renderEventActions","newElement","reuseOwnElement","MAX_WIDTH","heightEventSorter","lhs","rhs","chronoFields","getStartEnd","useEnd","fieldName","_eventRecord$hasBatch","_eventRecord$meta","hasBatchedChange","useTickDates","fillTicks","isResizing","round","tickRecord","HorizontalRendering","scrollBuffer","bufferSize","verticalBufferSize","properties","Map","rowMap","eventConfigs","isFirstRefresh","toDrawOnProjectRefresh","toDrawOnDataReady","eventSorter","bind","renderDone","removeRows","translateRow","offsetRows","beforeRowHeight","init","updateVerticalBufferSize","renderRows","_visibleDateRange","getDateFromXY","roundingMethod","allowOutOfRange","translateToScheduleCoordinate","getRtlX","getDateFromPosition","getBoundingClientRect","scrollX","maxX","abs","translateToPageCoordinate","stretch","getElement","bottom","scrollWidth","taStart","taEnd","startX","getCoordinateFromDate","endX","right","rowRecord","resourceData","approx","d","rowBox","getRecordCoords","absoluteTop","layout","rowTop","rowBottom","nodeType","Element","TEXT_NODE","eventNode","getRecordFromElement","refreshAllWhenReady","clearAll","clearDom","commitFinalized","onProjectCommitFinalized","ignoreRecordChanges","clearResources","refreshResources","isCalculated","calculateAllRowHeights","topRow","reinitialize","attachToAssignmentStore","refreshPreCommit","onAssignmentStoreChange","replaced","resourceIds","_assignmentRecord$res","_assignmentRecord$res2","isRemoving","isChangingId","refreshResourcesWhenReady","oldAssignment","oldValue","refreshResourcesOnDataReady","onAssignmentStoreRefresh","attachToEventStore","onEventStoreRefresh","isEngineReady","isResourceTimeRangeStore","_eventRecord$$linkedR","renderedEventResources","$linkedResources","newEvent","allChrono","$entity","getField","dateChanges","_me$project2","propagatingLoadChanges","isWritingData","attachToResourceStore","clearLayoutCache","onResourceStoreChange","isBatchingChanges","isLeaf","onTranslateRow","refreshEventsForResource","onOffsetRows","doUpdateTimeView","calculateRowHeight","_resourceRecord$assig","layoutType","assigned","eventFilter","isFiltered","getEvents","includeOccurrences","enableRecurringEvents","sort","layoutHandler","nbrOfBandsRequired","updateFromHorizontalScroll","getConnectorStartSide","getConnectorEndSide","reLayoutEvents","onLocaleChange","onViewportResize","oldWidth","oldHeight","onRenderDone","onDragAbort","useWrapper","onRemoveRows","delete","onEarlyScroll","rendererCalled","updateFromVerticalScroll","fromScroll","returnEnd","getDateFromCoord","ignoreRTL","_viewPresetChanging","viewportCoords","range","timeView","onVisibleDateRangeChange","onBeforeRowHeightChange","ids","transition","noRows","bandIndex","topFraction","heightFraction","domConfig","syncId","innerElement","firstChild","b","startA","dataStartMS","endA","dataEndMS","startB","endB","nameA","nameB","calculateMS","startDateField","endDateField","pxPerMinute","getSingleUnitInPixels","lengthInPx","diamondSize","diamondMS","setupRenderData","_scheduler$features$e","preamble","postamble","isProHorizontalRendering","eventBuffer","timespanStart","timespanEnd","viewStartMS","viewEndMS","durationMinutes","taskRecord","fillTimeSpanHorizontalPosition","calculateHorizontalPosition","respectExclusion","isEnd","snapToNextIncluded","isSafari","stickyEvents","continuous","excluded","fillTimeSpanVerticalPosition","managedEventSizing","includeOutsideTimeAxis","includeOutsideViewport","layoutEvents","allEvents","eventBox","layoutEventData","bandsRequired","layoutResourceEvents","resourceEvents","layoutMode","textPosition","eventElementConfig","taskFeature","zIndex","recordOrRow","force","draw","isRow","getResourceLayout","resourceLayout","invalid","getEventDOMConfigForCurrentView","labels","usesLabels","before","after","reusableDOMConfigs","eventDOMConfigs","useLeft","useRight","prevDomConfig","visibleEventDOMConfigs","bodyTop","_scrollTop","viewTop","viewBottom","_bodyRectangle","unbuffered","unmanagedSize","sync","onlyChildren","jsx","_scheduler$processEve","_domConfig$elementDat","reactComponent","isRelease","isRender","processEventContent","_scheduler$processEve2","getActiveElement","isReusingElement","isRepaint","recordsOrIds","ArrayHelper","asArray","Model","asId","cached","child","VerticalLayout","coordProp","sizeProp","columnIndex","tplData","clusterIndex","widthFactor","leftFactor","packColumnCount","packColumnIndex","availableWidth","emptyObject","freeze","VerticalRendering","eventMap","releasedElements","resourceBufferSize","verticalLayout","columnWidthChange","initialized","coords","borderOffsetX","borderOffsetY","variableColumnWidths","totalWidth","col","allResourceRecords","_this$eventMap$get","scrollY","_this$eventMap$get2","_this$eventMap$get3","_this$eventMap$get3$r","startY","endY","scrollPos","clientHeight","onResourceColumnWidthChange","rendered","refreshAllResourcesWhenReady","changeCount","shouldWaitForInitializeAndEngineReady","load","unmaskBody","firstResource","lastResource","_allResourceRecords","firstIndex","onResourceStoreRefresh","refreshFromRerender","renderResource","prevScrollX","scrollHorizontallyTo","_this$scheduler$timeA","updateElementId","releaseTimeSpanDiv","resourceRange","getResourceRange","visibleResources","withBuffer","viewportStart","viewportEnd","insetStart","bottomDate","bodyHeight","virtualScrollHeight","scrollHeight","topDate","isProVerticalRendering","dataStartMs","dataEndMs","cacheKey","cache","resourceIndex","layoutData","toLayout","eventResources","getMapPath","internalStyle","topDateMS","bottomDateMS","resourceEntry","_eventData$elementCon","isEventElement","syncConfigs","featureDomConfigs","getForegroundDomConfigs","isReleased","reusingElement","onVisibleResourceRangeChange","descriptionFormats","month","week","day","SchedulerBase","TimelineBase","CrudManagerView","Describable","EventSelection","EventNavigation","CurrentConfig","stepUnit","verticalTimeAxisColumn","createEventOnDblClick","schedulableAreaSelector","sortFeatureStore","timeCellCls","overScheduledEventClass","preCalculateHeightLimit","CrudManager","testConfig","loadMaskError","showDelay","timeCellSelector","resourceTimeRangeSelector","scheduledblclick","onTimeAxisCellDblClick","onPaintOverride","_me$firstVisibleRow","_me$lastVisibleRow","firstVisibleRow","lastVisibleRow","createEvent","onVerticalScroll","vertical","onElementMouseOver","onElementMouseOut","beforeEventDragStart","afterEventDragStart","afterEventDragAbortFinalized","checkEventDragValidity","afterEventResizeStart","eventEditingFeature","eventEdit","simpleEventEdit","editEvent","_me$eventEditingFeatu","useEventModelDefaults","defaultDuration","defaultValues","defaultDurationUnit","_me$eventEditingFeatu2","getEventElement","excludeEvent","isDestroyed","toggleEmptyText","_me$crudManager","toggleClasses","isLoading","getRowHeight","storeKnownHeight","silent","estimateTotalHeight","clearKnownHeights","dateBounds","ret","lastDate","defaultDescriptionFormat","getEventRecord","changeRange","normalizeUnit","updateRange","currentDate","newDate","startOf","updateDate","changeStepUnit","previous","scheduleEvent","eventRect","initClass"],"mappings":"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AACA;AACAC,QAAAA,gBAAgB,EAAG,CAAC;AACpBC,QAAAA,WAAW,EAAQ,QAAA;OACtB;AACDR,MAAAA,QAAQ,EAAGrC,WAAAA;KACd,CAAA;AACL,GAAA;EACA,IAAIkC,MAAMA,GAAG;IACT,OAAO,IAAI,CAACY,IAAI,CAAA;AACpB,GAAA;AACJ,CAAA;AACA3D,gBAAgB,CAAC4D,MAAM,GAAG,kBAAkB;;ACxF5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMC,sBAAsB,SAASC,MAAM,CAAC;EACvD,OAAO5D,KAAK,GAAG,wBAAwB,CAAA;EACvC,WAAW6D,IAAIA,GAAG;AACd,IAAA,OAAO,kBAAkB,CAAA;AAC7B,GAAA;EACA,WAAWC,QAAQA,GAAG;IAClB,OAAO;AACH;AACZ;AACA;AACY;AACZ;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,SAAS,EAAG,KAAK;AACjB;AACZ;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,SAAS,EAAG,KAAK;AACjB;AACZ;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,QAAQ,EAAG,KAAK;AAChB;AACZ;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,gBAAgB,EAAG,KAAK;AACxB;AACZ;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,UAAU,EAAG,KAAK;AAClB;AACZ;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,QAAQ,EAAG,KAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACZ;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,UAAU,EAAG,KAAK;AAClB;AACZ;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,MAAM,EAAG,KAAK;AACd;AACZ;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,qBAAqB,EAAG,KAAK;AAC7B;AACZ;AACA;AACA;AACYC,MAAAA,eAAe,EAAG,KAAK;AACvB;AACZ;AACA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5B,GAAA;EACAK,iBAAiBA,CAACjJ,KAAK,EAAE;AACrB,IAAA,IAAI,CAACsG,OAAO,CAAC,SAAS,EAAE;AAAEtG,MAAAA,KAAAA;AAAM,KAAC,CAAC,CAAA;AAClC,IAAA,KAAK,CAACiJ,iBAAiB,CAACjJ,KAAK,CAAC,CAAA;AAClC,GAAA;AACJ,CAAA;AACAgI,gBAAgB,CAACzL,MAAM,GAAG,kBAAkB;;ACrC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAM2M,cAAc,SAAStH,cAAc,CAAC;AACvD;EACA,WAAW/I,KAAKA,GAAG;AACf,IAAA,OAAO,gBAAgB,CAAA;AAC3B,GAAA;EACA,WAAWC,YAAYA,GAAG;IACtB,OAAO;AACH;AACZ;AACA;AACA;AACA;AACA;AACYqQ,MAAAA,SAAS,EAAG,IAAI;AAChB;AACZ;AACA;AACA;AACA;AACA;AACYC,MAAAA,mBAAmB,EAAG,IAAI;AAC1B;AACZ;AACA;AACA;AACA;AACA;AACYV,MAAAA,gBAAgB,EAAG,IAAI;AACvB;AACZ;AACA;AACA;AACA;AACA;AACA;AACYW,MAAAA,YAAY,EAAG,oBAAoB;AACnC;AACZ;AACA;AACA;AACA;AACA;AACYZ,MAAAA,YAAY,EAAG,KAAK;AACpBa,MAAAA,gBAAgB,EAAG,IAAI;AACvB;AACZ;AACA;AACA;AACA;AACYC,MAAAA,YAAY,EAAG;AACXC,QAAAA,KAAK,EAAS,oBAAoB;AAClCC,QAAAA,WAAW,EAAG,IAAI;AAClBC,QAAAA,QAAQ,EAAM,IAAI;AAClB/M,QAAAA,QAAQ,EAAG;AACP8M,U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gBAAgB,CAAA;AAAEgU,kBAAkB,CAACC,eAAe,CAACmD,cAAc,EAAE,IAAI,EAAE,WAAW,CAAC;;AC9ee,MAAMgF,SAAS,SAASC,QAAQ,CAAC;AAC5C;EACA,WAAW/f,KAAKA,GAAG;AACf,IAAA,OAAO,WAAW,CAAA;AACtB,GAAA;EACA,WAAWC,YAAYA,GAAG;IACtB,OAAO;AACH;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY;AACZ;AACA;AACA;AACY;AACZ;AACA;AACA;AACA;AACY+f,MAAAA,uBAAuB,EAAG,KAAK;AAC/B;AACZ;AACA;AACA;AACY;AACZ;AACA;AACA;AACA;AACYC,MAAAA,uBAAuB,EAAG,KAAK;AAC/B;AACZ;AACA;AACA;AACYC,MAAAA,0BAA0B,EAAG,IAAI;AACjC;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,WAAW,EAAGA,CAACnI,OAAO,EAAE7Q,KAAK,KAAK,EAAE;AACpC;AACZ;AACA;AACA;AACYiZ,MAAAA,kBAAkB,EAAG,IAAI;AACzB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,WAAW,EAAG,IAAI;AAClB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,cAAc,EAAG,IAAI;AACrB;AACZ;AACA;AACA;AACA;AACA;AACYC,MAAAA,OAAO,EAAG,OAAO;AACjB;AACZ;AACA;AACA;AACA;AACA;AACA;AACY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AuBA,CAACjnB,KAAK,EAAE;IAC3B,OAAOA,KAAK,CAACmF,MAAM,CAAA;AACvB,GAAA;AACA;AACJ,CAAA;;AACAwT,SAAS,CAACpc,MAAM,GAAG,WAAW,CAAA;AAAEgU,kBAAkB,CAACC,eAAe,CAACmI,SAAS,EAAE,IAAI,EAAE,WAAW,CAAC,CAAA;AAChGpI,kBAAkB,CAACC,eAAe,CAACmI,SAAS,EAAE,KAAK,EAAE,mBAAmB,CAAC;;AC95CzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMkP,eAAe,SAASC,cAAc,CAAC;AACxD;EACA,OAAOjvB,KAAK,GAAG,iBAAiB,CAAA;AAChC,EAAA,OAAOC,YAAY,GAAG;AAClB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQkgB,WAAW,EAAGA,MAAM,IAAI;AACxB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ+O,IAAAA,UAAU,EAAG,KAAA;GAChB,CAAA;AACD;AACA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;EACA,IAAI/T,SAASA,GAAG;IACZ,OAAO,IAAI,CAAC3a,MAAM,CAAA;AACtB,GAAA;EACA,IAAI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CAAA;AACzG7c,kBAAkB,CAACC,eAAe,CAAC4c,YAAY,EAAE,KAAK,EAAE,mBAAmB,CAAC;;AC7K5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAM4C,UAAU,SAASC,kBAAkB,CAACpwB,KAAK,CAACgC,oBAAoB,CAAC,CAAC;AACnF;EACA,WAAWhJ,KAAKA,GAAG;AACf,IAAA,OAAO,YAAY,CAAA;AACvB,GAAA;EACA,WAAWqG,aAAaA,GAAG;IACvB,OAAO;AACHoD,MAAAA,KAAK,EAAG,IAAA;KACX,CAAA;AACL,GAAA;AACA,EAAA,OAAOxJ,YAAY,GAAG;AAClB;AACR;AACA;AACA;AACA;AACA;AACQwJ,IAAAA,KAAK,EAAG;AACJsoB,MAAAA,UAAU,EAAGsF,QAAAA;KAChB;AACD;AACR;AACA;AACA;AACA;AACA;AACQC,IAAAA,6BAA6B,EAAG,KAAK;AACrC;AACR;AACA;AACA;AACA;AACA;AACA;AACQC,IAAAA,iBAAiB,EAAG,OAAO;AAC3B;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQC,IAAAA,mBAAmB,EAAG,KAAA;GACzB,CAAA;AACD;AACA;AACA3kB,EAAAA,SAASA,GAAG;AAAA,IAAA,IAAA4kB,mBAAA,CAAA;IACR,CAAAA,mBAAA,GAAI,IAAA,CAACC,aAAa,MAAA,IAAA,IAAAD,m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AA,MAAM,IAAI,MAAMiC,uBAAuB,UAAUjC,MAAM,IAAIn2B,IAAI,EAAE;EAC5E,WAAWpG,KAAKA,GAAG;AACf,IAAA,OAAO,yBAAyB,CAAA;AACpC,GAAA;AACA;EACA,WAAWC,YAAYA,GAAG;IACtB,OAAO;AACH;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYw+B,MAAAA,qBAAqB,EAAG,SAAS;AACjC;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY9Q,MAAAA,cAAc,EAAG,QAAQ;AACzB;AACZ;AACA;AACA;AACA;AACA;AACA;AACY+Q,MAAAA,kBAAkB,EAAG,EAAE;AACvB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYhR,MAAAA,mBAAmB,EAAG,SAAS;AAC/B;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYiR,MAAAA,WAAW,EAAG,OAAO;AACrB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,sBAAsB,EAAG,IAAI;AAC7B;AACZ;AACA;AACA;AACA;AACA;AACYC,MAAAA,uBAAuB,EAAG,IAAI;AAC9B;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,cAAc,EAAG,IAAI;AACrB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,mBAAmB,EAAG,IAAI;AAC1B;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,aAAa,EAAG,IAAI;AACpB;AACZ;AACA;AACA;AACA;AACYC,MAAAA,oBAAoB,EAAG,IAAI;AAC3B;AACZ;AACA;AACA;AACA;AACA;AACYC,MAAAA,iBAAiB,EAAG,MAAM;AAC1B;AACZ;AACA;AACA;AACA;AACA;AACYC,MAAAA,iBAAiB,EAAG,IAAI;AACxB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,yBAAyB,EAAGr4B,oBAAoB;AAChD;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYs4B,MAAAA,0BAA0B,EAAGz3B,qBAAqB;AAClD;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY03B,MAAAA,eAAe,EAAG,IAAI;AACtB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,iBAAiB,EAAG,IAAI;AACxB;AACZ;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,wBAAwB,EAAG,IAAI;AAC/B;AACZ;AACA;AACA;AACA;AACA;AACYC,MAAAA,sBAAsB,EAAG,MAAM;AAC/B;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY;AACAC,MAAAA,aAAa,EAAG,IAAI;AACpBC,MAAAA,wBAAwB,EAAG,IAAI;AAC/B;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYC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;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACId,EAAAA,mBAAmBA,CAACloC,WAAW,EAAEC,cAAc,EAAEg7B,cAAc,GAAG,KAAK,EAAEgO,OAAO,GAAG,KAAK,EAAE;IACtF,OAAO,IAAI,CAACv2B,kBAAkB,CAACw1B,mBAAmB,CAAC,GAAG1qC,SAAS,CAAC,CAAA;AACpE,GAAA;AACA;AACA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI0rC,EAAAA,UAAUA,CAACzpC,KAAK,EAAEw7B,cAAc,GAAG,KAAK,EAAE;AACtC,IAAA,OAAOx7B,KAAK,CAACwX,SAAS,CAACjd,GAAG,CAACgF,QAAQ,IAAI,IAAI,CAACkpC,mBAAmB,CAACzoC,KAAK,EAAET,QAAQ,EAAEi8B,cAAc,CAAC,CAAC,CAAA;AACrG,GAAA;AACA;AACA;AACA;AACA;EACA,IAAI3E,WAAWA,GAAG,EAAC;AACvB,CAAC;;AChFD;AACA;AACA;AACA,MAAM6S,cAAc,GAAG,CACnB,aAAa,EACb,MAAM,EACN,YAAY,EACZ,YAAY,EACZ,UAAU,EACV,WAAW,CACd,CAAA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAetU,CAAAA,MAAM,IAAI,MAAMuU,cAAc,UAAUvU,MAAM,IAAIn2B,IAAI,EAAE;EACnE,WAAWpG,KAAKA,GAAG;AACf,IAAA,OAAO,gBAAgB,CAAA;AAC3B,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACI+wC,EAAAA,QAAQA,GAAG;AACP,IAAA,OAAO99B,YAAY,CAAC49B,cAAc,CAAC,KAAK,CAACE,QAAQ,EAAE,EAAE,IAAI,EAAEF,c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CAAC,gBAAgB,EAAE,8BAA8B,CAAC;AAC1DC,EAAAA,GAAG,EAAK,cAAA;AACZ,CAAC,CAAA;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMC,aAAa,SAASC,YAAY,CAACzhD,KAAK,CACzD0hD,eAAe,EACfC,WAAW,EACXnsB,YAAY,EACZyB,kBAAkB,EAClBsK,eAAe,EACf2F,eAAe,EACf4C,cAAc,EACdtS,uBAAuB,EACvB6R,gBAAgB,EAChBuY,uBAAc,EACdC,wBAAe,EACfC,aACJ,CAAC,CAAC;AACE;EACA,WAAW9oD,KAAKA,GAAG;AACf,IAAA,OAAO,eAAe,CAAA;AAC1B,GAAA;AACA;EACA,WAAW6D,IAAIA,GAAG;AACd,IAAA,OAAO,eAAe,CAAA;AAC1B,GAAA;EACA,WAAW5D,YAAYA,GAAG;IACtB,OAAO;AACH;AACZ;AACA;AACA;AACA;AACY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACYuC,MAAAA,IAAI,EAAG;AACHU,QAAAA,KAAK,EAAG,IAAI;AACZ+U,QAAAA,OAAO,EAAG;AACNC,UAAAA,KAAK,EAAG,MAAA;AACZ,SAAA;OACH;AACD;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY6wC,MAAAA,QAAQ,EAAG,MAAM;AACjB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACYrN,MAAAA,KAAK,EAAG,MAAM;AACd;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYnvB,MAAAA,kBAAkB,EAAG,IAAI;AACzB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACYy8B,sBAAsB,EAAG,EAAE;AAC3B;AACZ;AACA;AACA;AACA;AACY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,qBAAqB,EAAG,IAAI;AAC5B;AACAC,MAAAA,uBAAuB,EAAG,sBAAsB;AAChD5qB,MAAAA,kBAAkB,EAAQ,OAAO;AACjC6qB,MAAAA,gBAAgB,EAAU,eAAA;KAC7B,CAAA;AACL,GAAA;EACA,WAAW9iD,aAAaA,GAAG;IACvB,OAAO;AACH;AACZ;AACA;AACA;AACA;AACA;AACYoa,MAAAA,IAAI,EAAG,YAAY;AACnB;AACZ;AACA;AACA;AACA;AACA;AACA;AACY4jB,MAAAA,QAAQ,EAAG,aAAa;AACxB;AACZ;AACA;AACA;AACA;AACA;AACA;AACY+kB,MAAAA,WAAW,EAAG,qBAAqB;AACnC;AACZ;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,uBAAuB,EAAG,mBAAmB;AAC7C;AACZ;AACA;AACA;AACA;AACA;AACYxrC,MAAAA,YAAY,EAAG,IAAI;AACnB;AACZ;AACA;AACA;AACA;AACA;AACY+jB,MAAAA,SAAS,EAAG,EAAE;AACd;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY;AACZ;AACA;AACA;A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"}