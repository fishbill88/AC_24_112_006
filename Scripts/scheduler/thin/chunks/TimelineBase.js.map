{"version":3,"file":"TimelineBase.js","sources":["../../../../chronograph/src/class/Base.js","../../../../Engine/lib/Engine/calendar/CalendarCacheIntervalMultiple.js","../../../../Engine/lib/Engine/calendar/CalendarCacheMultiple.js","../../../../Scheduler/lib/Scheduler/column/DurationColumn.js","../../../../Scheduler/lib/Scheduler/view/TimeAxisBase.js","../../../../Scheduler/lib/Scheduler/view/HorizontalTimeAxis.js","../../../../Scheduler/lib/Scheduler/view/ResourceHeader.js","../../../../Scheduler/lib/Scheduler/column/TimeAxisColumn.js","../../../../Scheduler/lib/Scheduler/preset/ViewPreset.js","../../../../Scheduler/lib/Scheduler/preset/PresetStore.js","../../../../Scheduler/lib/Scheduler/preset/PresetManager.js","../../../../Scheduler/lib/Scheduler/data/TimeAxis.js","../../../../Scheduler/lib/Scheduler/feature/base/DragBase.js","../../../../Scheduler/lib/Scheduler/feature/EventResize.js","../../../../Scheduler/lib/Scheduler/feature/base/DragCreateBase.js","../../../../Scheduler/lib/Scheduler/feature/base/TooltipBase.js","../../../../Scheduler/lib/Scheduler/feature/AbstractTimeRanges.js","../../../../Scheduler/lib/Scheduler/feature/ColumnLines.js","../../../../Scheduler/lib/Scheduler/feature/mixin/DependencyCreation.js","../../../../Scheduler/lib/Scheduler/feature/mixin/DependencyGridCache.js","../../../../Scheduler/lib/Scheduler/util/RectangularPathFinder.js","../../../../Scheduler/lib/Scheduler/feature/mixin/DependencyLineGenerator.js","../../../../Scheduler/lib/Scheduler/feature/mixin/DependencyTooltip.js","../../../../Scheduler/lib/Scheduler/feature/Dependencies.js","../../../../Scheduler/lib/Scheduler/feature/EventFilter.js","../../../../Scheduler/lib/Scheduler/feature/mixin/NonWorkingTimeMixin.js","../../../../Scheduler/lib/Scheduler/feature/NonWorkingTime.js","../../../../Scheduler/lib/Scheduler/feature/ScheduleTooltip.js","../../../../Scheduler/lib/Scheduler/feature/TimeAxisHeaderMenu.js","../../../../Scheduler/lib/Scheduler/view/model/TimeAxisViewModel.js","../../../../Scheduler/lib/Scheduler/view/mixin/TimelineDateMapper.js","../../../../Scheduler/lib/Scheduler/view/mixin/TimelineDomEvents.js","../../../../Scheduler/lib/Scheduler/view/mixin/TimelineViewPresets.js","../../../../Scheduler/lib/Scheduler/view/mixin/TimelineZoomable.js","../../../../Scheduler/lib/Scheduler/view/mixin/TimelineEventRendering.js","../../../../Scheduler/lib/Scheduler/view/mixin/TimelineScroll.js","../../../../Scheduler/lib/Scheduler/view/mixin/TimelineState.js","../../../../Scheduler/lib/Scheduler/view/Header.js","../../../../Scheduler/lib/Scheduler/view/TimeAxisSubGrid.js","../../../../Scheduler/lib/Scheduler/view/TimelineBase.js"],"sourcesContent":["//---------------------------------------------------------------------------------------------------------------------\n/**\n * This is a base class, providing the type-safe static constructor [[new]]. This is very convenient when using\n * [[Mixin|mixins]], as mixins can not have types in the constructors.\n */\nexport class Base {\n    /**\n     * This method applies its 1st argument (if any) to the current instance using `Object.assign()`.\n     *\n     * Supposed to be overridden in the subclasses to customize the instance creation process.\n     *\n     * @param props\n     */\n    initialize(props) {\n        props && Object.assign(this, props);\n    }\n    /**\n     * This is a type-safe static constructor method, accepting a single argument, with the object, corresponding to the\n     * class properties. It will generate a compilation error, if unknown property is provided.\n     *\n     * For example:\n     *\n     * ```ts\n     * class MyClass extends Base {\n     *     prop     : string\n     * }\n     *\n     * const instance : MyClass = MyClass.new({ prop : 'prop', wrong : 11 })\n     * ```\n     *\n     * will produce:\n     *\n     * ```plaintext\n     * TS2345: Argument of type '{ prop: string; wrong: number; }' is not assignable to parameter of type 'Partial<MyClass>'.\n     * Object literal may only specify known properties, and 'wrong' does not exist in type 'Partial<MyClass>'\n     * ```\n     *\n     * The only thing this constructor does is create an instance and call the [[initialize]] method on it, forwarding\n     * the first argument. The customization of instance is supposed to be performed in that method.\n     *\n     * @param props\n     */\n    static new(props) {\n        const instance = new this();\n        instance.initialize(props);\n        return instance;\n    }\n}\n","import { stripDuplicates } from \"../util/StripDuplicates.js\";\nexport class CalendarCacheIntervalMultiple {\n    constructor(config) {\n        this.intervalGroups = [];\n        config && Object.assign(this, config);\n    }\n    combineWith(interval) {\n        const copy = this.intervalGroups.slice();\n        copy.push([interval.calendar, interval]);\n        return new CalendarCacheIntervalMultiple({ intervalGroups: copy });\n    }\n    getIsWorkingForEvery() {\n        if (this.isWorkingForEvery != null)\n            return this.isWorkingForEvery;\n        for (let [_calendar, intervals] of this.getGroups()) {\n            if (!intervals[0].isWorking)\n                return this.isWorkingForEvery = false;\n        }\n        return this.isWorkingForEvery = true;\n    }\n    getIsWorkingForSome() {\n        if (this.isWorkingForSome != null)\n            return this.isWorkingForSome;\n        for (let [_calendar, intervals] of this.getGroups()) {\n            if (intervals[0].isWorking)\n                return this.isWorkingForSome = true;\n        }\n        return this.isWorkingForSome = false;\n    }\n    getCalendars() {\n        this.getGroups();\n        return this.calendars;\n    }\n    isCalendarWorking(calendar) {\n        return this.getCalendarsWorkStatus().get(calendar);\n    }\n    getCalendarsWorkStatus() {\n        if (this.calendarsWorkStatus)\n            return this.calendarsWorkStatus;\n        const res = new Map();\n        for (let [calendar, intervals] of this.getGroups()) {\n            // <remove-on-release>\n            // TODO: fix types\n            // </remove-on-release>\n            res.set(calendar, intervals[0].isWorking);\n        }\n        return this.calendarsWorkStatus = res;\n    }\n    getCalendarsWorking() {\n        if (this.calendarsWorking)\n            return this.calendarsWorking;\n        const calendars = [];\n        for (let [calendar, intervals] of this.getGroups()) {\n            // <remove-on-release>\n            // TODO: fix types\n            // </remove-on-release>\n            if (intervals[0].isWorking)\n                calendars.push(calendar);\n        }\n        return this.calendarsWorking = calendars;\n    }\n    getCalendarsNonWorking() {\n        if (this.calendarsNonWorking)\n            return this.calendarsNonWorking;\n        const calendars = [];\n        for (let [calendar, intervals] of this.getGroups()) {\n            // <remove-on-release>\n            // TODO: fix types\n            // </remove-on-release>\n            if (!intervals[0].isWorking)\n                calendars.push(calendar);\n        }\n        return this.calendarsNonWorking = calendars;\n    }\n    getGroups() {\n        if (this.intervalsByCalendar)\n            return this.intervalsByCalendar;\n        const calendars = this.calendars = [];\n        const intervalsByCalendar = new Map();\n        this.intervalGroups.forEach(([calendar, interval]) => {\n            let data = intervalsByCalendar.get(calendar);\n            if (!data) {\n                calendars.push(calendar);\n                data = [];\n                intervalsByCalendar.set(calendar, data);\n            }\n            data.push.apply(data, interval.intervals);\n        });\n        intervalsByCalendar.forEach((intervals, calendar) => {\n            const unique = stripDuplicates(intervals);\n            unique.sort(\n            // sort in decreasing order\n            (interval1, interval2) => interval2.getPriorityField() - interval1.getPriorityField());\n            intervalsByCalendar.set(calendar, unique);\n        });\n        return this.intervalsByCalendar = intervalsByCalendar;\n    }\n}\n","import { stripDuplicates } from \"../util/StripDuplicates.js\";\nimport { CalendarCache } from \"./CalendarCache.js\";\nimport { CalendarCacheIntervalMultiple } from \"./CalendarCacheIntervalMultiple.js\";\nimport { IntervalCache } from \"./IntervalCache.js\";\n/**\n * The calendar cache for combination of multiple calendars\n */\nexport class CalendarCacheMultiple extends CalendarCache {\n    constructor(config) {\n        super(config);\n        this.calendarCaches = stripDuplicates(this.calendarCaches);\n        this.intervalCache = new IntervalCache({\n            emptyInterval: new CalendarCacheIntervalMultiple(),\n            combineIntervalsFn: (interval1, interval2) => {\n                return interval1.combineWith(interval2);\n            }\n        });\n    }\n    fillCache(startDate, endDate) {\n        this.calendarCaches.forEach(calendarCache => {\n            calendarCache.fillCache(startDate, endDate);\n            this.includeWrappingRangeFrom(calendarCache, startDate, endDate);\n        });\n    }\n}\nconst COMBINED_CALENDARS_CACHE = new Map();\nexport const combineCalendars = (calendars) => {\n    const uniqueOnly = stripDuplicates(calendars);\n    if (uniqueOnly.length === 0)\n        throw new Error(\"No calendars to combine\");\n    uniqueOnly.sort((calendar1, calendar2) => {\n        if (calendar1.internalId < calendar2.internalId)\n            return -1;\n        else\n            return 1;\n    });\n    const hash = uniqueOnly.map(calendar => calendar.internalId + '/').join('');\n    const versionsHash = uniqueOnly.map(calendar => calendar.version + '/').join('');\n    let cached = COMBINED_CALENDARS_CACHE.get(hash);\n    let res;\n    if (cached && cached.versionsHash === versionsHash)\n        res = cached.cache;\n    else {\n        res = new CalendarCacheMultiple({ calendarCaches: uniqueOnly.map(calendar => calendar.calendarCache) });\n        // COMBINED_CALENDARS_CACHE.set(hash, {\n        //     versionsHash    : versionsHash,\n        //     cache           : res\n        // })\n    }\n    return res;\n};\n","import ColumnStore from '../../Grid/data/ColumnStore.js';\nimport NumberColumn from '../../Grid/column/NumberColumn.js';\nimport Duration from '../../Core/data/Duration.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\nimport ObjectHelper from '../../Core/helper/ObjectHelper.js';\nimport '../../Core/widget/DurationField.js';\n\n/**\n * @module Scheduler/column/DurationColumn\n */\n\n/**\n * A column showing the task {@link Scheduler/model/TimeSpan#field-fullDuration duration}. Please note, this column\n * is preconfigured and expects its field to be of the {@link Core.data.Duration} type.\n *\n * The default editor is a {@link Core.widget.DurationField}. It parses time units, so you can enter \"4d\"\n * indicating 4 days duration, or \"4h\" indicating 4 hours, etc. The numeric magnitude can be either an integer or a\n * float value. Both \",\" and \".\" are valid decimal separators. For example, you can enter \"4.5d\" indicating 4.5 days\n * duration, or \"4,5h\" indicating 4.5 hours.\n *\n * {@inlineexample Scheduler/column/DurationColumn.js}\n * @extends Grid/column/NumberColumn\n * @classType duration\n * @column\n */\nexport default class DurationColumn extends NumberColumn {\n    compositeField = true;\n\n    //region Config\n\n    static get $name() {\n        return 'DurationColumn';\n    }\n\n    static get type() {\n        return 'duration';\n    }\n\n    static get isGanttColumn() {\n        return true;\n    }\n\n    static get fields() {\n        return [\n            /**\n             * Precision of displayed duration, defaults to use {@link Scheduler.view.Scheduler#config-durationDisplayPrecision}.\n             * Specify an integer value to override that setting, or `false` to use raw value\n             * @config {Number|Boolean} decimalPrecision\n             */\n            { name : 'decimalPrecision', defaultValue : 1 }\n        ];\n    }\n\n    static get defaults() {\n        return {\n            /**\n             * Min value\n             * @config {Number}\n             */\n            min : null,\n\n            /**\n             * Max value\n             * @config {Number}\n             */\n            max : null,\n\n            /**\n             * Step size for spin button clicks.\n             * @member {Number} step\n             */\n            /**\n             * Step size for spin button clicks. Also used when pressing up/down keys in the field.\n             * @config {Number}\n             * @default\n             */\n            step : 1,\n\n            /**\n             * Large step size, defaults to 10 * `step`. Applied when pressing SHIFT and stepping either by click or\n             * using keyboard.\n             * @config {Number}\n             * @default 10\n             */\n            largeStep : 0,\n\n            field         : 'fullDuration',\n            text          : 'L{Duration}',\n            instantUpdate : true,\n            // Undocumented, used by Filter feature to get type of the filter field\n            filterType    : 'duration',\n\n            sortable(durationEntity1, durationEntity2) {\n                const\n                    ms1 = durationEntity1[this.field],\n                    ms2 = durationEntity2[this.field];\n\n                return ms1 - ms2;\n            }\n        };\n    }\n\n    construct() {\n        super.construct(...arguments);\n\n        const sortFn = this.sortable;\n\n        this.sortable = (...args) => sortFn.call(this, ...args);\n    }\n\n    get defaultEditor() {\n        const { max, min, step, largeStep } = this;\n\n        // Remove any undefined configs, to allow config system to use default values instead\n        return ObjectHelper.cleanupProperties({\n            type : 'duration',\n            name : this.field,\n            max,\n            min,\n            step,\n            largeStep\n        });\n    }\n\n    //endregion\n\n    //region Internal\n\n    get durationUnitField() {\n        return `${this.field}Unit`;\n    }\n\n    roundValue(duration) {\n        const\n            nbrDecimals = typeof this.grid.durationDisplayPrecision === 'number' ? this.grid.durationDisplayPrecision : this.decimalPrecision,\n            multiplier  = Math.pow(10, nbrDecimals),\n            rounded     = Math.round(duration * multiplier) / multiplier;\n\n        return rounded;\n    }\n\n    formatValue(duration, durationUnit) {\n        if (duration instanceof Duration) {\n            durationUnit = duration.unit;\n            duration     = duration.magnitude;\n        }\n\n        duration = this.roundValue(duration);\n\n        return duration + ' ' + DateHelper.getLocalizedNameOfUnit(durationUnit, duration !== 1);\n    }\n\n    //endregion\n\n    //region Render\n\n    defaultRenderer({ record, isExport }) {\n        const\n            value         = record[this.field],\n            type          = typeof value,\n            durationValue = type === 'number' ? value : value?.magnitude,\n            durationUnit  = type === 'number' ? record[this.durationUnitField] : value?.unit;\n\n        // in case of bad input (for instance NaN, undefined or NULL value)\n        if (typeof durationValue !== 'number') {\n            return isExport ? '' : null;\n        }\n\n        return this.formatValue(durationValue, durationUnit);\n    }\n\n    //endregion\n\n    // Used with CellCopyPaste as fullDuration doesn't work via record.get\n    toClipboardString({ record }) {\n        return record[this.field].toString();\n    }\n\n    fromClipboardString({ string, record }) {\n        const duration = DateHelper.parseDuration(string, true, this.durationUnit);\n\n        if (duration && 'magnitude' in duration) {\n            return duration;\n        }\n\n        return record.fullDuration;\n    }\n\n    calculateFillValue({ value, record }) {\n        return this.fromClipboardString({ string : value, record });\n    }\n\n}\n\nColumnStore.registerColumnType(DurationColumn);\n","import Widget from '../../Core/widget/Widget.js';\nimport DomSync from '../../Core/helper/DomSync.js';\n\n/**\n * @module Scheduler/view/TimeAxisBase\n */\n\nfunction isLastLevel(level, levels) {\n    return level === levels.length - 1;\n}\n\nfunction isLastCell(level, cell) {\n    return cell === level.cells[level.cells.length - 1];\n}\n\n/**\n * Base class for HorizontalTimeAxis and VerticalTimeAxis. Contains shared functionality to only render ticks in view,\n * should not be used directly.\n *\n * @extends Core/widget/Widget\n * @private\n * @abstract\n */\nexport default class TimeAxisBase extends Widget {\n\n    static $name = 'TimeAxisBase';\n\n    //region Config\n\n    static configurable = {\n        /**\n         * The minimum width for a bottom row header cell to be considered 'compact', which adds a special CSS class\n         * to the row (for special styling). Copied from Scheduler/Gantt.\n         * @config {Number}\n         * @default\n         */\n        compactCellWidthThreshold : 15,\n\n        // TimeAxisViewModel\n        model : null,\n\n        cls : null,\n\n        /**\n         * Style property to use as cell size. Either width or height depending on orientation\n         * @config {'width'|'height'}\n         * @private\n         */\n        sizeProperty : null,\n\n        /**\n         * Style property to use as cells position. Either left or top depending on orientation\n         * @config {'left'|'top'}\n         * @private\n         */\n        positionProperty : null\n    };\n\n    startDate = null;\n    endDate   = null;\n    levels    = [];\n    size      = null;\n\n    // Set visible date range\n    set range({ startDate, endDate }) {\n        const me = this;\n\n        // Only process a change\n        if (me.startDate - startDate || me.endDate - endDate) {\n            me.startDate = startDate;\n            me.endDate = endDate;\n            me.refresh();\n        }\n    }\n\n    //endregion\n\n    //region Html & rendering\n\n    // Generates element configs for all levels defined by the current ViewPreset\n    buildCells(start = this.startDate, end = this.endDate) {\n        const\n            me                   = this,\n            { sizeProperty }     = me,\n            {\n                stickyHeaders,\n                isVertical\n            }                    = me.client || {},\n            featureHeaderConfigs = [],\n            { length }           = me.levels;\n\n        const cellConfigs = me.levels.map((level, i) => {\n            const stickyHeader = stickyHeaders && (isVertical || i < length - 1);\n\n            return {\n                className : {\n                    'b-sch-header-row'                     : 1,\n                    [`b-sch-header-row-${level.position}`] : 1,\n                    'b-sch-header-row-main'                : i === me.model.viewPreset.mainHeaderLevel,\n                    'b-lowest'                             : isLastLevel(i, me.levels),\n                    'b-sticky-header'                      : stickyHeader\n                },\n                syncOptions : {\n                    // Keep a maximum of 5 released cells. Might be fine with fewer since ticks are fixed width.\n                    // Prevents an unnecessary amount of cells from sticking around when switching from narrow to\n                    // wide tickSizes\n                    releaseThreshold : 5,\n                    syncIdField      : 'tickIndex'\n                },\n                dataset : {\n                    headerFeature  : `headerRow${i}`,\n                    headerPosition : level.position\n                },\n                // Only include cells in view\n                children : level.cells?.filter(cell => cell.start < end && cell.end > start).map((cell, j) => ({\n                    role      : 'presentation',\n                    className : {\n                        'b-sch-header-timeaxis-cell' : 1,\n                        [cell.headerCellCls]         : cell.headerCellCls,\n                        [`b-align-${cell.align}`]    : cell.align,\n                        'b-last'                     : isLastCell(level, cell)\n                    },\n                    dataset : {\n                        tickIndex : cell.index,\n                        // Used in export tests to resolve dates from tick elements\n                        ...globalThis.DEBUG && { date : cell.start.getTime() }\n                    },\n                    style : {\n                        // DomHelper appends px to numeric dimensions\n                        [me.positionProperty]   : cell.coord,\n                        [sizeProperty]          : cell.width,\n                        [`min-${sizeProperty}`] : cell.width\n                    },\n                    children : [\n                        {\n                            tag       : 'span',\n                            role      : 'presentation',\n                            className : {\n                                'b-sch-header-text' : 1,\n                                'b-sticky-header'   : stickyHeader\n                            },\n                            html : cell.value\n                        }\n                    ]\n                }))\n            };\n        });\n\n        // When tested in isolation there is no client\n        me.client?.getHeaderDomConfigs(featureHeaderConfigs);\n\n        cellConfigs.push(...featureHeaderConfigs);\n\n        // noinspection JSSuspiciousNameCombination\n        return {\n            className   : me.widgetClassList,\n            syncOptions : {\n                // Do not keep entire levels no longer used, for example after switching view preset\n                releaseThreshold : 0\n            },\n            children : cellConfigs\n        };\n    }\n\n    render(targetElement) {\n        super.render(targetElement);\n\n        this.refresh(true);\n    }\n\n    /**\n     * Refresh the UI\n     * @param {Boolean} [rebuild] Specify `true` to force a rebuild of the underlying header level definitions\n     */\n    refresh(rebuild = !this.levels.length) {\n        const\n            me               = this,\n            { columnConfig } = me.model,\n            { levels }       = me,\n            oldLevelsCount   = levels.length;\n\n        if (rebuild) {\n            levels.length = 0;\n\n            columnConfig.forEach((cells, position) => levels[position] = {\n                position,\n                cells\n            });\n\n            me.size = levels[0].cells.reduce((sum, cell) => sum + cell.width, 0);\n\n            const { parentElement } = me.element;\n\n            // Don't mutate a classList unless necessary. Browsers invalidate the style.\n            if (parentElement && (levels.length !== oldLevelsCount || rebuild)) {\n                parentElement.classList.remove(`b-sch-timeaxiscolumn-levels-${oldLevelsCount}`);\n                parentElement.classList.add(`b-sch-timeaxiscolumn-levels-${levels.length}`);\n            }\n        }\n\n        if (!me.startDate || !me.endDate) {\n            return;\n        }\n\n        // Boil down levels to only show what is in view\n        DomSync.sync({\n            domConfig     : me.buildCells(),\n            targetElement : me.element,\n            syncIdField   : 'headerFeature'\n        });\n\n        me.trigger('refresh');\n    }\n\n    //endregion\n\n    // Our widget class doesn't include \"base\".\n    get widgetClass() {\n        return 'b-timeaxis';\n    }\n}\n","import TimeAxisBase from './TimeAxisBase.js';\n\n/**\n * @module Scheduler/view/HorizontalTimeAxis\n */\n\n/**\n * A visual horizontal representation of the time axis described in the\n * {@link Scheduler.preset.ViewPreset#field-headers} field.\n * Normally you should not interact with this class directly.\n *\n * @extends Scheduler/view/TimeAxisBase\n * @private\n */\nexport default class HorizontalTimeAxis extends TimeAxisBase {\n\n    //region Config\n\n    static $name = 'HorizontalTimeAxis';\n\n    static type = 'horizontaltimeaxis';\n\n    static configurable = {\n        model        : null,\n        sizeProperty : 'width'\n    };\n\n    //endregion\n\n    get positionProperty() {\n        return this.owner?.rtl ? 'right' : 'left';\n    }\n\n    get width() {\n        return this.size;\n    }\n\n    onModelUpdate() {\n        // Force rebuild when availableSpace has changed, to recalculate width and maybe apply compact styling\n        // <remove-on-release>\n        // TODO: this.width is the scrollWidth and this.model.availableSpace is the clientWidth\n        //  These are always going to be different (unless forceFit is set on the Gantt), so theres\n        //  no optimization. Likely this should always refresh(true) anyway since we do not know *what*\n        //  changed in the model update.\n        //  Time axis sub grid could also be collapsed (availableSpace === 0)\n        // </remove-on-release>\n        if (this.model.availableSpace > 0 && this.model.availableSpace !== this.width) {\n            this.refresh(true);\n        }\n    }\n\n    updateModel(timeAxisViewModel) {\n        this.detachListeners('tavm');\n\n        timeAxisViewModel?.ion({\n            name    : 'tavm',\n            update  : 'onModelUpdate',\n            thisObj : this\n        });\n    }\n}\n","import Widget from '../../Core/widget/Widget.js';\nimport DomHelper from '../../Core/helper/DomHelper.js';\nimport DomSync from '../../Core/helper/DomSync.js';\nimport EventHelper from '../../Core/helper/EventHelper.js';\nimport DomClassList from '../../Core/helper/util/DomClassList.js';\nimport StringHelper from '../../Core/helper/StringHelper.js';\nimport AvatarRendering from '../../Core/widget/util/AvatarRendering.js';\n\n/**\n * @module Scheduler/view/ResourceHeader\n */\n\n/**\n * Header widget that renders resource column headers and acts as the interaction point for resource columns in vertical\n * mode. Note that it uses virtual rendering and element reusage to gain performance, only headers in view are available\n * in DOM. Because of this you should avoid direct element manipulation, any such changes can be discarded at any time.\n *\n * By default, it displays resources `name` and also applies its `iconCls` if any, like this:\n *\n * ```html\n * <i class=\"iconCls\">name</i>\n * ```\n *\n * If Scheduler is configured with a {@link Scheduler.view.Scheduler#config-resourceImagePath} the\n * header will render miniatures for the resources, using {@link Scheduler.model.ResourceModel#field-imageUrl}\n * or {@link Scheduler.model.ResourceModel#field-image} with fallback to\n * {@link Scheduler.model.ResourceModel#field-name} + {@link Scheduler.view.Scheduler#config-resourceImageExtension}\n * for unset values.\n *\n * The contents and styling of the resource cells in the header can be customized using {@link #config-headerRenderer}:\n *\n * ```javascript\n * new Scheduler({\n *     mode            : 'vertical',\n *     resourceColumns : {\n *         headerRenderer : ({ resourceRecord }) => `Hello ${resourceRecord.name}`\n *     }\n * }\n *```\n *\n * The width of the resource columns is determined by the {@link #config-columnWidth} config.\n *\n * @extends Core/widget/Widget\n */\nexport default class ResourceHeader extends Widget {\n\n    //region Config\n\n    static $name = 'ResourceHeader';\n\n    static type = 'resourceheader';\n\n    static configurable = {\n        /**\n         * Resource store used to render resource headers. Assigned from Scheduler.\n         * @config {Scheduler.data.ResourceStore}\n         * @private\n         */\n        resourceStore : null,\n\n        /**\n         * Custom header renderer function. Can be used to manipulate the element config used to create the element\n         * for the header:\n         *\n         * ```javascript\n         * new Scheduler({\n         *   resourceColumns : {\n         *     headerRenderer({ elementConfig, resourceRecord }) {\n         *       elementConfig.dataset.myExtraData = 'extra';\n         *       elementConfig.style.fontWeight = 'bold';\n         *     }\n         *   }\n         * });\n         * ```\n         *\n         * See {@link DomConfig} for more information.\n         * Please take care to not break the default configs :)\n         *\n         * Or as a template by returning HTML from the function:\n         *\n         * ```javascript\n         * new Scheduler({\n         *   resourceColumns : {\n         *     headerRenderer : ({ resourceRecord }) => `\n         *       <div class=\"my-custom-template\">\n         *       ${resourceRecord.firstName} {resourceRecord.surname}\n         *       </div>\n         *     `\n         *   }\n         * });\n         * ```\n         *\n         * NOTE: When using `headerRenderer` no default internal markup is applied to the resource header cell,\n         * `iconCls` and {@link Scheduler.model.ResourceModel#field-imageUrl} or {@link Scheduler.model.ResourceModel#field-image}\n         * will have no effect unless you supply custom markup for them.\n         *\n         * @config {Function}\n         * @param {Object} params Object containing the params below\n         * @param {Scheduler.model.ResourceModel} params.resourceRecord Resource whose header is being rendered\n         * @param {DomConfig} params.elementConfig A config object used to create the element for the resource\n         */\n        headerRenderer : null,\n\n        /**\n         * Set to `false` to render just the resource name, `true` to render an avatar (or initials if no image exists)\n         * @config {Boolean}\n         * @default true\n         */\n        showAvatars : {\n            value : true,\n\n            $config : 'nullify'\n        },\n\n        /**\n         * Assign to toggle resource columns **fill* mode. `true` means they will stretch (grow) to fill viewport, `false`\n         * that they will respect their configured `columnWidth`.\n         *\n         * This is ignored if *any* resources are loaded with {@link Scheduler.model.ResourceModel#field-columnWidth}.\n         * @member {Boolean} fillWidth\n         */\n        /**\n         * Automatically resize resource columns to **fill** available width. Set to `false` to always respect the\n         * configured `columnWidth`.\n         *\n         * This is ignored if *any* resources are loaded with {@link Scheduler.model.ResourceModel#field-columnWidth}.\n         * @config {Boolean}\n         * @default\n         */\n        fillWidth : true,\n\n        /**\n         * Assign to toggle resource columns **fit* mode. `true` means they will grow or shrink to always fit viewport,\n         * `false` that they will respect their configured `columnWidth`.\n         *\n         * This is ignored if *any* resources are loaded with {@link Scheduler.model.ResourceModel#field-columnWidth}.\n         * @member {Boolean} fitWidth\n         */\n        /**\n         * Automatically resize resource columns to always **fit** available width.\n         *\n         * This is ignored if *any* resources are loaded with {@link Scheduler.model.ResourceModel#field-columnWidth}.\n         * @config {Boolean}\n         * @default\n         */\n        fitWidth : false,\n\n        /**\n         * Width for each resource column.\n         *\n         * This is used for resources which are not are loaded with a {@link Scheduler.model.ResourceModel#field-columnWidth}.\n         * @config {Number}\n         */\n        columnWidth : 150,\n\n        // Copied from Scheduler#resourceImagePath on creation in TimeAxisColumn.js\n        imagePath : null,\n\n        // Copied from Scheduler#resourceImageExtension on creation in TimeAxisColumn.js\n        imageExtension : null,\n\n        // Copied from Scheduler#defaultResourceImageName on creation in TimeAxisColumn.js\n        defaultImageName : null,\n\n        availableWidth : null\n    };\n\n    /**\n     * An index of the first visible resource in vertical mode\n     * @property {Number}\n     * @readonly\n     * @private\n     */\n    firstResource = -1;\n    /**\n     * An index of the last visible resource in vertical mode\n     * @property {Number}\n     * @readonly\n     * @private\n     */\n    lastResource  = -1;\n\n    //endregion\n\n    //region Init\n\n    construct(config) {\n        const me = this;\n\n        // Inject this into owning Scheduler early because code further down\n        // can call code which uses scheduler.resourceColumns.\n        config.scheduler._resourceColumns = me;\n\n        super.construct(config);\n\n        if (me.imagePath != null) {\n            // Need to increase height a bit when displaying images\n            me.element.classList.add('b-has-images');\n        }\n\n        EventHelper.on({\n            element     : me.element,\n            delegate    : '.b-resourceheader-cell',\n            capture     : true,\n            click       : 'onResourceMouseEvent',\n            dblclick    : 'onResourceMouseEvent',\n            contextmenu : 'onResourceMouseEvent',\n            thisObj     : me\n        });\n    }\n\n    changeShowAvatars(show) {\n        this.avatarRendering?.destroy();\n\n        if (show) {\n            this.avatarRendering = new AvatarRendering({\n                element : this.element\n            });\n        }\n\n        return show;\n    }\n\n    updateShowAvatars() {\n        if (!this.isConfiguring) {\n            this.refresh();\n        }\n    }\n\n    //endregion\n\n    //region ResourceStore\n\n    updateResourceStore(store) {\n        const me = this;\n\n        me.detachListeners('resourceStore');\n\n        if (store) {\n            store.ion({\n                name            : 'resourceStore',\n                changePreCommit : 'onResourceStoreDataChange',\n                thisObj         : me\n            });\n\n            // Already have data? Update width etc\n            if (store.count) {\n                me.onResourceStoreDataChange({});\n            }\n        }\n    }\n\n    // Redraw resource headers on any data change\n    onResourceStoreDataChange({ action }) {\n        const me    = this;\n\n        // These must be ingested before we assess the source of column widths\n        // so that they can be cleared *after* their values have been cached.\n        me.getConfig('fillWidth');\n        me.getConfig('fitWidth');\n        me.updateWidthCache();\n\n        const\n            {\n                element\n            }     = me,\n            width = me.totalWidth;\n\n        // If we have some defined columnWidths in the resourceStore\n        // we must then bypass configured fitWidth and fillWidth behaviour.\n        if (me.scheduler.variableColumnWidths) {\n            me._fillWidth = me._fitWidth = false;\n        }\n        else {\n            me._fillWidth = me.configuredFillWidth;\n            me._fitWidth = me.configuredFitWidth;\n        }\n\n        if (width !== me.width) {\n            DomHelper.setLength(element, 'width', width);\n            // During setup, silently set the width. It will then render correctly. After setup, let the world know...\n            me.column.set('width', width, me.column.grid.isConfiguring);\n        }\n\n        if (action === 'removeall') {\n            // Keep nothing\n            element.innerHTML = '';\n        }\n\n        if (action === 'remove' || action === 'add' || action === 'filter' || me.fitWidth || me.fillWidth) {\n            me.refreshWidths();\n        }\n\n        me.column.grid.toggleEmptyText();\n    }\n\n    get totalWidth() {\n        return this.updateWidthCache();\n    }\n\n    updateWidthCache() {\n        let result          = 0;\n        const { scheduler } = this;\n\n        // Flag so that VerticalRendering#getResourceRange knows\n        // whether to use fast or slow mode to ascertain visible columns.\n        scheduler.variableColumnWidths = false;\n\n        scheduler.resourceStore.forEach(resource => {\n            // Set the start position for each resource with respect to the widths\n            resource.instanceMeta(scheduler).insetStart = result;\n            resource.instanceMeta(scheduler).insetEnd   = result + (resource.columnWidth || scheduler.resourceColumnWidth);\n\n            if (resource.columnWidth == null) {\n                result += scheduler.resourceColumnWidth;\n            }\n            else {\n                result += resource.columnWidth;\n                scheduler.variableColumnWidths = true;\n            }\n        });\n\n        return result;\n    }\n\n    //endregion\n\n    //region Properties\n\n    changeColumnWidth(columnWidth) {\n        // Cache configured value, because if *all* resources have their own columnWidths\n        // the property will be nulled, but if we ever recieve a new resource with no\n        // columnWidth, or a columnWidth is nulled, we then have to fall back to using this.\n        if (!this.refreshingWidths) {\n            this.configuredColumnWidth = columnWidth;\n        }\n        return columnWidth;\n    }\n\n    updateColumnWidth(width, oldWidth) {\n        const me = this;\n\n        // Flag set in refreshWidths, do not want to create a loop\n        if (!me.refreshingWidths) {\n            me.refreshWidths();\n        }\n\n        if (!me.isConfiguring) {\n            // If resources are grouped, I need to refresh manually the cached width of resource header columns\n            if (me.resourceStore.isGrouped) {\n                me.updateWidthCache();\n            }\n\n            me.refresh();\n            // Cannot trigger with requested width, might have changed because of fit/fill\n            me.trigger('columnWidthChange', { width, oldWidth });\n        }\n    }\n\n    changeFillWidth(fillWidth) {\n        return this.configuredFillWidth = fillWidth;\n    }\n\n    updateFillWidth() {\n        if (!this.isConfiguring) {\n            this.refreshWidths();\n        }\n    }\n\n    changeFitWidth(fitWidth) {\n        return this.configuredFitWidth = fitWidth;\n    }\n\n    updateFitWidth() {\n        if (!this.isConfiguring) {\n            this.refreshWidths();\n        }\n    }\n\n    getImageURL(imageName) {\n        return StringHelper.joinPaths([this.imagePath || '', imageName || '']);\n    }\n\n    updateImagePath() {\n        if (!this.isConfiguring) {\n            this.refresh();\n        }\n    }\n\n    //endregion\n\n    //region Fit to width\n\n    updateAvailableWidth(width) {\n        this.refreshWidths();\n    }\n\n    // Updates the column widths according to fill and fit settings\n    refreshWidths() {\n        const\n            me    = this,\n            {\n                availableWidth,\n                configuredColumnWidth\n            }     = me,\n            count = me.resourceStore?.count;\n\n        // Bail out if availableWidth not yet set or resource store not assigned/loaded\n        // or column widths are defined in the resources.\n        if (!availableWidth || !count || me.scheduler.variableColumnWidths) {\n            return;\n        }\n\n        me.refreshingWidths = true;\n\n        const\n            // Fit width if configured to do so or if configured to fill and used width is less than available width\n            fit           = me.fitWidth || me.fillWidth && configuredColumnWidth * count < availableWidth,\n            useWidth      = fit ? Math.floor(availableWidth / count) : configuredColumnWidth,\n            shouldAnimate = me.column.grid.enableEventAnimations && Math.abs(me._columnWidth - useWidth) > 30;\n\n        DomHelper.addTemporaryClass(me.element, 'b-animating', shouldAnimate ? 300 : 0, me);\n\n        me.columnWidth = useWidth;\n\n        me.refreshingWidths = false;\n    }\n\n    //endregion\n\n    //region Rendering\n\n    // Visual resource range, set by VerticalRendering + its buffer\n    set visibleResources({ firstResource, lastResource }) {\n        this.firstResource = firstResource;\n        this.lastResource = lastResource;\n\n        this.updateWidthCache();\n        this.refresh();\n    }\n\n    /**\n     * Refreshes the visible headers\n     */\n    refresh() {\n        const\n            me         = this,\n            {\n                firstResource,\n                scheduler,\n                resourceStore,\n                lastResource\n            }          = me,\n            {\n                variableColumnWidths\n            }          = scheduler,\n            groupField = resourceStore.isGrouped && resourceStore.groupers[0].field,\n            configs    = [];\n\n        me.element.classList.toggle('b-grouped', Boolean(groupField));\n\n        if (!me.column.grid.isConfiguring && firstResource > -1 && lastResource > -1 && lastResource < resourceStore.count) {\n            let currentGroup;\n            // Gather element configs for resource headers in view\n            for (let i = firstResource; i <= lastResource; i++) {\n                const\n                    resourceRecord = resourceStore.allResourceRecords[i],\n                    groupRecord    = resourceRecord.instanceMeta(resourceStore).groupParent,\n                    groupChildren  = groupRecord?.groupChildren;\n\n                if (groupField && groupRecord.id !== currentGroup?.dataset.resourceId) {\n                    const\n                        groupLeft  = groupChildren[0].instanceMeta(scheduler).insetStart,\n                        groupWidth = groupChildren[groupChildren.length - 1].instanceMeta(scheduler).insetEnd - groupLeft;\n\n                    currentGroup = {\n                        className : 'b-resourceheader-group-cell',\n                        dataset   : {\n                            resourceId : groupRecord.id\n                        },\n                        style : {\n                            left  : groupLeft,\n                            width : groupWidth\n                        },\n                        children : [\n                            {\n                                tag  : 'span',\n                                html : StringHelper.encodeHtml(groupChildren[0][groupField])\n                            },\n                            {\n                                className : 'b-resourceheader-group-children',\n                                children  : []\n                            }\n                        ]\n                    };\n\n                    configs.push(currentGroup);\n                }\n\n                const\n                    instanceMeta  = resourceRecord.instanceMeta(scheduler),\n                    // Possible variable column width taken from the resources, fallback to scheduler's default\n                    width         = resourceRecord.columnWidth || me.columnWidth,\n                    position      = groupField ? instanceMeta.insetStart - currentGroup.style.left //groupChildren[0].instanceMeta(scheduler).insetStart\n                        : variableColumnWidths ? instanceMeta.insetStart : i * me.columnWidth,\n                    elementConfig = {\n                        // Might look like overkill to use DomClassList here, but can be used in headerRenderer\n                        className : new DomClassList({\n                            'b-resourceheader-cell' : 1\n                        }),\n                        dataset : {\n                            resourceId : resourceRecord.id\n                        },\n                        style : {\n                            [scheduler.rtl ? 'right' : 'left'] : position,\n                            width\n                        },\n                        children : []\n                    };\n\n                // Let a configured headerRenderer have a go at it before applying\n                if (me.headerRenderer) {\n                    const value = me.headerRenderer({ elementConfig, resourceRecord });\n\n                    if (value != null) {\n                        elementConfig.html = value;\n                    }\n                }\n                // No headerRenderer, apply default markup\n                else {\n                    let imageUrl;\n\n                    if (resourceRecord.imageUrl) {\n                        imageUrl = resourceRecord.imageUrl;\n                    }\n                    else {\n                        if (me.imagePath != null) {\n                            if (resourceRecord.image !== false) {\n                                const imageName = resourceRecord.image ||\n                                    resourceRecord.name?.toLowerCase() + me.imageExtension;\n                                imageUrl = me.getImageURL(imageName);\n                            }\n                        }\n                    }\n\n                    // By default showing resource name and optionally avatar\n                    elementConfig.children.push(\n                        me.showAvatars && me.avatarRendering.getResourceAvatar({\n                            resourceRecord,\n                            initials        : resourceRecord.initials,\n                            color           : resourceRecord.eventColor,\n                            iconCls         : resourceRecord.iconCls,\n                            defaultImageUrl : me.defaultImageName && me.getImageURL(me.defaultImageName),\n                            imageUrl\n                        }),\n                        {\n                            tag       : 'span',\n                            className : 'b-resource-name',\n                            html      : StringHelper.encodeHtml(resourceRecord.name)\n                        }\n                    );\n                }\n\n                if (groupField) {\n                    currentGroup.children[1].children.push(elementConfig);\n                }\n                else {\n                    configs.push(elementConfig);\n                }\n            }\n        }\n\n        // Sync changes to the header\n        DomSync.sync({\n            domConfig : {\n                onlyChildren : true,\n                children     : configs\n            },\n            targetElement : me.element,\n            syncIdField   : 'resourceId'\n            // <remove-on-release>\n            // TODO: Add callback here to trigger events when rendering/derendering header cells. Sooner or later\n            //  someone is going to ask for a way to render JSX or what not to the header\n            // </remove-on-release>\n        });\n    }\n\n    //endregion\n\n    onResourceMouseEvent(event) {\n        const\n            resourceCell   = event.target.closest('.b-resourceheader-cell'),\n            resourceRecord = this.resourceStore.getById(resourceCell.dataset.resourceId);\n\n        this.trigger('resourceHeader' + StringHelper.capitalize(event.type), {\n            resourceRecord,\n            event\n        });\n    }\n\n    // This function is not meant to be called by any code other than Base#getCurrentConfig().\n    // It extracts the current configs for the header, removing irrelevant ones\n    getCurrentConfig(options) {\n        const result = super.getCurrentConfig(options);\n\n        // Assigned from Scheduler\n        delete result.resourceStore;\n        delete result.column;\n        delete result.type;\n\n        return result;\n    }\n}\n","import WidgetColumn from '../../Grid/column/WidgetColumn.js';\nimport ColumnStore from '../../Grid/data/ColumnStore.js';\nimport Events from '../../Core/mixin/Events.js';\nimport HorizontalTimeAxis from '../view/HorizontalTimeAxis.js';\nimport ResourceHeader from '../view/ResourceHeader.js';\n\n/**\n * @module Scheduler/column/TimeAxisColumn\n */\n\n/**\n * A column containing the timeline \"viewport\", in which events, dependencies etc. are drawn.\n * Normally you do not need to interact with or create this column, it is handled by Scheduler.\n *\n * If you wish to output custom contents inside the time axis row cells, you can provide your custom column configuration\n * using the {@link #config-renderer} like so:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *    appendTo         : document.body\n *    columns          : [\n *       { text : 'Name', field : 'name', width : 130 },\n *       {\n *           type : 'timeAxis',\n *           renderer({ record, cellElement }) {\n *               return '<div class=\"cool-chart\"></div>';\n *           }\n *       }\n *    ]\n * });\n * ```\n *\n * @extends Grid/column/WidgetColumn\n * @column\n */\nexport default class TimeAxisColumn extends Events(WidgetColumn) {\n    //region Config\n\n    static $name = 'TimeAxisColumn';\n\n    static get fields() {\n        return [\n            // Exclude some irrelevant fields from getCurrentConfig()\n            { name : 'locked', persist : false },\n            { name : 'flex', persist : false },\n            { name : 'width', persist : false },\n            { name : 'cellCls', persist : false },\n            { name : 'field', persist : false },\n            'mode'\n        ];\n    }\n\n    static get defaults() {\n        return {\n            /**\n             * Set to false to prevent this column header from being dragged.\n             * @config {Boolean} draggable\n             * @category Interaction\n             * @default false\n             */\n            draggable : false,\n\n            /**\n             * Set to false to prevent grouping by this column.\n             * @config {Boolean} groupable\n             * @category Interaction\n             * @default false\n             */\n            groupable : false,\n\n            /**\n             * Allow column visibility to be toggled through UI.\n             * @config {Boolean} hideable\n             * @default false\n             * @category Interaction\n             */\n            hideable : false,\n\n            /**\n             * Show column picker for the column.\n             * @config {Boolean} showColumnPicker\n             * @default false\n             * @category Menu\n             */\n            showColumnPicker : false,\n\n            /**\n             * Allow filtering data in the column (if Filter feature is enabled)\n             * @config {Boolean} filterable\n             * @default false\n             * @category Interaction\n             */\n            filterable : false,\n\n            /**\n             * Allow sorting of data in the column\n             * @config {Boolean} sortable\n             * @category Interaction\n             * @default false\n             */\n            sortable : false,\n\n            /**\n             * Set to `false` to prevent the column from being drag-resized when the ColumnResize plugin is enabled.\n             * @config {Boolean} resizable\n             * @default false\n             * @category Interaction\n             */\n            resizable : false,\n\n            /**\n             * Allow searching in the column (respected by QuickFind and Search features)\n             * @config {Boolean} searchable\n             * @default false\n             * @category Interaction\n             */\n            searchable : false,\n\n            /**\n             * @config {String} editor\n             * @hide\n             */\n            editor : false,\n\n            /**\n             * Set to `true` to show a context menu on the cell elements in this column\n             * @config {Boolean} enableCellContextMenu\n             * @default false\n             * @category Menu\n             */\n            enableCellContextMenu : false,\n\n            /**\n             * @config {Function|Boolean} tooltipRenderer\n             * @hide\n             */\n            tooltipRenderer : false,\n\n            /**\n             * CSS class added to the header of this column\n             * @config {String} cls\n             * @category Rendering\n             * @default 'b-sch-timeaxiscolumn'\n             */\n            cls : 'b-sch-timeaxiscolumn',\n\n            // needs to have width specified, flex-basis messes measurements up\n            needWidth : true,\n\n            mode       : null,\n            region     : 'normal',\n            exportable : false,\n            htmlEncode : false\n        };\n    }\n\n    static get type() {\n        return 'timeAxis';\n    }\n\n    //region Init\n\n    construct(config) {\n        const me = this;\n\n        super.construct(...arguments);\n\n        me.thisObj = me;\n        me.timeAxisViewModel = me.grid.timeAxisViewModel;\n        // A bit hacky, because mode is a field and not a config\n        // eslint-disable-next-line no-self-assign\n        me.mode = me.mode;\n\n        me.grid.ion({\n            paint   : 'onTimelinePaint',\n            thisObj : me,\n            once    : true\n        });\n    }\n\n    static get autoExposeFields() {\n        return true;\n    }\n\n    // endregion\n\n    doDestroy() {\n        this.resourceColumns?.destroy();\n        this.timeAxisView?.destroy();\n        super.doDestroy();\n    }\n\n    set mode(mode) {\n        const\n            me       = this,\n            { grid } = me;\n\n        me.set('mode', mode);\n\n        // In horizontal mode this column has a time axis header on top, with timeline ticks\n        if (mode === 'horizontal') {\n            me.timeAxisView = new HorizontalTimeAxis({\n                model                     : me.timeAxisViewModel,\n                compactCellWidthThreshold : me.compactCellWidthThreshold,\n                owner                     : grid,\n                client                    : grid\n            });\n        }\n        // In vertical mode, it instead displays resources at top\n        else if (mode === 'vertical') {\n            // <remove-on-release>\n            // TODO: Most other vertical stuff is handled in VerticalRendering, move there?\n            // </remove-on-release>\n            me.resourceColumns = ResourceHeader.new({\n                column           : me,\n                scheduler        : grid,\n                resourceStore    : grid.resourceStore,\n                imagePath        : grid.resourceImagePath,\n                imageExtension   : grid.resourceImageExtension,\n                defaultImageName : grid.defaultResourceImageName\n            }, grid.resourceColumns || {});\n\n            me.relayEvents(me.resourceColumns, [\n                'resourceheaderclick',\n                'resourceheaderdblclick',\n                'resourceheadercontextmenu'\n            ]);\n        }\n    }\n\n    get mode() {\n        return this.get('mode');\n    }\n\n    // <remove-on-release>\n    // TODO: define all configs as fields and set below to false...\n    // </remove-on-release>\n\n    //region Events\n\n    onViewModelUpdate({ source : viewModel }) {\n        const me = this;\n\n        if (me.grid.timeAxisSubGrid.collapsed) {\n            return;\n        }\n\n        if (me.mode === 'horizontal') {\n            // render the time axis view into the column header element\n            me.refreshHeader(true);\n\n            me.width = viewModel.totalSize;\n\n            me.grid.refresh();\n\n            // When width is set above, that ends up on a columnsResized listener, but the refreshing of the fake\n            // scrollers to accommodate the new width is not done in this timeframe, so the upcoming centering related\n            // to preset change cannot work. So we have to refresh the fake scrollers now\n            me.subGrid.refreshFakeScroll();\n        }\n        else if (me.mode === 'vertical') {\n            // Refresh to rerender cells, in the process updating the vertical timeaxis to reflect view model changes\n            me.grid.refreshRows();\n        }\n    }\n\n    // Called on paint. SubGrid has its width so this is the earliest time to configure the TimeAxisViewModel with\n    // correct width\n    onTimelinePaint({ firstPaint }) {\n        const me = this;\n\n        if (!me.subGrid.insertRowsBefore) {\n            return;\n        }\n\n        if (firstPaint) {\n            me.subGridElement.classList.add('b-timeline-subgrid');\n\n            if (me.mode === 'vertical') {\n                me.refreshHeader();\n\n                // The above operation can cause height change.\n                me.grid?.onHeightChange();\n            }\n        }\n    }\n\n    //endregion\n\n    //region Rendering\n\n    /**\n     * Refreshes the columns header contents (which is either a HorizontalTimeAxis or a ResourceHeader). Useful if you\n     * have rendered some extra meta data that depends on external data such as the EventStore or ResourceStore.\n     */\n    refreshHeader(internal) {\n        const\n            me          = this,\n            { element } = me;\n\n        if (element) {\n\n            if (me.mode === 'horizontal') {\n                // Force timeAxisViewModel to regenerate its column config, which calls header renderers etc.\n                !internal && me.timeAxisViewModel.update(undefined, undefined, true);\n\n                if (!me.timeAxisView.rendered) {\n                    // Do not need the normal header markup\n                    element.innerHTML = '';\n\n                    me.timeAxisView.render(element);\n                }\n                else {\n                    // Force rebuild of cells in case external data has changed (cheap since it still syncs to DOM)\n                    me.timeAxisView.refresh(true);\n                }\n            }\n            else if (me.mode === 'vertical') {\n                if (!me.resourceColumns.currentElement) {\n                    // Do not need the normal header markup\n                    element.innerHTML = '';\n\n                    me.resourceColumns.render(element);\n                }\n\n                // Vertical's resourceColumns is redrawn with the events, no need here\n            }\n        }\n    }\n\n    internalRenderer(renderData) {\n        const { grid } = this;\n        // No drawing of events before engines initial commit\n        if (grid.project.isInitialCommitPerformed || grid.project.isDelayingCalculation) {\n            grid.currentOrientation.renderer(renderData);\n\n            return super.internalRenderer(renderData);\n        }\n    }\n\n    //endregion\n\n    get timeAxisViewModel() {\n        return this._timeAxisViewModel;\n    }\n\n    set timeAxisViewModel(timeAxisViewModel) {\n        const me = this;\n\n        me.detachListeners('tavm');\n\n        timeAxisViewModel?.ion({\n            name    : 'tavm',\n            update  : 'onViewModelUpdate',\n            prio    : -10000,\n            thisObj : me\n        });\n\n        me._timeAxisViewModel = timeAxisViewModel;\n\n        if (me.timeAxisView) {\n            me.timeAxisView.model = timeAxisViewModel;\n        }\n    }\n\n    // Width of the time axis column is solely determined by the zoom level. We should not keep it part of the state\n    // otherwise restoring the state might break the normal zooming process.\n    // Covered by SchedulerState.t\n    // https://github.com/bryntum/support/issues/5545\n    getState() {\n        const state = super.getState();\n\n        delete state.width;\n        delete state.flex;\n\n        return state;\n    }\n}\n\nColumnStore.registerColumnType(TimeAxisColumn);\n","import Model from '../../Core/data/Model.js';\nimport IdHelper from '../../Core/helper/IdHelper.js';\nimport DH from '../../Core/helper/DateHelper.js';\nimport StringHelper from '../../Core/helper/StringHelper.js';\n\n/**\n * @module Scheduler/preset/ViewPreset\n */\n\n/**\n * An object containing a unit identifier and an increment variable, used to define the `timeResolution` of a\n * `ViewPreset`.\n * @typedef {Object} ViewPresetTimeResolution\n * @property {String} unit The unit of the resolution, e.g. 'minute'\n * @property {Number} increment The increment of the resolution, e.g. 15\n */\n\n/**\n * Defines a header level for a ViewPreset.\n *\n * A sample header configuration can look like below\n * ```javascript\n * headers    : {\n *     {\n *         unit        : \"month\",\n *         renderer : function(start, end, headerConfig, index) {\n *             var month = start.getMonth();\n *             // Simple alternating month in bold\n *             if (start.getMonth() % 2) {\n *                 return '<strong>' + month + '</strong>';\n *             }\n *             return month;\n *         },\n *         align       : 'start' // `start` or `end`, omit to center content (default)\n *     },\n *     {\n *         unit        : \"week\",\n *         increment   : 1,\n *         renderer    : function(start, end, headerConfig, index) {\n *             return 'foo';\n *         }\n *     },\n * }\n * ```\n *\n * @typedef {Object} ViewPresetHeaderRow\n * @property {'start'|'center'|'end'} align The text alignment for the cell. Valid values are `start` or `end`, omit\n * this to center text content (default). Can also be added programmatically in `the renderer`.\n * @property {'millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year'} unit The unit of time\n * represented by each cell in this header row. See also increment property. Valid values are \"millisecond\", \"second\",\n * \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\", \"year\".\n * @property {String} headerCellCls A CSS class to add to the cells in the time axis header row. Can also be added\n * programmatically in the `renderer`.\n * @property {Number} increment The number of units each header cell will represent (e.g. 30 together with unit:\n * \"minute\" for 30 minute cells)\n * @property {String} dateFormat Defines how the cell date will be formatted\n * @property {Function} renderer A custom renderer function used to render the cell content. It should return text/HTML\n * to put in the header cell.\n *\n * ```javascript\n * function (startDate, endDate, headerConfig, i) {\n *   // applies special CSS class to align header left\n *   headerConfig.align = \"start\";\n *   // will be added as a CSS class of the header cell DOM element\n *   headerConfig.headerCellCls = \"myClass\";\n *\n *   return DateHelper.format(startDate, 'YYYY-MM-DD');\n * }\n * ```\n *\n * The render function is called with the following parameters:\n *\n * @property {Date} renderer.startDate The start date of the cell.\n * @property {Date} renderer.endDate The end date of the cell.\n * @property {Object} renderer.headerConfig An object containing the header config.\n * @property {'start'|'center'|'end'} [renderer.headerConfig.align] The text alignment for the cell. See `align` above.\n * @property {String} [renderer.headerConfig.headerCellCls] A CSS class to add to the cells in the time axis header row.\n * See `headerCellCls` above.\n * @property {Number} renderer.index The index of the cell in the row.\n * @property {Object} thisObj `this` reference for the renderer function\n * @property {Function} cellGenerator A function that should return an array of objects containing 'start', 'end' and\n * 'header' properties. Use this if you want full control over how the header rows are generated.\n *\n * **Note:** `cellGenerator` cannot be used for the bottom level of your headers.\n *\n * Example :\n * ```javascript\n * viewPreset : {\n *     displayDateFormat : 'H:mm',\n *     shiftIncrement    : 1,\n *     shiftUnit         : 'WEEK',\n *     timeResolution    : {\n *         unit      : 'MINUTE',\n *         increment : 10\n *     },\n *     headers           : [\n *         {\n *             unit          : 'year',\n *             // Simplified scenario, assuming view will always just show one US fiscal year\n *             cellGenerator : (viewStart, viewEnd) => [{\n *                 start  : viewStart,\n *                 end    : viewEnd,\n *                 header : `Fiscal Year ${viewStart.getFullYear() + 1}`\n *             }]\n *         },\n *         {\n *             unit : 'quarter',\n *             renderer(start, end, cfg) {\n *                 const\n *                     quarter       = Math.floor(start.getMonth() / 3) + 1,\n *                     fiscalQuarter = quarter === 4 ? 1 : (quarter + 1);\n *\n *                 return `FQ${fiscalQuarter} ${start.getFullYear() + (fiscalQuarter === 1 ? 1 : 0)}`;\n *             }\n *         },\n *         {\n *             unit       : 'month',\n *             dateFormat : 'MMM Y'\n *         }\n *     ]\n *  },\n * ```\n */\n\n/**\n * A ViewPreset is a record of {@link Scheduler.preset.PresetStore PresetStore} which describes the granularity\n * of the timeline view of a {@link Scheduler.view.Scheduler Scheduler} and the layout and subdivisions of the timeline header.\n *\n * You can create a new instance by specifying all fields:\n *\n * ```javascript\n * const myViewPreset = new ViewPreset({\n *     id   : 'myPreset',              // Unique id value provided to recognize your view preset. Not required, but having it you can simply set new view preset by id: scheduler.viewPreset = 'myPreset'\n *\n *     name : 'My view preset',        // A human-readable name provided to be used in GUI, e.i. preset picker, etc.\n *\n *     tickWidth  : 24,                // Time column width in horizontal mode\n *     tickHeight : 50,                // Time column height in vertical mode\n *     displayDateFormat : 'HH:mm',    // Controls how dates will be displayed in tooltips etc\n *\n *     shiftIncrement : 1,             // Controls how much time to skip when calling shiftNext and shiftPrevious.\n *     shiftUnit      : 'day',         // Valid values are 'millisecond', 'second', 'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year'.\n *     defaultSpan    : 12,            // By default, if no end date is supplied to a view it will show 12 hours\n *\n *     timeResolution : {              // Dates will be snapped to this resolution\n *         unit      : 'minute',       // Valid values are 'millisecond', 'second', 'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year'.\n *         increment : 15\n *     },\n *\n *     headers : [                     // This defines your header rows from top to bottom\n *         {                           // For each row you can define 'unit', 'increment', 'dateFormat', 'renderer', 'align', and 'thisObj'\n *             unit       : 'day',\n *             dateFormat : 'ddd DD/MM'\n *         },\n *         {\n *             unit       : 'hour',\n *             dateFormat : 'HH:mm'\n *         }\n *     ],\n *\n *     columnLinesFor : 1              // Defines header level column lines will be drawn for. Defaults to the last level.\n * });\n * ```\n *\n * Or you can extend one of view presets registered in {@link Scheduler.preset.PresetManager PresetManager}:\n *\n * ```javascript\n * const myViewPreset2 = new ViewPreset({\n *     id   : 'myPreset',                  // Unique id value provided to recognize your view preset. Not required, but having it you can simply set new view preset by id: scheduler.viewPreset = 'myPreset'\n *     name : 'My view preset',            // A human-readable name provided to be used in GUI, e.i. preset picker, etc.\n *     base : 'hourAndDay',                // Extends 'hourAndDay' view preset provided by PresetManager. You can pick out any of PresetManager's view presets: PresetManager.records\n *\n *     timeResolution : {                  // Override time resolution\n *         unit      : 'minute',\n *         increment : 15                  // Make it increment every 15 mins\n *     },\n *\n *     headers : [                         // Override headers\n *         {\n *             unit       : 'day',\n *             dateFormat : 'DD.MM.YYYY'   // Use different date format for top header 01.10.2020\n *         },\n *         {\n *             unit       : 'hour',\n *             dateFormat : 'LT'\n *         }\n *     ]\n * });\n * ```\n *\n * See {@link Scheduler.preset.PresetManager PresetManager} for the list of base presets. You may add your own\n * presets to this global list:\n *\n * ```javascript\n * PresetManager.add(myViewPreset);     // Adds new preset to the global scope. All newly created scheduler instances will have it too.\n *\n * const scheduler = new Scheduler({\n *     viewPreset : 'myPreset'\n *     // other configs...\n * });\n * ```\n *\n * Or add them on an individual basis to Scheduler instances:\n *\n * ```javascript\n * const scheduler = new Scheduler({...});\n *\n * scheduler.presets.add(myViewPreset); // Adds new preset to the scheduler instance only. All newly created scheduler instances will **not** have it.\n *\n * scheduler.viewPreset = 'myPreset';\n * ```\n *\n * ## Defining custom header rows\n *\n * You can have any number of header rows by specifying {@link #field-headers}, see {@link #typedef-ViewPresetHeaderRow}\n * for the config object format and {@link Core.helper.DateHelper} for the supported date formats, or use to render\n * custom contents into the row cells.\n *\n * ```javascript\n *  headers : [\n *      {\n *          unit       : 'month',\n *          dateFormat : 'MM.YYYY'\n *      },\n *      {\n *          unit       : 'week',\n *          renderer   : ({ startDate }) => `Week ${DateHelper.format(startDate, 'WW')}`\n *      }\n *  ]\n * ```\n *\n * {@inlineexample Scheduler/preset/CustomHeader.js}\n *\n * This live demo shows a custom ViewPreset with AM/PM time format:\n * @inlineexample Scheduler/preset/amPmPreset.js\n * @extends Core/data/Model\n */\nexport default class ViewPreset extends Model {\n\n    static $name = 'ViewPreset';\n\n    static get fields() {\n        return [\n            /**\n             * The name of an existing view preset to extend\n             * @field {String} base\n             */\n            { name : 'base', type : 'string' },\n\n            /**\n             * The name of the view preset\n             * @field {String} name\n             */\n            { name : 'name', type : 'string' },\n\n            /**\n             * The height of the row in horizontal orientation\n             * @field {Number} rowHeight\n             * @default\n             */\n            {\n                name         : 'rowHeight',\n                defaultValue : 24\n            },\n\n            /**\n             * The width of the time tick column in horizontal orientation\n             * @field {Number} tickWidth\n             * @default\n             */\n            {\n                name         : 'tickWidth',\n                defaultValue : 50\n            },\n\n            /**\n             * The height of the time tick column in vertical orientation\n             * @field {Number} tickHeight\n             * @default\n             */\n            {\n                name         : 'tickHeight',\n                defaultValue : 50\n            },\n\n            /**\n             * Defines how dates will be formatted in tooltips etc\n             * @field {String} displayDateFormat\n             * @default\n             */\n            {\n                name         : 'displayDateFormat',\n                defaultValue : 'HH:mm'\n            },\n\n            /**\n             * The unit to shift when calling shiftNext/shiftPrevious to navigate in the chart.\n             * Valid values are \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\", \"year\".\n             * @field {'millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year'} shiftUnit\n             * @default\n             */\n            {\n                name         : 'shiftUnit',\n                defaultValue : 'hour'\n            },\n\n            /**\n             * The amount to shift (in shiftUnits)\n             * @field {Number} shiftIncrement\n             * @default\n             */\n            {\n                name         : 'shiftIncrement',\n                defaultValue : 1\n            },\n\n            /**\n             * The amount of time to show by default in a view (in the unit defined by {@link #field-mainUnit})\n             * @field {Number} defaultSpan\n             * @default\n             */\n            {\n                name         : 'defaultSpan',\n                defaultValue : 12\n            },\n\n            /**\n             * Initially set to a unit. Defaults to the unit defined by the middle header.\n             * @field {'millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year'} mainUnit\n             */\n            {\n                name : 'mainUnit'\n            },\n\n            /**\n             * Note: Currently, this field only applies when changing viewPreset with the {@link Scheduler.widget.ViewPresetCombo}.\n             *\n             * Set to a number and that amount of {@link #field-mainUnit} will be added to the startDate. For example: A\n             * start value of `5` together with the mainUnit `hours` will add 5 hours to the startDate. This can achieve\n             * a \"day view\" that starts 5 AM.\n             *\n             * Set to a string unit (for example week, day, month) and the startDate will be the start of that unit\n             * calculated from current startDate. A start value of `week` will result in a startDate in the first day of\n             * the week.\n             *\n             * If set to a number or not set at all, the startDate will be calculated at the beginning of current\n             * mainUnit.\n             * @field {Number|String} start\n             */\n            {\n                name : 'start'\n            },\n\n            /**\n             * An object containing a unit identifier and an increment variable. This value means minimal task duration\n             * you can create using UI. For example when you drag create a task or drag & drop a task, if increment is 5\n             * and unit is 'minute' that means that you can create a 5-minute-long task, or move it 5 min\n             * forward/backward. This config maps to scheduler's\n             * {@link Scheduler.view.mixin.TimelineDateMapper#property-timeResolution} config.\n             *\n             * ```javascript\n             * timeResolution : {\n             *   unit      : 'minute',  //Valid values are \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\", \"year\".\n             *   increment : 5\n             * }\n             * ```\n             *\n             * @field {ViewPresetTimeResolution} timeResolution\n             */\n            'timeResolution',\n\n            /**\n             * An array containing one or more {@link #typedef-ViewPresetHeaderRow} config objects, each of\n             * which defines a level of headers for the scheduler.\n             * The `main` unit will be the last header's unit, but this can be changed using the\n             * {@link #field-mainHeaderLevel} field.\n             * @field {ViewPresetHeaderRow[]} headers\n             */\n            'headers',\n\n            /**\n             * Index of the {@link #field-headers} array to define which header level is the `main` header.\n             * Defaults to the bottom header.\n             * @field {Number} mainHeaderLevel\n             */\n            'mainHeaderLevel',\n\n            /**\n             * Index of a header level in the {@link #field-headers} array for which column lines are drawn. See\n             * {@link Scheduler.feature.ColumnLines}.\n             * Defaults to the bottom header.\n             * @field {Number} columnLinesFor\n             */\n            'columnLinesFor'\n        ];\n    }\n\n    construct() {\n        super.construct(...arguments);\n        this.normalizeUnits();\n    }\n\n    generateId(owner) {\n        const\n            me    = this,\n            {\n                headers\n            }     = me,\n            parts = [];\n\n        // If we were subclassed from a base, use that id as the basis of our.\n        let result = Object.getPrototypeOf(me.data).id;\n\n        if (!result) {\n            for (let { length } = headers, i = length - 1; i >= 0; i--) {\n                const\n                    { unit, increment } = headers[i],\n                    multiple            = increment > 1;\n\n                parts.push(`${multiple ? increment : ''}${i ? unit : StringHelper.capitalize(unit)}${multiple ? 's' : ''}`);\n            }\n\n            // Use upwards header units so eg \"monthAndYear\"\n            result = parts.join('And');\n        }\n\n        // If duplicate, decorate the generated by adding details.\n        // For example make it \"hourAndDay-50by80\"\n        // Only interrogate the store if it is loaded. If consulted during\n        // a load, the idMap will be created empty\n        if (owner.count && owner.includes(result)) {\n            result += `-${me.tickWidth}by${me.tickHeight || me.tickWidth}`;\n            // If still duplicate use increment\n            if (owner.includes(result)) {\n                result += `-${me.bottomHeader.increment}`;\n                // And if STILL duplicate, make it unique with a suffix\n                if (owner.includes(result)) {\n                    result = IdHelper.generateId(`${result}-`);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    normalizeUnits() {\n        const\n            me                                     = this,\n            { timeResolution, headers, shiftUnit } = me;\n\n        if (headers) {\n            // Make sure date \"unit\" constant specified in the preset are resolved\n            for (let i = 0, { length } = headers; i < length; i++) {\n                const header = headers[i];\n\n                header.unit = DH.normalizeUnit(header.unit);\n                if (header.splitUnit) {\n                    header.splitUnit = DH.normalizeUnit(header.splitUnit);\n                }\n                if (!('increment' in header)) {\n                    headers[i] = Object.assign({\n                        increment : 1\n                    }, header);\n                }\n            }\n        }\n\n        if (timeResolution) {\n            timeResolution.unit = DH.normalizeUnit(timeResolution.unit);\n        }\n\n        if (shiftUnit) {\n            me.shiftUnit = DH.normalizeUnit(shiftUnit);\n        }\n    }\n\n    // Process legacy columnLines config into a headers array.\n    static normalizeHeaderConfig(data) {\n        const\n            { headerConfig, columnLinesFor, mainHeaderLevel } = data,\n            headers                                           = data.headers = [];\n\n        if (headerConfig.top) {\n            if (columnLinesFor === 'top') {\n                data.columnLinesFor = 0;\n            }\n            if (mainHeaderLevel === 'top') {\n                data.mainHeaderLevel = 0;\n            }\n            headers[0] = headerConfig.top;\n        }\n        if (headerConfig.middle) {\n            if (columnLinesFor === 'middle') {\n                data.columnLinesFor = headers.length;\n            }\n            if (mainHeaderLevel === 'middle') {\n                data.mainHeaderLevel = headers.length;\n            }\n            headers.push(headerConfig.middle);\n        }\n        else {\n            throw new Error('ViewPreset.headerConfig must be configured with a middle');\n        }\n        if (headerConfig.bottom) {\n            // Main level is middle when using headerConfig object.\n            data.mainHeaderLevel = headers.length - 1;\n\n            // There *must* be a middle above this bottom header\n            // so that is the columnLines one by default.\n            if (columnLinesFor == null) {\n                data.columnLinesFor = headers.length - 1;\n            }\n            else if (columnLinesFor === 'bottom') {\n                data.columnLinesFor = headers.length;\n            }\n\n            // There *must* be a middle above this bottom header\n            // so that is the main one by default.\n            if (mainHeaderLevel == null) {\n                data.mainHeaderLevel = headers.length - 1;\n            }\n            if (mainHeaderLevel === 'bottom') {\n                data.mainHeaderLevel = headers.length;\n            }\n\n            headers.push(headerConfig.bottom);\n        }\n    }\n\n    // These are read-only once configured.\n    set() {}\n\n    inSet() {}\n\n    get columnLinesFor() {\n        return ('columnLinesFor' in this.data) ? this.data.columnLinesFor : this.headers.length - 1;\n    }\n\n    get tickSize() {\n        return this._tickSize || this.tickWidth;\n    }\n\n    get tickWidth() {\n        return ('tickWidth' in this.data) ? this.data.tickWidth : 50;\n    }\n\n    get tickHeight() {\n        return ('tickHeight' in this.data) ? this.data.tickHeight : 50;\n    }\n\n    get headerConfig() {\n        // Configured in the legacy manner, just return the configured value.\n        if (this.data.headerConfig) {\n            return this.data.headerConfig;\n        }\n\n        // Rebuild the object based upon the configured headers array.\n        const\n            result      = {},\n            { headers } = this,\n            { length }  = headers;\n\n        switch (length) {\n            case 1 :\n                result.middle = headers[0];\n                break;\n            case 2:\n                if (this.mainHeaderLevel === 0) {\n                    result.middle = headers[0];\n                    result.bottom = headers[1];\n                }\n                else {\n                    result.top    = headers[0];\n                    result.middle = headers[1];\n                }\n                break;\n            case 3:\n                result.top    = headers[0];\n                result.middle = headers[1];\n                result.bottom = headers[2];\n                break;\n            default:\n                throw new Error('headerConfig object not supported for >3 header levels');\n        }\n\n        return result;\n    }\n\n    set mainHeaderLevel(mainHeaderLevel) {\n        this.data.mainHeaderLevel = mainHeaderLevel;\n    }\n\n    get mainHeaderLevel() {\n        if ('mainHeaderLevel' in this.data) {\n            return this.data.mainHeaderLevel;\n        }\n\n        // 3 headers, then it's the middle\n        if (this.data.headers.length === 3) {\n            return 1;\n        }\n\n        // Assume it goes top, middle.\n        // If it's middle, top, use mainHeaderLevel : 0\n        return this.headers.length - 1;\n    }\n\n    get mainHeader() {\n        return this.headers[this.mainHeaderLevel];\n    }\n\n    get topHeader() {\n        return this.headers[0];\n    }\n\n    get topUnit() {\n        return this.topHeader.unit;\n    }\n\n    get topIncrement() {\n        return this.topHeader.increment;\n    }\n\n    get bottomHeader() {\n        return this.headers[this.headers.length - 1];\n    }\n\n    get leafUnit() {\n        return this.bottomHeader.unit;\n    }\n\n    get leafIncrement() {\n        return this.bottomHeader.increment;\n    }\n\n    get mainUnit() {\n        if ('mainUnit' in this.data) {\n            return this.data.mainUnit;\n        }\n        return this.mainHeader.unit;\n    }\n\n    get msPerPixel() {\n        const { bottomHeader } = this;\n\n        return Math.round(DH.asMilliseconds(bottomHeader.increment || 1, bottomHeader.unit) / this.tickWidth);\n    }\n\n    get isValid() {\n        const me = this;\n\n        let valid = true;\n\n        // Make sure all date \"unit\" constants are valid\n        for (const header of me.headers) {\n            valid = valid && Boolean(DH.normalizeUnit(header.unit));\n        }\n\n        if (me.timeResolution) {\n            valid = valid && DH.normalizeUnit(me.timeResolution.unit);\n        }\n\n        if (me.shiftUnit) {\n            valid = valid && DH.normalizeUnit(me.shiftUnit);\n        }\n\n        return valid;\n    }\n}\n","import { unitMagnitudes } from '../../Core/helper/DateHelper.js';\nimport ViewPreset from './ViewPreset.js';\nimport Localizable from '../../Core/localization/Localizable.js';\nimport '../../Scheduler/localization/En.js';\nimport Store from '../../Core/data/Store.js';\nimport PresetManager from './PresetManager.js';\nimport ObjectHelper from '../../Core/helper/ObjectHelper.js';\n\n/**\n * @module Scheduler/preset/PresetStore\n */\n\n/**\n * A special Store subclass which holds {@link Scheduler.preset.ViewPreset ViewPresets}.\n * Each ViewPreset in this store represents a zoom level. The store data is sorted in special\n * zoom order. That is zoomed out to zoomed in. The first Preset will produce the narrowest event bars\n * the last one will produce the widest event bars.\n *\n * To specify view presets (zoom levels) please provide set of view presets to the scheduler:\n *\n * ```javascript\n * const myScheduler = new Scheduler({\n *     presets : [\n *         {\n *             base : 'hourAndDay',\n *             id   : 'MyHourAndDay',\n *             // other preset configs....\n *         },\n *         {\n *             base : 'weekAndMonth',\n *             id   : 'MyWeekAndMonth',\n *             // other preset configs....\n *         }\n *     ],\n *     viewPreset : 'MyHourAndDay',\n *     // other scheduler configs....\n *     });\n * ```\n *\n * @extends Core/data/Store\n */\nexport default class PresetStore extends Localizable(Store) {\n\n    static get $name() {\n        return 'PresetStore';\n    }\n\n    static get defaultConfig() {\n        return {\n            useRawData : true,\n\n            modelClass : ViewPreset,\n\n            /**\n             * Specifies the sort order of the presets in the store.\n             * By default they are in zoomed out to zoomed in order. That is\n             * presets which will create widest event bars to presets\n             * which will produce narrowest event bars.\n             *\n             * Configure this as `-1` to reverse this order.\n             * @config {Number}\n             * @default\n             */\n            zoomOrder : 1\n        };\n    }\n\n    set storage(storage) {\n        super.storage = storage;\n\n        // Maintained in order automatically while adding.\n        this.storage.addSorter((lhs, rhs) => {\n            const\n                leftBottomHeader  = lhs.bottomHeader,\n                rightBottomHeader = rhs.bottomHeader;\n\n            // Sort order:\n            //  Milliseconds per pixel.\n            //  Tick size.\n            //  Unit magnitude.\n            //  Increment size.\n            const\n                order = rhs.msPerPixel - lhs.msPerPixel ||\n                unitMagnitudes[leftBottomHeader.unit] - unitMagnitudes[rightBottomHeader.unit] ||\n                leftBottomHeader.increment - rightBottomHeader.increment;\n\n            return order * this.zoomOrder;\n        });\n    }\n\n    get storage() {\n        return super.storage;\n    }\n\n    getById(id) {\n        // If we do not know about the id, inherit it from the PresetManager singleton\n        return super.getById(id) || !this.isPresetManager && PresetManager.getById(id);\n    }\n\n    createRecord(data, ...args) {\n        let result;\n\n        if (data.isViewPreset) {\n            return data;\n        }\n        if (typeof data === 'string') {\n            result = this.getById(data);\n        }\n        else if (typeof data === 'number') {\n            result = this.getAt(data);\n        }\n        // Its a ViewPreset data object\n        else {\n            // If it's extending an existing ViewPreset, inherit then override\n            // the data from the base.\n            if (data.base) {\n                data = this.copyBaseValues(data);\n            }\n\n            // Model constructor will call generateId if no id is provided\n            return super.createRecord(data, ...args);\n        }\n        if (!result) {\n            throw new Error(`ViewPreset ${data} does not exist`);\n        }\n        return result;\n    }\n\n    updateLocalization() {\n        super.updateLocalization();\n\n        const me = this;\n\n        // Collect presets from store...\n        let presets = me.allRecords;\n\n        // and basePresets if we are the PresetManager\n        if (me.isPresetManager) {\n            presets = new Set(presets.concat(Object.values(me.basePresets)));\n        }\n\n        presets.forEach(preset => {\n            let localePreset = me.optionalL(`L{PresetManager.${preset.id}}`, null, true);\n\n            // Default presets generated from base presets use localization of base if they have no own\n            if (typeof localePreset === 'string' && preset.baseId) {\n                localePreset = me.optionalL(`L{PresetManager.${preset.baseId}}`, null, true);\n            }\n\n            // Apply any custom format defined in locale, or the original format if none exists\n            if (localePreset && typeof localePreset === 'object') {\n                if (!preset.originalDisplayDateFormat) {\n                    preset.originalDisplayDateFormat = preset.displayDateFormat;\n                }\n\n                // <remove-on-release>\n                // TODO: work around to work topDateFormat for weekAndDay viewPreset localization.\n                //  it must be fixed on: https://github.com/bryntum/support/issues/1775\n                // </remove-on-release>\n                // it there is a topDateFormat but preset.mainHeaderLevel is 0, means the middle header is the top header actually,\n                // so convert property to middle (if middle doesn't exists) to localization understand (topDateFormat for weekAndDay for example)\n                // topDateFormat doesn't work when mainHeaderLevel is 0 because it doesn't have top config\n                // but has top header visually (Check on get headerConfig method in ViewPreset class)\n                if (preset.mainHeaderLevel === 0 && localePreset.topDateFormat) {\n                    localePreset.middleDateFormat = localePreset.middleDateFormat || localePreset.topDateFormat;\n                }\n\n                preset.setData('displayDateFormat', localePreset.displayDateFormat || preset.originalDisplayDateFormat);\n\n                ['top', 'middle', 'bottom'].forEach(level => {\n                    const\n                        levelConfig           = preset.headerConfig[level],\n                        localeLevelDateFormat = localePreset[level + 'DateFormat'];\n\n                    if (levelConfig) {\n                        if (!levelConfig.originalDateFormat) {\n                            levelConfig.originalDateFormat = levelConfig.dateFormat;\n                        }\n\n                        // if there was defined topDateFormat on locale file for example, use it instead of renderer from basePresets (https://github.com/bryntum/support/issues/1307)\n                        if (localeLevelDateFormat && levelConfig.renderer) {\n                            levelConfig.renderer = null;\n                        }\n\n                        levelConfig.dateFormat = localeLevelDateFormat || levelConfig.originalDateFormat;\n\n                    }\n                });\n\n                // The preset names are used in ViewPresetCombo and are localized by default\n                if (localePreset.name) {\n                    if (!preset.unlocalizedName) {\n                        preset.unlocalizedName = preset.name;\n                    }\n                    preset.setData('name', localePreset.name);\n                }\n                else if (preset.unlocalizedName && preset.unlocalizedName !== preset.name) {\n                    preset.name = preset.unlocalizedName;\n                    preset.unlocalizedName = null;\n                }\n            }\n        });\n    }\n\n    // This function is not meant to be called by any code other than Base#getCurrentConfig().\n    // Preset config on Scheduler/Gantt expects array of presets and not store config\n    getCurrentConfig(options) {\n        return super.getCurrentConfig(options).data;\n    }\n\n    copyBaseValues(presetData) {\n        let base = this.getById(presetData.base);\n\n        if (!base) {\n            throw new Error(`ViewPreset base '${presetData.base}' does not exist.`);\n        }\n        base = ObjectHelper.clone(base.data);\n        delete base.id;\n        delete base.name;\n\n        // Merge supplied data into a clone of the base ViewPreset's data\n        // so that the new one overrides the base.\n        return ObjectHelper.merge(base, presetData);\n    }\n\n    add(preset) {\n        preset = Array.isArray(preset) ? preset : [preset];\n\n        preset.forEach(preset => {\n            // If a ViewPreset instance that extends another preset was added\n            // Only in add we can apply the base data\n            if (preset.isViewPreset && preset.base) {\n                preset.data = this.copyBaseValues(preset.originalData);\n            }\n        });\n        return super.add(...arguments);\n    }\n}\n","import DateHelper from '../../Core/helper/DateHelper.js';\nimport ObjectHelper from '../../Core/helper/ObjectHelper.js';\nimport ViewPreset from './ViewPreset.js';\nimport PresetStore from './PresetStore.js';\n\n// No module tag here. That stops the singleton from being included by the docs.\n\n/**\n * ## Intro\n * This is a global Store of {@link Scheduler.preset.ViewPreset ViewPresets}, required to supply initial data to\n * Scheduler's {@link Scheduler.view.mixin.TimelineViewPresets#config-presets}.\n *\n * You can provide new view presets globally or for a specific scheduler.\n *\n * **NOTE:** You **cannot** modify existing records in the PresetManager store. You can either remove\n * preset records from the store or add new records to the store.\n * Also please keep in mind, all changes provided to the PresetManager store are not reflected to the\n * {@link Scheduler.view.mixin.TimelineViewPresets#config-presets} of schedulers that already exist!\n *\n * If you want to have just a few presets (also known as zoom levels) in your Scheduler, you can slice corresponding records\n * from the `PresetManager` and apply them to the Scheduler `presets` config.\n * ```javascript\n * const newPresets = PresetManager.records.slice(10, 12);\n *\n * const scheduler = new Scheduler({\n *     presets    : newPresets, // Only 2 zoom levels are available\n *     viewPreset : newPresets[0].id\n * });\n * ```\n *\n * If you want to adjust all default presets and assign to a specific scheduler you are going to create,\n * you can extend them and pass as an array to the Scheduler `presets` config.\n * Here is an example of how to set the same `timeResolution` to all `ViewPresets`.\n * ```javascript\n * const newPresets = PresetManager.map(preset => {\n *     return {\n *         id             : 'my_' + preset.id,\n *         base           : preset.id, // Based on an existing preset\n *         timeResolution : {\n *             unit      : 'day',\n *             increment : 1\n *         }\n *     };\n * });\n *\n * const scheduler = new Scheduler({\n *     presets     : newPresets,\n *     viewPreset : 'my_hourAndDay'\n * });\n * ```\n *\n * If you want to do the same for **all** schedulers which will be created next, you can register new presets in a loop.\n * ```javascript\n * PresetManager.records.forEach(preset => {\n *     // Pass the same ID, so when a new preset is added to the store,\n *     // it will replace the current one.\n *     PresetManager.registerPreset(preset.id, {\n *        id             : preset.id,\n *        base           : preset.id,\n *        timeResolution : {\n *            unit      : 'day',\n *            increment : 1\n *        }\n *    });\n * });\n * ```\n *\n * Here is an example of how to add a new `ViewPreset` to the global `PresetManager` store and to the already created\n * scheduler `presets`.\n * ```javascript\n * const scheduler = new Scheduler({...});\n *\n * const newGlobalPresets = PresetManager.add({\n *     id              : 'myNewPreset',\n *     base            : 'hourAndDay', // Based on an existing preset\n *     columnLinesFor  : 0,\n *     // Override headers\n *     headers : [\n *         {\n *             unit       : 'day',\n *             // Use different date format for top header 01.10.2020\n *             dateFormat : 'DD.MM.YYYY'\n *         },\n *         {\n *             unit       : 'hour',\n *             dateFormat : 'LT'\n *         }\n *     ]\n * });\n *\n * // Add new presets to the scheduler that has been created before changes\n * // to PresetManager are applied\n * scheduler.presets.add(newGlobalPresets);\n * ```\n *\n * ## Predefined presets\n *\n * Predefined presets are:\n *\n * - `secondAndMinute` - creates a 2 level header - minutes and seconds:\n * {@inlineexample Scheduler/preset/secondAndMinute.js}\n * - `minuteAndHour` - creates a 2 level header - hours and minutes:\n * {@inlineexample Scheduler/preset/minuteAndHour.js}\n * - `hourAndDay` - creates a 2 level header - days and hours:\n * {@inlineexample Scheduler/preset/hourAndDay.js}\n * - `dayAndWeek` - creates a 2 level header - weeks and days:\n * {@inlineexample Scheduler/preset/dayAndWeek.js}\n * - `dayAndMonth` - creates a 2 level header - months and days:\n * {@inlineexample Scheduler/preset/dayAndMonth.js}\n * - `weekAndDay` - just like `dayAndWeek` but with different formatting:\n * {@inlineexample Scheduler/preset/weekAndDay.js}\n * - `weekAndDayLetter` - creates a 2 level header - weeks and day letters:\n * {@inlineexample Scheduler/preset/weekAndDayLetter.js}\n * - `weekAndMonth` - creates a 2 level header - months and weeks:\n * {@inlineexample Scheduler/preset/weekAndMonth.js}\n * - `weekDateAndMonth` - creates a 2 level header - months and weeks (weeks shown by first day only):\n * {@inlineexample Scheduler/preset/weekDateAndMonth.js}\n * - `monthAndYear` - creates a 2 level header - years and months:\n * {@inlineexample Scheduler/preset/monthAndYear.js}\n * - `year` - creates a 2 level header - years and quarters:\n * {@inlineexample Scheduler/preset/year.js}\n * - `manyYears` - creates a 2 level header - 5-years and years:\n * {@inlineexample Scheduler/preset/manyYears.js}\n *\n * See the {@link Scheduler.preset.ViewPreset} and {@link Scheduler.preset.ViewPresetHeaderRow} classes for a\n * description of the view preset properties.\n *\n * ## Localizing View Presets\n * Bryntum Scheduler uses locales for translations including date formats for view presets.\n *\n * To translate date format for view presets just define the date format for the specified region\n * for your locale file, like this:\n * ```javascript\n * const locale = {\n *\n *     localeName : 'En',\n *\n *     // ... Other translations here ...\n *\n *     PresetManager : {\n *         // Translation for the \"weekAndDay\" ViewPreset\n *         weekAndDay : {\n *             // Change the date format for the top and middle levels\n *             topDateFormat    : 'MMM',\n *             middleDateFormat : 'D'\n *         },\n *         // Translation for the \"dayAndWeek\" ViewPreset\n *         dayAndWeek : {\n *             // Change the date format for the top level\n *             topDateFormat : 'MMMM YYYY'\n *         }\n *     }\n * }\n *\n * LocaleManager.applyLocale(locale);\n * ```\n *\n * Check the <a target=\"_blank\" href=\"../examples/localization/\">localization demo</a> and [this guide](#Scheduler/guides/customization/localization.md) for more details.\n *\n * @singleton\n * @extends Scheduler/preset/PresetStore\n */\nclass PresetManager extends PresetStore {\n\n    // <debug>\n    // region Localization test\n    static localization = [\n        'L{secondAndMinute}',\n        'L{minuteAndHour}',\n        'L{hourAndDay}',\n        'L{dayAndWeek}',\n        'L{weekAndDay}',\n        'L{day}',\n        'L{week}',\n        'L{dayAndMonth}',\n        'L{weekAndMonth}',\n        'L{weekAndDayLetter}',\n        'L{weekDateAndMonth}',\n        'L{monthAndYear}',\n        'L{year}',\n        'L{manyYears}'\n    ];\n    // endregion\n    // </debug>\n\n    static get $name() {\n        return 'PresetManager';\n    }\n\n    static get defaultConfig() {\n        return {\n            // To not break CSP demo\n            preventSubClassingModel : true,\n\n            basePresets : {\n                secondAndMinute : {\n                    name              : 'Seconds',\n                    tickWidth         : 30,   // Time column width\n                    tickHeight        : 40,\n                    displayDateFormat : 'll LTS', // Controls how dates will be displayed in tooltips etc\n                    shiftIncrement    : 10,     // Controls how much time to skip when calling shiftNext and shiftPrevious.\n                    shiftUnit         : 'minute', // Valid values are \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\", \"year\".\n                    defaultSpan       : 24,    // By default, if no end date is supplied to a view it will show 24 hours\n                    timeResolution    : {      // Dates will be snapped to this resolution\n                        unit      : 'second',  // Valid values are \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\", \"year\".\n                        increment : 5\n                    },\n                    // This defines your header rows.\n                    // For each row you can define \"unit\", \"increment\", \"dateFormat\", \"renderer\", \"align\", and \"thisObj\"\n                    headers : [\n                        {\n                            unit       : 'minute',\n                            dateFormat : 'lll'\n                        },\n                        {\n                            unit       : 'second',\n                            increment  : 10,\n                            dateFormat : 'ss'\n                        }\n                    ]\n                },\n                minuteAndHour : {\n                    name              : 'Minutes',\n                    tickWidth         : 60,    // Time column width\n                    tickHeight        : 60,\n                    displayDateFormat : 'll LT', // Controls how dates will be displayed in tooltips etc\n                    shiftIncrement    : 1,     // Controls how much time to skip when calling shiftNext and shiftPrevious.\n                    shiftUnit         : 'hour', // Valid values are \"MILLI\", \"SECOND\", \"minute\", \"HOUR\", \"DAY\", \"WEEK\", \"MONTH\", \"QUARTER\", \"YEAR\".\n                    defaultSpan       : 24,    // By default, if no end date is supplied to a view it will show 24 hours\n                    timeResolution    : {      // Dates will be snapped to this resolution\n                        unit      : 'minute',  // Valid values are \"MILLI\", \"SECOND\", \"minute\", \"HOUR\", \"DAY\", \"WEEK\", \"MONTH\", \"QUARTER\", \"YEAR\".\n                        increment : 15\n                    },\n                    headers : [\n                        {\n                            unit       : 'hour',\n                            dateFormat : 'ddd MM/DD, hA'\n                        },\n                        {\n                            unit       : 'minute',\n                            increment  : 30,\n                            dateFormat : 'mm'\n                        }\n                    ]\n                },\n                hourAndDay : {\n                    name              : 'Day',\n                    tickWidth         : 70,\n                    tickHeight        : 40,\n                    displayDateFormat : 'll LT',\n                    shiftIncrement    : 1,\n                    shiftUnit         : 'day',\n                    defaultSpan       : 24,\n                    timeResolution    : {\n                        unit      : 'minute',\n                        increment : 30\n                    },\n                    headers : [\n                        {\n                            unit       : 'day',\n                            dateFormat : 'ddd DD/MM' //Mon 01/10\n                        },\n                        {\n                            unit       : 'hour',\n                            dateFormat : 'LT'\n                        }\n                    ]\n                },\n                day : {\n                    name              : 'Day/hours',\n                    displayDateFormat : 'LT',\n                    shiftIncrement    : 1,\n                    shiftUnit         : 'day',\n                    defaultSpan       : 1,\n                    timeResolution    : {\n                        unit      : 'minute',\n                        increment : 30\n                    },\n                    mainHeaderLevel : 0,\n                    headers         : [\n                        {\n                            unit       : 'day',\n                            dateFormat : 'ddd DD/MM', // Mon 01/02\n                            splitUnit  : 'day'\n                        },\n                        {\n                            unit : 'hour',\n                            renderer(value) {\n                                return `\n                                    <div class=\"b-sch-calendarcolumn-ct\"><span class=\"b-sch-calendarcolumn-hours\">${DateHelper.format(value, 'HH')}</span>\n                                    <span class=\"b-sch-calendarcolumn-minutes\">${DateHelper.format(value, 'mm')}</span></div>\n                                `;\n                            }\n                        }\n                    ]\n                },\n                week : {\n                    name              : 'Week/hours',\n                    displayDateFormat : 'LT',\n                    shiftIncrement    : 1,\n                    shiftUnit         : 'week',\n                    defaultSpan       : 24,\n                    timeResolution    : {\n                        unit      : 'minute',\n                        increment : 30\n                    },\n                    mainHeaderLevel : 0,\n                    headers         : [\n                        {\n                            unit       : 'week',\n                            dateFormat : 'D d',\n                            splitUnit  : 'day'\n                        },\n                        {\n                            unit       : 'hour',\n                            dateFormat : 'LT',    // will be overridden by renderer\n                            renderer(value) {\n                                return `\n                                    <div class=\"sch-calendarcolumn-ct\">\n                                    <span class=\"sch-calendarcolumn-hours\">${DateHelper.format(value, 'HH')}</span>\n                                    <span class=\"sch-calendarcolumn-minutes\">${DateHelper.format(value, 'mm')}</span>\n                                    </div>\n                                `;\n                            }\n                        }\n                    ]\n                },\n                dayAndWeek : {\n                    name              : 'Days & Weeks',\n                    tickWidth         : 100,\n                    tickHeight        : 80,\n                    displayDateFormat : 'll LT',\n                    shiftUnit         : 'day',\n                    shiftIncrement    : 1,\n                    defaultSpan       : 5,\n                    timeResolution    : {\n                        unit      : 'hour',\n                        increment : 1\n                    },\n                    headers : [\n                        {\n                            unit : 'week',\n                            renderer(start) {\n                                return DateHelper.getShortNameOfUnit('week') + '.' + DateHelper.format(start, 'WW MMM YYYY');\n                            }\n                        },\n                        {\n                            unit       : 'day',\n                            dateFormat : 'dd DD'\n                        }\n                    ]\n                },\n                // dayAndMonth : {\n                //     name              : 'Days & Months',\n                //     tickWidth         : 100,\n                //     tickHeight        : 80,\n                //     displayDateFormat : 'll LT',\n                //     shiftUnit         : 'day',\n                //     shiftIncrement    : 1,\n                //     defaultSpan       : 5,\n                //     timeResolution    : {\n                //         unit      : 'hour',\n                //         increment : 1\n                //     },\n                //     headers : [\n                //         {\n                //             unit       : 'month',\n                //             dateFormat : 'MMMM YYYY',\n                //             align      : 'start'\n                //         },\n                //         {\n                //             unit       : 'day',\n                //             dateFormat : 'dd DD'\n                //         }\n                //     ]\n                // },\n                dayAndMonth : {\n                    name              : 'Month',\n                    tickWidth         : 100,\n                    tickHeight        : 80,\n                    displayDateFormat : 'll LT',\n                    shiftUnit         : 'month',\n                    shiftIncrement    : 1,\n                    defaultSpan       : 1,\n                    mainUnit          : 'month',\n                    timeResolution    : {\n                        unit      : 'hour',\n                        increment : 1\n                    },\n                    headers : [\n                        {\n                            unit       : 'month',\n                            dateFormat : 'MMMM YYYY'\n                        },\n                        {\n                            unit       : 'day',\n                            dateFormat : 'DD'\n                        }\n                    ]\n                },\n                weekAndDay : {\n                    name              : 'Week',\n                    tickWidth         : 100,\n                    tickHeight        : 80,\n                    displayDateFormat : 'll hh:mm A',\n                    shiftUnit         : 'week',\n                    shiftIncrement    : 1,\n                    defaultSpan       : 1,\n                    timeResolution    : {\n                        unit      : 'day',\n                        increment : 1\n                    },\n                    mainHeaderLevel : 0,\n                    headers         : [\n                        {\n                            unit       : 'week',\n                            dateFormat : 'YYYY MMMM DD' // 2017 January 01\n                        },\n                        {\n                            unit       : 'day',\n                            increment  : 1,\n                            dateFormat : 'DD MMM'\n                        }\n                    ]\n                },\n                weekAndMonth : {\n                    name              : 'Weeks',\n                    tickWidth         : 100,\n                    tickHeight        : 105,\n                    displayDateFormat : 'll',\n                    shiftUnit         : 'week',\n                    shiftIncrement    : 5,\n                    defaultSpan       : 6,\n                    timeResolution    : {\n                        unit      : 'day',\n                        increment : 1\n                    },\n                    headers : [\n                        {\n                            unit       : 'month',\n                            dateFormat : 'MMM YYYY' //Jan 2017\n                        },\n                        {\n                            unit       : 'week',\n                            dateFormat : 'DD MMM'\n                        }\n                    ]\n                },\n                weekAndDayLetter : {\n                    name              : 'Weeks/weekdays',\n                    tickWidth         : 20,\n                    tickHeight        : 50,\n                    displayDateFormat : 'll',\n                    shiftUnit         : 'week',\n                    shiftIncrement    : 1,\n                    defaultSpan       : 10,\n                    timeResolution    : {\n                        unit      : 'day',\n                        increment : 1\n                    },\n                    mainHeaderLevel : 0,\n                    headers         : [\n                        {\n                            unit                : 'week',\n                            dateFormat          : 'ddd DD MMM YYYY',\n                            verticalColumnWidth : 115\n                        },\n                        {\n                            unit                : 'day',\n                            dateFormat          : 'd1',\n                            verticalColumnWidth : 25\n                        }\n                    ]\n                },\n                weekDateAndMonth : {\n                    name              : 'Months/weeks',\n                    tickWidth         : 30,\n                    tickHeight        : 40,\n                    displayDateFormat : 'll',\n                    shiftUnit         : 'week',\n                    shiftIncrement    : 1,\n                    defaultSpan       : 10,\n                    timeResolution    : {\n                        unit      : 'day',\n                        increment : 1\n                    },\n                    headers : [\n                        {\n                            unit       : 'month',\n                            dateFormat : 'YYYY MMMM'\n                        },\n                        {\n                            unit       : 'week',\n                            dateFormat : 'DD'\n                        }\n                    ]\n                },\n                monthAndYear : {\n                    name              : 'Months',\n                    tickWidth         : 110,\n                    tickHeight        : 110,\n                    displayDateFormat : 'll',\n                    shiftIncrement    : 3,\n                    shiftUnit         : 'month',\n                    defaultSpan       : 12,\n                    timeResolution    : {\n                        unit      : 'day',\n                        increment : 1\n                    },\n                    headers : [\n                        {\n                            unit       : 'year',\n                            dateFormat : 'YYYY' //2017\n                        },\n                        {\n                            unit       : 'month',\n                            dateFormat : 'MMM YYYY' //Jan 2017\n                        }\n                    ]\n                },\n                year : {\n                    name                : 'Years',\n                    tickWidth           : 100,\n                    tickHeight          : 100,\n                    resourceColumnWidth : 100,\n                    displayDateFormat   : 'll',\n                    shiftUnit           : 'year',\n                    shiftIncrement      : 1,\n                    defaultSpan         : 1,\n                    timeResolution      : {\n                        unit      : 'month',\n                        increment : 1\n                    },\n                    headers : [\n                        {\n                            unit       : 'year',\n                            dateFormat : 'YYYY'\n                        },\n                        {\n                            unit : 'quarter',\n                            renderer(start, end, cfg) {\n                                return DateHelper.getShortNameOfUnit('quarter').toUpperCase() + (Math.floor(start.getMonth() / 3) + 1);\n                            }\n                        }\n                    ]\n                },\n                manyYears : {\n                    name              : 'Multiple years',\n                    tickWidth         : 40,\n                    tickHeight        : 50,\n                    displayDateFormat : 'll',\n                    shiftUnit         : 'year',\n                    shiftIncrement    : 1,\n                    defaultSpan       : 10,\n                    timeResolution    : {\n                        unit      : 'year',\n                        increment : 1\n                    },\n                    mainHeaderLevel : 0,\n                    headers         : [\n                        {\n                            unit      : 'year',\n                            increment : 5,\n                            renderer  : (start, end) => start.getFullYear() + ' - ' + end.getFullYear()\n                        },\n                        {\n                            unit       : 'year',\n                            dateFormat : 'YY',\n                            increment  : 1\n                        }\n                    ]\n                }\n            },\n\n            // This is a list of bryntum-supplied preset adjustments used to create the Scheduler's\n            // default initial set of ViewPresets.\n            defaultPresets : [\n                // Years over years\n                'manyYears',\n                { width : 80, increment : 1, resolution : 1, base : 'manyYears', resolutionUnit : 'YEAR' },\n\n                // Years over quarters\n                'year',\n                { width : 30,  increment : 1, resolution : 1, base : 'year', resolutionUnit : 'MONTH' },\n                { width : 50,  increment : 1, resolution : 1, base : 'year', resolutionUnit : 'MONTH' },\n                { width : 200, increment : 1, resolution : 1, base : 'year', resolutionUnit : 'MONTH' },\n\n                // Years over months\n                'monthAndYear',\n\n                // Months over weeks\n                'weekDateAndMonth',\n\n                // Months over weeks\n                'weekAndMonth',\n\n                // Months over weeks\n                'weekAndDayLetter',\n\n                // Months over days\n                'dayAndMonth',\n\n                // Weeks over days\n                'weekAndDay',\n                { width : 54, increment : 1, resolution : 1, base : 'weekAndDay', resolutionUnit : 'HOUR' },\n\n                // Days over hours\n                'hourAndDay',\n                { width : 64,  increment : 6, resolution : 30, base : 'hourAndDay', resolutionUnit : 'MINUTE' },\n                { width : 100, increment : 6, resolution : 30, base : 'hourAndDay', resolutionUnit : 'MINUTE' },\n                { width : 64,  increment : 2, resolution : 30, base : 'hourAndDay', resolutionUnit : 'MINUTE' },\n\n                // Hours over minutes\n                'minuteAndHour',\n                { width : 60,  increment : 15, resolution : 5, base : 'minuteAndHour' },\n                { width : 130, increment : 15, resolution : 5, base : 'minuteAndHour' },\n                { width : 60,  increment : 5,  resolution : 5, base : 'minuteAndHour' },\n                { width : 100, increment : 5,  resolution : 5, base : 'minuteAndHour' },\n\n                // Minutes over seconds\n                'secondAndMinute',\n                { width : 60,  increment : 10, resolution : 5, base : 'secondAndMinute' },\n                { width : 130, increment : 5,  resolution : 5, base : 'secondAndMinute' }\n            ],\n\n            internalListeners : {\n                locale : 'updateLocalization'\n            }\n        };\n    }\n\n    set basePresets(basePresets) {\n        const presetCache = this._basePresets = {};\n\n        for (const id in basePresets) {\n            basePresets[id].id = id;\n            presetCache[id] = this.createRecord(basePresets[id]);\n        }\n    }\n\n    get basePresets() {\n        return this._basePresets;\n    }\n\n    set defaultPresets(defaultPresets) {\n        for (let i = 0, { length } = defaultPresets; i < length; i++) {\n            const\n                presetAdjustment   = defaultPresets[i],\n                isBase             = typeof presetAdjustment === 'string',\n                baseType           = isBase ? presetAdjustment : presetAdjustment.base;\n\n            let preset;\n\n            // The default was just a string, so it's an unmodified instance of a base type.\n            if (isBase) {\n                preset = this.basePresets[baseType];\n            }\n            // If it's an object, it's an adjustment to a base type\n            else {\n                const\n                    config             = Object.setPrototypeOf(ObjectHelper.clone(this.basePresets[baseType].data), { id : baseType }),\n                    { timeResolution } = config,\n                    bottomHeader       = config.headers[config.headers.length - 1];\n\n                config.id = undefined;\n\n                if ('width' in presetAdjustment) {\n                    config.tickWidth = presetAdjustment.width;\n                }\n                if ('height' in presetAdjustment) {\n                    config.tickHeight = presetAdjustment.height;\n                }\n                if ('increment' in presetAdjustment) {\n                    bottomHeader.increment = presetAdjustment.increment;\n                }\n                if ('resolution' in presetAdjustment) {\n                    timeResolution.increment = presetAdjustment.resolution;\n                }\n                if ('resolutionUnit' in presetAdjustment) {\n                    timeResolution.unit = DateHelper.getUnitByName(presetAdjustment.resolutionUnit);\n                }\n\n                preset = this.createRecord(config);\n\n                // Keep id of original preset around, used with localization in PresetStore\n                preset.baseId = baseType;\n            }\n            this.add(preset);\n        }\n    }\n\n    getById(id) {\n        // Look first in the default set, and if it's one of the base types that is not imported into the\n        // default set, then look at the bases.\n        return super.getById(id) || this.basePresets[id];\n    }\n\n    /**\n     * Registers a new view preset base to be used by any scheduler grid or tree on the page.\n     * @param {String} id The unique identifier for this preset\n     * @param {ViewPresetConfig} config The configuration properties of the view preset (see\n     * {@link Scheduler.preset.ViewPreset} for more information)\n     * @returns {Scheduler.preset.ViewPreset} A new ViewPreset based upon the passed configuration.\n     */\n    registerPreset(id, config) {\n        const\n            preset = this.createRecord(Object.assign({\n                id\n            }, config)),\n            existingDuplicate = this.find(p => p.equals(preset));\n\n        if (existingDuplicate) {\n            return existingDuplicate;\n        }\n\n        if (preset.isValid) {\n            this.add(preset);\n        }\n        else {\n            throw new Error('Invalid preset, please check your configuration');\n        }\n\n        return preset;\n    }\n\n    getPreset(preset) {\n        if (typeof preset === 'number') {\n            preset = this.getAt(preset);\n        }\n        if (typeof preset === 'string') {\n            preset = this.getById(preset);\n        }\n        else if (!(preset instanceof ViewPreset)) {\n            preset = this.createRecord(preset);\n        }\n        return preset;\n    }\n\n    /**\n     * Applies preset customizations or fetches a preset view preset using its name.\n     * @param {String|ViewPresetConfig} presetOrId Id of a predefined preset or a preset config object\n     * @returns {Scheduler.preset.ViewPreset} Resulting ViewPreset instance\n     */\n    normalizePreset(preset) {\n        const me = this;\n\n        if (!(preset instanceof ViewPreset)) {\n            if (typeof preset === 'string') {\n                preset = me.getPreset(preset);\n                if (!preset) {\n                    throw new Error('You must define a valid view preset. See PresetManager for reference');\n                }\n            }\n            else if (typeof preset === 'object') {\n                // Look up any existing ViewPreset that it is based upon.\n                if (preset.base) {\n                    const base = this.getById(preset.base);\n\n                    if (!base) {\n                        throw new Error(`ViewPreset base '${preset.base}' does not exist`);\n                    }\n                    // The config is based upon the base's data with the new config object merged in.\n                    preset = ObjectHelper.merge(ObjectHelper.clone(base.data), preset);\n                }\n\n                // Ensure the new ViewPreset has a legible, logical id which does not already\n                // exist in our store.\n                if (preset.id) {\n                    preset = me.createRecord(preset);\n                }\n                else {\n                    preset = me.createRecord(ObjectHelper.assign({}, preset));\n                    preset.id = preset.generateId(preset);\n                }\n            }\n        }\n\n        return preset;\n    }\n\n    /**\n     * Deletes a view preset\n     * @param {String} id The id of the preset, or the preset instance.\n     */\n    deletePreset(presetOrId) {\n        if (typeof presetOrId === 'string') {\n            presetOrId = this.getById(presetOrId);\n        }\n        else if (typeof presetOrId === 'number') {\n            presetOrId = this.getAt(presetOrId);\n        }\n\n        if (presetOrId) {\n            this.remove(presetOrId);\n\n            // ALso remove it from our base list\n            delete this.basePresets[presetOrId.id];\n        }\n    }\n}\n\nconst pm = new PresetManager();\n\nexport { pm as default };\n","import Store from '../../Core/data/Store.js';\nimport DH from '../../Core/helper/DateHelper.js';\nimport TimeSpan from '../model/TimeSpan.js';\nimport ViewPreset from '../preset/ViewPreset.js';\nimport PresetManager from '../preset/PresetManager.js';\n\n/**\n * @module Scheduler/data/TimeAxis\n */\n\n// Micro-optimized version of TimeSpan for faster reading. Hit a lot and since it is internal fields are guaranteed to\n// not be remapped and changes won't be batches, so we can always return raw value from data avoiding all additional\n// checks and logic\nclass Tick extends TimeSpan {\n    // Only getters on purpose, we do not support manipulating ticks\n\n    get startDate() {\n        return this.data.startDate;\n    }\n\n    get endDate() {\n        return this.data.endDate;\n    }\n}\n\n/**\n * A class representing the time axis of the scheduler. The scheduler timescale is based on the ticks generated by this\n * class. This is a pure \"data\" (model) representation of the time axis and has no UI elements.\n *\n * The time axis can be {@link #config-continuous} or not. In continuous mode, each timespan starts where the previous\n * ended, and in non-continuous mode there can be gaps between the ticks.\n * A non-continuous time axis can be used when want to filter out certain periods of time (like weekends) from the time\n * axis.\n *\n * To create a non-continuous time axis you have 2 options. First, you can create a time axis containing only the time\n * spans of interest. To do that, subclass this class and override the {@link #property-generateTicks} method.\n *\n * The other alternative is to call the {@link #function-filterBy} method, passing a function to it which should return\n * `false` if the time tick should be filtered out. Calling {@link Core.data.mixin.StoreFilter#function-clearFilters}\n * will return you to a full time axis.\n *\n * @extends Core/data/Store\n */\nexport default class TimeAxis extends Store {\n    //region Events\n\n    /**\n     * Fires before the timeaxis is about to be reconfigured (e.g. new start/end date or unit/increment). Return `false`\n     * to abort the operation.\n     * @event beforeReconfigure\n     * @param {Scheduler.data.TimeAxis} source The time axis instance\n     * @param {Date} startDate The new time axis start date\n     * @param {Date} endDate The new time axis end date\n     */\n\n    /**\n     * Event that is triggered when we end reconfiguring and everything UI-related should be done\n     * @event endReconfigure\n     * @private\n     */\n\n    /**\n     * Fires when the timeaxis has been reconfigured (e.g. new start/end date or unit/increment)\n     * @event reconfigure\n     * @param {Scheduler.data.TimeAxis} source The time axis instance\n     */\n\n    /**\n     * Fires if all the ticks in the timeaxis are filtered out. After firing the filter is temporarily disabled to\n     * return the time axis to a valid state. A disabled filter will be re-enabled the next time ticks are regenerated\n     * @event invalidFilter\n     * @param {Scheduler.data.TimeAxis} source The time axis instance\n     */\n\n    //endregion\n\n    //region Default config\n\n    static get defaultConfig() {\n        return {\n            modelClass : Tick,\n\n            /**\n             * Set to false if the timeline is not continuous, e.g. the next timespan does not start where the previous ended (for example skipping weekends etc).\n             * @config {Boolean}\n             * @default\n             */\n            continuous : true,\n\n            originalContinuous : null,\n\n            /**\n             * Include only certain hours or days in the time axis (makes it `continuous : false`). Accepts and object\n             * with `day` and `hour` properties:\n             * ```\n             * const scheduler = new Scheduler({\n             *     timeAxis : {\n             *         include : {\n             *              // Do not display hours after 17 or before 9 (only display 9 - 17). The `to´ value is not\n             *              // included in the time axis\n             *              hour : {\n             *                  from : 9,\n             *                  to   : 17\n             *              },\n             *              // Do not display sunday or saturday\n             *              day : [0, 6]\n             *         }\n             *     }\n             * }\n             * ```\n             * In most cases we recommend that you use Scheduler's workingTime config instead. It is easier to use and\n             * makes sure all parts of the Scheduler gets updated.\n             * @config {Object}\n             */\n            include : null,\n\n            /**\n             * Automatically adjust the timespan when generating ticks with {@link #property-generateTicks} according to\n             * the `viewPreset` configuration. Setting this to false may lead to shifting time/date of ticks.\n             * @config {Boolean}\n             * @default\n             */\n            autoAdjust : true,\n\n            //isConfigured : false,\n\n            // in case of `autoAdjust : false`, the 1st and last ticks can be truncated, containing only part of the normal tick\n            // these dates will contain adjusted start/end (like if the tick has not been truncated)\n            adjustedStart    : null,\n            adjustedEnd      : null,\n            // the visible position in the first tick, can actually be > 1 because the adjustment is done by the `mainUnit`\n            visibleTickStart : null,\n            // the visible position in the first tick, is always ticks count - 1 < value <= ticks count, in case of autoAdjust, always = ticks count\n            visibleTickEnd   : null,\n\n            tickCache : {},\n\n            viewPreset       : null,\n            maxTraverseTries : 100,\n            useRawData       : {\n                disableDuplicateIdCheck : true,\n                disableDefaultValue     : true,\n                disableTypeConversion   : true\n            }\n        };\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * Method generating the ticks for this time axis. Should return an array of ticks. Each tick is an object of the following structure:\n             * ```\n             * {\n             *    startDate : ..., // start date\n             *    endDate   : ...  // end date\n             * }\n             * ```\n             * Take notice, that this function either has to be called with `start`/`end` parameters, or create those variables.\n             *\n             * To see it in action please check out our [TimeAxis](https://bryntum.com/products/scheduler/examples/timeaxis/) example and navigate to \"Compressed non-working time\" tab.\n             *\n             * @param {Date} axisStartDate The start date of the interval\n             * @param {Date} axisEndDate The end date of the interval\n             * @param {String} unit The unit of the time axis\n             * @param {Number} increment The increment for the unit specified.\n             * @returns {Array} ticks The ticks representing the time axis\n             * @config {Function}\n             */\n            generateTicks : null,\n\n            unit                : null,\n            increment           : null,\n            resolutionUnit      : null,\n            resolutionIncrement : null,\n            mainUnit            : null,\n            shiftUnit           : null,\n            shiftIncrement      : 1,\n            defaultSpan         : 1,\n\n            weekStartDay : null,\n\n            // Used to force resolution to match whole ticks, to snap accordingly when using fillTicks in the UI\n            forceFullTicks : null\n        };\n    }\n\n    //endregion\n\n    //region Init\n\n    // private\n    construct(config) {\n        const me = this;\n\n        super.construct(config);\n\n        me.originalContinuous = me.continuous;\n\n        me.ion({\n            change : ({ action }) => {\n                // If the change was due to filtering, there will be a refresh event\n                // arriving next, so do not reconfigure\n                if (action !== 'filter') {\n                    me.trigger('reconfigure', { supressRefresh : false });\n                }\n            },\n            refresh        : () => me.trigger('reconfigure', { supressRefresh : false }),\n            endreconfigure : event => me.trigger('reconfigure', event)\n        });\n\n        if (me.startDate) {\n            me.internalOnReconfigure();\n            me.trigger('reconfigure');\n        }\n        else if (me.viewPreset) {\n            const range  = me.getAdjustedDates(new Date());\n            me.startDate = range.startDate;\n            me.endDate   = range.endDate;\n        }\n    }\n\n    get isTimeAxis() {\n        return true;\n    }\n\n    //endregion\n\n    //region Configuration (reconfigure & consumePreset)\n\n    /**\n     * Reconfigures the time axis based on the config object supplied and generates the new 'ticks'.\n     * @param {Object} config\n     * @param {Boolean} [suppressRefresh]\n     * @private\n     */\n    reconfigure(config, suppressRefresh = false, preventThrow = false) {\n        const\n            me         = this,\n            normalized = me.getAdjustedDates(config.startDate, config.endDate),\n            oldConfig  = {};\n\n        if (me.trigger('beforeReconfigure', { startDate : normalized.startDate, endDate : normalized.endDate, config }) !== false) {\n            me.trigger('beginReconfigure');\n\n            me._configuredStartDate = config.startDate;\n            me._configuredEndDate   = config.endDate;\n\n            // Collect old values for end event\n            for (const propName in config) {\n                oldConfig[propName] = me[propName];\n            }\n\n            const viewPresetChanged = config.viewPreset && config.viewPreset !== me.viewPreset;\n\n            // If changing viewPreset, try to gracefully recover if an applied filter results in an empty view\n            if (viewPresetChanged) {\n                preventThrow = me.isFiltered;\n\n                me.filters.forEach(f => f.disabled = false);\n            }\n            Object.assign(me, config);\n\n            if (me.internalOnReconfigure(preventThrow, viewPresetChanged) === false) {\n                return false;\n            }\n\n            me.trigger('endReconfigure', { suppressRefresh, config, oldConfig });\n        }\n    }\n\n    internalOnReconfigure(preventThrow = false, viewPresetChanged) {\n        const me = this;\n\n        me.isConfigured = true;\n\n        const\n            adjusted   = me.getAdjustedDates(me.startDate, me.endDate, true),\n            normalized = me.getAdjustedDates(me.startDate, me.endDate),\n            start      = normalized.startDate,\n            end        = normalized.endDate;\n\n        if (start >= end) {\n            throw new Error(`Invalid start/end dates. Start date must be less than end date. Start date: ${start}. End date: ${end}.`);\n        }\n\n        const\n            { unit, increment = 1 } = me,\n            ticks                   = me.generateTicks(start, end, unit, increment);\n\n        // Suspending to be able to detect an invalid filter\n        me.suspendEvents();\n        me.maintainFilter = preventThrow;\n        me.data           = ticks;\n        me.maintainFilter = false;\n\n        const { count } = me;\n\n        if (count === 0) {\n            if (preventThrow) {\n                if (viewPresetChanged) {\n                    me.disableFilters();\n                }\n                me.resumeEvents();\n                return false;\n            }\n            throw new Error('Invalid time axis configuration or filter, please check your input data.');\n        }\n\n        // start date is cached, update it to fill after generated ticks\n        me.startDate = me.first.startDate;\n        me.endDate   = me.last.endDate;\n\n        me.resumeEvents();\n\n        if (me.isContinuous) {\n            me.adjustedStart = adjusted.startDate;\n            me.adjustedEnd   = DH.getNext(count > 1 ? ticks[count - 1].startDate : adjusted.startDate, unit, increment, me.weekStartDay);\n        }\n        else {\n            me.adjustedStart = me.startDate;\n            me.adjustedEnd   = me.endDate;\n        }\n\n        me.updateVisibleTickBoundaries();\n\n        me.updateTickCache(true);\n    }\n\n    updateVisibleTickBoundaries() {\n        const\n            me = this,\n            {\n                count,\n                unit,\n                startDate,\n                endDate,\n                weekStartDay,\n                increment = 1\n            }  = me;\n\n        // Denominator is amount of milliseconds in a full tick (unit * increment). Normally we use 30 days in a month\n        // and 365 days in a year. But if month is 31 day long or year is a leap one standard formula might calculate\n        // wrong value. e.g. if we're rendering 1 day from August, formula goes like (2021-08-31 - 2021-08-02) / 30 = 1\n        // and renders full tick which is incorrect. For such cases we need to adjust denominator to a correct one.\n        // Thankfully there are only a few of them - month, year and day with DST transition.\n        const\n            startDenominator = DH.getNormalizedUnitDuration(startDate, unit) * increment,\n            endDenominator   = DH.getNormalizedUnitDuration(endDate, unit) * increment;\n\n        // if visibleTickStart > 1 this means some tick is fully outside of the view - we are not interested in it and want to\n        // drop it and adjust \"adjustedStart\" accordingly\n        do {\n            me.visibleTickStart = (startDate - me.adjustedStart) / startDenominator;\n\n            // <remove-on-release>\n            // TODO: Changed from round to floor which seems to work, but this is not needed in ExtScheduler. Need to step and see what is different\n            // </remove-on-release>\n            if (me.autoAdjust) me.visibleTickStart = Math.floor(me.visibleTickStart);\n\n            if (me.visibleTickStart >= 1) me.adjustedStart = DH.getNext(me.adjustedStart, unit, increment, weekStartDay);\n        } while (me.visibleTickStart >= 1);\n\n        do {\n            me.visibleTickEnd = count - (me.adjustedEnd - endDate) / endDenominator;\n\n            if (count - me.visibleTickEnd >= 1) me.adjustedEnd = DH.getNext(me.adjustedEnd, unit, -1, weekStartDay);\n        } while (count - me.visibleTickEnd >= 1);\n\n        // This flag indicates that the time axis starts exactly on a tick boundary and finishes on a tick boundary\n        // This is used as an optimization flag by TimeAxisViewModel.createHeaderRow\n        me.fullTicks = !me.visibleTickStart && me.visibleTickEnd === count;\n    }\n\n    /**\n     * Get the currently used time unit for the ticks\n     * @readonly\n     * @member {'millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year'} unit\n     */\n\n    /**\n     * Get/set currently used preset\n     * @property {Scheduler.preset.ViewPreset}\n     */\n    get viewPreset() {\n        return this._viewPreset;\n    }\n\n    set viewPreset(preset) {\n        const me = this;\n\n        preset = PresetManager.getPreset(preset);\n\n        if (!(preset instanceof ViewPreset)) {\n            throw new Error('TimeAxis must be configured with the ViewPreset instance that the Scheduler is using');\n        }\n\n        me._viewPreset = preset;\n\n        Object.assign(me, {\n            unit      : preset.bottomHeader.unit,\n            increment : preset.bottomHeader.increment || 1,\n\n            resolutionUnit      : preset.timeResolution.unit,\n            resolutionIncrement : preset.timeResolution.increment,\n\n            mainUnit       : preset.mainHeader.unit,\n            shiftUnit      : preset.shiftUnit || preset.mainHeader.unit,\n            shiftIncrement : preset.shiftIncrement || 1,\n\n            defaultSpan : preset.defaultSpan || 1,\n            presetName  : preset.id,\n\n            // Weekview columns are updated upon 'datachanged' event on this object.\n            // We have to pass headers in order to render them correctly (timeAxisViewModel is incorrect in required time)\n            headers : preset.headers\n        });\n    }\n\n    //endregion\n\n    //region Getters & setters\n\n    get weekStartDay() {\n        return this._weekStartDay ?? DH.weekStartDay;\n    }\n\n    // private\n    get resolution() {\n        return {\n            unit      : this.resolutionUnit,\n            increment : this.resolutionIncrement\n        };\n    }\n\n    // private\n    set resolution(resolution) {\n        this.resolutionUnit      = resolution.unit;\n        this.resolutionIncrement = resolution.increment;\n    }\n\n    get resolutionUnit() {\n        return this.forceFullTicks ? this.unit : this._resolutionUnit;\n    }\n\n    get resolutionIncrement() {\n        return this.forceFullTicks ? this.increment : this._resolutionIncrement;\n    }\n\n    //endregion\n\n    //region Timespan & resolution\n\n    /**\n     * Changes the time axis timespan to the supplied start and end dates.\n     *\n     * **Note** This does **not** preserve the temporal scroll position. You may use\n     * {@link Scheduler.view.Scheduler#function-setTimeSpan} to set the time axis and\n     * maintain temporal scroll position (if possible).\n     * @param {Date} newStartDate The new start date\n     * @param {Date} [newEndDate] The new end date\n     */\n    setTimeSpan(newStartDate, newEndDate, preventThrow = false) {\n        // If providing a 0 span range, add default range\n        if (newEndDate && newStartDate - newEndDate === 0) {\n            newEndDate = null;\n        }\n\n        const\n            me                     = this,\n            { startDate, endDate } = me.getAdjustedDates(newStartDate, newEndDate);\n\n        if (me.startDate - startDate !== 0 || me.endDate - endDate !== 0) {\n            return me.reconfigure({\n                startDate,\n                endDate\n            }, false, preventThrow);\n        }\n    }\n\n    /**\n     * Moves the time axis by the passed amount and unit.\n     *\n     * NOTE: When using a filtered TimeAxis the result of `shift()` cannot be guaranteed, it might shift into a\n     * filtered out span. It tries to be smart about it by shifting from unfiltered start and end dates.\n     * If that solution does not work for your filtering setup, please call {@link #function-setTimeSpan} directly\n     * instead.\n     *\n     * @param {Number} amount The number of units to jump\n     * @param {String} [unit] The unit (Day, Week etc)\n     */\n    shift(amount, unit = this.shiftUnit) {\n        const me = this;\n\n        let { startDate, endDate } = me;\n\n        // Use unfiltered start and end dates when shifting a filtered time axis, to lessen risk of messing it up.\n        // Still not guaranteed to work though\n        if (me.isFiltered) {\n            startDate = me.allRecords[0].startDate;\n            endDate   = me.allRecords[me.allCount - 1].endDate;\n        }\n\n        // Hack for filtered time axis, for example if weekend is filtered out and you shiftPrev() day from monday\n        let tries = 0;\n        do {\n            startDate = DH.add(startDate, amount, unit);\n            endDate   = DH.add(endDate, amount, unit);\n        } while (tries++ < me.maxTraverseTries && me.setTimeSpan(startDate, endDate, {\n            preventThrow : true\n        }) === false);\n    }\n\n    /**\n     * Moves the time axis forward in time in units specified by the view preset `shiftUnit`, and by the amount specified by the `shiftIncrement`\n     * config of the current view preset.\n     *\n     * NOTE: When using a filtered TimeAxis the result of `shiftNext()` cannot be guaranteed, it might shift into a\n     * filtered out span. It tries to be smart about it by shifting from unfiltered start and end dates.\n     * If that solution does not work for your filtering setup, please call {@link #function-setTimeSpan} directly\n     * instead.\n     *\n     * @param {Number} [amount] The number of units to jump forward\n     */\n    shiftNext(amount = this.shiftIncrement) {\n        this.shift(amount);\n    }\n\n    /**\n     * Moves the time axis backward in time in units specified by the view preset `shiftUnit`, and by the amount specified by the `shiftIncrement` config of the current view preset.\n     *\n     * NOTE: When using a filtered TimeAxis the result of `shiftPrev()` cannot be guaranteed, it might shift into a\n     * filtered out span. It tries to be smart about it by shifting from unfiltered start and end dates.\n     * If that solution does not work for your filtering setup, please call {@link #function-setTimeSpan} directly\n     * instead.\n     *\n     * @param {Number} [amount] The number of units to jump backward\n     */\n    shiftPrevious(amount = this.shiftIncrement) {\n        this.shift(-amount);\n    }\n\n    //endregion\n\n    //region Filter & continuous\n\n    /**\n     * Filter the time axis by a function (and clears any existing filters first). The passed function will be called with each tick in time axis.\n     * If the function returns `true`, the 'tick' is included otherwise it is filtered. If all ticks are filtered out\n     * the time axis is considered invalid, triggering `invalidFilter` and then removing the filter.\n     * @param {Function} fn The function to be called, it will receive an object with `startDate`/`endDate` properties, and `index` of the tick.\n     * @param {Object} [thisObj] `this` reference for the function\n     * @typings {Promise<any|null>}\n     */\n    filterBy(fn, thisObj = this) {\n        const me = this;\n\n        me.filters.clear();\n\n        super.filterBy((tick, index) => fn.call(thisObj, tick.data, index));\n    }\n\n    filter() {\n        const\n            me     = this,\n            retVal = super.filter(...arguments);\n\n        if (!me.maintainFilter && me.count === 0) {\n            me.resumeEvents();\n            me.trigger('invalidFilter');\n            me.disableFilters();\n        }\n\n        return retVal;\n    }\n\n    disableFilters() {\n        this.filters.forEach(f => f.disabled = true);\n\n        this.filter();\n    }\n\n    triggerFilterEvent(event) {\n        const me = this;\n\n        if (!event.filters.count) {\n            me.continuous = me.originalContinuous;\n        }\n        else {\n            me.continuous = false;\n        }\n\n        // Filters has been applied (or cleared) but listeners are not informed yet, update tick cache to have start and\n        // end dates correct when later redrawing events & header\n        me.updateTickCache();\n\n        super.triggerFilterEvent(event);\n    }\n\n    /**\n     * Returns `true` if the time axis is continuous (will return `false` when filtered)\n     * @property {Boolean}\n     */\n    get isContinuous() {\n        return this.continuous !== false && !this.isFiltered;\n    }\n\n    //endregion\n\n    //region Dates\n\n    getAdjustedDates(startDate, endDate, forceAdjust = false) {\n        const me = this;\n\n        // If providing a 0 span range, add default range\n        if (endDate && startDate - endDate === 0) {\n            endDate = null;\n        }\n\n        startDate = startDate || me.startDate;\n        endDate   = endDate || DH.add(startDate, me.defaultSpan, me.mainUnit);\n\n        return me.autoAdjust || forceAdjust ? {\n            startDate : me.floorDate(startDate, false, me.autoAdjust ? me.mainUnit : me.unit, 1),\n            endDate   : me.ceilDate(endDate, false, me.autoAdjust ? me.mainUnit : me.unit, 1)\n        } : {\n            startDate,\n            endDate\n        };\n    }\n\n    /**\n     * Method to get the current start date of the time axis.\n     * @property {Date}\n     */\n    get startDate() {\n        // <remove-on-release>\n        // TODO: added _start as caching, might mess something up when reconfiguring? change here if tests fail\n        // </remove-on-release>\n        return this._start || (this.first ? new Date(this.first.startDate) : null);\n    }\n\n    set startDate(start) {\n        this._start = DH.parse(start);\n    }\n\n    /**\n     * Method to get a the current end date of the time axis\n     * @property {Date}\n     */\n    get endDate() {\n        return this._end || (this.last ? new Date(this.last.endDate) : null);\n    }\n\n    set endDate(end) {\n        if (end) this._end = DH.parse(end);\n    }\n\n    // used in performance critical code for comparisons\n    get startMS() {\n        return this._startMS;\n    }\n\n    // used in performance critical code for comparisons\n    get endMS() {\n        return this._endMS;\n    }\n\n    // Floors a date and optionally snaps it to one of the following resolutions:\n    // 1. 'resolutionUnit'. If param 'resolutionUnit' is passed, the date will simply be floored to this unit.\n    // 2. If resolutionUnit is not passed: If date should be snapped relative to the timeaxis start date,\n    // the resolutionUnit of the timeAxis will be used, or the timeAxis 'mainUnit' will be used to snap the date\n    //\n    // returns a copy of the original date\n    // private\n    floorDate(date, relativeToStart, resolutionUnit, incr) {\n        relativeToStart = relativeToStart !== false;\n\n        const\n            me         = this,\n            relativeTo = relativeToStart ? DH.clone(me.startDate) : null,\n            increment  = incr || me.resolutionIncrement,\n            unit       = resolutionUnit || (relativeToStart ? me.resolutionUnit : me.mainUnit),\n            snap       = (value, increment) => Math.floor(value / increment) * increment;\n\n        if (relativeToStart) {\n            const snappedDuration = snap(DH.diff(relativeTo, date, unit), increment);\n            // <remove-on-release>\n            // TODO: used to be small unit multiplied with factor (minute = seconds, minutes * 60)\n            // </remove-on-release>\n            return DH.add(relativeTo, snappedDuration, unit, false);\n        }\n\n        const dt = DH.clone(date);\n\n        if (unit === 'week') {\n            const\n                day      = dt.getDay() || 7,\n                startDay = me.weekStartDay || 7;\n\n            DH.add(DH.startOf(dt, 'day', false), day >= startDay ? startDay - day : -(7 - startDay + day), 'day', false);\n\n            // Watch out for Brazil DST craziness (see test 028_timeaxis_dst.t.js)\n            if (dt.getDay() !== startDay && dt.getHours() === 23) {\n                DH.add(dt, 1, 'hour', false);\n            }\n        }\n        else {\n            // removes \"smaller\" units from date (for example minutes; removes seconds and milliseconds)\n            DH.startOf(dt, unit, false);\n\n            // day and year are 1-based so need to make additional adjustments\n            const\n                modifier     = ['day', 'year'].includes(unit) ? 1 : 0,\n                useUnit      = unit === 'day' ? 'date' : unit,\n                snappedValue = snap(DH.get(dt, useUnit) - modifier, increment) + modifier;\n\n            DH.set(dt, useUnit, snappedValue);\n        }\n\n        return dt;\n    }\n\n    /**\n     * Rounds the date to nearest unit increment\n     * @private\n     */\n    roundDate(date, relativeTo, resolutionUnit = this.resolutionUnit, increment = this.resolutionIncrement || 1) {\n        const\n            me = this,\n            dt = DH.clone(date);\n\n        relativeTo = DH.clone(relativeTo || me.startDate);\n\n        switch (resolutionUnit) {\n            case 'week': {\n                DH.startOf(dt, 'day', false);\n\n                let distanceToWeekStartDay = dt.getDay() - me.weekStartDay,\n                    toAdd;\n\n                if (distanceToWeekStartDay < 0) {\n                    distanceToWeekStartDay = 7 + distanceToWeekStartDay;\n                }\n\n                if (Math.round(distanceToWeekStartDay / 7) === 1) {\n                    toAdd = 7 - distanceToWeekStartDay;\n                }\n                else {\n                    toAdd = -distanceToWeekStartDay;\n                }\n\n                return DH.add(dt, toAdd, 'day', false);\n            }\n\n            case 'month': {\n                const\n                    nbrMonths     = DH.diff(relativeTo, dt, 'month') + DH.as('month', dt.getDay() / DH.daysInMonth(dt)), //*/DH.as('month', DH.diff(relativeTo, dt)) + (dt.getDay() / DH.daysInMonth(dt)),\n                    snappedMonths = Math.round(nbrMonths / increment) * increment;\n                return DH.add(relativeTo, snappedMonths, 'month', false);\n            }\n\n            case 'quarter':\n                DH.startOf(dt, 'month', false);\n                return DH.add(dt, 3 - (dt.getMonth() % 3), 'month', false);\n\n            default: {\n                const\n                    duration        = DH.as(resolutionUnit, DH.diff(relativeTo, dt)),\n                    // Need to find the difference of timezone offsets between relativeTo and original dates. 0 if timezone offsets are the same.\n                    offset          = DH.as(resolutionUnit, relativeTo.getTimezoneOffset() - dt.getTimezoneOffset(), 'minute'),\n                    // Need to add the offset to the whole duration, so the divided value will take DST into account\n                    snappedDuration = Math.round((duration + offset) / increment) * increment;\n\n                // <remove-on-release>\n                // TODO: used to add one res unit lower * factor, minutes = add seconds, minutes * 60\n                // </remove-on-release>\n                // Now when the round is done, we need to subtract the offset, so the result also will take DST into account\n                return DH.add(relativeTo, snappedDuration - offset, resolutionUnit, false);\n            }\n        }\n    }\n\n    // private\n    ceilDate(date, relativeToStart, resolutionUnit, increment) {\n        const me = this;\n\n        relativeToStart = relativeToStart !== false;\n        increment       = increment || (relativeToStart ? me.resolutionIncrement : 1);\n\n        const\n            unit = resolutionUnit || (relativeToStart ? me.resolutionUnit : me.mainUnit),\n            dt   = DH.clone(date);\n\n        let doCall = false;\n\n        switch (unit) {\n            case 'minute':\n                doCall = !DH.isStartOf(dt, 'minute');\n                break;\n\n            case 'hour':\n                doCall = !DH.isStartOf(dt, 'hour');\n                break;\n\n            case 'day':\n            case 'date':\n                doCall = !DH.isStartOf(dt, 'day');\n                break;\n\n            case 'week':\n                DH.startOf(dt, 'day', false);\n                doCall = (dt.getDay() !== me.weekStartDay || !DH.isEqual(dt, date));\n                break;\n\n            case 'month':\n                DH.startOf(dt, 'day', false);\n                doCall = (dt.getDate() !== 1 || !DH.isEqual(dt, date));\n                break;\n\n            case 'quarter':\n                DH.startOf(dt, 'day', false);\n                doCall = (dt.getMonth() % 3 !== 0 || dt.getDate() !== 1 || !DH.isEqual(dt, date));\n                break;\n\n            case 'year':\n                DH.startOf(dt, 'day', false);\n                doCall = (dt.getMonth() !== 0 || dt.getDate() !== 1 || !DH.isEqual(dt, date));\n                break;\n        }\n\n        if (doCall) {\n            return DH.getNext(dt, unit, increment, me.weekStartDay);\n        }\n\n        return dt;\n    }\n\n    //endregion\n\n    //region Ticks\n\n    get include() {\n        return this._include;\n    }\n\n    set include(include) {\n        const me = this;\n\n        me._include   = include;\n        me.continuous = !include;\n\n        if (!me.isConfiguring) {\n            me.startDate = me._configuredStartDate;\n            me.endDate   = me._configuredEndDate;\n            me.internalOnReconfigure();\n            me.trigger('includeChange');\n        }\n    }\n\n    // Check if a certain date is included based on timeAxis.include rules\n    processExclusion(startDate, endDate, unit) {\n        const { include } = this;\n\n        if (include) {\n            return Object.entries(include).some(([includeUnit, rule]) => {\n\n                if (!rule) {\n                    return false;\n                }\n\n                const { from, to } = rule;\n\n                // Including the closest smaller unit with a { from, to} rule should affect start & end of the\n                // generated tick. Currently only works for days or smaller.\n                if (DH.compareUnits('day', unit) >= 0 && DH.getLargerUnit(includeUnit) === unit) {\n                    if (from) {\n                        DH.set(startDate, includeUnit, from);\n                    }\n\n                    if (to) {\n                        let stepUnit = unit;\n                        // Stepping back base on date, not day\n                        if (unit === 'day') {\n                            stepUnit = 'date';\n                        }\n                        // Since endDate is not inclusive it points to the next day etc.\n                        // Turns for example 2019-01-10T00:00 -> 2019-01-09T18:00\n                        DH.set(endDate, {\n                            [stepUnit]    : DH.get(endDate, stepUnit) - 1,\n                            [includeUnit] : to\n                        });\n                    }\n                }\n\n                // \"Greater\" unit being included? Then we need to care about it\n                // (for example excluding day will also affect hour, minute etc)\n                if (DH.compareUnits(includeUnit, unit) >= 0) {\n                    const datePart = (includeUnit === 'day' ? startDate.getDay() : DH.get(startDate, includeUnit));\n\n                    if ((from && datePart < from) || (to && datePart >= to)) {\n                        return true;\n                    }\n                }\n            });\n        }\n\n        return false;\n    }\n\n    // Calculate constants used for exclusion when scaling within larger ticks\n    initExclusion() {\n        Object.entries(this.include).forEach(([unit, rule]) => {\n            if (rule) {\n                const { from, to } = rule;\n\n                // For example for hour:\n                // 1. Get the next bigger unit -> day, get ratio -> 24\n                // 2. to 20 - from 8 = 12 hours visible each day. lengthFactor 24 / 12 = 2 means that each hour used\n                // needs to represent 2 hours when drawn (to stretch)\n                // |    ████    | -> |  ████████  |\n                rule.lengthFactor = DH.getUnitToBaseUnitRatio(unit, DH.getLargerUnit(unit)) / (to - from);\n                // <remove-on-release>\n                // TODO: Since `to` is exclusive this should be the correct one... but cannot get it to work throughout\n                // </remove-on-release>\n                rule.lengthFactorExcl = DH.getUnitToBaseUnitRatio(unit, DH.getLargerUnit(unit)) / (to - from - 1);\n\n                // Calculate weighted center to stretch around |   ██x█ |\n                rule.center = from + from / (rule.lengthFactor - 1);\n            }\n        });\n    }\n\n    /**\n     * Method generating the ticks for this time axis. Should return an array of ticks. Each tick is an object of the following structure:\n     * ```\n     * {\n     *    startDate : ..., // start date\n     *    endDate   : ...  // end date\n     * }\n     * ```\n     * Take notice, that this function either has to be called with `start`/`end` parameters, or create those variables.\n     *\n     * To see it in action please check out our [TimeAxis](https://bryntum.com/products/scheduler/examples/timeaxis/) example and navigate to \"Compressed non-working time\" tab.\n     *\n     * @member {Function} generateTicks\n     * @param {Date} axisStartDate The start date of the interval\n     * @param {Date} axisEndDate The end date of the interval\n     * @param {String} unit The unit of the time axis\n     * @param {Number} increment The increment for the unit specified.\n     * @returns {Array} ticks The ticks representing the time axis\n     */\n\n    updateGenerateTicks() {\n        if (!this.isConfiguring) {\n            this.reconfigure(this);\n        }\n    }\n\n    _generateTicks(axisStartDate, axisEndDate, unit = this.unit, increment = this.increment) {\n        const\n            me            = this,\n            ticks         = [],\n            usesExclusion = Boolean(me.include);\n\n        let intervalEnd,\n            tickEnd,\n            isExcluded,\n            dstDiff                = 0,\n            { startDate, endDate } = me.getAdjustedDates(axisStartDate, axisEndDate);\n\n        me.tickCache = {};\n\n        if (usesExclusion) {\n            me.initExclusion();\n        }\n\n        while (startDate < endDate) {\n            intervalEnd = DH.getNext(startDate, unit, increment, me.weekStartDay);\n\n            if (!me.autoAdjust && intervalEnd > endDate) {\n                intervalEnd = endDate;\n            }\n\n            // Handle hourly increments crossing DST boundaries to keep the timescale looking correct\n            // Only do this for HOUR resolution currently, and only handle it once per tick generation.\n            if (unit === 'hour' && increment > 1 && ticks.length > 0 && dstDiff === 0) {\n                const prev = ticks[ticks.length - 1];\n\n                dstDiff = ((prev.startDate.getHours() + increment) % 24) - prev.endDate.getHours();\n\n                if (dstDiff !== 0) {\n                    // A DST boundary was crossed in previous tick, adjust this tick to keep timeaxis \"symmetric\".\n                    intervalEnd = DH.add(intervalEnd, dstDiff, 'hour');\n                }\n            }\n\n            isExcluded = false;\n\n            if (usesExclusion) {\n                tickEnd    = new Date(intervalEnd.getTime());\n                isExcluded = me.processExclusion(startDate, intervalEnd, unit);\n            }\n            else {\n                tickEnd = intervalEnd;\n            }\n\n            if (!isExcluded) {\n                ticks.push({\n                    id      : (ticks.length + 1),\n                    startDate,\n                    endDate : intervalEnd\n                });\n                me.tickCache[startDate.getTime()] = ticks.length - 1;\n            }\n\n            startDate = tickEnd;\n        }\n\n        return ticks;\n    }\n\n    /**\n     * How many ticks are visible across the TimeAxis.\n     *\n     * Usually, this is an integer because {@link #config-autoAdjust} means that the start and end\n     * dates are adjusted to be on tick boundaries.\n     * @property {Number}\n     * @internal\n     */\n    get visibleTickTimeSpan() {\n        const me = this;\n        return me.isContinuous ? me.visibleTickEnd - me.visibleTickStart : me.count;\n    }\n\n    /**\n     * Gets a tick \"coordinate\" representing the date position on the time scale. Returns -1 if the date is not part of the time axis.\n     * @param {Date} date the date\n     * @returns {Number} the tick position on the scale or -1 if the date is not part of the time axis\n     */\n    getTickFromDate(date) {\n        const\n            me     = this,\n            ticks  = me.records,\n            dateMS = date.getTime?.() ?? date;\n\n        let begin = 0,\n            end   = ticks.length - 1,\n            middle, tick, tickStart, tickEnd;\n\n        // Quickly eliminate out of range dates or if we have not been set up with a time range yet\n        if (!ticks.length || dateMS < ticks[0].startDateMS || dateMS > ticks[end].endDateMS) {\n            return -1;\n        }\n        if (me.isContinuous) {\n            // <remove-on-release>\n            // TODO: This is the code from ExtScheduler, it is a calculation without iteration so it should perform better,\n            //  we should consider using it...\n            // if (date - ticks[0].startDate === 0) return this.visibleTickStart;\n            // if (date - ticks[end].endDate === 0) return this.visibleTickEnd;\n            //\n            // const { adjustedStart, adjustedEnd }     = this;\n            //\n            // let tickIndex       = Math.floor(ticks.length * (date - adjustedStart) / (adjustedEnd - adjustedStart));\n            //\n            // // for the date == adjustedEnd case\n            // if (tickIndex > end) {\n            //     tickIndex = end;\n            // }\n            //\n            // const tickStart           = tickIndex === 0 ? adjustedStart : ticks[tickIndex].startDate;\n            // const tickEnd             = tickIndex === end ? adjustedEnd : ticks[tickIndex].endDate;\n            //\n            // tick                = tickIndex + (date - tickStart) / (tickEnd - tickStart);\n            //\n            // // in case of `autoAdjust : false` the actual visible timespan starts not from 0 tick coordinate, but\n            // // from `visibleTickStart` coordinate, this check generally repeats the \"quick bailout\" check in the beginning of the method,\n            // // but still\n            // if (tick < this.visibleTickStart || tick > this.visibleTickEnd) {\n            //     return -1;\n            // }\n            //\n            // return tick;\n            // </remove-on-release>\n\n            // Chop tick cache in half until we find a match\n            while (begin < end) {\n                middle = (begin + end + 1) >> 1;\n                if (dateMS > ticks[middle].endDateMS) {\n                    begin = middle + 1;\n                }\n                else if (dateMS < ticks[middle].startDateMS) {\n                    end = middle - 1;\n                }\n                else {\n                    begin = middle;\n                }\n            }\n            tick      = ticks[begin];\n            tickStart = tick.startDateMS;\n\n            // Part way though, calculate the fraction\n            if (dateMS > tickStart) {\n                tickEnd = tick.endDateMS;\n                begin += (dateMS - tickStart) / (tickEnd - tickStart);\n            }\n\n            return Math.min(Math.max(begin, me.visibleTickStart), me.visibleTickEnd);\n        }\n        else {\n            for (let i = 0; i <= end; i++) {\n                tickEnd = ticks[i].endDateMS;\n\n                if (dateMS <= tickEnd) {\n                    tickStart = ticks[i].startDateMS;\n\n                    // date < tickStart can occur in filtered case\n                    tick = i + (dateMS > tickStart ? (dateMS - tickStart) / (tickEnd - tickStart) : 0);\n\n                    return tick;\n                }\n            }\n        }\n\n    }\n\n    /**\n     * Gets the time represented by a tick \"coordinate\".\n     * @param {Number} tick the tick \"coordinate\"\n     * @param {'floor'|'round'|'ceil'} [roundingMethod] Rounding method to use. 'floor' to take the tick (lowest header\n     * in a time axis) start date, 'round' to round the value to nearest increment or 'ceil' to take the tick end date\n     * @returns {Date} The date to represented by the tick \"coordinate\", or null if invalid.\n     */\n    getDateFromTick(tick, roundingMethod) {\n        const me = this;\n\n        if (tick === me.visibleTickEnd) {\n            return me.endDate;\n        }\n\n        const\n            wholeTick = Math.floor(tick),\n            fraction  = tick - wholeTick,\n            t         = me.getAt(wholeTick);\n\n        if (!t) {\n            return null;\n        }\n\n        const\n            // if we've filtered timeaxis using filterBy, then we cannot trust to adjustedStart property and should use tick start\n            start = wholeTick === 0 && me.isContinuous ? me.adjustedStart : t.startDate,\n            // if we've filtered timeaxis using filterBy, then we cannot trust to adjustedEnd property and should use tick end\n            end   = (wholeTick === me.count - 1) && me.isContinuous ? me.adjustedEnd : t.endDate;\n\n        let date = DH.add(start, fraction * (end - start), 'millisecond');\n\n        if (roundingMethod) {\n            date = me[roundingMethod + 'Date'](date);\n        }\n\n        return date;\n    }\n\n    /**\n     * Returns the ticks of the timeaxis in an array of objects with a \"startDate\" and \"endDate\".\n     * @property {Scheduler.model.TimeSpan[]}\n     */\n    get ticks() {\n        return this.records;\n    }\n\n    /**\n     * Caches ticks and start/end dates for faster processing during rendering of events.\n     * @private\n     */\n    updateTickCache(onlyStartEnd = false) {\n        const me = this;\n\n        if (me.count) {\n            me._start   = me.first.startDate;\n            me._end     = me.last.endDate;\n            me._startMS = me.startDate.getTime();\n            me._endMS   = me.endDate.getTime();\n        }\n        else {\n            me._start = me._end = me._startMs = me._endMS = null;\n        }\n\n        // onlyStartEnd is true prior to clearing filters, to get start and end dates correctly during that process.\n        // No point in filling tickCache yet in that case, it will be done after the filters are cleared\n        if (!onlyStartEnd) {\n            me.tickCache = {};\n            me.forEach((tick, i) => me.tickCache[tick.startDate.getTime()] = i);\n        }\n    }\n\n    //endregion\n\n    //region Axis\n\n    /**\n     * Returns true if the passed date is inside the span of the current time axis.\n     * @param {Date} date The date to query for\n     * @returns {Boolean} true if the date is part of the time axis\n     */\n    dateInAxis(date, inclusiveEnd = false) {\n        const\n            me        = this,\n            axisStart = me.startDate,\n            axisEnd   = me.endDate;\n\n        // Date is between axis start/end and axis is not continuous - need to perform better lookup\n        if (me.isContinuous) {\n            return inclusiveEnd ? DH.betweenLesserEqual(date, axisStart, axisEnd) : DH.betweenLesser(date, axisStart, axisEnd);\n        }\n        else {\n            const length = me.getCount();\n\n            let tickStart, tickEnd, tick;\n\n            for (let i = 0; i < length; i++) {\n                tick      = me.getAt(i);\n                tickStart = tick.startDate;\n                tickEnd   = tick.endDate;\n\n                if ((inclusiveEnd && date <= tickEnd) || (!inclusiveEnd && date < tickEnd)) {\n                    return date >= tickStart;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Returns true if the passed timespan is part of the current time axis (in whole or partially).\n     * @param {Date} start The start date\n     * @param {Date} end The end date\n     * @returns {Boolean} true if the timespan is part of the timeaxis\n     */\n    timeSpanInAxis(start, end) {\n        const me = this;\n\n        if (!end || end.getTime() === start.getTime()) {\n            return this.dateInAxis(start, true);\n        }\n\n        if (me.isContinuous) {\n            return DH.intersectSpans(start, end, me.startDate, me.endDate);\n        }\n\n        return (start < me.startDate && end > me.endDate) || me.getTickFromDate(start) !== me.getTickFromDate(end);\n    }\n\n    // Accepts a TimeSpan model (uses its cached MS values to be a bit faster during rendering)\n    isTimeSpanInAxis(timeSpan) {\n        const\n            me                         = this,\n            { startMS, endMS }         = me,\n            { startDateMS }            = timeSpan,\n            endDateMS                  = timeSpan.endDateMS ?? timeSpan.meta.endDateCached;\n\n        // only consider fully scheduled ranges\n        if (!startDateMS || !endDateMS) return false;\n\n        if (endDateMS === startDateMS) {\n            return me.dateInAxis(timeSpan.startDate, true);\n        }\n\n        if (me.isContinuous) {\n            return endDateMS > startMS && startDateMS < endMS;\n        }\n\n        const\n            startTick = me.getTickFromDate(timeSpan.startDate),\n            endTick   = me.getTickFromDate(timeSpan.endDate);\n\n        // endDate is not inclusive\n        // <remove-on-release>\n        // TODO: Handle in getTickFromDate() somehow?\n        // </remove-on-release>\n        if (\n            (startTick === me.count && DH.isEqual(timeSpan.startDate, me.last.endDate)) ||\n            (endTick === 0 && DH.isEqual(timeSpan.endDate, me.first.startDate))\n        ) {\n            return false;\n        }\n\n        return (\n            // Spanning entire axis\n            (startDateMS < startMS && endDateMS > endMS) ||\n            // Unintentionally 0 wide (ticks excluded or outside)\n            startTick !== endTick\n        );\n    }\n\n    //endregion\n\n    //region Iteration\n\n    /**\n     * Calls the supplied iterator function once per interval. The function will be called with four parameters, startDate endDate, index, isLastIteration.\n     * @internal\n     * @param {String} unit The unit to use when iterating over the timespan\n     * @param {Number} increment The increment to use when iterating over the timespan\n     * @param {Function} iteratorFn The function to call\n     * @param {Object} [thisObj] `this` reference for the function\n     */\n    forEachAuxInterval(unit, increment = 1, iteratorFn, thisObj = this) {\n        const end = this.endDate;\n\n        let dt = this.startDate,\n            i  = 0,\n            intervalEnd;\n\n        if (dt > end) throw new Error('Invalid time axis configuration');\n\n        while (dt < end) {\n            intervalEnd = DH.min(DH.getNext(dt, unit, increment, this.weekStartDay), end);\n            iteratorFn.call(thisObj, dt, intervalEnd, i, intervalEnd >= end);\n            dt = intervalEnd;\n            i++;\n        }\n    }\n\n    //endregion\n}\n","import InstancePlugin from '../../../Core/mixin/InstancePlugin.js';\nimport DateHelper from '../../../Core/helper/DateHelper.js';\nimport DomHelper from '../../../Core/helper/DomHelper.js';\nimport DragHelper from '../../../Core/helper/DragHelper.js';\nimport Rectangle from '../../../Core/helper/util/Rectangle.js';\nimport ClockTemplate from '../../tooltip/ClockTemplate.js';\nimport Tooltip from '../../../Core/widget/Tooltip.js';\nimport Objects from '../../../Core/helper/util/Objects.js';\nimport Widget from '../../../Core/widget/Widget.js';\n\n/**\n * @module Scheduler/feature/base/DragBase\n */\n\n// <remove-on-release>\n// TODO: shift to copy\n// </remove-on-release>\n\n/**\n * Base class for EventDrag (Scheduler) and TaskDrag (Gantt) features. Contains shared code. Not to be used directly.\n *\n * @extends Core/mixin/InstancePlugin\n * @abstract\n */\nexport default class DragBase extends InstancePlugin {\n    //region Config\n\n    static get defaultConfig() {\n        return {\n            // documented on Schedulers EventDrag feature and Gantt's TaskDrag\n            tooltipTemplate : data => `\n                <div class=\"b-sch-tip-${data.valid ? 'valid' : 'invalid'}\">\n                    ${data.startClockHtml}\n                    ${data.endClockHtml}\n                    <div class=\"b-sch-tip-message\">${data.message}</div>\n                </div>\n            `,\n\n            /**\n             * Specifies whether or not to show tooltip while dragging event\n             * @config {Boolean}\n             * @default\n             */\n            showTooltip : true,\n\n            /**\n             * When enabled, the event being dragged always \"snaps\" to the exact start date that it will have after drop.\n             * @config {Boolean}\n             * @default\n             */\n            showExactDropPosition : false,\n\n            /*\n             * The store from which the dragged items are mapped to the UI.\n             * In Scheduler's implementation of this base class, this will be\n             * an EventStore, in Gantt's implementations, this will be a TaskStore.\n             * Because both derive from this base, we must refer to it as this.store.\n             * @private\n             */\n            store : null,\n\n            /**\n             * An object used to configure the internal {@link Core.helper.DragHelper} class\n             * @config {DragHelperConfig}\n             */\n            dragHelperConfig : null,\n\n            tooltipCls : 'b-eventdrag-tooltip'\n        };\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * Set to `false` to allow dragging tasks outside the client Scheduler.\n             * Useful when you want to drag tasks between multiple Scheduler instances\n             * @config {Boolean}\n             * @default\n             */\n            constrainDragToTimeline : true,\n\n            // documented on Schedulers EventDrag feature, not used for Gantt\n            constrainDragToResource : true,\n\n            constrainDragToTimeSlot : false,\n\n            /**\n             * Yields the {@link Core.widget.Tooltip} which tracks the event during a drag operation.\n             * @member {Core.widget.Tooltip} tip\n             */\n            /**\n             * A config object to allow customization of the {@link Core.widget.Tooltip} which tracks\n             * the event during a drag operation.\n             * @config {TooltipConfig}\n             */\n            tip : {\n                $config : ['lazy', 'nullify'],\n                value   : {\n                    align : {\n                        align          : 'b-t',\n                        allowTargetOut : true\n                    },\n                    autoShow                 : true,\n                    updateContentOnMouseMove : true\n                }\n            },\n\n            /**\n             * The `eventDrag`and `taskDrag` events are normally only triggered when the drag operation will lead to a\n             * change in date or assignment. By setting this config to `false`, that logic is bypassed to trigger events\n             * for each native mouse move event.\n             * @prp {Boolean}\n             */\n            throttleDragEvent : true\n        };\n    }\n\n    // Plugin configuration. This plugin chains some of the functions in Grid.\n    static get pluginConfig() {\n        return {\n            chain : ['onPaint']\n        };\n    }\n\n    //endregion\n\n    //region Init\n\n    internalSnapToPosition(snapTo) {\n        const { dragData } = this;\n\n        this.snapToPosition?.({\n            assignmentRecord : dragData.assignmentRecord,\n            eventRecord      : dragData.eventRecord,\n            resourceRecord   : dragData.newResource || dragData.resourceRecord,\n            startDate        : dragData.startDate,\n            endDate          : dragData.endDate,\n            snapTo\n        });\n    }\n\n    buildDragHelperConfig() {\n        const\n            me                                  = this,\n            {\n                client,\n                constrainDragToTimeline,\n                constrainDragToResource,\n                constrainDragToTimeSlot,\n                dragHelperConfig = {}\n            }                                   = me,\n            { timeAxisViewModel, isHorizontal } = client,\n            lockY                               = isHorizontal ? constrainDragToResource : constrainDragToTimeSlot,\n            lockX                               = isHorizontal ? constrainDragToTimeSlot : constrainDragToResource;\n\n        // If implementer wants to allow users dragging outside the timeline element, setup the internal dropTargetSelector\n        if (me.externalDropTargetSelector) {\n            dragHelperConfig.dropTargetSelector = `.b-timeaxissubgrid,${me.externalDropTargetSelector}`;\n        }\n\n        return Objects.merge({\n            name                 : me.constructor.name, // useful when debugging with multiple draggers\n            positioning          : 'absolute',\n            lockX,\n            lockY,\n            minX                 : true, // Allows dropping with start before time axis\n            maxX                 : true, // Allows dropping with end after time axis\n            constrain            : false,\n            cloneTarget          : !constrainDragToTimeline,\n            // If we clone event dragged bars, we assume ownership upon drop so we can reuse the element and have animations\n            removeProxyAfterDrop : false,\n            dragWithin           : constrainDragToTimeline ? null : document.body,\n            hideOriginalElement  : true,\n            dropTargetSelector   : '.b-timelinebase',\n\n            // A CSS class added to drop target while dragging events\n            dropTargetCls : me.externalDropTargetSelector ? 'b-drop-target' : '',\n\n            outerElement   : client.timeAxisSubGridElement,\n            targetSelector : client.eventSelector,\n            scrollManager  : constrainDragToTimeline ? client.scrollManager : null,\n            createProxy    : el => me.createProxy(el),\n\n            snapCoordinates : ({ element, newX, newY }) => {\n                const { dragData } = me;\n                // Snapping not supported when dragging outside a scheduler\n                if (me.constrainDragToTimeline && !me.constrainDragToTimeSlot && (me.showExactDropPosition || timeAxisViewModel.snap)) {\n                    const\n                        draggedEventRecord = dragData.draggedEntities[0],\n                        coordinate         = me.getCoordinate(draggedEventRecord, element, [newX, newY]),\n                        snappedDate        = timeAxisViewModel.getDateFromPosition(coordinate, 'round'),\n                        { calendar }       = draggedEventRecord;\n\n                    if (!calendar || snappedDate && calendar.isWorkingTime(snappedDate, DateHelper.add(snappedDate, draggedEventRecord.fullDuration))) {\n                        const snappedPosition = snappedDate && timeAxisViewModel.getPositionFromDate(snappedDate);\n\n                        if (snappedDate && snappedDate >= client.startDate && snappedPosition != null) {\n                            if (isHorizontal) {\n                                newX = snappedPosition;\n                            }\n                            else {\n                                newY = snappedPosition;\n                            }\n                        }\n                    }\n                }\n\n                const snapTo = { x : newX, y : newY };\n\n                me.internalSnapToPosition(snapTo);\n\n                return snapTo;\n            },\n            internalListeners : {\n                beforedragstart : 'onBeforeDragStart',\n                dragstart       : 'onDragStart',\n                afterdragstart  : 'onAfterDragStart',\n                drag            : 'onDrag',\n                drop            : 'onDrop',\n                abort           : 'onDragAbort',\n                abortFinalized  : 'onDragAbortFinalized',\n                reset           : 'onDragReset',\n                thisObj         : me\n            }\n        }, dragHelperConfig, {\n            isElementDraggable : (el, event) => {\n                return (!dragHelperConfig || !dragHelperConfig.isElementDraggable || dragHelperConfig.isElementDraggable(el, event)) &&\n                    me.isElementDraggable(el, event);\n            }\n        });\n    }\n\n    /**\n     * Called when scheduler is rendered. Sets up drag and drop and hover tooltip.\n     * @private\n     */\n    onPaint({ firstPaint }) {\n        const\n            me         = this,\n            { client } = me;\n\n        me.drag?.destroy();\n\n        me.drag = DragHelper.new(me.buildDragHelperConfig());\n\n        if (firstPaint) {\n            client.rowManager.ion({\n                changeTotalHeight : () => me.updateYConstraint(me.dragData?.[`${client.scheduledEventName}Record`]),\n                thisObj           : me\n            });\n        }\n\n        if (me.showTooltip) {\n            me.clockTemplate = new ClockTemplate({\n                scheduler : client\n            });\n        }\n    }\n\n    doDestroy() {\n        this.drag?.destroy();\n        this.clockTemplate?.destroy();\n        this.tip?.destroy();\n        super.doDestroy();\n    }\n\n    get tipId() {\n        return `${this.client.id}-event-drag-tip`;\n    }\n\n    changeTip(tip, oldTip) {\n        const me = this;\n\n        if (tip) {\n            const result = Tooltip.reconfigure(oldTip, Tooltip.mergeConfigs({\n                forElement : me.element,\n                id         : me.tipId,\n                getHtml    : me.getTipHtml.bind(me),\n                cls        : me.tooltipCls,\n                owner      : me.client\n            }, tip), {\n                owner    : me.client,\n                defaults : {\n                    type : 'tooltip'\n                }\n            });\n\n            result.ion({ innerHtmlUpdate : 'updateDateIndicator', thisObj : me });\n\n            return result;\n        }\n        else {\n            oldTip?.destroy();\n        }\n    }\n\n    //endregion\n\n    //region Drag events\n\n    createProxy(element) {\n        const proxy = element.cloneNode(true);\n        delete proxy.id;\n\n        proxy.classList.add(`b-sch-${this.client.mode}`);\n        return proxy;\n    }\n\n    onBeforeDragStart({ context, event }) {\n        const\n            me             = this,\n            { client }     = me,\n            dragData       = me.getMinimalDragData(context, event),\n            eventRecord    = dragData?.[`${client.scheduledEventName}Record`],\n            resourceRecord = dragData.resourceRecord;\n\n        if (client.readOnly || me.disabled || !eventRecord || eventRecord.isDraggable === false || eventRecord.readOnly || resourceRecord?.readOnly) {\n            return false;\n        }\n\n        // Cache the date corresponding to the drag start point so that on drag, we can always\n        // perform the same calculation to then find the time delta without having to calculate\n        // the new start and end times from the position that the element is.\n        context.pointerStartDate = client.getDateFromXY([context.startClientX, context.startPageY], null, false);\n\n        const result = me.triggerBeforeEventDrag(\n            `before${client.capitalizedEventName}Drag`,\n            {\n                ...dragData,\n                event,\n                // to be deprecated\n                context : {\n                    ...context,\n                    ...dragData\n                }\n            }\n        ) !== false;\n\n        if (result) {\n            me.updateYConstraint(eventRecord, resourceRecord);\n\n            // Hook for features that need to react to drag starting, used by NestedEvents\n            client[`before${client.capitalizedEventName}DragStart`]?.(context, dragData);\n        }\n\n        return result;\n    }\n\n    onAfterDragStart({ context, event }) {}\n\n    /**\n     * Returns true if a drag operation is active\n     * @property {Boolean}\n     * @readonly\n     */\n    get isDragging() {\n        return this.drag?.isDragging;\n    }\n\n    // Checked by dependencies to determine if live redrawing is needed\n    get isActivelyDragging() {\n        return this.isDragging && !this.finalizing;\n    }\n\n    /**\n     * Triggered when dragging of an event starts. Initializes drag data associated with the event being dragged.\n     * @private\n     */\n    onDragStart({ context, event }) {\n        const\n            me     = this,\n            // When testing with Selenium, it simulates drag and drop with a single mousemove event, we might be over\n            // another client already\n            client = me.findClientFromTarget(event, context) ?? me.client;\n\n        me.currentOverClient = client;\n        me.drag.unifiedProxy = me.unifiedDrag;\n\n        me.onMouseOverNewTimeline(client, true);\n\n        const dragData = me.dragData = me.getDragData(context);\n\n        // Do not let DomSync reuse the element\n        me.suspendElementRedrawing(context.element);\n\n        if (me.showTooltip && me.tip) {\n            const tipTarget = dragData.context.dragProxy ? dragData.context.dragProxy.firstChild : context.element;\n\n            me.tip.showBy(tipTarget);\n        }\n\n        me.triggerDragStart(dragData);\n\n        // Hook for features that need to take action after drag starts\n        client[`after${client.capitalizedEventName}DragStart`]?.(context, dragData);\n\n        const\n            {\n                eventMenu,\n                taskMenu\n            }           = client.features,\n            menuFeature = eventMenu || taskMenu;\n\n        // If this is a touch action, hide the context menu which may have shown\n        menuFeature?.hideContextMenu?.(false);\n    }\n\n    updateDateIndicator() {\n        const\n            { startDate, endDate } = this.dragData,\n            { tip, clockTemplate } = this,\n            endDateElement         = tip.element.querySelector('.b-sch-tooltip-enddate');\n\n        clockTemplate.updateDateIndicator(tip.element, startDate);\n\n        endDateElement && clockTemplate.updateDateIndicator(endDateElement, endDate);\n    }\n\n    findClientFromTarget(event, context) {\n        let { target } = event;\n\n        // Can't detect target under a touch event\n        if (/^touch/.test(event.type)) {\n            const center = Rectangle.from(context.element, null, true).center;\n\n            target = DomHelper.elementFromPoint(center.x, center.y);\n        }\n\n        const client = Widget.fromElement(target, 'timelinebase');\n        // Do not allow drops on histogram widgets\n        return client?.isResourceHistogram ? null : client;\n    }\n\n    /**\n     * Triggered while dragging an event. Updates drag data, validation etc.\n     * @private\n     */\n    onDrag({ context, event }) {\n        const\n            me    = this,\n            dd    = me.dragData,\n            start = dd.startDate;\n\n        let client;\n\n        if (me.constrainDragToTimeline) {\n            client = me.client;\n        }\n        else {\n            client = me.findClientFromTarget(event, dd.context);\n        }\n\n        me.updateDragContext(context, event);\n\n        if (!client) {\n            return;\n        }\n\n        if (client !== me.currentOverClient) {\n            me.onMouseOverNewTimeline(client);\n        }\n\n        //this.checkShiftChange();\n\n        // Let product specific implementations trigger drag event (eventDrag, taskDrag)\n        if (dd.dirty || !me.throttleDragEvent) {\n            const valid = dd.valid;\n\n            me.triggerEventDrag(dd, start);\n\n            if (valid !== dd.valid) {\n                dd.context.valid = dd.externalDragValidity = dd.valid;\n            }\n        }\n\n        if (me.showTooltip && me.tip) {\n            // If we've an error message to show, force the tip to be visible\n            // even if the target is not in view.\n            me.tip.lastAlignSpec.allowTargetOut = !dd.valid;\n            me.tip.realign();\n        }\n    }\n\n    onMouseOverNewTimeline(newTimeline, initial) {\n        const\n            me                          = this,\n            { drag : { lockX, lockY } } = me,\n            scrollables                 = [];\n\n        me.currentOverClient.element.classList.remove('b-dragging-' + me.currentOverClient.scheduledEventName);\n\n        newTimeline.element.classList.add('b-dragging-' + newTimeline.scheduledEventName);\n\n        if (!initial) {\n            me.currentOverClient.scrollManager.stopMonitoring();\n        }\n\n        if (!lockX) {\n            scrollables.push({\n                element   : newTimeline.timeAxisSubGrid.scrollable.element,\n                direction : 'horizontal'\n            });\n        }\n\n        if (!lockY) {\n            scrollables.push({\n                element   : newTimeline.scrollable.element,\n                direction : 'vertical'\n            });\n        }\n\n        newTimeline.scrollManager.startMonitoring({\n            scrollables,\n            callback : me.drag.onScrollManagerScrollCallback\n        });\n\n        me.currentOverClient = newTimeline;\n    }\n\n    triggerBeforeEventDropFinalize(eventType, eventData, client) {\n        client.trigger(eventType, eventData);\n    }\n\n    /**\n     * Triggered when dropping an event. Finalizes the operation.\n     * @private\n     */\n    onDrop({ context, event }) {\n        const\n            me                              = this,\n            { currentOverClient, dragData } = me;\n\n        let modified = false;\n\n        me.tip?.hide();\n\n        context.valid = context.valid && me.isValidDrop(dragData);\n\n        // If dropping outside scheduler, we opt in on DragHelper removing the proxy element\n        me.drag.removeProxyAfterDrop = Boolean(dragData.externalDropTarget);\n\n        if (context.valid && dragData.startDate && dragData.endDate) {\n            let beforeDropTriggered = false;\n\n            dragData.finalize = async(valid) => {\n                if (beforeDropTriggered || dragData.async) {\n                    await me.finalize(valid);\n                }\n                else {\n                    // If user finalized operation synchronously in the beforeDropFinalize listener, just use\n                    // the valid param and carry on\n                    // but ignore it, if the context is already marked as invalid\n                    context.valid = context.valid && valid;\n                }\n            };\n\n            me.triggerBeforeEventDropFinalize(`before${currentOverClient.capitalizedEventName}DropFinalize`, {\n                context  : dragData,\n                domEvent : event\n            }, currentOverClient);\n\n            beforeDropTriggered = true;\n\n            // Allow implementer to take control of the flow, by returning false from this listener,\n            // to show a confirmation popup etc. This event is documented in EventDrag and TaskDrag\n            context.async = dragData.async;\n\n            // Internal validation, making sure all dragged records fit inside the view\n            if (!context.async && !dragData.externalDropTarget) {\n                modified = (dragData.startDate - dragData.origStart) !== 0 || dragData.newResource !== dragData.resourceRecord;\n            }\n        }\n\n        if (!context.async) {\n            me.finalize(dragData.valid && context.valid && modified);\n        }\n    }\n\n    onDragAbort({ context }) {\n        const me = this;\n\n        me.client.currentOrientation.onDragAbort({ context, dragData : me.dragData });\n\n        // otherwise the event disappears on next refresh (#62)\n        me.resetDraggedElements();\n\n        me.tip?.hide();\n\n        // Trigger eventDragAbort / taskDragAbort depending on product\n        me.triggerDragAbort(me.dragData);\n    }\n\n    // Fired after any abort animation has completed (the point where we want to trigger redraw of progress lines etc)\n    onDragAbortFinalized({ context }) {\n        const me = this;\n\n        me.triggerDragAbortFinalized(me.dragData);\n\n        // Hook for features that need to react on drag abort, used by NestedEvents\n        me.client[`after${me.client.capitalizedEventName}DragAbortFinalized`]?.(context, me.dragData);\n    }\n\n    // For the drag across multiple schedulers, tell all involved scroll managers to stop monitoring\n    onDragReset({ source : dragHelper }) {\n        const\n            me              = this,\n            currentTimeline = me.currentOverClient;\n\n        currentTimeline?.scrollManager.stopMonitoring();\n\n        if (dragHelper.context?.started) {\n            me.resetDraggedElements();\n\n            currentTimeline.trigger(`${currentTimeline.scheduledEventName}DragReset`);\n        }\n\n        currentTimeline?.element.classList.remove('b-dragging-' + me.currentOverClient.scheduledEventName);\n        me.dragData = null;\n    }\n\n    resetDraggedElements() {\n        const\n            { dragData }                     = this,\n            { eventBarEls, draggedEntities } = dragData;\n\n        this.resumeRecordElementRedrawing(dragData.record);\n\n        draggedEntities.forEach((record, i) => {\n            this.resumeRecordElementRedrawing(record);\n\n            // <remove-on-release>\n            // TODO: why?\n            // </remove-on-release>\n            eventBarEls[i].classList.remove(this.drag.draggingCls);\n            eventBarEls[i].retainElement = false;\n        });\n\n        // Code expects 1:1 ratio between eventBarEls & dragged assignments, but when dragging an event of a linked\n        // resource that is not the case, and we need to clean up some more\n        dragData.context.element.retainElement = false;\n    }\n\n    /**\n     * Triggered internally on invalid drop.\n     * @private\n     */\n    onInternalInvalidDrop(abort) {\n        const\n            me          = this,\n            { context } = me.drag;\n\n        me.tip?.hide();\n\n        me.triggerAfterDrop(me.dragData, false);\n\n        context.valid = false;\n\n        if (abort) {\n            me.drag.abort();\n        }\n    }\n\n    //endregion\n\n    //region Finalization & validation\n\n    /**\n     * Called on drop to update the record of the event being dropped.\n     * @private\n     * @param {Boolean} updateRecords Specify true to update the record, false to treat as invalid\n     */\n    async finalize(updateRecords) {\n        const\n            me           = this,\n            { dragData } = me;\n\n        // Drag could've been aborted by window blur event. If it is aborted - we have nothing to finalize.\n        if (!dragData || me.finalizing) {\n            return;\n        }\n\n        const { context, draggedEntities, externalDropTarget } = dragData;\n\n        let result;\n\n        me.finalizing = true;\n\n        draggedEntities.forEach((record, i) => {\n            me.resumeRecordElementRedrawing(record);\n\n            // <remove-on-release>\n            // TODO: Why is this needed? EventResize.t.js fails without it\n            // </remove-on-release>\n            dragData.eventBarEls[i].classList.remove(me.drag.draggingCls);\n            dragData.eventBarEls[i].retainElement = false;\n        });\n\n        // Code expects 1:1 ratio between eventBarEls & dragged assignments, but when dragging an event of a linked\n        // resource that is not the case, and we need to clean up some more\n        context.element.retainElement = false;\n\n        if ((externalDropTarget && dragData.valid) || updateRecords) {\n            // updateRecords may or may not be async.\n            // We see if it returns a Promise.\n            result = me.updateRecords(dragData);\n\n            // If updateRecords is async, the calling DragHelper must know this and\n            // go into a awaitingFinalization state.\n            if (!externalDropTarget && Objects.isPromise(result)) {\n                context.async = true;\n                await result;\n            }\n\n            // If the finalize handler decided to change the dragData's validity...\n            if (!dragData.valid) {\n                me.onInternalInvalidDrop(true);\n            }\n            else {\n                if (context.async) {\n                    context.finalize();\n                }\n                if (externalDropTarget) {\n                    // Force a refresh early so that removed events will not temporary be visible while engine is\n                    // recalculating (the row below clears the 'b-hidden' CSS class of the original drag element)\n                    me.client.refreshRows(false);\n                }\n                me.triggerAfterDrop(dragData, true);\n            }\n        }\n        else {\n            me.onInternalInvalidDrop(context.async || dragData.async);\n        }\n\n        me.finalizing = false;\n\n        return result;\n    }\n\n    //endregion\n\n    //region Drag data\n\n    /**\n     * Updates drag data's dates and validity (calls #validatorFn if specified)\n     * @private\n     */\n    updateDragContext(info, event) {\n        const\n            me                  = this,\n            { drag }            = me,\n            dd                  = me.dragData,\n            client              = me.currentOverClient,\n            { isHorizontal }    = client,\n            [record]            = dd.draggedEntities,\n            eventRecord         = record.isAssignment ? record.event : record,\n            lastDragStartDate   = dd.startDate,\n            constrainToTimeSlot = me.constrainDragToTimeSlot || (isHorizontal ? drag.lockX : drag.lockY);\n\n        dd.browserEvent = event;\n\n        // getProductDragContext may switch valid flag, need to keep it here\n        Object.assign(dd, me.getProductDragContext(dd));\n\n        if (constrainToTimeSlot) {\n            dd.timeDiff = 0;\n        }\n        else {\n            let timeDiff;\n\n            // Time diff is calculated differently for continuous and non-continuous time axis\n            if (client.timeAxis.isContinuous) {\n                const\n                    timeAxisPosition = client.isHorizontal ? info.pageX ?? info.startPageX : info.pageY ?? info.startPageY,\n                    // Use the localized coordinates to ask the TimeAxisViewModel what date the mouse is at.\n                    // Pass allowOutOfRange as true in case we have dragged out of either side of the timeline viewport.\n                    pointerDate      = client.getDateFromCoordinate(timeAxisPosition, null, false, true);\n\n                timeDiff = dd.timeDiff = pointerDate - info.pointerStartDate;\n            }\n            else {\n                const range = me.resolveStartEndDates(info.element);\n\n                // if dragging is out of timeAxis rect bounds, we will not be able to get dates\n                dd.valid = Boolean(range.startDate && range.endDate);\n\n                if (dd.valid) {\n                    timeDiff = range.startDate - dd.origStart;\n                }\n            }\n\n            // If we got a time diff, we calculate new dates the same way no matter if it's continuous or not.\n            // This prevents no-change drops in non-continuous time axis from being processed by updateAssignments()\n            if (timeDiff !== null) {\n                // calculate and round new startDate based on actual timeDiff\n                dd.startDate = me.adjustStartDate(dd.origStart, timeDiff);\n\n                dd.endDate = DateHelper.add(dd.startDate, eventRecord.fullDuration);\n\n                if (dd.valid) {\n                    dd.timeDiff = dd.startDate - dd.origStart;\n                }\n            }\n        }\n\n        const positionDirty = dd.dirty = dd.dirty || lastDragStartDate - dd.startDate !== 0;\n\n        if (dd.valid) {\n            // If it's fully outside, we don't allow them to drop it - the event would disappear from their control.\n            if (me.constrainDragToTimeline && (dd.endDate <= client.timeAxis.startDate || dd.startDate >= client.timeAxis.endDate)) {\n                dd.valid           = false;\n                dd.context.message = me.L('L{EventDrag.noDropOutsideTimeline}');\n            }\n            else if (positionDirty || dd.externalDropTarget) {\n                // Used to rely on faulty code above that would not be valid initially. With that changed we ignore\n                // checking validity here on drag start, which is detected by not having a pageX\n                const result = dd.externalDragValidity = !event || (info.pageX && me.checkDragValidity(dd, event));\n\n                if (!result || typeof result === 'boolean') {\n                    dd.valid           = result !== false;\n                    dd.context.message = '';\n                }\n                else {\n                    dd.valid           = result.valid !== false;\n                    dd.context.message = result.message;\n                }\n            }\n            else {\n                // Apply cached value from external drag validation\n                dd.valid = dd.externalDragValidity !== false && dd.externalDragValidity?.valid !== false;\n            }\n        }\n        else {\n            dd.valid = false;\n        }\n\n        dd.context.valid = dd.valid;\n    }\n\n    suspendRecordElementRedrawing(record, suspend = true) {\n        this.suspendElementRedrawing(this.getRecordElement(record), suspend);\n        // <remove-on-release>\n        // TODO: temporary get rid of retainElement joggling to check tests\n        // </remove-on-release>\n        record.instanceMeta(this.client).retainElement = suspend;\n    }\n\n    resumeRecordElementRedrawing(record) {\n        this.suspendRecordElementRedrawing(record, false);\n    }\n\n    suspendElementRedrawing(element, suspend = true) {\n        // <remove-on-release>\n        // TODO: temporary get rid of retainElement joggling to check tests\n        // </remove-on-release>\n        if (element) {\n            element.retainElement = suspend;\n        }\n    }\n\n    resumeElementRedrawing(element) {\n        this.suspendElementRedrawing(element, false);\n    }\n\n    /**\n     * Initializes drag data (dates, constraints, dragged events etc). Called when drag starts.\n     * @private\n     * @param info\n     * @returns {*}\n     */\n    getDragData(info) {\n        const\n            me                = this,\n            { client, drag }  = me,\n            productDragData   = me.setupProductDragData(info),\n            {\n                record,\n                eventBarEls,\n                draggedEntities\n            }                 = productDragData,\n            { startEvent }    = drag,\n            timespan          = record.isAssignment ? record.event : record,\n            origStart         = timespan.startDate,\n            origEnd           = timespan.endDate,\n            timeAxis          = client.timeAxis,\n            startsOutsideView = origStart < timeAxis.startDate,\n            endsOutsideView   = origEnd > timeAxis.endDate,\n            multiSelect       = client.isSchedulerBase ? client.multiEventSelect : client.selectionMode.multiSelect,\n            coordinate        = me.getCoordinate(timespan, info.element, [info.elementStartX, info.elementStartY]),\n            clientCoordinate  = me.getCoordinate(timespan, info.element, [info.startClientX, info.startClientY]);\n\n        me.suspendRecordElementRedrawing(record);\n\n        // prevent elements from being released when out of view\n        draggedEntities.forEach(record => me.suspendRecordElementRedrawing(record));\n\n        // Make sure the dragged event is selected (no-op for already selected)\n        // Preserve other selected events if ctrl/meta is pressed\n        if (record.isAssignment) {\n            client.selectAssignment(record, startEvent.ctrlKey && multiSelect);\n        }\n        else {\n            client.selectEvent(record, startEvent.ctrlKey && multiSelect);\n        }\n\n        const dragData = {\n            context : info,\n            ...productDragData,\n\n            sourceDate       : startsOutsideView ? origStart : client.getDateFromCoordinate(coordinate),\n            screenSourceDate : client.getDateFromCoordinate(clientCoordinate, null, false),\n\n            startDate : origStart,\n            endDate   : origEnd,\n            timeDiff  : 0,\n\n            origStart,\n            origEnd,\n            startsOutsideView,\n            endsOutsideView,\n\n            duration     : origEnd - origStart,\n            browserEvent : startEvent // So we can know if SHIFT/CTRL was pressed\n        };\n\n        eventBarEls.forEach(el => el.classList.remove('b-sch-event-hover', 'b-active'));\n\n        if (eventBarEls.length > 1) {\n            // RelatedElements are secondary elements moved by the same delta as the grabbed element\n            info.relatedElements = eventBarEls.slice(1);\n        }\n\n        return dragData;\n    }\n\n    //endregion\n\n    //region Constraints\n\n    // private\n    setupConstraints(constrainRegion, elRegion, tickSize, constrained) {\n        const\n            me        = this,\n            xTickSize = !me.showExactDropPosition && tickSize > 1 ? tickSize : 0,\n            yTickSize = 0;\n\n        // If `constrained` is false then we have no date constraints and should constrain mouse position to scheduling area\n        // else we have specified date constraints and so we should limit mouse position to smaller region inside of constrained region using offsets and width.\n        if (constrained) {\n            me.setXConstraint(constrainRegion.left, constrainRegion.right - elRegion.width, xTickSize);\n        }\n        // And if not constrained, release any constraints from the previous drag.\n        else {\n            // minX being true means allow the start to be before the time axis.\n            // maxX being true means allow the end to be after the time axis.\n            me.setXConstraint(true, true, xTickSize);\n        }\n        me.setYConstraint(constrainRegion.top, constrainRegion.bottom - elRegion.height, yTickSize);\n    }\n\n    updateYConstraint(eventRecord, resourceRecord) {\n        const\n            me          = this,\n            { client }  = me,\n            { context } = me.drag,\n            tickSize    = client.timeAxisViewModel.snapPixelAmount;\n\n        // If we're dragging when the vertical size is recalculated by the host grid,\n        // we must update our Y constraint unless we are locked in the Y axis.\n        if (context && !me.drag.lockY) {\n            let constrainRegion;\n\n            // This calculates a relative region which the DragHelper uses within its outerElement\n            if (me.constrainDragToTimeline) {\n                constrainRegion = client.getScheduleRegion(resourceRecord, eventRecord);\n            }\n            // Not constraining to timeline.\n            // Unusual configuration, but this must mean no Y constraining.\n            else {\n                me.setYConstraint(null, null, tickSize);\n                return;\n            }\n\n            me.setYConstraint(\n                constrainRegion.top,\n                constrainRegion.bottom - context.element.offsetHeight,\n                tickSize\n            );\n        }\n        else {\n            me.setYConstraint(null, null, tickSize);\n        }\n    }\n\n    setXConstraint(iLeft, iRight, iTickSize) {\n        const { drag } = this;\n\n        drag.minX = iLeft;\n        drag.maxX = iRight;\n    }\n\n    setYConstraint(iUp, iDown, iTickSize) {\n        const { drag } = this;\n\n        drag.minY = iUp;\n        drag.maxY = iDown;\n    }\n\n    //endregion\n\n    //region Other stuff\n\n    adjustStartDate(startDate, timeDiff) {\n        const rounded = this.client.timeAxis.roundDate(\n            new Date(startDate - 0 + timeDiff),\n            this.client.snapRelativeToEventStartDate ? startDate : false\n        );\n\n        return this.constrainStartDate(rounded);\n    }\n\n    resolveStartEndDates(draggedElement) {\n        const\n            timeline         = this.currentOverClient,\n            { timeAxis }     = timeline,\n            proxyRect        = Rectangle.from(draggedElement.querySelector(timeline.eventInnerSelector), timeline.timeAxisSubGridElement),\n            dd               = this.dragData,\n            [record]         = dd.draggedEntities,\n            eventRecord      = record.isAssignment ? record.event : record,\n            { fullDuration } = eventRecord,\n            fillSnap         = timeline.fillTicks && timeline.snapRelativeToEventStartDate;\n\n        // Non-continuous time axis will return null instead of date for a rectangle outside of the view unless\n        // told to estimate date.\n        // When using fillTicks, we need exact dates for calculations below\n        let {\n            start : startDate, end : endDate\n        } = timeline.getStartEndDatesFromRectangle(proxyRect, fillSnap ? null : 'round', fullDuration, true);\n\n        // if dragging is out of timeAxis rect bounds, we will not be able to get dates\n        if (startDate && endDate) {\n            // When filling ticks, proxy start does not represent actual start date.\n            // Need to compensate to get expected result\n            if (fillSnap) {\n                const\n                    // Events offset into the tick, in MS\n                    offsetMS = eventRecord.startDate - DateHelper.startOf(eventRecord.startDate, timeAxis.unit),\n                    // Proxy length in MS\n                    proxyMS  = endDate - startDate,\n                    // Part of proxy that is \"filled\" and needs to be removed\n                    offsetPx = (offsetMS / proxyMS) * proxyRect.width;\n\n                // Deflate top for vertical mode, left for horizontal mode\n                proxyRect.deflate(offsetPx, 0, 0, offsetPx);\n\n                const proxyStart = proxyRect.getStart(timeline.rtl, !timeline.isVertical);\n\n                // Get date from offset proxy start\n                startDate = timeline.getDateFromCoordinate(proxyStart, null, true);\n                // Snap relative to event start date\n                startDate = timeAxis.roundDate(startDate, eventRecord.startDate);\n            }\n\n            startDate = this.adjustStartDate(startDate, 0);\n\n            if (!dd.startsOutsideView) {\n                // Make sure we didn't target a start date that is filtered out, if we target last hour cell (e.g. 21:00) of\n                // the time axis, and the next tick is 08:00 following day. Trying to drop at end of 21:00 cell should target start of next cell\n                if (!timeAxis.dateInAxis(startDate, false)) {\n                    const tick = timeAxis.getTickFromDate(startDate);\n\n                    if (tick >= 0) {\n                        startDate = timeAxis.getDateFromTick(tick);\n                    }\n                }\n\n                endDate = startDate && DateHelper.add(startDate, fullDuration);\n            }\n            else if (!dd.endsOutsideView) {\n                startDate = endDate && DateHelper.add(endDate, -fullDuration);\n            }\n        }\n\n        return {\n            startDate,\n            endDate\n        };\n    }\n\n    //endregion\n\n    //region Dragtip\n\n    /**\n     * Gets html to display in tooltip while dragging event. Uses clockTemplate to display start & end dates.\n     */\n    getTipHtml() {\n        const\n            me                                      = this,\n            { dragData, client, tooltipTemplate }   = me,\n            { startDate, endDate, draggedEntities } = dragData,\n            startText                               = client.getFormattedDate(startDate),\n            endText                                 = client.getFormattedEndDate(endDate, startDate),\n            { valid, message, element, dragProxy }  = dragData.context,\n            tipTarget                               = dragProxy ? dragProxy.firstChild : element,\n            dragged                                 = draggedEntities[0],\n            // Scheduler always drags assignments\n            timeSpanRecord                          = dragged.isTask ? dragged : dragged.event;\n\n        // Keep align target up to date in case of derendering the target when\n        // dragged outside render window, and re-entry into the render window.\n        me.tip.lastAlignSpec.target = tipTarget;\n\n        return tooltipTemplate({\n            valid,\n            startDate,\n            endDate,\n            startText,\n            endText,\n            dragData,\n            message                                : message || '',\n            [client.scheduledEventName + 'Record'] : timeSpanRecord,\n            startClockHtml                         : me.clockTemplate.template({\n                date : startDate,\n                text : startText,\n                cls  : 'b-sch-tooltip-startdate'\n            }),\n            endClockHtml : timeSpanRecord.isMilestone\n                ? ''\n                : me.clockTemplate.template({\n                    date : endDate,\n                    text : endText,\n                    cls  : 'b-sch-tooltip-enddate'\n                })\n        });\n    }\n\n    //endregion\n\n    //region Configurable\n\n    // Constrain to time slot means lockX if we're horizontal, otherwise lockY\n    updateConstrainDragToTimeSlot(value) {\n        const axis = this.client.isHorizontal ? 'lockX' : 'lockY';\n\n        if (this.drag) {\n            this.drag[axis] = value;\n        }\n    }\n\n    // Constrain to resource means lockY if we're horizontal, otherwise lockX\n    updateConstrainDragToResource(constrainDragToResource) {\n        const me = this;\n\n        if (me.drag) {\n            const\n                { constrainDragToTimeSlot } = me,\n                { isHorizontal }            = me.client;\n\n            if (constrainDragToResource) {\n                me.constrainDragToTimeline = true;\n            }\n            me.drag.lockY = isHorizontal ? constrainDragToResource : constrainDragToTimeSlot;\n            me.drag.lockX = isHorizontal ? constrainDragToTimeSlot : constrainDragToResource;\n        }\n    }\n\n    updateConstrainDragToTimeline(constrainDragToTimeline) {\n        if (!this.isConfiguring) {\n            Object.assign(this.drag, {\n                cloneTarget   : !constrainDragToTimeline,\n                dragWithin    : constrainDragToTimeline ? null : document.body,\n                scrollManager : constrainDragToTimeline ? this.client.scrollManager : null\n            });\n        }\n    }\n\n    constrainStartDate(startDate) {\n        const\n            { dragData }        = this,\n            { dateConstraints } = dragData,\n            scheduleableRecord  = dragData.eventRecord || dragData.taskRecord || dragData.draggedEntities[0];\n\n        if (dateConstraints?.start) {\n            startDate = DateHelper.max(dateConstraints.start, startDate);\n        }\n\n        if (dateConstraints?.end) {\n            startDate = DateHelper.min(new Date(dateConstraints.end - scheduleableRecord.durationMS), startDate);\n        }\n\n        return startDate;\n    }\n\n    //endregion\n\n    //region Product specific, implemented in subclasses\n    getElementFromContext(context) {\n        return context.grabbed || context.dragProxy || context.element;\n    }\n\n    // Provide your custom implementation of this to allow additional selected records to be dragged together with the original one.\n    getRelatedRecords(record) {\n        return [];\n    }\n\n    getMinimalDragData(info, event) {\n        // Can be overridden in subclass\n        return {};\n    }\n\n    // Check if element can be dropped at desired location\n    isValidDrop(dragData) {\n        throw new Error('Implement in subclass');\n    }\n\n    // Similar to the fn above but also calls validatorFn\n    checkDragValidity(dragData) {\n        throw new Error('Implement in subclass');\n    }\n\n    // Update records being dragged\n    updateRecords(context) {\n        throw new Error('Implement in subclass');\n    }\n\n    // Determine if an element can be dragged\n    isElementDraggable(el, event) {\n        throw new Error('Implement in subclass');\n    }\n\n    // Get coordinate for correct axis\n    getCoordinate(record, element, coord) {\n        throw new Error('Implement in subclass');\n    }\n\n    // Product specific drag data\n    setupProductDragData(info) {\n        throw new Error('Implement in subclass');\n    }\n\n    // Product specific data in drag context\n    getProductDragContext(dd) {\n        throw new Error('Implement in subclass');\n    }\n\n    getRecordElement(record) {\n        throw new Error('Implement in subclass');\n    }\n\n    //endregion\n}\n","import InstancePlugin from '../../Core/mixin/InstancePlugin.js';\nimport Draggable from '../../Core/mixin/Draggable.js';\nimport Droppable from '../../Core/mixin/Droppable.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\nimport StringHelper from '../../Core/helper/StringHelper.js';\nimport Rectangle from '../../Core/helper/util/Rectangle.js';\nimport Tooltip from '../../Core/widget/Tooltip.js';\nimport ClockTemplate from '../tooltip/ClockTemplate.js';\nimport EventHelper from '../../Core/helper/EventHelper.js';\nimport BrowserHelper from '../../Core/helper/BrowserHelper.js';\nimport TimeSpan from '../../Scheduler/model/TimeSpan.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport VersionHelper from '../../Core/helper/VersionHelper.js';\n\n/**\n * @module Scheduler/feature/EventResize\n */\n\nconst tipAlign = {\n    top    : 'b-t',\n    right  : 'b100-t100',\n    bottom : 't-b',\n    left   : 'b0-t0'\n};\n\n/**\n * Feature that allows resizing an event by dragging its end.\n *\n * By default it displays a tooltip with the new start and end dates, formatted using\n * {@link Scheduler/view/mixin/TimelineViewPresets#config-displayDateFormat}.\n *\n * ## Customizing the resize tooltip\n *\n * To show custom HTML in the tooltip, please see the {@link #config-tooltipTemplate} config. Example:\n *\n * ```javascript\n * eventResize : {\n *     // A minimal end date tooltip\n *     tooltipTemplate : ({ record, endDate }) => {\n *         return DateHelper.format(endDate, 'MMM D');\n *     }\n * }\n * ```\n *\n * This feature is **enabled** by default\n *\n * This feature is extended with a few overrides by the Gantt's `TaskResize` feature.\n *\n * This feature updates the event's `startDate` or `endDate` live in order to leverage the\n * rendering pathway to always yield a correct appearance. The changes are done in\n * {@link Core.data.Model#function-beginBatch batched} mode so that changes do not become\n * eligible for data synchronization or propagation until the operation is completed.\n *\n * @extends Core/mixin/InstancePlugin\n * @demo Scheduler/basic\n * @inlineexample Scheduler/feature/EventResize.js\n * @classtype eventResize\n * @feature\n */\nexport default class EventResize extends InstancePlugin.mixin(Draggable, Droppable) {\n    //region Events\n\n    /**\n     * Fired on the owning Scheduler before resizing starts. Return `false` to prevent the action.\n     * @event beforeEventResize\n     * @on-owner\n     * @preventable\n     * @param {Scheduler.view.Scheduler} source Scheduler instance\n     * @param {Scheduler.model.EventModel} eventRecord Event record being resized\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record the resize starts within\n     * @param {MouseEvent} event Browser event\n     */\n\n    /**\n     * Fires on the owning Scheduler when event resizing starts\n     * @event eventResizeStart\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source Scheduler instance\n     * @param {Scheduler.model.EventModel} eventRecord Event record being resized\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record the resize starts within\n     * @param {MouseEvent} event Browser event\n     */\n\n    /**\n     * Fires on the owning Scheduler on each resize move event\n     * @event eventPartialResize\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source Scheduler instance\n     * @param {Scheduler.model.EventModel} eventRecord Event record being resized\n     * @param {Date} startDate\n     * @param {Date} endDate\n     * @param {HTMLElement} element\n     */\n\n    /**\n     * Fired on the owning Scheduler to allow implementer to prevent immediate finalization by setting\n     * `data.context.async = true` in the listener, to show a confirmation popup etc\n     *\n     * ```javascript\n     *  scheduler.on('beforeeventresizefinalize', ({context}) => {\n     *      context.async = true;\n     *      setTimeout(() => {\n     *          // async code don't forget to call finalize\n     *          context.finalize();\n     *      }, 1000);\n     *  })\n     * ```\n     *\n     * @event beforeEventResizeFinalize\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source Scheduler instance\n     * @param {Object} context\n     * @param {Scheduler.model.EventModel} context.eventRecord Event record being resized\n     * @param {Date} context.startDate New startDate (changed if resizing start side)\n     * @param {Date} context.endDate New endDate (changed if resizing end side)\n     * @param {Date} context.originalStartDate Start date before resize\n     * @param {Date} context.originalEndDate End date before resize\n     * @param {Boolean} context.async Set true to handle resize asynchronously (e.g. to wait for user confirmation)\n     * @param {Function} context.finalize Call this method to finalize resize. This method accepts one argument:\n     *                   pass `true` to update records, or `false`, to ignore changes\n     * @param {Event} event Browser event\n     */\n\n    /**\n     * Fires on the owning Scheduler after the resizing gesture has finished.\n     * @event eventResizeEnd\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source Scheduler instance\n     * @param {Boolean} changed Shows if the record has been changed by the resize action\n     * @param {Scheduler.model.EventModel} eventRecord Event record being resized\n     */\n\n    //endregion\n\n    //region Config\n\n    static get $name() {\n        return 'EventResize';\n    }\n\n    static get configurable() {\n        return {\n            draggingItemCls : 'b-sch-event-wrap-resizing',\n\n            resizingItemInnerCls : 'b-sch-event-resizing',\n\n            /**\n             * Use left handle when resizing. Only applies when owning client's `direction` is 'horizontal'\n             * @config {Boolean}\n             * @default\n             */\n            leftHandle : true,\n\n            /**\n             * Use right handle when resizing. Only applies when owning client's `direction` is 'horizontal'\n             * @config {Boolean}\n             * @default\n             */\n            rightHandle : true,\n\n            /**\n             * Use top handle when resizing. Only applies when owning client's direction` is 'vertical'\n             * @config {Boolean}\n             * @default\n             */\n            topHandle : true,\n\n            /**\n             * Use bottom handle when resizing. Only applies when owning client's `direction` is 'vertical'\n             * @config {Boolean}\n             * @default\n             */\n            bottomHandle : true,\n\n            /**\n             * Resizing handle size to use instead of that determined by CSS\n             * @config {Number}\n             * @deprecated Since 5.2.7. The handle size is determined from responsive CSS. Will be removed in 6.0\n             */\n            handleSize : null,\n\n            /**\n             * Automatically shrink virtual handles when available space < handleSize. The virtual handles will\n             * decrease towards width/height 1, reserving space between opposite handles to for example leave room for\n             * dragging. To configure reserved space, see {@link #config-reservedSpace}.\n             * @config {Boolean}\n             * @default false\n             */\n            dynamicHandleSize : true,\n\n            /**\n             * Set to true to allow resizing to a zero-duration span\n             * @config {Boolean}\n             * @default false\n             */\n            allowResizeToZero : null,\n\n            /**\n             * Room in px to leave unoccupied by handles when shrinking them dynamically (see\n             * {@link #config-dynamicHandleSize}).\n             * @config {Number}\n             * @default\n             */\n            reservedSpace : 5,\n\n            /**\n             * Resizing handle size to use instead of that determined by CSS on touch devices\n             * @config {Number}\n             * @deprecated Since 5.2.7. The handle size is determined from responsive CSS. Will be removed in 6.0\n             */\n            touchHandleSize : null,\n\n            /**\n             * The amount of pixels to move pointer/mouse before it counts as a drag operation.\n             * @config {Number}\n             * @default\n             */\n            dragThreshold : 0,\n\n            dragTouchStartDelay : 0,\n\n            draggingClsSelector : '.b-timeline-base',\n\n            /**\n             * `false` to not show a tooltip while resizing\n             * @config {Boolean}\n             * @default\n             */\n            showTooltip : true,\n\n            /**\n             * true to see exact event length during resizing\n             * @config {Boolean}\n             * @default\n             */\n            showExactResizePosition : false,\n\n            /**\n             * An empty function by default, but provided so that you can perform custom validation on\n             * the item being resized. Return true if the new duration is valid, false to signal that it is not.\n             * @param {Object} context The resize context, contains the record & dates.\n             * @param {Scheduler.model.TimeSpan} context.record The record being resized.\n             * @param {Date} context.startDate The new start date.\n             * @param {Date} context.endDate The new start date.\n             * @param {Date} context.originalStartDate Start date before resize\n             * @param {Date} context.originalEndDate End date before resize\n             * @param {Event} event The browser Event object\n             * @returns {Boolean}\n             * @config {Function}\n             */\n            validatorFn : () => true,\n\n            /**\n             * `this` reference for the validatorFn\n             * @config {Object}\n             */\n            validatorFnThisObj : null,\n\n            /**\n             * Setting this property may change the configuration of the {@link #config-tip}, or\n             * cause it to be destroyed if `null` is passed.\n             *\n             * Reading this property returns the Tooltip instance.\n             * @member {Core.widget.Tooltip|TooltipConfig} tip\n             */\n            /**\n             * If a tooltip is required to illustrate the resize, specify this as `true`, or a config\n             * object for the {@link Core.widget.Tooltip}.\n             * @config {Core.widget.Tooltip|TooltipConfig}\n             */\n            tip : {\n                $config : ['lazy', 'nullify'],\n                value   : {\n                    autoShow                 : false,\n                    axisLock                 : true,\n                    trackMouse               : false,\n                    updateContentOnMouseMove : true,\n                    hideDelay                : 0\n                }\n            },\n\n            /**\n             * A template function returning the content to show during a resize operation.\n             * @param {Object} context A context object\n             * @param {Date} context.startDate New start date\n             * @param {Date} context.endDate New end date\n             * @param {Scheduler.model.TimeSpan} context.record The record being resized\n             * @config {Function} tooltipTemplate\n             */\n            tooltipTemplate : context => `\n                <div class=\"b-sch-tip-${context.valid ? 'valid' : 'invalid'}\">\n                    ${context.startClockHtml}\n                    ${context.endClockHtml}\n                    <div class=\"b-sch-tip-message\">${context.message}</div>\n                </div>\n            `,\n\n            ignoreSelector : '.b-sch-terminal',\n            dragActiveCls  : 'b-resizing-event'\n        };\n    }\n\n    static get pluginConfig() {\n        return {\n            chain : ['render', 'onEventDataGenerated', 'isEventElementDraggable']\n        };\n    }\n\n    //endregion\n\n    //region Init & destroy\n\n    doDestroy() {\n        super.doDestroy();\n\n        this.dragging?.destroy();\n    }\n\n    render() {\n        const\n            me         = this,\n            { client } = me;\n\n        // Only active when in these items\n        me.dragSelector = me.dragItemSelector = client.eventSelector;\n\n        // Set up elements and listeners\n        me.dragRootElement = me.dropRootElement = client.timeAxisSubGridElement;\n\n        // Drag only in time dimension\n        me.dragLock = client.isVertical ? 'y' : 'x';\n    }\n\n    // Prevent event dragging when it happens over a resize handle\n    isEventElementDraggable(eventElement, eventRecord, el, event) {\n        const\n            me = this,\n            eventResizable = eventRecord?.resizable;\n\n        // ALLOW event drag:\n        // - if resizing is disabled or event is not resizable\n        // - if it's a milestone Milestones cannot be resized\n        if (me.disabled || !eventResizable || eventRecord.isMilestone) {\n            return true;\n        }\n\n        // not over the event handles\n        return ((eventResizable !== true && eventResizable !== 'start') || !me.isOverStartHandle(event, eventElement)) &&\n            ((eventResizable !== true && eventResizable !== 'end') || !me.isOverEndHandle(event, eventElement));\n    }\n\n    // Called for each event during render, allows manipulation of render data.\n    onEventDataGenerated({ eventRecord, wrapperCls, cls }) {\n        if (eventRecord === this.dragging?.context?.eventRecord) {\n            wrapperCls['b-active'] =\n                wrapperCls[this.draggingItemCls] =\n                wrapperCls['b-over-resize-handle'] =\n                cls['b-resize-handle'] =\n                cls[this.resizingItemInnerCls] = 1;\n        }\n    }\n\n    // Sneak a first peek at the drag event to put necessary date values into the context\n    onDragPointerMove(event) {\n        const\n            {\n                client,\n                dragging\n            }          = this,\n            {\n                visibleDateRange,\n                isHorizontal\n            }          = client,\n            rtl        = isHorizontal && client.rtl,\n            dimension  = isHorizontal ? 'X' : 'Y',\n            pageScroll = globalThis[`page${dimension}Offset`],\n            coord      = event[`page${dimension}`] + (dragging.context?.offset || 0),\n            clientRect = Rectangle.from(client.timeAxisSubGridElement, null, true),\n            startCoord = clientRect.getStart(rtl, isHorizontal),\n            endCoord   = clientRect.getEnd(rtl, isHorizontal);\n\n        let date = client.getDateFromCoord({ coord, local : false });\n\n        if (rtl) {\n            // If we're dragging off the start side, fix at the visible startDate\n            if (coord - pageScroll > startCoord) {\n                date = visibleDateRange.startDate;\n            }\n            // If we're dragging off the end side, fix at the visible endDate\n            else if (coord < endCoord) {\n                date = visibleDateRange.endDate;\n            }\n        }\n        // If we're dragging off the start side, fix at the visible startDate\n        else if (coord - pageScroll < startCoord) {\n            date = visibleDateRange.startDate;\n        }\n        // If we're dragging off the end side, fix at the visible endDate\n        else if (coord - pageScroll > endCoord) {\n            date = visibleDateRange.endDate;\n        }\n\n        dragging.clientStartCoord = startCoord;\n        dragging.clientEndCoord = endCoord;\n        dragging.date = date;\n\n        super.onDragPointerMove(event);\n    }\n\n    /**\n     * Returns true if a resize operation is active\n     * @property {Boolean}\n     * @readonly\n     */\n    get isResizing() {\n        return Boolean(this.dragging);\n    }\n\n    beforeDrag(drag) {\n        const\n            { client }     = this,\n            eventRecord    = client.resolveTimeSpanRecord(drag.itemElement),\n            resourceRecord = !client.isGanttBase && client.resolveResourceRecord(client.isVertical ? drag.startEvent : drag.itemElement);\n\n        // Events not part of project are transient records in a Gantt display store and not meant to be modified\n        if (this.disabled || client.readOnly || resourceRecord?.readOnly ||\n            (eventRecord && (eventRecord.readOnly || !(eventRecord.project || eventRecord.isOccurrence))) ||\n            super.beforeDrag(drag) === false) {\n            return false;\n        }\n\n        drag.mousedownDate = drag.date = client.getDateFromCoordinate(drag.event[`page${client.isHorizontal ? 'X' : 'Y'}`], null, false);\n\n        // trigger beforeEventResize or beforeTaskResize depending on product\n        return this.triggerBeforeResize(drag);\n    }\n\n    dragStart(drag) {\n        const\n            me             = this,\n            {\n                client,\n                tip\n            }              = me,\n            {\n                startEvent,\n                itemElement\n            }              = drag,\n            name           = client.scheduledEventName,\n            eventRecord    = client.resolveEventRecord(itemElement),\n            {\n                isBatchUpdating,\n                wrapStartDate,\n                wrapEndDate\n            } = eventRecord,\n            useEventBuffer = client.features.eventBuffer?.enabled,\n            eventStartDate = isBatchUpdating ? eventRecord.get('startDate') : eventRecord.startDate,\n            eventEndDate   = isBatchUpdating ? eventRecord.get('endDate') : eventRecord.endDate,\n            horizontal     = me.dragLock === 'x',\n            rtl            = horizontal && client.rtl,\n            draggingEnd    = me.isOverEndHandle(startEvent, itemElement),\n            toSet          = draggingEnd ? 'endDate' : 'startDate',\n            wrapToSet      = !useEventBuffer ? null : draggingEnd ? 'wrapEndDate' : 'wrapStartDate',\n            otherEnd       = draggingEnd ? 'startDate' : 'endDate',\n            setMethod      = draggingEnd ? 'setEndDate' : 'setStartDate',\n            setOtherMethod = draggingEnd ? 'setStartDate' : 'setEndDate',\n            elRect         = Rectangle.from(itemElement),\n            startCoord     = horizontal ? startEvent.clientX : startEvent.clientY,\n            endCoord       = draggingEnd ? elRect.getEnd(rtl, horizontal) : elRect.getStart(rtl, horizontal),\n            context        = drag.context = {\n                eventRecord,\n                element        : itemElement,\n                timespanRecord : eventRecord,\n                taskRecord     : eventRecord,\n                owner          : me,\n                valid          : true,\n                oldValue       : draggingEnd ? eventEndDate : eventStartDate,\n                startDate      : eventStartDate,\n                endDate        : eventEndDate,\n                offset         : useEventBuffer ? 0 : endCoord - startCoord,\n                edge           : horizontal ? (draggingEnd ? 'right' : 'left') : (draggingEnd ? 'bottom' : 'top'),\n                finalize       : me.finalize,\n                event          : drag.event,\n\n                // these two are public\n                originalStartDate : eventStartDate,\n                originalEndDate   : eventEndDate,\n                wrapStartDate,\n                wrapEndDate,\n                draggingEnd,\n                toSet,\n                wrapToSet,\n                otherEnd,\n                setMethod,\n                setOtherMethod\n            };\n\n        // The record must know that it is being resized.\n        eventRecord.meta.isResizing = true;\n\n        client.element.classList.add(...me.dragActiveCls.split(' '));\n\n        // During this batch we want the client's UI to update itself using the proposed changes\n        // Only if startDrag has not already done it\n        if (!client.listenToBatchedUpdates) {\n            client.beginListeningForBatchedUpdates();\n        }\n\n        // No changes must get through to data.\n        // Only if startDrag has not already started the batch\n        if (!isBatchUpdating) {\n            me.beginEventRecordBatch(eventRecord);\n        }\n\n        // Let products do their specific stuff\n        me.setupProductResizeContext(context, startEvent);\n\n        // Trigger eventResizeStart or taskResizeStart depending on product\n        // Subclasses (like EventDragCreate) won't actually fire this event.\n        me.triggerEventResizeStart(`${name}ResizeStart`, {\n            [`${name}Record`] : eventRecord,\n            event             : startEvent,\n            ...me.getResizeStartParams(context)\n        }, context);\n\n        // Scheduler renders assignments, Gantt renders Tasks\n        context.resizedRecord = client.resolveAssignmentRecord?.(context.element) || eventRecord;\n\n        if (tip) {\n            // Tip needs to be shown first for getTooltipTarget to be able to measure anchor size\n            tip.show();\n            tip.align = tipAlign[context.edge];\n            tip.showBy(me.getTooltipTarget(drag));\n        }\n    }\n\n    // Subclasses may override this\n    triggerBeforeResize(drag) {\n        const\n            { client }  = this,\n            eventRecord = client.resolveTimeSpanRecord(drag.itemElement);\n\n        return client.trigger(\n            `before${client.capitalizedEventName}Resize`,\n            {\n                [`${client.scheduledEventName}Record`] : eventRecord,\n                event                                  : drag.event,\n                ...this.getBeforeResizeParams({ event : drag.startEvent, element : drag.itemElement })\n            }\n        );\n    }\n\n    // Subclasses may override this\n    triggerEventResizeStart(eventType, event, context) {\n        this.client.trigger(eventType, event);\n\n        // Hook for features that needs to react on resize start\n        this.client[`after${StringHelper.capitalize(eventType)}`]?.(context, event);\n    }\n\n    triggerEventResizeEnd(eventType, event) {\n        this.client.trigger(eventType, event);\n    }\n\n    triggerEventPartialResize(eventType, event) {\n        // Trigger eventPartialResize or taskPartialResize depending on product\n        this.client.trigger(eventType, event);\n    }\n\n    triggerBeforeEventResizeFinalize(eventType, event) {\n        this.client.trigger(eventType, event);\n    }\n\n    dragEnter(drag) {\n        // We only respond to our own DragContexts\n        return drag.context?.owner === this;\n    }\n\n    resizeEventPartiallyInternal(eventRecord, context) {\n        const\n            { client } = this,\n            // <debug>\n            { detectExcessiveRendering } = client,\n            // </debug>\n            { toSet } = context;\n\n        // <debug>\n        client.detectExcessiveRendering = false;\n        // </debug>\n\n        if (client.features.eventBuffer?.enabled) {\n            if (toSet === 'startDate') {\n                const diff = context.startDate.getTime() - context.originalStartDate.getTime();\n                eventRecord.wrapStartDate = new Date(context.wrapStartDate.getTime() + diff);\n            }\n\n            else if (toSet === 'endDate') {\n                const diff = context.endDate.getTime() - context.originalEndDate.getTime();\n                eventRecord.wrapEndDate = new Date(context.wrapEndDate.getTime() + diff);\n            }\n        }\n\n        eventRecord.set(toSet, context[toSet]);\n\n        // <debug>\n        client.detectExcessiveRendering = detectExcessiveRendering;\n        // </debug>\n    }\n\n    applyDateConstraints(date, eventRecord, context) {\n        const\n            minDate = context.dateConstraints?.start,\n            maxDate = context.dateConstraints?.end;\n\n        // Keep desired date within constraints\n        if (minDate || maxDate) {\n            date = DateHelper.constrain(date, minDate, maxDate);\n            context.snappedDate = DateHelper.constrain(context.snappedDate, minDate, maxDate);\n        }\n\n        return date;\n    }\n\n    // Override the draggable interface so that we can update the bar while dragging outside\n    // the Draggable's rootElement (by default it stops notifications when outside rootElement)\n    moveDrag(drag) {\n        const\n            me          = this,\n            {\n                client,\n                tip\n            }           = me,\n            horizontal  = me.dragLock === 'x',\n            dimension   = horizontal ? 'X' : 'Y',\n            name        = client.scheduledEventName,\n            {\n                visibleDateRange,\n                enableEventAnimations,\n                timeAxis,\n                weekStartDay\n            }           = client,\n            rtl         = horizontal && client.rtl,\n            {\n                resolutionUnit,\n                resolutionIncrement\n            }           = timeAxis,\n            {\n                event,\n                context\n            }           = drag,\n            {\n                eventRecord\n            }           = context,\n            offset      = context.offset * (rtl ? -1 : 1),\n            {\n                isOccurrence\n            }           = eventRecord,\n            eventStart  = eventRecord.get('startDate'),\n            eventEnd    = eventRecord.get('endDate'),\n            coord       = event[`client${dimension}`] + offset,\n            clientRect  = Rectangle.from(client.timeAxisSubGridElement, null, true),\n            startCoord  = clientRect.getStart(rtl, horizontal),\n            endCoord    = clientRect.getEnd(rtl, horizontal);\n\n        context.event = event;\n\n        // If this is the last move event recycled because of a scroll, refresh the date\n        if (event.isScroll) {\n            drag.date = client.getDateFromCoordinate(event[`page${dimension}`] + offset, null, false);\n        }\n\n        let crossedOver, avoidedZeroSize,\n            // Use the value set up in onDragPointerMove by default\n            { date } = drag,\n            {\n                toSet,\n                otherEnd,\n                draggingEnd\n            } = context;\n\n        if (rtl) {\n            // If we're dragging off the start side, fix at the visible startDate\n            if (coord > startCoord) {\n                date = drag.date = visibleDateRange.startDate;\n            }\n            // If we're dragging off the end side, fix at the visible endDate\n            else if (coord < endCoord) {\n                date = drag.date = visibleDateRange.endDate;\n            }\n\n        }\n        // If we're dragging off the start side, fix at the visible startDate\n        else if (coord < startCoord) {\n            date = drag.date = visibleDateRange.startDate;\n        }\n        // If we're dragging off the end side, fix at the visible endDate\n        else if (coord > endCoord) {\n            date = drag.date = visibleDateRange.endDate;\n        }\n\n        // Detect crossover which some subclasses might need to process\n        if (toSet === 'endDate') {\n            if (date < eventStart) {\n                crossedOver = -1;\n            }\n        }\n        else {\n            if (date > eventEnd) {\n                crossedOver = 1;\n            }\n        }\n\n        // If we dragged the dragged end over to the opposite side of the start end.\n        // Some subclasses allow this and need to respond. EventDragCreate does this.\n        if (crossedOver && me.onDragEndSwitch) {\n            me.onDragEndSwitch(context, date, crossedOver);\n            otherEnd = context.otherEnd;\n            toSet = context.toSet;\n        }\n\n        if (client.snapRelativeToEventStartDate) {\n            date = timeAxis.roundDate(date, context.oldValue);\n        }\n\n        // The displayed and eventual data value\n        context.snappedDate = DateHelper.round(date, timeAxis.resolution, null, weekStartDay);\n\n        const duration = DateHelper.diff(date, context[otherEnd], resolutionUnit) * (draggingEnd ? -1 : 1);\n\n        // Narrower than half resolutionIncrement will abort drag creation, set flag to have UI reflect this\n        if (me.isEventDragCreate) {\n            context.tooNarrow = duration < resolutionIncrement / 2;\n        }\n        // The mousepoint date means that the duration is less than resolutionIncrement resolutionUnits.\n        // Ensure that the dragged end is at least resolutionIncrement resolutionUnits from the other end.\n        else if (duration < resolutionIncrement) {\n            // Snap to zero if allowed\n            if (me.allowResizeToZero) {\n                context.snappedDate = date = context[otherEnd];\n            }\n            else {\n                const sign = otherEnd === 'startDate' ? 1 : -1;\n                context.snappedDate = date = timeAxis.roundDate(DateHelper.add(eventRecord.get(otherEnd), resolutionIncrement * sign, resolutionUnit));\n                avoidedZeroSize = true;\n            }\n        }\n\n        // take dateConstraints into account\n        date = me.applyDateConstraints(date, eventRecord, context);\n\n        // If the mouse move has changed the detected date\n        if (!context.date || date - context.date || avoidedZeroSize) {\n            context.date = date;\n\n            // The validityFn needs to see the proposed value.\n            // Consult our snap config to see if we should be dragging in snapped mode\n            context[toSet] = me.showExactResizePosition || client.timeAxisViewModel.snap ? context.snappedDate : date;\n\n            // Snapping would take it to zero size - this is not allowed in drag resizing.\n            context.valid = me.allowResizeToZero || context[toSet] - context[toSet === 'startDate' ? 'endDate' : 'startDate'] !== 0;\n\n            // If the date to push into the record is new...\n            if (eventRecord.get(toSet) - context[toSet]) {\n                context.valid = me.checkValidity(context, event);\n                context.message = '';\n\n                if (context.valid && typeof context.valid !== 'boolean') {\n                    context.message = context.valid.message;\n                    context.valid = context.valid.valid;\n                }\n\n                // If users returns nothing, that's interpreted as valid\n                context.valid = (context.valid !== false);\n\n                if (context.valid) {\n                    const partialResizeEvent = {\n                        [`${name}Record`] : eventRecord,\n                        startDate         : eventStart,\n                        endDate           : eventEnd,\n                        element           : drag.itemElement,\n                        context\n                    };\n\n                    // Update the event we are about to fire and the context *before* we update the record\n                    partialResizeEvent[toSet] = context[toSet];\n\n                    // Trigger eventPartialResize or taskPartialResize depending on product\n                    me.triggerEventPartialResize(`${name}PartialResize`, partialResizeEvent);\n\n                    // An occurrence must have a store to announce its batched changes through.\n                    // They must usually never have a store - they are transient, but we\n                    // need to update the UI.\n                    if (isOccurrence) {\n                        eventRecord.stores.push(client.eventStore);\n                    }\n\n                    // Update the eventRecord.\n                    // Use setter rather than accessor so that in a Project, the entity's\n                    // accessor doesn't propagate the change to the whole project.\n                    // Scheduler must not animate this.\n                    client.enableEventAnimations = false;\n\n                    this.resizeEventPartiallyInternal(eventRecord, context);\n\n                    client.enableEventAnimations = enableEventAnimations;\n\n                    if (isOccurrence) {\n                        eventRecord.stores.length = 0;\n                    }\n                }\n\n                // Flag drag created too narrow events as invalid late, want all code above to execute for them\n                // to get the proper size rendered\n                if (context.tooNarrow) {\n                    context.valid = false;\n                }\n            }\n        }\n\n        if (tip) {\n            // In case of edge flip (EventDragCreate), the align point may change\n            tip.align = tipAlign[context.edge];\n            tip.alignTo(me.getTooltipTarget(drag));\n        }\n\n        super.moveDrag(drag);\n    }\n\n    dragEnd(drag) {\n        const { context } = drag;\n\n        if (context) {\n            context.event = drag.event;\n        }\n\n        if (drag.aborted) {\n            context?.finalize(false);\n        }\n        // 062_resize.t.js specifies that if drag was not started but the mouse has moved,\n        // the eventresizestart and eventresizeend must fire\n        else if (!this.isEventDragCreate && !drag.started && !EventHelper.getPagePoint(drag.event).equals(EventHelper.getPagePoint(drag.startEvent))) {\n            this.dragStart(drag);\n            this.cleanup(drag.context, false);\n        }\n    }\n\n    async dragDrop({ context, event }) {\n        // Set the start/end date, whichever we were dragging\n        // to the correctly rounded value before updating.\n        context[context.toSet] = context.snappedDate;\n\n        const\n            {\n                client\n            } = this,\n            {\n                startDate,\n                endDate\n            } = context;\n\n        let modified;\n\n        this.tip?.hide();\n\n        context.valid = startDate && endDate && (this.allowResizeToZero || (endDate - startDate > 0)) && // Input sanity check\n            (context[context.toSet] - context.oldValue) && // Make sure dragged end changed\n            context.valid !== false;\n\n        if (context.valid) {\n            // Seems to be a valid resize operation, ask outside world if anyone wants to take control over the finalizing,\n            // to show a confirm dialog prior to applying the new values. Triggers beforeEventResizeFinalize or\n            // beforeTaskResizeFinalize depending on product\n            this.triggerBeforeEventResizeFinalize(`before${client.capitalizedEventName}ResizeFinalize`, { context, event, [`${client.scheduledEventName}Record`] : context.eventRecord });\n            modified = true;\n        }\n\n        // If a handler has set the async flag, it means that they are going to finalize\n        // the operation at some time in the future, so we should not call it.\n        if (!context.async) {\n            await context.finalize(modified);\n        }\n    }\n\n    // This is called with a thisObj of the context object\n    // We set \"me\" to the owner, and \"context\" to the thisObj so that it\n    // reads as if it were a method of this class.\n    async finalize(updateRecord) {\n        const\n            me      = this.owner,\n            context = this,\n            {\n                eventRecord,\n                oldValue,\n                toSet\n            }       = context,\n            {\n                snapRelativeToEventStartDate,\n                timeAxis\n            }       = me.client;\n\n        let wasChanged = false;\n\n        if (updateRecord) {\n            if (snapRelativeToEventStartDate) {\n                context[toSet] = context.snappedDate = timeAxis.roundDate(context.date, oldValue);\n            }\n\n            // Each product updates the record differently\n            wasChanged = await me.internalUpdateRecord(context, eventRecord);\n        }\n        else {\n            // Reverts the changes, a batchedUpdate event will fire which will reset the UI\n            me.cancelEventRecordBatch(eventRecord);\n\n            // Manually trigger redraw of occurrences since they are not part of any stores\n            if (eventRecord.isOccurrence) {\n                eventRecord.resources.forEach(resource => me.client.repaintEventsForResource(resource));\n            }\n        }\n\n        me.cleanup(context, wasChanged);\n    }\n\n    // This is always called on drop or abort.\n    cleanup(context, changed) {\n        const\n            me               = this,\n            { client }       = me,\n            {\n                element,\n                eventRecord\n            }                = context,\n            name             = client.scheduledEventName;\n\n        // The record must know that it is being resized.\n        eventRecord.meta.isResizing = false;\n\n        client.endListeningForBatchedUpdates();\n        me.tip?.hide();\n        me.unHighlightHandle(element);\n        client.element.classList.remove(...me.dragActiveCls.split(' '));\n        // if (dependencies) {\n        //     // When resizing is done and mouse is over element, we show terminals\n        //     if (element.matches(':hover')) {\n        //         dependencies.showTerminals(eventRecord, element);\n        //     }\n        // }\n\n        // Triggers eventResizeEnd or taskResizeEnd depending on product\n        me.triggerEventResizeEnd(`${name}ResizeEnd`, {\n            changed,\n            [`${name}Record`] : eventRecord,\n            ...me.getResizeEndParams(context)\n        });\n    }\n\n    async internalUpdateRecord(context, timespanRecord) {\n        const\n            { client }     = this,\n            { generation } = timespanRecord;\n\n        // Special handling of occurrences, they need normalization since that is not handled by engine at the moment\n        if (timespanRecord.isOccurrence) {\n            client.endListeningForBatchedUpdates();\n\n            // If >1 level deep, just unwind one level.\n            timespanRecord[timespanRecord.batching > 1 ? 'endBatch' : 'cancelBatch']();\n            timespanRecord.set(TimeSpan.prototype.inSetNormalize.call(timespanRecord, {\n                startDate : context.startDate,\n                endDate   : context.endDate\n            }));\n        }\n        else {\n            const toSet = {\n                [context.toSet] : context[context.toSet]\n            };\n\n            // If we have the Engine available, consult it to calculate a corrected duration.\n            // Adjust the dragged date point to conform with the calculated duration.\n            if (timespanRecord.isEntity) {\n                const\n                    {\n                        startDate,\n                        endDate,\n                        draggingEnd\n                    } = context;\n\n                // Fix the duration according to the Entity's rules.\n                context.duration = toSet.duration = timespanRecord.run('calculateProjectedDuration', startDate, endDate);\n\n                // Fix the dragged date point according to the Entity's rules.\n                toSet[context.toSet] = timespanRecord.run('calculateProjectedXDateWithDuration', draggingEnd ? startDate : endDate, draggingEnd, context.duration);\n\n                const setOtherEnd = !timespanRecord[context.otherEnd];\n\n                // Set all values, start and end in case they had never been set\n                // ie, we're now scheduling a previously unscheduled event.\n                if (setOtherEnd) {\n                    toSet[context.otherEnd] = context[context.otherEnd];\n                }\n\n                // Update the record to its final correct state using *batched changes*\n                // These will *not* be propagated, it's just to force the dragged event bar\n                // into its corrected shape before the real changes which will propagate are applied below.\n                // We MUST do it like this because the final state may not be a net change if the changes\n                // got rejected, and in that case, the engine will not end up firing any change events.\n                timespanRecord.set(toSet);\n\n                // Quit listening for batchedUpdate *before* we cancel the batch so that the\n                // change events from the revert do not update the UI.\n                client.endListeningForBatchedUpdates();\n\n                this.cancelEventRecordBatch(timespanRecord);\n\n                // Clear estimated wrap date, exact wrap date will be calculated when referred to from renderer\n                if (client.features.eventBuffer?.enabled) {\n                    timespanRecord[context.wrapToSet] = null;\n                }\n\n                const promisesToWait = [];\n\n                // Really update the data after cancelling the batch\n                if (setOtherEnd) {\n                    promisesToWait.push(timespanRecord[context.setOtherMethod](toSet[context.otherEnd], false));\n                }\n\n                promisesToWait.push(timespanRecord[context.setMethod](toSet[context.toSet], false));\n\n                await Promise.all(promisesToWait);\n\n                timespanRecord.endBatch();\n            }\n            else {\n                // Collect any changes (except the start/end date) that happened during the resize operation\n                const batchChanges = Object.assign({}, timespanRecord.meta.batchChanges);\n                delete batchChanges[context.toSet];\n                client.endListeningForBatchedUpdates();\n\n                this.cancelEventRecordBatch(timespanRecord);\n\n                timespanRecord.set(batchChanges);\n                timespanRecord[context.setMethod](toSet[context.toSet], false);\n            }\n        }\n\n        // wait for project data update\n        await client.project.commitAsync();\n\n        // If the record has been changed\n        return timespanRecord.generation !== generation;\n    }\n\n    onDragItemMouseMove(event) {\n        if (event.pointerType !== 'touch' && !this.handleSelector) {\n            this.checkResizeHandles(event);\n        }\n    }\n\n    /**\n     * Check if mouse is over a resize handle (virtual). If so, highlight.\n     * @private\n     * @param {MouseEvent} event\n     */\n    checkResizeHandles(event) {\n        const\n            me           = this,\n            { overItem } = me;\n\n        // mouse over a target element and allowed to resize?\n        if (overItem && !me.client.readOnly && (!me.allowResize || me.allowResize(overItem, event))) {\n            const eventRecord = me.client.resolveTimeSpanRecord(overItem);\n\n            if (eventRecord?.readOnly) {\n                return;\n            }\n\n            if (me.isOverAnyHandle(event, overItem)) {\n                me.highlightHandle(); // over handle\n            }\n            else {\n                me.unHighlightHandle(); // not over handle\n            }\n        }\n    }\n\n    onDragItemMouseLeave(event, oldOverItem) {\n        this.unHighlightHandle(oldOverItem);\n    }\n\n    /**\n     * Highlights handles (applies css that changes cursor).\n     * @private\n     */\n    highlightHandle() {\n        const\n            {\n                overItem : item,\n                client\n            }      = this,\n            handleTargetElement = item.syncIdMap?.[client.scheduledEventName] ?? item.querySelector(client.eventInnerSelector);\n\n        // over a handle, add cls to change cursor\n        handleTargetElement.classList.add('b-resize-handle');\n        item.classList.add('b-over-resize-handle');\n    }\n\n    /**\n     * Unhighlight handles (removes css).\n     * @private\n     */\n    unHighlightHandle(item = this.overItem) {\n        if (item) {\n            const\n                me    = this,\n                inner = item.syncIdMap?.[me.client.scheduledEventName] ?? item.querySelector(me.client.eventInnerSelector);\n\n            if (inner) {\n                inner.classList.remove('b-resize-handle', me.resizingItemInnerCls);\n            }\n\n            item.classList.remove('b-over-resize-handle', me.draggingItemCls);\n        }\n    }\n\n    isOverAnyHandle(event, target) {\n        return this.isOverStartHandle(event, target) || this.isOverEndHandle(event, target);\n    }\n\n    isOverStartHandle(event, target) {\n        return this.getHandleRect('start', event, target)?.contains(EventHelper.getPagePoint(event));\n    }\n\n    isOverEndHandle(event, target) {\n        return this.getHandleRect('end', event, target)?.contains(EventHelper.getPagePoint(event));\n    }\n\n    getHandleRect(side, event, eventEl) {\n        if (this.overItem) {\n            eventEl = event.target.closest(`.${this.client.eventCls}`) || eventEl.querySelector(`.${this.client.eventCls}`);\n            if (!eventEl) {\n                return;\n            }\n\n            const\n                me              = this,\n                start           = side === 'start',\n                { client }      = me,\n                rtl             = Boolean(client.rtl),\n                axis            = me.dragLock,\n                horizontal      = axis === 'x',\n                dim             = horizontal ? 'width' : 'height',\n                handleSpec      = `${horizontal ? (start && !rtl) ? 'left' : 'right' : start ? 'top' : 'bottom'}Handle`,\n                { offsetWidth } = eventEl,\n                timespanRecord  = client.resolveTimeSpanRecord(eventEl),\n                resizable       = timespanRecord?.isResizable,\n                eventRect       = Rectangle.from(eventEl),\n                result          = eventRect.clone(),\n                handleStyle     = globalThis.getComputedStyle(eventEl, ':before'),\n                // Larger draggable zones on pure touch devices with no mouse\n                touchHandleSize = (!me.handleSelector && !BrowserHelper.isHoverableDevice) ? me.touchHandleSize : undefined,\n                handleSize      = touchHandleSize || me.handleSize || parseFloat(handleStyle[dim]),\n                handleVisThresh = me.handleVisibilityThreshold || 2 * me.handleSize,\n                centerGap       = me.dynamicHandleSize ? me.reservedSpace / 2 : 0,\n                deflateArgs     = [0, 0, 0, 0];\n\n            // To decide if we are over a valid handle, we first check disabled state\n            // Then this.leftHandle/this.rightHandle/this.topHandle/this.bottomHandle\n            // Then whether there's enough event bar width to accommodate separate handles\n            // Then whether the event itself allows resizing at the specified side.\n            if (!me.disabled && me[handleSpec] && (offsetWidth >= handleVisThresh || me.dynamicHandleSize) && (resizable === true || resizable === side)) {\n                const oppositeEnd = (!horizontal && !start) || (horizontal && (rtl  === start));\n\n                if (oppositeEnd) {\n                    // Push handle start point to other end and clip result to other end\n                    result[axis] += (eventRect[dim] - handleSize);\n                    deflateArgs[horizontal ? 3 : 0] = eventRect[dim] / 2 + centerGap;\n                }\n                else {\n                    deflateArgs[horizontal ? 1 : 2] = eventRect[dim] / 2 + centerGap;\n                }\n\n                // Deflate the event bar rectangle to encapsulate 2px less than the side's own half\n                // so that we can constrain the handle zone to be inside its own half when bar is small.\n                eventRect.deflate(...deflateArgs);\n                result[dim] = handleSize;\n\n                // Constrain handle rectangles to each side so that they can never collide.\n                // Each handle is constrained into its own half.\n                result.constrainTo(eventRect);\n\n                // Zero sized handles cannot be hovered\n                if (result[dim]) {\n                    return result;\n                }\n            }\n        }\n    }\n\n    setupDragContext(event) {\n        const me = this;\n\n        // Only start a drag if we are over a handle zone.\n        if (me.overItem && me.isOverAnyHandle(event, me.overItem) && me.isElementResizable(me.overItem, event)) {\n            const result = super.setupDragContext(event);\n\n            result.scrollManager = me.client.scrollManager;\n\n            return result;\n        }\n    }\n\n    changeHandleSize() {\n        VersionHelper.deprecate('Scheduler', '6.0.0', 'Handle size is from CSS');\n    }\n\n    changeTouchHandleSize() {\n        VersionHelper.deprecate('Scheduler', '6.0.0', 'Handle size is from CSS');\n    }\n\n    changeTip(tip, oldTip) {\n        const me = this;\n\n        if (!me.showTooltip) {\n            return null;\n        }\n\n        if (tip) {\n            if (tip.isTooltip) {\n                tip.owner = me;\n            }\n            else {\n                tip = Tooltip.reconfigure(oldTip, Tooltip.mergeConfigs({\n                    id : me.tipId\n                }, tip, {\n                    getHtml : me.getTipHtml.bind(me),\n                    owner   : me.client\n                }, me.tip), {\n                    owner    : me,\n                    defaults : {\n                        type : 'tooltip'\n                    }\n                });\n            }\n\n            tip.ion({\n                innerhtmlupdate : 'updateDateIndicator',\n                thisObj         : me\n            });\n\n            me.clockTemplate = new ClockTemplate({\n                scheduler : me.client\n            });\n        }\n        else if (oldTip) {\n            oldTip.destroy();\n            me.clockTemplate?.destroy();\n        }\n\n        return tip;\n    }\n\n    //endregion\n\n    //region Events\n\n    isElementResizable(element, event) {\n        const\n            me             = this,\n            { client }     = me,\n            timespanRecord = client.resolveTimeSpanRecord(element);\n\n        if (client.readOnly) {\n            return false;\n        }\n\n        let resizable = timespanRecord?.isResizable;\n\n        // Not resizable if the mousedown is on a resizing handle of\n        // a percent bar.\n        const\n            handleHoldingElement = element?.syncIdMap[client.scheduledEventName] ?? element,\n            handleEl             = event.target.closest('[class$=\"-handle\"]');\n\n        if (!resizable || (handleEl && handleEl !== handleHoldingElement)) {\n            return false;\n        }\n\n        element = event.target.closest(me.dragSelector);\n\n        if (!element) {\n            return false;\n        }\n\n        const\n            startsOutside = element.classList.contains('b-sch-event-startsoutside'),\n            endsOutside   = element.classList.contains('b-sch-event-endsoutside');\n\n        if (resizable === true) {\n            if (startsOutside && endsOutside) {\n                return false;\n            }\n            else if (startsOutside) {\n                resizable = 'end';\n            }\n            else if (endsOutside) {\n                resizable = 'start';\n            }\n            else {\n                return me.isOverStartHandle(event, element) || me.isOverEndHandle(event, element);\n            }\n        }\n\n        if (\n            (startsOutside && resizable === 'start') ||\n            (endsOutside && resizable === 'end')\n        ) {\n            return false;\n        }\n\n        if (\n            (me.isOverStartHandle(event, element) && resizable === 'start') ||\n            (me.isOverEndHandle(event, element) && resizable === 'end')\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    updateDateIndicator() {\n        const\n            { clockTemplate } = this,\n            {\n                eventRecord,\n                draggingEnd,\n                snappedDate\n            }                 = this.dragging.context,\n            startDate         = draggingEnd ? eventRecord.get('startDate') : snappedDate,\n            endDate           = draggingEnd ? snappedDate : eventRecord.get('endDate'),\n            { element }       = this.tip;\n\n        clockTemplate.updateDateIndicator(element.querySelector('.b-sch-tooltip-startdate'), startDate);\n        clockTemplate.updateDateIndicator(element.querySelector('.b-sch-tooltip-enddate'), endDate);\n    }\n\n    getTooltipTarget({ itemElement, context }) {\n        const\n            me      = this,\n            { rtl } = me.client,\n            target  = Rectangle.from(itemElement, null, true);\n\n        if (me.dragLock === 'x') {\n            // Align to the dragged edge of the proxy, and then bump right so that the anchor aligns perfectly.\n            if ((!rtl && context.edge === 'right') || (rtl && context.edge === 'left')) {\n                target.x = target.right - 1;\n            }\n            else {\n                target.x -= me.tip.anchorSize[0] / 2;\n            }\n            target.width = me.tip.anchorSize[0] / 2;\n        }\n        else {\n            // Align to the dragged edge of the proxy, and then bump bottom so that the anchor aligns perfectly.\n            if (context.edge === 'bottom') {\n                target.y = target.bottom - 1;\n            }\n            target.height = me.tip.anchorSize[1] / 2;\n        }\n\n        return { target };\n    }\n\n    basicValidityCheck(context, event) {\n        return context.startDate &&\n            (context.endDate > context.startDate || this.allowResizeToZero) &&\n            this.validatorFn.call(this.validatorFnThisObj || this, context, event);\n    }\n\n    //endregion\n\n    //region Tooltip\n\n    getTipHtml({ tip }) {\n        const\n            me = this,\n            {\n                startDate,\n                endDate,\n                toSet,\n                snappedDate,\n                valid,\n                message = '',\n                timespanRecord\n            }  = me.dragging.context;\n\n        // Empty string hides the tip - we get called before the Resizer, so first call will be empty\n        if (!startDate || !endDate) {\n            return tip.html;\n        }\n\n        // Set whichever one we are moving\n        const tipData = {\n            record  : timespanRecord,\n            valid,\n            message,\n            startDate,\n            endDate,\n            [toSet] : snappedDate\n        };\n\n        // Format the two ends. This has to be done outside of the object initializer\n        // because they use properties that are only in the tipData object.\n        tipData.startText = me.client.getFormattedDate(tipData.startDate);\n        tipData.endText = me.client.getFormattedDate(tipData.endDate);\n        tipData.startClockHtml = me.clockTemplate.template({\n            date : tipData.startDate,\n            text : tipData.startText,\n            cls  : 'b-sch-tooltip-startdate'\n        });\n        tipData.endClockHtml = me.clockTemplate.template({\n            date : tipData.endDate,\n            text : tipData.endText,\n            cls  : 'b-sch-tooltip-enddate'\n        });\n\n        return me.tooltipTemplate(tipData);\n    }\n\n    //endregion\n\n    //region Product specific, may be overridden in subclasses\n\n    beginEventRecordBatch(eventRecord) {\n        eventRecord.beginBatch();\n    }\n\n    cancelEventRecordBatch(eventRecord) {\n        // Reverts the changes, a batchedUpdate event will fire which will reset the UI\n        eventRecord.cancelBatch();\n    }\n\n    getBeforeResizeParams(context) {\n        const { client } = this;\n\n        return {\n            resourceRecord : client.resolveResourceRecord(client.isVertical ? context.event : context.element)\n        };\n    }\n\n    getResizeStartParams(context) {\n        return {\n            resourceRecord : context.resourceRecord\n        };\n    }\n\n    getResizeEndParams(context) {\n        return {\n            resourceRecord : context.resourceRecord,\n            event          : context.event\n        };\n    }\n\n    setupProductResizeContext(context, event) {\n        const\n            { client }       = this,\n            { element }      = context,\n            eventRecord      = client.resolveEventRecord(element),\n            resourceRecord   = client.resolveResourceRecord?.(element),\n            assignmentRecord = client.resolveAssignmentRecord?.(element);\n\n        Object.assign(context, {\n            eventRecord,\n            taskRecord      : eventRecord,\n            resourceRecord,\n            assignmentRecord,\n            dateConstraints : client.getDateConstraints?.(resourceRecord, eventRecord)\n        });\n    }\n\n    checkValidity({ startDate, endDate, eventRecord, resourceRecord }) {\n        const { client } = this;\n\n        if (!client.allowOverlap) {\n            if (eventRecord.resources.some(resource => !client.isDateRangeAvailable(startDate, endDate, eventRecord, resource))) {\n                return {\n                    valid   : false,\n                    message : this.L('L{EventDrag.eventOverlapsExisting}')\n                };\n            }\n        }\n        return this.basicValidityCheck(...arguments);\n    }\n\n    get tipId() {\n        return `${this.client.id}-event-resize-tip`;\n    }\n\n    //endregion\n}\n\nGridFeatureManager.registerFeature(EventResize, true, 'Scheduler');\nGridFeatureManager.registerFeature(EventResize, false, 'ResourceHistogram');\n","import EventResize from '../EventResize.js';\nimport ObjectHelper from '../../../Core/helper/ObjectHelper.js';\nimport EventHelper from '../../../Core/helper/EventHelper.js';\nimport Draggable from '../../../Core/mixin/Draggable.js';\nimport TaskEditStm from '../mixin/TaskEditStm.js';\n\n/**\n * @module Scheduler/feature/base/DragCreateBase\n */\nconst getDragCreateDragDistance = function(event) {\n    // Do not allow the drag to begin if the taskEdit feature (if present) is in the process\n    // of canceling. We must wait for it to have cleaned up its data manipulations before\n    // we can add the new, drag-created record\n    if (this.source?.client.features.taskEdit?._canceling) {\n        return false;\n    }\n    return EventHelper.getDistanceBetween(this.startEvent, event);\n};\n\n/**\n * Base class for EventDragCreate (Scheduler) and TaskDragCreate (Gantt) features. Contains shared code. Not to be used directly.\n *\n * @extends Scheduler/feature/EventResize\n */\nexport default class DragCreateBase extends TaskEditStm(EventResize) {\n    //region Config\n\n    static configurable = {\n        /**\n         * true to show a time tooltip when dragging to create a new event\n         * @config {Boolean}\n         * @default\n         */\n        showTooltip : true,\n\n        /**\n         * Number of pixels the drag target must be moved before dragging is considered to have started. Defaults to 2.\n         * @config {Number}\n         * @default\n         */\n        dragTolerance : 2,\n\n        // used by gantt to only allow one task per row\n        preventMultiple : false,\n\n        dragTouchStartDelay : 300,\n\n        /**\n         * `this` reference for the validatorFn\n         * @config {Object}\n         */\n        validatorFnThisObj : null,\n\n        tipTemplate : data => `\n            <div class=\"b-sch-tip-${data.valid ? 'valid' : 'invalid'}\">\n                ${data.startClockHtml}\n                ${data.endClockHtml}\n                <div class=\"b-sch-tip-message\">${data.message}</div>\n            </div>\n        `,\n\n        dragActiveCls : 'b-dragcreating'\n    };\n\n    static pluginConfig = {\n        chain  : ['render', 'onEventDataGenerated'],\n        before : ['onElementContextMenu']\n    };\n\n    construct(scheduler, config) {\n        if (config?.showTooltip === false) {\n            config.tip = null;\n        }\n        super.construct(...arguments);\n    }\n\n    //endregion\n\n    changeValidatorFn(validatorFn) {\n        // validatorFn property is used by the EventResize base to validate each mousemove\n        // We change the property name to createValidatorFn\n        this.createValidatorFn = validatorFn;\n    }\n\n    render() {\n        const\n            me         = this,\n            { client } = me;\n\n        // Set up elements and listeners\n        me.dragRootElement = me.dropRootElement = client.timeAxisSubGridElement;\n\n        // Drag only in time dimension\n        me.dragLock = client.isVertical ? 'y' : 'x';\n    }\n\n    onDragEndSwitch(context) {\n        const\n            { client }                = this,\n            { enableEventAnimations } = client,\n            {\n                eventRecord,\n                draggingEnd\n            }                         = context,\n            horizontal                = this.dragLock === 'x',\n            { initialDate }           = this.dragging;\n\n        // Setting the new opposite end should not animate\n        client.enableEventAnimations = false;\n\n        // Zero duration at the moment of the flip\n        eventRecord.set({\n            startDate : initialDate,\n            endDate   : initialDate\n        });\n\n        // We're switching to dragging the start\n        if (draggingEnd) {\n            Object.assign(context, {\n                endDate        : initialDate,\n                toSet          : 'startDate',\n                otherEnd       : 'endDate',\n                setMethod      : 'setStartDate',\n                setOtherMethod : 'setEndDate',\n                edge           : horizontal ? 'left' : 'top'\n            });\n        }\n        else {\n            Object.assign(context, {\n                startDate      : initialDate,\n                toSet          : 'endDate',\n                otherEnd       : 'startDate',\n                setMethod      : 'setEndDate',\n                setOtherMethod : 'setStartDate',\n                edge           : horizontal ? 'right' : 'bottom'\n            });\n        }\n\n        context.draggingEnd = this.draggingEnd = !draggingEnd;\n        client.enableEventAnimations = enableEventAnimations;\n    }\n\n    beforeDrag(drag) {\n        const\n            me                       = this,\n            result                   = super.beforeDrag(drag),\n            { pan, eventDragSelect } = me.client.features;\n\n        // Superclass's handler may also veto\n        if (result !== false && (\n            // used by gantt to only allow one task per row\n            (me.preventMultiple && !me.isRowEmpty(drag.rowRecord)) ||\n            me.disabled ||\n            // If Pan is enabled, it has right of way\n            (pan && !pan.disabled) ||\n            // If EventDragSelect is enabled, it has right of way\n            (eventDragSelect && !eventDragSelect.disabled)\n        )) {\n            return false;\n        }\n\n        // Prevent drag select if drag-creating, could collide otherwise\n        // (reset by GridSelection)\n        me.client.preventDragSelect = true;\n\n        return result;\n    }\n\n    startDrag(drag) {\n        const result = super.startDrag(drag);\n\n        // Returning false means operation is aborted.\n        if (result !== false) {\n            const { context } = drag;\n\n            // Date to flip around when changing direction\n            drag.initialDate = context.eventRecord.get(this.draggingEnd ? 'startDate' : 'endDate');\n\n            this.client.trigger('dragCreateStart', {\n                proxyElement   : drag.element,\n                eventElement   : drag.element,\n                eventRecord    : context.eventRecord,\n                resourceRecord : context.resourceRecord\n            });\n\n            // We are always dragging the exact edge of the event element.\n            drag.context.offset   = 0;\n            drag.context.oldValue = drag.mousedownDate;\n        }\n        return result;\n    }\n\n    // Used by our EventResize superclass to know whether the drag point is the end or the beginning.\n    isOverEndHandle() {\n        return this.draggingEnd;\n    }\n\n    setupDragContext(event) {\n        const { client } = this;\n\n        // Only mousedown on an empty cell can initiate drag-create\n        if (client.matchScheduleCell(event.target)) {\n            const resourceRecord = client.resolveResourceRecord(event)?.$original;\n\n            // And there must be a resource backing the cell.\n            if (resourceRecord && !resourceRecord.isSpecialRow) {\n                // Skip the EventResize's setupDragContext. We want the base one.\n                const\n                    result      = Draggable().prototype.setupDragContext.call(this, event),\n                    scrollables = [];\n\n                if (client.isVertical) {\n                    scrollables.push({\n                        element   : client.scrollable.element,\n                        direction : 'vertical'\n                    });\n                }\n                else {\n                    scrollables.push({\n                        element   : client.timeAxisSubGrid.scrollable.element,\n                        direction : 'horizontal'\n                    });\n                }\n\n                result.scrollManager = client.scrollManager;\n                result.monitoringConfig = { scrollables };\n                result.resourceRecord = result.rowRecord = resourceRecord;\n\n                // We use a special method to get the distance moved.\n                // If the TaskEdit feature is still in its canceling phase, then\n                // it returns false which inhibits the start of the drag-create\n                // until the cancelation is complete.\n                result.getDistance = getDragCreateDragDistance;\n                return result;\n            }\n        }\n    }\n\n    async dragDrop({ context, event }) {\n        // Set the start/end date, whichever we were dragging\n        // to the correctly rounded value before updating.\n        context[context.toSet] = context.snappedDate;\n\n        const\n            {\n                client\n            } = this,\n            {\n                startDate,\n                endDate,\n                eventRecord\n            } = context,\n            { generation } = eventRecord;\n\n        let modified;\n\n        this.tip?.hide();\n\n        // Handle https://github.com/bryntum/support/issues/3210.\n        // The issue arises when the mouseup arrives very quickly and the commit kicked off\n        // at event add has not yet completed. If it now completes *after* we finalize\n        // the drag, it will reset the event to its initial state.\n        // If that commit has in fact finished, this will be a no-op\n        await client.project.commitAsync();\n\n        // If the above commit in fact reset the event back to the initial state, we have to\n        // force the event rendering to bring it back to the currently known context state.\n        if (eventRecord.generation !== generation) {\n            context.eventRecord[context.toSet] = context.oldValue;\n            context.eventRecord[context.toSet] = context[context.toSet];\n        }\n\n        context.valid = startDate && endDate && (endDate - startDate > 0) && // Input sanity check\n            (context[context.toSet] - context.oldValue) && // Make sure dragged end changed\n            context.valid !== false;\n\n        if (context.valid) {\n            // Seems to be a valid drag-create operation, ask outside world if anyone wants to take control over the finalizing,\n            // to show a confirm dialog prior to finalizing the create.\n            client.trigger('beforeDragCreateFinalize', {\n                context,\n                event,\n                proxyElement   : context.element,\n                eventElement   : context.element,\n                eventRecord    : context.eventRecord,\n                resourceRecord : context.resourceRecord\n            });\n            modified = true;\n        }\n\n        // If a handler has set the async flag, it means that they are going to finalize\n        // the operation at some time in the future, so we should not call it.\n        if (!context.async) {\n            await context.finalize(modified);\n        }\n    }\n\n    updateDragTolerance(dragTolerance) {\n        this.dragThreshold = dragTolerance;\n    }\n\n    //region Tooltip\n\n    changeTip(tip, oldTip) {\n        return super.changeTip(!tip || tip.isTooltip ? tip : ObjectHelper.assign({\n            id : `${this.client.id}-drag-create-tip`\n        }, tip), oldTip);\n    }\n\n    //endregion\n\n    //region Finalize (create EventModel)\n\n    // this method is actually called on the `context` object,\n    // so `this` object inside might not be what you think (see `me = this.owner` below)\n    // not clear what was the motivation for such design\n    async finalize(doCreate) {\n        // only call this method once, do not re-enter\n        if (this.finalized) {\n            return;\n        }\n\n        this.finalized = true;\n\n        const\n            me                = this.owner,\n            context           = this,\n            completeFinalization = () => {\n                if (!me.isDestroyed) {\n                    me.client.trigger('afterDragCreate', {\n                        proxyElement   : context.element,\n                        eventElement   : context.element,\n                        eventRecord    : context.eventRecord,\n                        resourceRecord : context.resourceRecord\n                    });\n                    me.cleanup(context);\n                }\n            };\n\n        if (doCreate) {\n            // Call product specific implementation\n            await me.finalizeDragCreate(context);\n\n            completeFinalization();\n        }\n        // Aborting without going ahead with create - we must deassign and remove the event\n        else {\n            await me.cancelDragCreate(context);\n\n            me.onAborted?.(context);\n            completeFinalization();\n        }\n    }\n\n    async cancelDragCreate(context) {\n    }\n\n    async finalizeDragCreate(context) {\n        // EventResize base class applies final changes to the event record\n        await this.internalUpdateRecord(context, context.eventRecord);\n\n        const stmCapture = {\n            stmInitiallyAutoRecord : this.stmInitiallyAutoRecord,\n            stmInitiallyDisabled   : this.stmInitiallyDisabled,\n            // this flag indicates whether the STM capture has been transferred to\n            // another feature, which will be responsible for finalizing the STM transaction\n            // (otherwise we'll do it ourselves)\n            transferred            : false\n        };\n\n        this.client.trigger('dragCreateEnd', {\n            eventRecord    : context.eventRecord,\n            resourceRecord : context.resourceRecord,\n            event          : context.event,\n            eventElement   : context.element,\n            stmCapture\n        });\n\n        // Part of the Scheduler API. Triggered by its createEvent method.\n        // Auto-editing features can use this to edit new events.\n        // Note that this may be destroyed by a listener of the previous event.\n        this.client?.trigger('eventAutoCreated', {\n            eventRecord    : context.eventRecord,\n            resourceRecord : context.resourceRecord\n        });\n\n        return stmCapture.transferred;\n    }\n\n    cleanup(context) {\n        const\n            { client }      = this,\n            { eventRecord } = context;\n\n        // Base class's cleanup is not called, we have to clear this flag.\n        // The isCreating flag is only set if the event is to be handed off to the\n        // eventEdit feature and that feature then has responsibility for clearing it.\n        eventRecord.meta.isResizing = false;\n\n        client.endListeningForBatchedUpdates();\n        this.tip?.hide();\n        client.element.classList.remove(...this.dragActiveCls.split(' '));\n\n        context.element.parentElement.classList.remove('b-sch-dragcreating');\n    }\n\n    //endregion\n\n    //region Events\n\n    /**\n     * Prevent right click when drag creating\n     * @returns {Boolean}\n     * @private\n     */\n    onElementContextMenu() {\n        if (this.proxy) {\n            return false;\n        }\n    }\n\n    prepareCreateContextForFinalization(createContext, event, finalize, async = false) {\n        return {\n            ...createContext,\n            async,\n            event,\n            finalize\n        };\n    }\n\n    // Apply drag create \"proxy\" styling\n    onEventDataGenerated(renderData) {\n        if (this.dragging?.context?.eventRecord === renderData.eventRecord) {\n            // Allow custom styling for drag creation element\n            renderData.wrapperCls['b-sch-dragcreating'] = true;\n            // Styling when drag create will be aborted on drop (because it would yield zero duration)\n            renderData.wrapperCls['b-too-narrow'] = this.dragging.context.tooNarrow;\n        }\n    }\n\n    //endregion\n\n    //region Product specific, implemented in subclasses\n\n    // Empty implementation here. Only base EventResize class triggers this\n    triggerBeforeResize() {}\n\n    // Empty implementation here. Only base EventResize class triggers this\n    triggerEventResizeStart() {}\n\n    checkValidity(context, event) {\n        throw new Error('Implement in subclass');\n    }\n\n    handleBeforeDragCreate(dateTime, event) {\n        throw new Error('Implement in subclass');\n    }\n\n    isRowEmpty(rowRecord) {\n        throw new Error('Implement in subclass');\n    }\n\n    //endregion\n}\n","import InstancePlugin from '../../../Core/mixin/InstancePlugin.js';\nimport Tooltip from '../../../Core/widget/Tooltip.js';\nimport ClockTemplate from '../../tooltip/ClockTemplate.js';\n\n/**\n * @module Scheduler/feature/base/TooltipBase\n */\n\n/**\n * Base class for `EventTooltip` (Scheduler) and `TaskTooltip` (Gantt) features. Contains shared code. Not to be used directly.\n *\n * @extends Core/mixin/InstancePlugin\n * @extendsconfigs Core/widget/Tooltip\n */\nexport default class TooltipBase extends InstancePlugin {\n    //region Config\n\n    static get defaultConfig() {\n        return {\n\n            /**\n             * Specify true to have tooltip updated when mouse moves, if you for example want to display date at mouse\n             * position.\n             * @config {Boolean}\n             * @default\n             * @category Misc\n             */\n            autoUpdate : false,\n\n            /**\n             * The amount of time to hover before showing\n             * @config {Number}\n             * @default\n             */\n            hoverDelay : 250,\n\n            /**\n             * The time (in milliseconds) for which the Tooltip remains visible when the mouse leaves the target.\n             *\n             * May be configured as `false` to persist visible after the mouse exits the target element. Configure it\n             * as 0 to always retrigger `hoverDelay` even when moving mouse inside `fromElement`\n             * @config {Number}\n             * @default\n             */\n            hideDelay : 100,\n\n            // <remove-on-release>\n            // TODO: Rename to tooltipTemplate, deprecate template\n            // </remove-on-release>\n            template : null,\n\n            cls : null,\n\n            align : {\n                align : 'b-t'\n            },\n\n            clockTemplate : null,\n\n            // Set to true to update tooltip contents if record changes while tip is open\n            monitorRecordUpdate : null,\n\n            testConfig : {\n                hoverDelay : 0\n            }\n        };\n    }\n\n    // Plugin configuration. This plugin chains some of the functions in Grid.\n    static get pluginConfig() {\n        return {\n            chain : ['onPaint']\n        };\n    }\n\n    //endregion\n\n    //region Events\n\n    /**\n     * Triggered before a tooltip is shown. Return `false` to prevent the action.\n     * @preventable\n     * @event beforeShow\n     * @param {Core.widget.Tooltip} source The tooltip being shown.\n     * @param {Scheduler.model.EventModel} source.eventRecord The event record.\n     */\n\n    /**\n     * Triggered after a tooltip is shown.\n     * @event show\n     * @param {Core.widget.Tooltip} source The tooltip.\n     * @param {Scheduler.model.EventModel} source.eventRecord The event record.\n     */\n\n    //endregion\n\n    //region Init\n\n    construct(client, config) {\n        const me = this;\n\n        // process initial config into an actual config object\n        config = me.processConfig(config);\n\n        super.construct(client, config);\n\n        // Default triggering selector is the client's inner element selector\n        if (!me.forSelector) {\n            me.forSelector = `${client.eventInnerSelector}:not(.b-dragproxy)`;\n        }\n\n        me.clockTemplate = new ClockTemplate({\n            scheduler : client\n        });\n\n        client.ion({\n            [`before${client.scheduledEventName}drag`] : () => {\n                // Using {} on purpose to not return the promise\n                me.tooltip?.hide();\n            }\n        });\n    }\n\n    // TooltipBase feature handles special config cases, where user can supply a function to use as template\n    // instead of a normal config object\n    processConfig(config) {\n        if (typeof config === 'function') {\n            return {\n                template : config\n            };\n        }\n\n        return config;\n    }\n\n    // override setConfig to process config before applying it (used mainly from ReactScheduler)\n    setConfig(config) {\n        super.setConfig(this.processConfig(config));\n    }\n\n    doDestroy() {\n        this.destroyProperties('clockTemplate', 'tooltip');\n\n        super.doDestroy();\n    }\n\n    doDisable(disable) {\n        if (this.tooltip) {\n            this.tooltip.disabled = disable;\n        }\n\n        super.doDisable(disable);\n    }\n\n    //endregion\n\n    onPaint({ firstPaint }) {\n        if (firstPaint) {\n            const\n                me             = this,\n                { client }     = me,\n                ignoreSelector = [\n                    '.b-dragselecting',\n                    '.b-eventeditor-editing',\n                    '.b-taskeditor-editing',\n                    '.b-resizing-event',\n                    '.b-task-percent-bar-resizing-task',\n                    '.b-dragcreating',\n                    `.b-dragging-${client.scheduledEventName}`,\n                    '.b-creating-dependency',\n                    '.b-dragproxy'\n                ].map(cls => `:not(${cls})`).join('');\n\n            me.tooltip?.destroy();\n\n            /**\n             * A reference to the tooltip instance, which will have a special `eventRecord` property that\n             * you can use to get data from the contextual event record to which this tooltip is related.\n             * @member {Core.widget.Tooltip} tooltip\n             * @readonly\n             * @category Misc\n             */\n            const tip = me.tooltip = new Tooltip({\n                axisLock          : 'flexible',\n                id                : me.tipId || `${me.client.id}-event-tip`,\n                cls               : me.tipCls,\n                forSelector       : `.b-timelinebase${ignoreSelector} .b-grid-body-container:not(.b-scrolling) ${me.forSelector}`,\n                scrollAction      : 'realign',\n                forElement        : client.timeAxisSubGridElement,\n                showOnHover       : true,\n                anchorToTarget    : true,\n                getHtml           : me.getTipHtml.bind(me),\n                disabled          : me.disabled,\n                // on Core/mixin/Events constructor, me.config.listeners is deleted and attributed its value to me.configuredListeners\n                // to then on processConfiguredListeners it set me.listeners to our TooltipBase\n                // but since we need our initial config.listeners to set to our internal tooltip, we leave processConfiguredListeners empty\n                // to avoid lost our listeners to apply for our internal tooltip here and force our feature has all Tooltip events firing\n                ...me.config,\n                internalListeners : me.configuredListeners\n            });\n\n            tip.ion({\n                innerhtmlupdate : 'updateDateIndicator',\n                overtarget      : 'onOverNewTarget',\n                show            : 'onTipShow',\n                hide            : 'onTipHide',\n                thisObj         : me\n            });\n\n            // Once instantiated, any Tooltip configs are relayed through the feature directly to the tip\n            Object.keys(tip.$meta.configs).forEach(name => {\n                Object.defineProperty(this, name, {\n                    set : v => tip[name] = v,\n                    get : () => tip[name]\n                });\n            });\n        }\n    }\n\n    //region Listeners\n\n    // leave configuredListeners alone until render time at which they are used on the tooltip\n    processConfiguredListeners() {}\n\n    addListener(...args) {\n        const\n            // Call super method to handle enable/disable feature events\n            defaultDetacher = super.addListener(...args),\n            // Add listener to the `tooltip` instance\n            tooltipDetacher = this.tooltip?.addListener(...args);\n\n        if (defaultDetacher || tooltipDetacher) {\n            return () => {\n                defaultDetacher?.();\n                tooltipDetacher?.();\n            };\n        }\n    }\n\n    removeListener(...args) {\n        super.removeListener(...args);\n\n        // Remove listener from the `tooltip` instance\n        this.tooltip?.removeListener(...args);\n    }\n\n    //endregion\n\n    updateDateIndicator() {\n        const\n            me             = this,\n            tip            = me.tooltip,\n            endDateElement = tip.element.querySelector('.b-sch-tooltip-enddate');\n\n        if (!me.record) {\n            return;\n        }\n\n        me.clockTemplate.updateDateIndicator(tip.element, me.record.startDate);\n\n        endDateElement && me.clockTemplate.updateDateIndicator(endDateElement, me.record.endDate);\n    }\n\n    resolveTimeSpanRecord(forElement) {\n        return this.client.resolveTimeSpanRecord(forElement);\n    }\n\n    getTipHtml({ tip, activeTarget }) {\n        const\n            me             = this,\n            { client }     = me,\n            recordProp     = me.recordType || `${client.scheduledEventName}Record`,\n            timeSpanRecord = me.resolveTimeSpanRecord(activeTarget);\n\n        // If user has mouseovered a fading away element of a deleted event,\n        // an event record will not be found. In this case the tip must hide.\n        // Instance of check is to not display while propagating\n        if (timeSpanRecord?.startDate instanceof Date) {\n            const\n                { startDate, endDate } = timeSpanRecord,\n                startText              = client.getFormattedDate(startDate),\n                endDateValue           = client.getDisplayEndDate(endDate, startDate),\n                endText                = client.getFormattedDate(endDateValue);\n\n            tip.eventRecord = timeSpanRecord;\n\n            return me.template({\n                tip,\n                // eventRecord for Scheduler, taskRecord for Gantt\n                [`${recordProp}`] : timeSpanRecord,\n                startDate,\n                endDate,\n                startText,\n                endText,\n                startClockHtml    : me.clockTemplate.template({\n                    date : startDate,\n                    text : startText,\n                    cls  : 'b-sch-tooltip-startdate'\n                }),\n                endClockHtml : timeSpanRecord.isMilestone ? '' : me.clockTemplate.template({\n                    date : endDateValue,\n                    text : endText,\n                    cls  : 'b-sch-tooltip-enddate'\n                })\n            });\n        }\n        else {\n            tip.hide();\n            return '';\n        }\n    }\n\n    get record() {\n        return this.tooltip.eventRecord;\n    }\n\n    onTipShow() {\n        const me = this;\n\n        if (me.monitorRecordUpdate && !me.updateListener) {\n            me.updateListener = me.client.eventStore.ion({\n                change  : me.onRecordUpdate,\n                buffer  : 300,\n                thisObj : me\n            });\n        }\n    }\n\n    onTipHide() {\n        // To not retain full project when changing project\n        this.tooltip.eventRecord = null;\n\n        this.updateListener?.();\n        this.updateListener = null;\n    }\n\n    onOverNewTarget({ newTarget }) {\n        this.tooltip.eventRecord = this.resolveTimeSpanRecord(newTarget);\n    }\n\n    onRecordUpdate({ record }) {\n        const { tooltip } = this;\n\n        // Make sure the record we are showing the tip for is still relevant\n        // If the change moved the element out from under the mouse, we will be hidden.\n        if (tooltip?.isVisible && record === this.record) {\n            tooltip.updateContent();\n\n            // If we were aligning to the event bar, realign to it.\n            if (tooltip.lastAlignSpec.aligningToElement) {\n                tooltip.realign();\n            }\n            // The pointer is still over the target (otherwise tooltip would be hidden)\n            // So invoke the tooltip's positioning\n            else {\n                tooltip.internalOnPointerOver(this.client.lastPointerEvent);\n            }\n        }\n    }\n}\n","import DragHelper from '../../Core/helper/DragHelper.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\nimport DomHelper from '../../Core/helper/DomHelper.js';\nimport DomSync from '../../Core/helper/DomSync.js';\nimport EventHelper from '../../Core/helper/EventHelper.js';\nimport ObjectHelper from '../../Core/helper/ObjectHelper.js';\nimport ResizeHelper from '../../Core/helper/ResizeHelper.js';\nimport StringHelper from '../../Core/helper/StringHelper.js';\nimport Delayable from '../../Core/mixin/Delayable.js';\nimport InstancePlugin from '../../Core/mixin/InstancePlugin.js';\nimport Rectangle from '../../Core/helper/util/Rectangle.js';\nimport Tooltip from '../../Core/widget/Tooltip.js';\nimport ClockTemplate from '../tooltip/ClockTemplate.js';\n\n/**\n * @module Scheduler/feature/AbstractTimeRanges\n */\n\n/**\n * Abstract base class, you should not use this class directly.\n * @abstract\n * @mixes Core/mixin/Delayable\n * @extends Core/mixin/InstancePlugin\n */\nexport default class AbstractTimeRanges extends InstancePlugin.mixin(Delayable) {\n    //region Config\n\n    /**\n     * Fired on the owning Scheduler when a click happens on a time range header element\n     * @event timeRangeHeaderClick\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source Scheduler instance\n     * @param {Scheduler.model.TimeSpan} timeRangeRecord The record\n     * @param {MouseEvent} event DEPRECATED 5.3.0 Use `domEvent` instead\n     * @param {MouseEvent} domEvent Browser event\n     */\n\n    /**\n     * Fired on the owning Scheduler when a double click happens on a time range header element\n     * @event timeRangeHeaderDblClick\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source Scheduler instance\n     * @param {Scheduler.model.TimeSpan} timeRangeRecord The record\n     * @param {MouseEvent} event DEPRECATED 5.3.0 Use `domEvent` instead\n     * @param {MouseEvent} domEvent Browser event\n     */\n\n    /**\n     * Fired on the owning Scheduler when a right click happens on a time range header element\n     * @event timeRangeHeaderContextMenu\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source Scheduler instance\n     * @param {Scheduler.model.TimeSpan} timeRangeRecord The record\n     * @param {MouseEvent} event DEPRECATED 5.3.0 Use `domEvent` instead\n     * @param {MouseEvent} domEvent Browser event\n     */\n\n    static get defaultConfig() {\n        return {\n            // CSS class to apply to range elements\n            rangeCls : 'b-sch-range',\n\n            // CSS class to apply to line elements (0-duration time range)\n            lineCls : 'b-sch-line',\n\n            /**\n             * Set to `true` to enable dragging and resizing of range elements in the header. Only relevant when\n             * {@link #config-showHeaderElements} is `true`.\n             * @config {Boolean}\n             * @default\n             * @category Common\n             */\n            enableResizing : false,\n\n            /**\n             * A Boolean specifying whether to show tooltip while resizing range elements, or a\n             * {@link Core.widget.Tooltip} config object which is applied to the tooltip\n             * @config {Boolean|TooltipConfig}\n             * @default\n             * @category Common\n             */\n            showTooltip : true,\n\n            /**\n             * Template used to generate the tooltip contents when hovering a time range header element.\n             * ```\n             * const scheduler = new Scheduler({\n             *   features : {\n             *     timeRanges : {\n             *       tooltipTemplate({ timeRange }) {\n             *         return `${timeRange.name}`\n             *       }\n             *     }\n             *   }\n             * });\n             * ```\n             * @config {Function} tooltipTemplate\n             * @param {Object} data Tooltip data\n             * @param {Scheduler.model.TimeSpan} data.timeRange\n             * @category Common\n             */\n            tooltipTemplate : null,\n\n            dragTipTemplate : data => `\n                <div class=\"b-sch-tip-${data.valid ? 'valid' : 'invalid'}\">\n                    <div class=\"b-sch-tip-name\">${StringHelper.encodeHtml(data.name) || ''}</div>\n                    ${data.startClockHtml}\n                    ${data.endClockHtml || ''}\n                </div>\n            `,\n\n            baseCls : 'b-sch-timerange',\n\n            /**\n             * Function used to generate the HTML content for a time range header element.\n             * ```\n             * const scheduler = new Scheduler({\n             *   features : {\n             *     timeRanges : {\n             *       headerRenderer({ timeRange }) {\n             *         return `${timeRange.name}`\n             *       }\n             *     }\n             *   }\n             * });\n             * ```\n             * @config {Function} headerRenderer\n             * @param {Object} data Render data\n             * @param {Scheduler.model.TimeSpan} data.timeRange\n             * @category Common\n             */\n            headerRenderer : null,\n\n            /**\n             * Function used to generate the HTML content for a time range body element.\n             * ```\n             * const scheduler = new Scheduler({\n             *   features : {\n             *     timeRanges : {\n             *       bodyRenderer({ timeRange }) {\n             *         return `${timeRange.name}`\n             *       }\n             *     }\n             *   }\n             * });\n             * ```\n             * @config {Function} bodyRenderer\n             * @param {Object} data Render data\n             * @param {Scheduler.model.TimeSpan} data.timeRange\n             * @category Common\n             */\n            bodyRenderer : null,\n\n            // a unique cls used by subclasses to get custom styling of the elements rendered\n            cls : null,\n\n            narrowThreshold : 80\n        };\n    }\n\n    static configurable = {\n        /**\n         * Set to `false` to not render range elements into the time axis header\n         * @prp {Boolean}\n         * @default\n         * @category Common\n         */\n        showHeaderElements : true\n    };\n\n    // Plugin configuration. This plugin chains some functions in Grid.\n    static pluginConfig = {\n        chain : [\n            'onPaint',\n            'populateTimeAxisHeaderMenu',\n            'onSchedulerHorizontalScroll',\n            'afterScroll',\n            'onInternalResize'\n        ]\n    };\n\n    //endregion\n\n    //region Init & destroy\n\n    construct(client, config) {\n        const me = this;\n\n        super.construct(client, config);\n\n        if (client.isVertical) {\n            client.ion({\n                renderRows : me.onUIReady,\n                thisObj    : me,\n                once       : true\n            });\n        }\n\n        // Add a unique cls used by subclasses to get custom styling of the elements rendered\n        // This makes sure that each class only removed its own elements from the DOM\n        me.cls = me.cls || `b-sch-${me.constructor.$$name.toLowerCase()}`;\n\n        me.baseSelector = `.${me.baseCls}.${me.cls}`;\n\n        // header elements are required for interaction\n        if (me.enableResizing) {\n            me.showHeaderElements = true;\n        }\n    }\n\n    doDestroy() {\n        const me = this;\n\n        me.detachListeners('timeAxisViewModel');\n        me.detachListeners('timeAxis');\n\n        me.clockTemplate?.destroy();\n        me.tip?.destroy();\n\n        me.drag?.destroy();\n        me.resize?.destroy();\n\n        super.doDestroy();\n    }\n\n    doDisable(disable) {\n        this.renderRanges();\n\n        super.doDisable(disable);\n    }\n\n    setupTimeAxisViewModelListeners() {\n        const me = this;\n\n        me.detachListeners('timeAxisViewModel');\n        me.detachListeners('timeAxis');\n\n        me.client.timeAxisViewModel.ion({\n            name    : 'timeAxisViewModel',\n            update  : 'onTimeAxisViewModelUpdate',\n            thisObj : me\n        });\n\n        me.client.timeAxis.ion({\n            name          : 'timeAxis',\n            includeChange : 'renderRanges',\n            thisObj       : me\n        });\n\n        me.updateLineBuffer();\n    }\n\n    onUIReady() {\n        const\n            me         = this,\n            { client } = me;\n\n        // If timeAxisViewModel is swapped, re-setup listeners to new instance\n        client.ion({\n            timeAxisViewModelChange : me.setupTimeAxisViewModelListeners,\n            thisObj                 : me\n        });\n\n        me.setupTimeAxisViewModelListeners();\n\n        if (!client.hideHeaders) {\n            if (me.headerContainerElement) {\n                EventHelper.on({\n                    click       : me.onTimeRangeClick,\n                    dblclick    : me.onTimeRangeClick,\n                    contextmenu : me.onTimeRangeClick,\n                    delegate    : me.baseSelector,\n                    element     : me.headerContainerElement,\n                    thisObj     : me\n                });\n            }\n\n            if (me.enableResizing) {\n\n                me.drag = DragHelper.new({\n                    name               : 'rangeDrag',\n                    lockX              : client.isVertical,\n                    lockY              : client.isHorizontal,\n                    constrain          : true,\n                    outerElement       : me.headerContainerElement,\n                    targetSelector     : `${me.baseSelector}`,\n                    isElementDraggable : (el, event) => !client.readOnly && me.isElementDraggable(el, event),\n                    rtlSource          : client,\n\n                    internalListeners : {\n                        dragstart : 'onDragStart',\n                        drag      : 'onDrag',\n                        drop      : 'onDrop',\n                        reset     : 'onDragReset',\n                        abort     : 'onInvalidDrop',\n                        thisObj   : me\n                    }\n                }, me.dragHelperConfig);\n\n                me.resize = ResizeHelper.new({\n                    direction          : client.mode,\n                    targetSelector     : `${me.baseSelector}.b-sch-range`,\n                    outerElement       : me.headerContainerElement,\n                    isElementResizable : (el, event) => !el.matches('.b-dragging,.b-readonly') && !event.target.matches('.b-fa'),\n                    internalListeners  : {\n                        resizestart : 'onResizeStart',\n                        resizing    : 'onResizeDrag',\n                        resize      : 'onResize',\n                        cancel      : 'onInvalidResize',\n                        reset       : 'onResizeReset',\n                        thisObj     : me\n                    }\n                }, me.resizeHelperConfig);\n            }\n        }\n\n        me.renderRanges();\n\n        if (me.tooltipTemplate) {\n            me.hoverTooltip = new Tooltip({\n                forElement : me.headerContainerElement,\n                getHtml({ activeTarget }) {\n                    const timeRange = me.resolveTimeRangeRecord(activeTarget);\n\n                    return me.tooltipTemplate({ timeRange });\n                },\n                forSelector : '.' + me.baseCls + (me.cls ? '.' + me.cls : '')\n            });\n        }\n    }\n\n    //endregion\n\n    //region Draw\n\n    refresh() {\n        this._timeRanges = null;\n        this.renderRanges();\n    }\n\n    getDOMConfig(startDate, endDate) {\n        const\n            me            = this,\n            bodyConfigs   = [],\n            headerConfigs = [];\n\n        if (!me.disabled) {\n            // clear label rotation map cache here, used to prevent height calculations for every timeRange entry to\n            // speed up using recurrences\n            me._labelRotationMap = {};\n\n            for (const range of me.timeRanges) {\n                const result = me.renderRange(range, startDate, endDate);\n                if (result) {\n                    bodyConfigs.push(result.bodyConfig);\n                    headerConfigs.push(result.headerConfig);\n                }\n            }\n        }\n\n        return [bodyConfigs, headerConfigs];\n    }\n\n    renderRanges() {\n        const\n            me                   = this,\n            { client }           = me,\n            { foregroundCanvas } = client;\n\n        // Scheduler/Gantt might not yet be rendered\n        if (foregroundCanvas && client.isPainted && !client.timeAxisSubGrid.collapsed) {\n            const\n                { headerContainerElement }   = me,\n                updatedBodyElements          = [],\n                [bodyConfigs, headerConfigs] = me.getDOMConfig();\n\n            if (!me.bodyCanvas) {\n                me.bodyCanvas = DomHelper.createElement({\n                    className     : `b-timeranges-canvas ${me.cls}-canvas`,\n                    parent        : foregroundCanvas,\n                    retainElement : true\n                });\n            }\n\n            DomSync.sync({\n                targetElement : me.bodyCanvas,\n                childrenOnly  : true,\n                domConfig     : {\n                    children    : bodyConfigs,\n                    syncOptions : {\n                        releaseThreshold : 0,\n                        syncIdField      : 'id'\n                    }\n                },\n                callback : me.showHeaderElements ? null : ({\n                    targetElement,\n                    action\n                }) => {\n                    // Might need to rotate label when not showing header elements\n                    if (action === 'reuseElement' || action === 'newElement' || action === 'reuseOwnElement') {\n                        // Collect all here, to not force reflows in the middle of syncing\n                        updatedBodyElements.push(targetElement);\n                    }\n                }\n            });\n\n            if (me.showHeaderElements && !me.headerCanvas) {\n                me.headerCanvas = DomHelper.createElement({\n                    className     : `${me.cls}-canvas`,\n                    parent        : headerContainerElement,\n                    retainElement : true\n                });\n            }\n\n            if (me.headerCanvas) {\n                DomSync.sync({\n                    targetElement : me.headerCanvas,\n                    childrenOnly  : true,\n                    domConfig     : {\n                        children    : headerConfigs,\n                        syncOptions : {\n                            releaseThreshold : 0,\n                            syncIdField      : 'id'\n                        }\n                    }\n                });\n            }\n\n            // Rotate labels last, to not force reflows. First check if rotation is needed\n            for (const bodyElement of updatedBodyElements) {\n                me.cacheRotation(bodyElement.elementData.timeRange, bodyElement);\n            }\n\n            // Then apply rotation\n            for (const bodyElement of updatedBodyElements) {\n                me.applyRotation(bodyElement.elementData.timeRange, bodyElement);\n            }\n        }\n    }\n\n    // Implement in subclasses\n    get timeRanges() {\n        return [];\n    }\n\n    /**\n     * Based on this method result the feature decides whether the provided range should\n     * be rendered or not.\n     * The method checks that the range intersects the current viewport.\n     *\n     * Override the method to implement your custom range rendering vetoing logic.\n     * @param {Scheduler.model.TimeSpan} range Range to render.\n     * @param {Date} [startDate] Specifies view start date. Defaults to view visible range start\n     * @param {Date} [endDate] Specifies view end date. Defaults to view visible range end\n     * @returns {Boolean} `true` if the range should be rendered and `false` otherwise.\n     */\n    shouldRenderRange(\n        range,\n        startDate = this.client.visibleDateRange.startDate,\n        endDate   = this.client.visibleDateRange.endDate\n    ) {\n        const\n            { timeAxis }                                             = this.client,\n            { startDate : rangeStart, endDate : rangeEnd, duration } = range;\n\n        return Boolean(rangeStart && (timeAxis.isContinuous || timeAxis.isTimeSpanInAxis(range)) && DateHelper.intersectSpans(\n            startDate,\n            endDate,\n            rangeStart,\n            // Lines are included longer, to make sure label does not disappear\n            duration ? rangeEnd : DateHelper.add(rangeStart, this._lineBufferDurationMS)\n        ));\n    }\n\n    getRangeDomConfig(timeRange, minDate, maxDate, relativeTo = 0) {\n        const\n            me         = this,\n            { client } = me,\n            { rtl }    = client,\n            startPos   = client.getCoordinateFromDate(DateHelper.max(timeRange.startDate, minDate), {\n                respectExclusion : true\n            }) - relativeTo,\n            endPos     = timeRange.endDate ? client.getCoordinateFromDate(DateHelper.min(timeRange.endDate, maxDate), {\n                respectExclusion : true,\n                isEnd            : true\n            }) - relativeTo : startPos,\n            size       = Math.abs(endPos - startPos),\n            isRange    = size > 0,\n            translateX = rtl ? `calc(${startPos}px - 100%)` : `${startPos}px`;\n\n        return {\n            className : {\n                [me.baseCls]     : 1,\n                [me.cls]         : me.cls,\n                [me.rangeCls]    : isRange,\n                [me.lineCls]     : !isRange,\n                [timeRange.cls]  : timeRange.cls,\n                'b-narrow-range' : isRange && size < me.narrowThreshold,\n                'b-readonly'     : timeRange.readOnly,\n                'b-rtl'          : rtl\n            },\n            dataset : {\n                id : timeRange.id\n            },\n            elementData : {\n                timeRange\n            },\n            style : client.isVertical\n                ? `transform: translateY(${translateX}); ${isRange ? `height:${size}px` : ''};`\n                : `transform: translateX(${translateX}); ${isRange ? `width:${size}px` : ''};`\n        };\n    }\n\n    renderRange(timeRange, startDate, endDate) {\n        const\n            me           = this,\n            { client }   = me,\n            { timeAxis } = client;\n\n        if (me.shouldRenderRange(timeRange, startDate, endDate) && timeAxis.startDate) {\n            const\n                config     = me.getRangeDomConfig(timeRange, timeAxis.startDate, timeAxis.endDate),\n                icon       = timeRange.iconCls && StringHelper.xss`<i class=\"${timeRange.iconCls}\"></i>`,\n                name       = timeRange.name && StringHelper.encodeHtml(timeRange.name),\n                labelTpl   = (name || icon) ? `<label>${icon || ''}${name || '&nbsp;'}</label>` : '',\n                bodyConfig = {\n                    ...config,\n                    style : config.style + (timeRange.style || ''),\n                    html  : me.bodyRenderer ? me.bodyRenderer({ timeRange }) : (me.showHeaderElements && !me.showLabelInBody ? '' : labelTpl)\n                };\n\n            let headerConfig;\n\n            if (me.showHeaderElements) {\n                headerConfig = {\n                    ...config,\n                    html : (me.headerRenderer ? me.headerRenderer({ timeRange }) : (me.showLabelInBody ? '' : labelTpl))\n                };\n            }\n\n            return { bodyConfig, headerConfig };\n        }\n    }\n\n    // Cache label rotation to not have to calculate for each occurrence when using recurring timeranges\n    cacheRotation(range, bodyElement) {\n        // Lines have no label. Do not check label content to do not force DOM layout!\n        if ((!range.iconCls && !range.name) || !range.duration) {\n            return;\n        }\n\n        const label = bodyElement.firstElementChild;\n\n        if (label && !range.recurringTimeSpan) {\n            this._labelRotationMap[range.id] = this.client.isVertical\n                ? label.offsetHeight < bodyElement.offsetHeight\n                : label.offsetWidth > bodyElement.offsetWidth;\n        }\n    }\n\n    applyRotation(range, bodyElement) {\n        const rotate = this._labelRotationMap[range.recurringTimeSpan?.id ?? range.id];\n\n        bodyElement.firstElementChild?.classList.toggle('b-vertical', Boolean(rotate));\n    }\n\n    getBodyElementByRecord(idOrRecord) {\n        const id = typeof idOrRecord === 'string' ? idOrRecord : idOrRecord?.id;\n\n        return id != null && DomSync.getChild(this.bodyCanvas, id);\n    }\n\n    // Implement in subclasses\n    resolveTimeRangeRecord(el) {}\n\n    get headerContainerElement() {\n        const\n            me                                       = this,\n            { isVertical, timeView, timeAxisColumn } = me.client;\n\n        if (!me._headerContainerElement) {\n            // Render into the subGrid´s header element or the vertical timeaxis depending on mode\n            if (isVertical && timeView.element) {\n                me._headerContainerElement = timeView.element.parentElement;\n            }\n            else if (!isVertical) {\n                me._headerContainerElement = timeAxisColumn.element;\n            }\n        }\n\n        return me._headerContainerElement;\n    }\n\n    //endregion\n\n    //region Settings\n\n    get showHeaderElements() {\n        return !this.client.hideHeaders && this._showHeaderElements;\n    }\n\n    updateShowHeaderElements(show) {\n        const { client } = this;\n\n        if (!this.isConfiguring) {\n            client.element.classList.toggle('b-sch-timeranges-with-headerelements', Boolean(show));\n\n            this.renderRanges();\n        }\n    }\n\n    //endregion\n\n    //region Menu items\n\n    /**\n     * Adds menu items for the context menu, and may mutate the menu configuration.\n     * @param {Object} options Contains menu items and extra data retrieved from the menu target.\n     * @param {Grid.column.Column} options.column Column for which the menu will be shown\n     * @param {Object<String,MenuItemConfig|Boolean|null>} options.items A named object to describe menu items\n     * @internal\n     */\n    populateTimeAxisHeaderMenu({ column, items }) {}\n\n    //endregion\n\n    //region Events & hooks\n\n    onPaint({ firstPaint }) {\n        if (firstPaint && this.client.isHorizontal) {\n            this.onUIReady();\n        }\n    }\n\n    onSchedulerHorizontalScroll() {\n        // Don't need a refresh, ranges are already available. Just need to draw those now in view\n        this.client.isHorizontal && this.renderRanges();\n    }\n\n    afterScroll() {\n        this.client.isVertical && this.renderRanges();\n    }\n\n    updateLineBuffer() {\n        const { timeAxisViewModel } = this.client;\n        // Lines have no duration, but we want them to be visible longer for the label to not suddenly disappear.\n        // We use a 300px buffer for that, recalculated as an amount of ms\n        this._lineBufferDurationMS = timeAxisViewModel.getDateFromPosition(300) - timeAxisViewModel.getDateFromPosition(0);\n    }\n\n    onInternalResize(element, newWidth, newHeight, oldWidth, oldHeight) {\n        if (this.client.isVertical && oldHeight !== newHeight) {\n            this.renderRanges();\n        }\n    }\n\n    onTimeAxisViewModelUpdate() {\n        this.updateLineBuffer();\n\n        this.refresh();\n    }\n\n    onTimeRangeClick(event) {\n        const timeRangeRecord = this.resolveTimeRangeRecord(event.target);\n\n        this.client.trigger(`timeRangeHeader${StringHelper.capitalize(event.type)}`, { event, domEvent : event, timeRangeRecord });\n    }\n\n    //endregion\n\n    //region Drag drop\n\n    showTip(context) {\n        const me = this;\n\n        if (me.showTooltip) {\n            me.clockTemplate = new ClockTemplate({\n                scheduler : me.client\n            });\n\n            me.tip = new Tooltip(ObjectHelper.assign({\n                id                       : `${me.client.id}-time-range-tip`,\n                cls                      : 'b-interaction-tooltip',\n                align                    : 'b-t',\n                autoShow                 : true,\n                updateContentOnMouseMove : true,\n                forElement               : context.element,\n                getHtml                  : () => me.getTipHtml(context.record, context.element)\n            }, me.showTooltip));\n        }\n    }\n\n    destroyTip() {\n        if (this.tip) {\n            this.tip.destroy();\n            this.tip = null;\n        }\n    }\n\n    isElementDraggable(el) {\n        el = el.closest(this.baseSelector + ':not(.b-resizing):not(.b-readonly)');\n\n        return el && !el.classList.contains('b-over-resize-handle');\n    }\n\n    onDragStart({ context }) {\n        const { client, drag } = this;\n\n        if (client.isVertical) {\n            drag.minY = 0;\n            // Moving the range, you can drag the start marker down until the end of the range hits the time axis end\n            drag.maxY = client.timeAxisViewModel.totalSize - context.element.offsetHeight;\n            // Setting min/max for X makes drag right of the header valid, but visually still constrained vertically\n            drag.minX = 0;\n            drag.maxX = Number.MAX_SAFE_INTEGER;\n        }\n        else {\n            drag.minX = 0;\n            // Moving the range, you can drag the start marker right until the end of the range hits the time axis end\n            drag.maxX = client.timeAxisViewModel.totalSize - context.element.offsetWidth;\n            // Setting min/max for Y makes drag below header valid, but visually still constrained horizontally\n            drag.minY = 0;\n            drag.maxY = Number.MAX_SAFE_INTEGER;\n        }\n\n        client.element.classList.add('b-dragging-timerange');\n    }\n\n    onDrop({ context }) {\n        this.client.element.classList.remove('b-dragging-timerange');\n    }\n\n    onInvalidDrop() {\n        this.drag.reset();\n        this.client.element.classList.remove('b-dragging-timerange');\n\n        this.destroyTip();\n    }\n\n    onDrag() {}\n\n    onDragReset() {}\n\n    // endregion\n\n    // region Resize\n\n    onResizeStart() {}\n\n    onResizeDrag() {}\n\n    onResize() {}\n\n    onInvalidResize() {}\n\n    onResizeReset() {}\n\n    //endregion\n\n    //region Tooltip\n\n    /**\n     * Generates the html to display in the tooltip during drag drop.\n     *\n     */\n    getTipHtml(record, element) {\n        const\n            me         = this,\n            { client } = me,\n            box        = Rectangle.from(element),\n            startPos   = box.getStart(client.rtl, client.isHorizontal),\n            endPos     = box.getEnd(client.rtl, client.isHorizontal),\n            startDate  = client.getDateFromCoordinate(startPos, 'round', false),\n            endDate    = record.endDate && client.getDateFromCoordinate(endPos, 'round', false),\n            startText  = client.getFormattedDate(startDate),\n            endText    = endDate && client.getFormattedEndDate(endDate, startDate);\n\n        return me.dragTipTemplate({\n            name           : record.name || '',\n            startDate,\n            endDate,\n            startText,\n            endText,\n            startClockHtml : me.clockTemplate.template({\n                date : startDate,\n                text : startText,\n                cls  : 'b-sch-tooltip-startdate'\n            }),\n            endClockHtml : endText && me.clockTemplate.template({\n                date : endDate,\n                text : endText,\n                cls  : 'b-sch-tooltip-enddate'\n            })\n        });\n    }\n\n    //endregion\n}\n","import DomHelper from '../../Core/helper/DomHelper.js';\nimport DomSync from '../../Core/helper/DomSync.js';\nimport InstancePlugin from '../../Core/mixin/InstancePlugin.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport Delayable from '../../Core/mixin/Delayable.js';\nimport AttachToProjectMixin from '../../Scheduler/data/mixin/AttachToProjectMixin.js';\n\n/**\n * @module Scheduler/feature/ColumnLines\n */\nconst emptyObject = Object.freeze({});\n\n/**\n * Displays column lines for ticks, with a different styling for major ticks (by default they are darker). If this\n * feature is disabled, no lines are shown. If it's enabled, line are shown for the tick level which is set in current\n * ViewPreset. Please see {@link Scheduler.preset.ViewPreset#field-columnLinesFor} config for details.\n *\n * The lines are drawn as divs, with only visible lines available in DOM. The color and style of the lines are\n * determined the css rules for `.b-column-line` and `.b-column-line-major`.\n *\n * For vertical mode, this features also draws vertical resource column lines if scheduler is configured with\n * `columnLines : true` (which is the default, see {@link Grid.view.GridBase#config-columnLines}).\n *\n * This feature is **enabled** by default\n *\n * @extends Core/mixin/InstancePlugin\n * @mixes Core/mixin/Delayable\n * @demo Scheduler/basic\n * @inlineexample Scheduler/feature/ColumnLines.js\n * @classtype columnLines\n * @feature\n */\nexport default class ColumnLines extends InstancePlugin.mixin(AttachToProjectMixin, Delayable) {\n    //region Config\n\n    static get $name() {\n        return 'ColumnLines';\n    }\n\n    static get delayable() {\n        return {\n            refresh : {\n                type              : 'raf',\n                cancelOutstanding : true\n            }\n        };\n    }\n\n    // Plugin configuration. This plugin chains some of the functions in Grid.\n    static get pluginConfig() {\n        return {\n            after : ['render', 'updateCanvasSize', 'onVisibleDateRangeChange', 'onVisibleResourceRangeChange']\n        };\n    }\n\n    //endregion\n\n    //region Init & destroy\n\n    construct(client, config) {\n        client.useBackgroundCanvas = true;\n\n        super.construct(client, config);\n    }\n\n    attachToResourceStore(resourceStore) {\n        const { client } = this;\n\n        super.attachToResourceStore(resourceStore);\n\n        if (client.isVertical) {\n            client.resourceStore.ion({\n                name : 'resourceStore',\n                group({ groupers }) {\n                    if (groupers.length === 0) {\n                        this.refresh();\n                    }\n                },\n                thisObj : this\n            });\n        }\n    }\n\n    doDisable(disable) {\n        super.doDisable(disable);\n\n        if (!this.isConfiguring) {\n            this.refresh();\n        }\n    }\n\n    //endregion\n\n    //region Draw\n\n    /**\n     * Draw lines when scheduler/gantt is rendered.\n     * @private\n     */\n    render() {\n        this.refresh();\n    }\n\n    getColumnLinesDOMConfig(startDate, endDate) {\n        const\n            me               = this,\n            { client }       = me,\n            { rtl }          = client,\n            m                = rtl ? -1 : 1,\n            {\n                timeAxisViewModel,\n                isHorizontal,\n                resourceStore,\n                variableColumnWidths\n            }                = client,\n            { columnConfig } = timeAxisViewModel;\n\n        const\n            linesForLevel      = timeAxisViewModel.columnLinesFor,\n            majorLinesForLevel = Math.max(linesForLevel - 1, 0),\n            start              = startDate.getTime(),\n            end                = endDate.getTime(),\n            domConfigs         = [],\n            dates              = new Set(),\n            dimension          = isHorizontal ? 'X' : 'Y';\n\n        if (!me.disabled) {\n            const addLineConfig = (tick, isMajor) => {\n                const tickStart = tick.start.getTime();\n                // Only start of tick matters.\n                // Each tick has an exact calculated start position along the time axis\n                // and carries a border on its left, so column lines follow from\n                // tick 1 (zero-based) onwards.\n                if (tickStart > start && tickStart < end && !dates.has(tickStart)) {\n                    dates.add(tickStart);\n                    domConfigs.push({\n                        role      : 'presentation',\n                        className : isMajor ? 'b-column-line-major' : 'b-column-line',\n                        style     : {\n                            transform : `translate${dimension}(${tick.coord * m}px)`\n                        },\n                        dataset : {\n                            line : isMajor ? `major-${tick.index}` : `line-${tick.index}`\n                        }\n                    });\n                }\n            };\n\n            // Collect configs for major lines\n            if (linesForLevel !== majorLinesForLevel) {\n                for (let i = 1; i <= columnConfig[majorLinesForLevel].length - 1; i++) {\n                    addLineConfig(columnConfig[majorLinesForLevel][i], true);\n                }\n            }\n\n            // And normal lines, skipping dates already occupied by major lines\n            for (let i = 1; i <= columnConfig[linesForLevel].length - 1; i++) {\n                addLineConfig(columnConfig[linesForLevel][i], false);\n            }\n\n            // Add vertical resource column lines, if grid is configured to show column lines\n            if (!isHorizontal && client.columnLines) {\n                const\n                    { columnWidth } = client.resourceColumns;\n                let {\n                    first : firstResource,\n                    last  : lastResource\n                }               = client.currentOrientation.getResourceRange(true);\n\n                let nbrGroupHeaders = 0;\n\n                if (firstResource > -1) {\n                    for (let i = firstResource; i < lastResource + 1; i++) {\n                        const\n                            resourceRecord = resourceStore.getAt(i);\n\n                        // Only add lines for group children\n                        if (resourceRecord.isGroupHeader) {\n                            lastResource++;\n                            nbrGroupHeaders++;\n                            continue;\n                        }\n\n                        const\n                            instanceMeta = resourceRecord.instanceMeta(resourceStore),\n                            left         = variableColumnWidths ? instanceMeta.insetStart + resourceRecord.columnWidth - 1 : (i - nbrGroupHeaders + 1) * columnWidth - 1;\n\n                        domConfigs.push({\n                            className : {\n                                'b-column-line'            : 1,\n                                'b-resource-column-line'   : 1,\n                                'b-resource-group-divider' : resourceStore.isGrouped && instanceMeta.groupParent?.groupChildren[instanceMeta.groupParent?.groupChildren.length - 1] === resourceRecord\n                            },\n                            style : {\n                                transform : `translateX(${left * m}px)`\n                            },\n                            dataset : {\n                                line : `resource-${i}`\n                            }\n                        });\n                    }\n                }\n            }\n        }\n\n        return domConfigs;\n    }\n\n    /**\n     * Draw column lines that are in view\n     * @private\n     */\n    refresh() {\n        const\n            me                     = this,\n            { client }             = me,\n            { timeAxis }           = client,\n            { startDate, endDate } = client.visibleDateRange || emptyObject,\n            axisStart              = timeAxis.startDate;\n\n        // Early bailout for timeaxis without start date or when starting with schedule collapsed\n        if (!axisStart || !startDate || me.client.timeAxisSubGrid.collapsed) {\n            return;\n        }\n\n        if (!me.element) {\n            me.element = DomHelper.createElement({\n                parent    : client.backgroundCanvas,\n                className : 'b-column-lines-canvas'\n            });\n        }\n\n        const domConfigs = me.getColumnLinesDOMConfig(startDate, endDate);\n\n        DomSync.sync({\n            targetElement : me.element,\n            onlyChildren  : true,\n            domConfig     : {\n                children    : domConfigs,\n                syncOptions : {\n                    // When zooming in and out we risk getting a lot of released lines if we do not limit it\n                    releaseThreshold : 4\n                }\n            },\n            syncIdField : 'line'\n        });\n    }\n\n    //endregion\n\n    //region Events\n\n    // Called when visible date range changes, for example from zooming, scrolling, resizing\n    onVisibleDateRangeChange() {\n        this.refresh();\n    }\n\n    // Called when visible resource range changes, for example on scroll and resize\n    onVisibleResourceRangeChange({ firstResource, lastResource }) {\n        this.refresh();\n    }\n\n    updateCanvasSize() {\n        this.refresh();\n    }\n\n    //endregion\n}\n\nGridFeatureManager.registerFeature(ColumnLines, true, ['Scheduler', 'Gantt']);\n","import Base from '../../../Core/Base.js';\nimport DomHelper from '../../../Core/helper/DomHelper.js';\nimport Objects from '../../../Core/helper/util/Objects.js';\nimport Rectangle from '../../../Core/helper/util/Rectangle.js';\nimport Tooltip from '../../../Core/widget/Tooltip.js';\nimport EventHelper from '../../../Core/helper/EventHelper.js';\nimport DependencyBaseModel from '../../model/DependencyBaseModel.js';\nimport StringHelper from '../../../Core/helper/StringHelper.js';\n\n/**\n * @module Scheduler/feature/mixin/DependencyCreation\n */\n\n// <remove-on-release>\n// TODO: refactor this class using StateChart utility to be implemented in Core/util/StateChart.js or XState library if allowed to be used\n// </remove-on-release>\n\n/**\n * Mixin for Dependencies feature that handles dependency creation (drag & drop from terminals which are shown on hover).\n * Requires {@link Core.mixin.Delayable} to be mixed in alongside.\n *\n * @mixin\n */\nexport default Target => class DependencyCreation extends (Target || Base) {\n    static get $name() {\n        return 'DependencyCreation';\n    }\n\n    //region Config\n\n    static get defaultConfig() {\n        return {\n            /**\n             * `false` to require a drop on a target event bar side circle to define the dependency type.\n             * If dropped on the event bar, the `defaultValue` of the DependencyModel `type` field will be used to\n             * determine the target task side.\n             *\n             * @member {Boolean} allowDropOnEventBar\n             */\n            /**\n             * `false` to require a drop on a target event bar side circle to define the dependency type.\n             * If dropped on the event bar, the `defaultValue` of the DependencyModel `type` field will be used to\n             * determine the target task side.\n             *\n             * @config {Boolean}\n             * @default\n             */\n            allowDropOnEventBar : true,\n\n            /**\n             * `false` to not show a tooltip while creating a dependency\n             * @config {Boolean}\n             * @default\n             */\n            showCreationTooltip : true,\n\n            /**\n             * A tooltip config object that will be applied to the dependency creation {@link Core.widget.Tooltip}\n             * @config {TooltipConfig}\n             */\n            creationTooltip : null,\n\n            /**\n             * A template function that will be called to generate the HTML contents of the dependency creation tooltip.\n             * You can return either an HTML string or a {@link DomConfig} object.\n             * @prp {Function} creationTooltipTemplate\n             * @param {Object} data Data about the dependency being created\n             * @param {Scheduler.model.TimeSpan} data.source The from event\n             * @param {Scheduler.model.TimeSpan} data.target The target event\n             * @param {String} data.fromSide The from side (start, end, top, bottom)\n             * @param {String} data.toSide The target side (start, end, top, bottom)\n             * @param {Boolean} data.valid The validity of the dependency\n             * @returns {String|DomConfig}\n             */\n\n            /**\n             * CSS class used for terminals\n             * @config {String}\n             * @default\n             */\n            terminalCls : 'b-sch-terminal',\n\n            /**\n             * Where (on event bar edges) to display terminals. The sides are `'start'`, `'top'`,\n             * `'end'` and `'bottom'`\n             * @config {String[]}\n             */\n            terminalSides : ['start', 'top', 'end', 'bottom'],\n\n            /**\n             * Set to `false` to not allow creating dependencies\n             * @config {Boolean}\n             * @default\n             */\n            allowCreate : true\n        };\n    }\n\n    //endregion\n\n    //region Init & destroy\n\n    construct(view, config) {\n        super.construct(view, config);\n\n        const me = this;\n\n        me.view = view;\n        me.eventName = view.scheduledEventName;\n\n        view.ion({ readOnly : () => me.updateCreateListeners() });\n\n        me.updateCreateListeners();\n\n        me.chain(view, 'onElementTouchMove', 'onElementTouchMove');\n    }\n\n    doDestroy() {\n        const me = this;\n\n        me.detachListeners('view');\n\n        me.creationData = null;\n\n        me.pointerUpMoveDetacher?.();\n        me.creationTooltip?.destroy();\n\n        super.doDestroy();\n    }\n\n    updateCreateListeners() {\n        const me = this;\n\n        if (!me.view) {\n            return;\n        }\n\n        me.detachListeners('view');\n\n        if (me.isCreateAllowed) {\n            me.view.ion({\n                name                          : 'view',\n                [`${me.eventName}mouseenter`] : 'onTimeSpanMouseEnter',\n                [`${me.eventName}mouseleave`] : 'onTimeSpanMouseLeave',\n                thisObj                       : me\n            });\n        }\n    }\n\n    set allowCreate(value) {\n        this._allowCreate = value;\n\n        this.updateCreateListeners();\n    }\n\n    get allowCreate() {\n        return this._allowCreate;\n    }\n\n    get isCreateAllowed() {\n        return this.allowCreate && !this.view.readOnly && !this.disabled;\n    }\n\n    //endregion\n\n    //region Events\n\n    /**\n     * Show terminals when mouse enters event/task element\n     * @private\n     */\n    onTimeSpanMouseEnter({\n        event, source, [`${this.eventName}Record`]: record, [`${this.eventName}Element`]: element\n    }) {\n        if (!record.isCreating && !record.readOnly && (!this.client.features.nestedEvents || record.parent.isRoot)) {\n            const\n                me               = this,\n                { creationData } = me,\n                eventBarElement  = DomHelper.down(element, source.eventInnerSelector);\n\n            // When we enter a different event than the one we started on\n            if (record !== creationData?.source) {\n                me.showTerminals(record, eventBarElement);\n\n                if (creationData && event.target.closest(me.client.eventSelector)) {\n                    creationData.timeSpanElement = eventBarElement;\n                    me.onOverTargetEventBar(event);\n                }\n            }\n        }\n    }\n\n    /**\n     * Hide terminals when mouse leaves event/task element\n     * @private\n     */\n    onTimeSpanMouseLeave(event) {\n        const\n            me               = this,\n            { creationData } = me,\n            element          = event[`${me.eventName}Element`],\n            timeSpanLeft     = DomHelper.down(element, me.view.eventInnerSelector),\n            target           = event.event?.relatedTarget,\n            timeSpanElement  = creationData?.timeSpanElement;\n\n        // Can happen when unhovering an occurrence during update\n        if (!target) {\n            return;\n        }\n\n        if (!creationData || !timeSpanElement || !target || !DomHelper.isDescendant(timeSpanElement, target)) {\n            // We cannot hide the terminals for non-trusted events because non-trusted means it's\n            // synthesized from a touchmove event and if the source element of a touchmove\n            // leaves the DOM, the touch gesture is ended.\n            if (event.event.isTrusted || (timeSpanLeft !== creationData?.sourceElement)) {\n                me.hideTerminals(element);\n            }\n        }\n\n        if (creationData && !creationData.finalizing) {\n            creationData.timeSpanElement = null;\n            me.onOverNewTargetWhileCreating(undefined, undefined, event);\n        }\n    }\n\n    onTerminalMouseOver(event) {\n        if (this.creationData) {\n            this.onOverTargetEventBar(event);\n        }\n    }\n\n    /**\n     * Remove hover styling when mouse leaves terminal. Also hides terminals when mouse leaves one it and not creating a\n     * dependency.\n     * @private\n     */\n    onTerminalMouseOut(event) {\n        const\n            me               = this,\n            { creationData } = me,\n            eventElement     = event.target.closest(me.view.eventSelector);\n\n        if (eventElement && (!me.showingTerminalsFor || !DomHelper.isDescendant(eventElement, me.showingTerminalsFor)) && (!creationData || eventElement !== creationData.timeSpanElement)) {\n            me.hideTerminals(eventElement);\n            me.view.unhover(eventElement, event);\n        }\n\n        if (creationData) {\n            me.onOverNewTargetWhileCreating(event.relatedTarget, creationData.target, event);\n        }\n    }\n\n    /**\n     * Start creating a dependency when mouse is pressed over terminal\n     * @private\n     */\n    onTerminalPointerDown(event) {\n        const me = this;\n\n        // ignore non-left button clicks\n        if (event.button === 0 && !me.creationData) {\n            const\n                scheduler              = me.view,\n                timeAxisSubGridElement = scheduler.timeAxisSubGridElement,\n                terminalNode           = event.target,\n                timeSpanElement        = terminalNode.closest(scheduler.eventInnerSelector),\n                viewBounds             = Rectangle.from(scheduler.element, document.body);\n\n            event.stopPropagation();\n\n            me.creationData = {\n                sourceElement  : timeSpanElement,\n                source         : scheduler.resolveTimeSpanRecord(timeSpanElement).$original,\n                fromSide       : terminalNode.dataset.side,\n                startPoint     : Rectangle.from(terminalNode, timeAxisSubGridElement).center,\n                startX         : event.pageX - viewBounds.x + scheduler.scrollLeft,\n                startY         : event.pageY - viewBounds.y + scheduler.scrollTop,\n                valid          : false,\n                sourceResource : scheduler.resolveResourceRecord?.(event),\n                tooltip        : me.creationTooltip\n            };\n\n            me.pointerUpMoveDetacher = EventHelper.on({\n                pointerup : {\n                    element : scheduler.element.getRootNode(),\n                    handler : 'onMouseUp',\n                    passive : false\n                },\n                pointermove : {\n                    element : timeAxisSubGridElement,\n                    handler : 'onMouseMove',\n                    passive : false\n                },\n                thisObj : me\n            });\n\n            // If root element is anything but Document (it could be Document Fragment or regular Node in case of LWC)\n            // then we should also add listener to document to cancel dependency creation\n            me.documentPointerUpDetacher = EventHelper.on({\n                pointerup : {\n                    element : document,\n                    handler : 'onDocumentMouseUp'\n                },\n                keydown : {\n                    element : document,\n                    handler : ({ key }) => {\n                        if (key === 'Escape') {\n                            me.abort();\n                        }\n                    }\n                },\n                thisObj : me\n            });\n        }\n    }\n\n    onElementTouchMove(event) {\n        super.onElementTouchMove?.(event);\n\n        if (this.connector) {\n            // Prevent touch scrolling while dragging a connector\n            event.preventDefault();\n        }\n    }\n\n    /**\n     * Update connector line showing dependency between source and target when mouse moves. Also check if mouse is over\n     * a valid target terminal\n     * @private\n     */\n    onMouseMove(event) {\n        const\n            me                            = this,\n            { view, creationData : data } = me,\n            viewBounds                    = Rectangle.from(view.element, document.body),\n            deltaX                        = (event.pageX - viewBounds.x + view.scrollLeft) - data.startX,\n            deltaY                        = (event.pageY - viewBounds.y + view.scrollTop) - data.startY,\n            length                        = Math.round(Math.sqrt(deltaX * deltaX + deltaY * deltaY)) - 3,\n            angle                         = Math.atan2(deltaY, deltaX);\n\n        let { connector } = me;\n\n        if (!connector) {\n            if (me.onRequestDragCreate(event) === false) {\n                return;\n            }\n            connector = me.connector;\n        }\n\n        connector.style.width     = `${length}px`;\n        connector.style.transform = `rotate(${angle}rad)`;\n\n        me.lastMouseMoveEvent = event;\n    }\n\n    onRequestDragCreate(event) {\n        const\n            me                            = this,\n            { view, creationData : data } = me;\n\n        /**\n         * Fired on the owning Scheduler/Gantt before a dependency creation drag operation starts. Return `false` to\n         * prevent it\n         * @event beforeDependencyCreateDrag\n         * @on-owner\n         * @param {Scheduler.model.TimeSpan} source The source task\n         */\n        if (view.trigger('beforeDependencyCreateDrag', { data, source : data.source }) === false) {\n            me.abort();\n            return false;\n        }\n\n        view.element.classList.add('b-creating-dependency');\n\n        me.createConnector(data.startPoint.x, data.startPoint.y);\n\n        /**\n         * Fired on the owning Scheduler/Gantt when a dependency creation drag operation starts\n         * @event dependencyCreateDragStart\n         * @on-owner\n         * @param {Scheduler.model.TimeSpan} source The source task\n         */\n        view.trigger('dependencyCreateDragStart', { data, source : data.source  });\n\n        if (me.showCreationTooltip) {\n            const tip = me.creationTooltip || (me.creationTooltip = me.createDragTooltip());\n\n            me.creationData.tooltip = tip;\n\n            tip.disabled = false;\n            tip.show();\n\n            tip.onMouseMove(event);\n        }\n\n        view.scrollManager.startMonitoring({\n            scrollables : [\n                {\n                    element   : view.timeAxisSubGrid.scrollable.element,\n                    direction : 'horizontal'\n                },\n                {\n                    element   : view.scrollable.element,\n                    direction : 'vertical'\n                }\n            ],\n            callback : () => me.lastMouseMoveEvent && me.onMouseMove(me.lastMouseMoveEvent)\n        });\n    }\n\n    onOverTargetEventBar(event) {\n        const\n            me                                                = this,\n            { view, creationData: data, allowDropOnEventBar } = me,\n            { target }                                        = event;\n\n        let overEventRecord = view.resolveTimeSpanRecord(target).$original;\n\n        // use main event if a segment resolved\n        if (overEventRecord?.isEventSegment) {\n            overEventRecord = overEventRecord.event;\n        }\n\n        if (Objects.isPromise(data.valid) || (!allowDropOnEventBar && !target.classList.contains(me.terminalCls))) {\n            return;\n        }\n\n        if (overEventRecord !== data.source) {\n            me.onOverNewTargetWhileCreating(target, overEventRecord, event);\n        }\n    }\n\n    async onOverNewTargetWhileCreating(targetElement, overEventRecord, event) {\n        const\n            me                                                            = this,\n            { view, creationData : data, allowDropOnEventBar, connector } = me;\n\n        if (Objects.isPromise(data.valid)) {\n            return;\n        }\n\n        // stop target updating if dependency finalizing in progress\n        if (data.finalizing) {\n            return;\n        }\n\n        // Connector might not exist at this point because `pointerout` on the terminal might fire before `pointermove`\n        // on the time axis subgrid. This is difficult to reproduce, so shouldn't be triggered often.\n        // https://github.com/bryntum/support/issues/3116#issuecomment-894256799\n        if (!connector) {\n            return;\n        }\n\n        connector.classList.remove('b-valid', 'b-invalid');\n        data.timeSpanElement && DomHelper.removeClsGlobally(data.timeSpanElement, 'b-sch-terminal-active');\n\n        if (!overEventRecord || overEventRecord === data.source || (!allowDropOnEventBar && !targetElement.classList.contains(me.terminalCls))) {\n            data.target = data.toSide = null;\n            data.valid = false;\n            connector.classList.add('b-invalid');\n        }\n        else {\n            const\n                target     = data.target = overEventRecord,\n                { source } = data;\n\n            let toSide  = targetElement.dataset.side;\n\n            // If we allow dropping anywhere on a task, resolve target side based on the default type of the\n            // dependency model used\n            if (allowDropOnEventBar && !targetElement.classList.contains(me.terminalCls)) {\n                toSide = me.getTargetSideFromType(me.dependencyStore.modelClass.fieldMap.type.defaultValue || DependencyBaseModel.Type.EndToStart);\n            }\n\n            if (view.resolveResourceRecord) {\n                data.targetResource = view.resolveResourceRecord(event);\n            }\n\n            let dependencyType;\n\n            data.toSide = toSide;\n\n            const\n                fromSide       = data.fromSide,\n                updateValidity = valid => {\n                    if (!me.isDestroyed) {\n                        data.valid = valid;\n                        targetElement.classList.add(valid ? 'b-valid' : 'b-invalid');\n                        connector.classList.add(valid ? 'b-valid' : 'b-invalid');\n                        /**\n                         * Fired on the owning Scheduler/Gantt when asynchronous dependency validation completes\n                         * @event dependencyValidationComplete\n                         * @on-owner\n                         * @param {Scheduler.model.TimeSpan} source The source task\n                         * @param {Scheduler.model.TimeSpan} target The target task\n                         * @param {Number} dependencyType The dependency type, see {@link Scheduler.model.DependencyBaseModel#property-Type-static}\n                         */\n                        view.trigger('dependencyValidationComplete', {\n                            data,\n                            source,\n                            target,\n                            dependencyType\n                        });\n                    }\n                };\n\n            // NOTE: Top/Bottom sides are not taken into account due to\n            //       scheduler doesn't check for type value anyway, whereas\n            //       gantt will reject any other dependency types undefined in\n            //       DependencyBaseModel.Type enumeration.\n            switch (true) {\n                case fromSide === 'start' && toSide === 'start':\n                    dependencyType = DependencyBaseModel.Type.StartToStart;\n                    break;\n                case fromSide === 'start' && toSide === 'end':\n                    dependencyType = DependencyBaseModel.Type.StartToEnd;\n                    break;\n                case fromSide === 'end' && toSide === 'start':\n                    dependencyType = DependencyBaseModel.Type.EndToStart;\n                    break;\n                case fromSide === 'end' && toSide === 'end':\n                    dependencyType = DependencyBaseModel.Type.EndToEnd;\n                    break;\n            }\n\n            /**\n             * Fired on the owning Scheduler/Gantt when asynchronous dependency validation starts\n             * @event dependencyValidationStart\n             * @on-owner\n             * @param {Scheduler.model.TimeSpan} source The source task\n             * @param {Scheduler.model.TimeSpan} target The target task\n             * @param {Number} dependencyType The dependency type, see {@link Scheduler.model.DependencyBaseModel#property-Type-static}\n             */\n            view.trigger('dependencyValidationStart', {\n                data,\n                source,\n                target,\n                dependencyType\n            });\n\n            let valid = data.valid = me.dependencyStore.isValidDependency(source, target, dependencyType);\n\n            // Promise is returned when using the engine\n            if (Objects.isPromise(valid)) {\n                valid = await valid;\n                updateValidity(valid);\n            }\n            else {\n                updateValidity(valid);\n            }\n\n            const validityCls = valid ? 'b-valid' : 'b-invalid';\n            connector.classList.add(validityCls);\n            data.timeSpanElement?.querySelector(`.b-sch-terminal[data-side=${toSide}]`)?.classList.add('b-sch-terminal-active', validityCls);\n        }\n\n        me.updateCreationTooltip();\n    }\n\n    /**\n     * Create a new dependency if mouse release over valid terminal. Hides connector\n     * @private\n     */\n    async onMouseUp() {\n        const\n            me   = this,\n            data = me.creationData;\n\n        data.finalizing = true;\n        me.pointerUpMoveDetacher?.();\n\n        if (data.valid) {\n            /**\n             * Fired on the owning Scheduler/Gantt when a dependency drag creation operation is about to finalize\n             *\n             * @event beforeDependencyCreateFinalize\n             * @on-owner\n             * @preventable\n             * @async\n             * @param {Scheduler.model.TimeSpan} source The source task\n             * @param {Scheduler.model.TimeSpan} target The target task\n             * @param {'start'|'end'|'top'|'bottom'} fromSide The from side (start / end / top / bottom)\n             * @param {'start'|'end'|'top'|'bottom'} toSide The to side (start / end / top / bottom)\n             */\n            const result = await me.view.trigger('beforeDependencyCreateFinalize', data);\n\n            if (result === false) {\n                data.valid = false;\n            }\n            // Await any async validation logic before continuing\n            else if (Objects.isPromise(data.valid)) {\n                data.valid = await data.valid;\n            }\n\n            if (data.valid) {\n                let dependency = me.createDependency(data);\n\n                if (dependency !== null) {\n                    if (Objects.isPromise(dependency)) {\n                        dependency = await dependency;\n                    }\n\n                    data.dependency = dependency;\n\n                    /**\n                     * Fired on the owning Scheduler/Gantt when a dependency drag creation operation succeeds\n                     * @event dependencyCreateDrop\n                     * @on-owner\n                     * @param {Scheduler.model.TimeSpan} source The source task\n                     * @param {Scheduler.model.TimeSpan} target The target task\n                     * @param {Scheduler.model.DependencyBaseModel} dependency The created dependency\n                     */\n                    me.view.trigger('dependencyCreateDrop', { data, source : data.source, target : data.target, dependency });\n                    me.doAfterDependencyDrop(data);\n                }\n            }\n            else {\n                me.doAfterDependencyDrop(data);\n            }\n        }\n        else {\n            data.valid = false;\n            me.doAfterDependencyDrop(data);\n        }\n\n        me.abort();\n    }\n\n    doAfterDependencyDrop(data) {\n        /**\n         * Fired on the owning Scheduler/Gantt after a dependency drag creation operation finished, no matter to outcome\n         * @event afterDependencyCreateDrop\n         * @on-owner\n         * @param {Scheduler.model.TimeSpan} source The source task\n         * @param {Scheduler.model.TimeSpan} target The target task\n         * @param {Scheduler.model.DependencyBaseModel} dependency The created dependency\n         */\n        this.view.trigger('afterDependencyCreateDrop', {\n            data,\n            ...data\n        });\n    }\n\n    onDocumentMouseUp({ target }) {\n        if (!this.view.timeAxisSubGridElement.contains(target)) {\n            this.abort();\n        }\n    }\n\n    /**\n     * Aborts dependency creation, removes proxy and cleans up listeners\n     */\n    abort() {\n        const\n            me                     = this,\n            { view, creationData } = me;\n\n        // Remove terminals from source and target events.\n        if (creationData) {\n            const { source, sourceResource, target, targetResource } = creationData;\n\n            if (source) {\n                const el = view.getElementFromEventRecord(source, sourceResource);\n                if (el) {\n                    me.hideTerminals(el);\n                }\n            }\n            if (target) {\n                const el = view.getElementFromEventRecord(target, targetResource);\n                if (el) {\n                    me.hideTerminals(el);\n                }\n            }\n        }\n\n        if (me.creationTooltip) {\n            me.creationTooltip.disabled = true;\n        }\n\n        me.creationData = me.lastMouseMoveEvent = null;\n\n        me.pointerUpMoveDetacher?.();\n\n        me.documentPointerUpDetacher?.();\n\n        me.removeConnector();\n    }\n\n    //endregion\n\n    //region Connector\n\n    /**\n     * Creates a connector line that visualizes dependency source & target\n     * @private\n     */\n    createConnector(x, y) {\n        const\n            me       = this,\n            { view } = me;\n\n        me.clearTimeout(me.removeConnectorTimeout);\n        me.connector = DomHelper.createElement({\n            parent    : view.timeAxisSubGridElement,\n            className : `${me.baseCls}-connector`,\n            style     : `left:${x}px;top:${y}px`\n        });\n\n        view.element.classList.add('b-creating-dependency');\n    }\n\n    createDragTooltip() {\n        const\n            me       = this,\n            { view } = me;\n\n        return me.creationTooltip = Tooltip.new({\n            id             : `${view.id}-dependency-drag-tip`,\n            cls            : 'b-sch-dependency-creation-tooltip',\n            loadingMsg     : '',\n            anchorToTarget : false,\n            // Keep tip visible until drag drop operation is finalized\n            forElement     : view.timeAxisSubGridElement,\n            trackMouse     : true,\n            // Do not constrain at all, want it to be able to go outside of the viewport to not get in the way\n            constrainTo    : null,\n\n            header : {\n                dock : 'right'\n            },\n\n            internalListeners : {\n                // Show initial content immediately\n                beforeShow : 'updateCreationTooltip',\n                thisObj    : me\n            }\n        }, me.creationTooltip);\n    }\n\n    /**\n     * Remove connector\n     * @private\n     */\n    removeConnector() {\n        const\n            me                  = this,\n            { connector, view } = me;\n\n        if (connector) {\n            connector.classList.add('b-removing');\n            connector.style.width = '0';\n            me.removeConnectorTimeout = me.setTimeout(() => {\n                connector.remove();\n                me.connector = null;\n            }, 200);\n        }\n\n        view.element.classList.remove('b-creating-dependency');\n        me.creationTooltip && me.creationTooltip.hide();\n\n        view.scrollManager.stopMonitoring();\n    }\n\n    //endregion\n\n    //region Terminals\n\n    /**\n     * Show terminals for specified event at sides defined in #terminalSides.\n     * @param {Scheduler.model.TimeSpan} timeSpanRecord Event/task to show terminals for\n     * @param {HTMLElement} element Event/task element\n     */\n    showTerminals(timeSpanRecord, element) {\n        const me = this;\n\n        // Record not part of project is a transient record in a display store, not meant to be manipulated\n        if (!me.isCreateAllowed || !timeSpanRecord.project) {\n            return;\n        }\n\n        const\n            cls                 = me.terminalCls,\n            terminalsVisibleCls = `${cls}s-visible`;\n\n        // We operate on the event bar, not the wrap\n        element = DomHelper.down(element, me.view.eventInnerSelector);\n\n        // bail out if terminals already shown or if view is readonly\n        // do not draw new terminals if we are resizing event\n        if (!element.classList.contains(terminalsVisibleCls) && !me.view.element.classList.contains('b-resizing-event') && !me.view.readOnly) {\n            /**\n             * Fired on the owning Scheduler/Gantt before showing dependency terminals on a task or event. Return `false` to\n             * prevent it\n             * @event beforeShowTerminals\n             * @on-owner\n             * @param {Scheduler.model.TimeSpan} source The hovered task\n             */\n            if (me.client.trigger('beforeShowTerminals', { source : timeSpanRecord }) === false) {\n                return;\n            }\n\n            // create terminals for desired sides\n            me.terminalSides.forEach(side => {\n                // Allow code to use left for the start side and right for the end side\n                side = me.fixSide(side);\n\n                const terminal = DomHelper.createElement({\n                    parent    : element,\n                    className : `${cls} ${cls}-${side}`,\n                    dataset   : {\n                        side,\n                        feature : true\n                    }\n                });\n\n                terminal.detacher = EventHelper.on({\n                    element     : terminal,\n                    mouseover   : 'onTerminalMouseOver',\n                    mouseout    : 'onTerminalMouseOut',\n                    // Needs to be pointerdown to match DragHelper, otherwise will be preventing wrong event\n                    pointerdown : {\n                        handler : 'onTerminalPointerDown',\n                        capture : true\n                    },\n                    thisObj : me\n                });\n            });\n\n            element.classList.add(terminalsVisibleCls);\n            timeSpanRecord.internalCls.add(terminalsVisibleCls);\n\n            me.showingTerminalsFor = element;\n        }\n    }\n\n    fixSide(side) {\n        if (side === 'left') {\n            return 'start';\n        }\n        if (side === 'right') {\n            return 'end';\n        }\n        return side;\n    }\n\n    /**\n     * Hide terminals for specified event\n     * @param {HTMLElement} eventElement Event element\n     */\n    hideTerminals(eventElement) {\n        // remove all terminals\n        const\n            me                  = this,\n            eventParams         = me.client.getTimeSpanMouseEventParams(eventElement),\n            timeSpanRecord      = eventParams?.[`${me.eventName}Record`],\n            terminalsVisibleCls = `${me.terminalCls}s-visible`;\n\n        DomHelper.forEachSelector(eventElement, `.${me.terminalCls}`, terminal => {\n            terminal.detacher && terminal.detacher();\n            terminal.remove();\n        });\n\n        DomHelper.down(eventElement, me.view.eventInnerSelector).classList.remove(terminalsVisibleCls);\n        timeSpanRecord.internalCls.remove(terminalsVisibleCls);\n\n        me.showingTerminalsFor = null;\n    }\n\n    //endregion\n\n    //region Dependency creation\n\n    /**\n     * Create a new dependency from source terminal to target terminal\n     * @internal\n     */\n    createDependency(data) {\n        const\n            { source, target, fromSide, toSide } = data,\n            type                                 = (fromSide === 'start' ? 0 : 2) + (toSide === 'end' ? 1 : 0);\n\n        const newDependency = this.dependencyStore.add({\n            from : source.id,\n            to   : target.id,\n            type,\n            fromSide,\n            toSide\n        });\n\n        return newDependency !== null ? newDependency[0] : null;\n    }\n\n    getTargetSideFromType(type) {\n        if (type === DependencyBaseModel.Type.StartToStart || type === DependencyBaseModel.Type.EndToStart) {\n            return 'start';\n        }\n\n        return 'end';\n    }\n\n    //endregion\n\n    //region Tooltip\n\n    /**\n     * Update dependency creation tooltip\n     * @private\n     */\n    updateCreationTooltip() {\n        const\n            me            = this,\n            data          = me.creationData,\n            { valid }     = data,\n            tip           = me.creationTooltip,\n            { classList } = tip.element;\n\n        // Promise, when using engine\n        if (Objects.isPromise(valid)) {\n            classList.remove('b-invalid');\n            classList.add('b-checking');\n\n            return new Promise(resolve => valid.then(valid => {\n                data.valid = valid;\n\n                if (!tip.isDestroyed) {\n                    resolve(me.updateCreationTooltip());\n                }\n            }));\n        }\n\n        tip.html = me.creationTooltipTemplate(data);\n    }\n\n    creationTooltipTemplate(data) {\n        const\n            me                 = this,\n            { tooltip, valid } = data,\n            { classList }      = tooltip.element;\n\n        Object.assign(data, {\n            fromText : StringHelper.encodeHtml(data.source.name),\n            toText   : StringHelper.encodeHtml(data.target?.name ?? ''),\n            fromSide : data.fromSide,\n            toSide   : data.toSide || ''\n        });\n\n        let tipTitleIconClsSuffix,\n            tipTitleText;\n\n        classList.toggle('b-invalid', !valid);\n        classList.remove('b-checking');\n\n        // Valid\n        if (valid === true) {\n            tipTitleIconClsSuffix = 'valid';\n            tipTitleText          = me.L('L{Dependencies.valid}');\n        }\n        // Invalid\n        else {\n            tipTitleIconClsSuffix = 'invalid';\n            tipTitleText          = me.L('L{Dependencies.invalid}');\n        }\n\n        tooltip.title = `<i class=\"b-icon b-icon-${tipTitleIconClsSuffix}\"></i>${tipTitleText}`;\n\n        return {\n            children : [{\n                className : 'b-sch-dependency-tooltip',\n                children  : [\n                    { dataset : { ref : 'fromLabel' }, tag : 'label', text : me.L('L{Dependencies.from}') },\n                    { dataset : { ref : 'fromText' }, text : data.fromText },\n                    { dataset : { ref : 'fromBox' }, className : `b-sch-box b-${data.fromSide}` },\n                    { dataset : { ref : 'toLabel' }, tag : 'label', text : me.L('L{Dependencies.to}') },\n                    { dataset : { ref : 'toText' }, text : data.toText },\n                    { dataset : { ref : 'toBox' }, className : `b-sch-box b-${data.toSide}` }\n                ]\n            }]\n        };\n    }\n\n    //endregion\n\n    doDisable(disable) {\n        if (!this.isConfiguring) {\n            this.updateCreateListeners();\n        }\n\n        super.doDisable(disable);\n    }\n};\n","// <remove-on-release>\n// TODO: Consider basing on visible row count\n// </remove-on-release>\nconst ROWS_PER_CELL = 25;\n\n// Mixin that handles the dependency grid cache\n//\n// Grid cache explainer\n// ────────────────────\n// The purpose of the grid cache is to reduce the amount of dependencies we have to iterate over when drawing by\n// partitioning them into a virtual grid. With for example 10k deps we would have to iterate over all 10k on\n// each draw since any of them might be intersecting the view.\n//\n// The cells are horizontally based on ticks (50 per cell) and vertically on rows (also 50 per cell. Each cell\n// lists which dependencies intersect it. When drawing we only have to iterate over the dependencies for the\n// cells that intersect the viewport.\n//\n// The grid cache is populated when dependencies are drawn. Any change to deps, resources, events or assignments\n// clears the cache.\n//\n// The dependency drawn below will be included in the set that is considered for drawing if tickCell 0 or\n// tickCell 1 and rowCell 0 intersects the current view (it is thus represented twice in the grid cache)\n//\n//       tickCell 0           tickCell 1\n//       tick 0-49            tick 50-99\n//    ┌────────────────────┬─────────────────────┐\n// r r│0,0                 │1,0                  │\n// o o│     │              │                     │\n// w w│     │     !!!!!!!!!│!!!!!!!!!!!          │\n// C  │     │     ! View   │          !          │\n// e 0│     │     ! port   │          !          │\n// l -│     │     !        │          !          │\n// l 4│     └─────!────────┼──────────!────►     │\n// 0 9│           !        │          !          │\n//    ├────────────────────┼─────────────────────┤\n// r r│0,1        !        │1,1       !          │\n// o o│           !        │          !          │\n// w w│           !!!!!!!!!│!!!!!!!!!!!          │\n// C  │                    │                     │\n// e 5│                    │                     │\n// l 0│                    │                     │\n// l -│                    │                     │\n// 1 9│                    │                     │\n//   9└────────────────────┴─────────────────────┘\n//               uoᴉʇɐɹʇsnꞁꞁᴉ əɥɔɐɔ pᴉɹ⅁\nexport default Target => class DependencyGridCache extends Target {\n    static $name = 'DependencyGridCache';\n\n    gridCache = null;\n\n    // Dependencies that might intersect the current viewport and thus should be considered for drawing\n    getDependenciesToConsider(startMS, endMS, startIndex, endIndex) {\n        const\n            me            = this,\n            { gridCache } = me,\n            { timeAxis }  = me.client;\n\n        if (gridCache) {\n            const\n                dependencies = new Set(),\n                fromMSCell   = Math.floor((startMS - timeAxis.startMS) / me.MS_PER_CELL),\n                toMSCell     = Math.floor((endMS - timeAxis.startMS) / me.MS_PER_CELL),\n                fromRowCell  = Math.floor(startIndex / ROWS_PER_CELL),\n                toRowCell    = Math.floor(endIndex / ROWS_PER_CELL);\n\n            for (let i = fromMSCell; i <= toMSCell; i++) {\n                const msCell = gridCache[i];\n                if (msCell) {\n                    for (let j = fromRowCell; j <= toRowCell; j++) {\n                        const intersectingDependencies = msCell[j];\n                        if (intersectingDependencies) {\n                            for (let i = 0; i < intersectingDependencies.length; i++) {\n                                dependencies.add(intersectingDependencies[i]);\n                            }\n                        }\n                    }\n                }\n            }\n\n            return dependencies;\n        }\n    }\n\n    // A (single) dependency was drawn, we might want to store info about it in the grid cache\n    afterDrawDependency(dependency, fromIndex, toIndex, fromDateMS, toDateMS) {\n        const me = this;\n\n        if (me.constructGridCache) {\n            const\n                { MS_PER_CELL } = me,\n                {\n                    startMS : timeAxisStartMS,\n                    endMS   : timeAxisEndMS\n                }               = me.client.timeAxis,\n                timeAxisCells   = Math.ceil((timeAxisEndMS - timeAxisStartMS) / MS_PER_CELL),\n                fromMSCell      = Math.floor((fromDateMS - timeAxisStartMS) / MS_PER_CELL),\n                toMSCell        = Math.floor((toDateMS - timeAxisStartMS) / MS_PER_CELL),\n                fromRowCell     = Math.floor(fromIndex / ROWS_PER_CELL),\n                toRowCell       = Math.floor(toIndex / ROWS_PER_CELL),\n                firstMSCell     = Math.min(fromMSCell, toMSCell),\n                lastMSCell      = Math.max(fromMSCell, toMSCell),\n                firstRowCell    = Math.min(fromRowCell, toRowCell),\n                lastRowCell     = Math.max(fromRowCell, toRowCell);\n\n            // Ignore dependencies fully outside of the time axis\n            if ((firstMSCell < 0 && lastMSCell < 0) || (firstMSCell > timeAxisCells && lastMSCell > timeAxisCells)) {\n                return;\n            }\n\n            // Cache from time axis start, to time axis end (\"cropping\" deps starting or ending outside)\n            const\n                startMSCell = Math.max(firstMSCell, 0),\n                endMSCell   = Math.min(lastMSCell, timeAxisCells);\n\n            for (let i = startMSCell; i <= endMSCell; i++) {\n                const msCell = me.gridCache[i] ?? (me.gridCache[i] = {});\n                for (let j = firstRowCell; j <= lastRowCell; j++) {\n                    const rowCell = msCell[j] ?? (msCell[j] = []);\n                    rowCell.push(dependency);\n                }\n            }\n        }\n    }\n\n    // All dependencies are about to be drawn, check if we need to build the grid cache\n    beforeDraw() {\n        const me = this;\n\n        if (!me.gridCache) {\n            const { visibleDateRange } = me.client;\n\n            me.constructGridCache = true;\n\n            // Adjust number of ms used in grid cache to match viewport\n            me.MS_PER_CELL = Math.max(visibleDateRange.endMS - visibleDateRange.startMS, 1000);\n\n            // Start with empty cache, will be populated as deps are drawn\n            me.gridCache = {};\n        }\n    }\n\n    // All dependencies are drawn, we no longer need to rebuild the cache\n    afterDraw() {\n        this.constructGridCache = false;\n    }\n\n    reset() {\n        this.gridCache = null;\n    }\n};\n","import Base from '../../Core/Base.js';\nimport ArrayHelper from '../../Core/helper/ArrayHelper.js';\nimport WalkHelper from '../../Core/helper/WalkHelper.js';\n\n// Start adjusting if there is system scaling > 130%\nconst\n    THRESHOLD      = Math.min(1 / globalThis.devicePixelRatio, 0.75),\n    BOX_PROPERTIES = ['start', 'end', 'top', 'bottom'],\n    equalEnough    = (a, b) => Math.abs(a - b) < 0.1,\n    sideToSide     = {\n        l : 'left',\n        r : 'right',\n        t : 'top',\n        b : 'bottom'\n    };\n\n/**\n * @module Scheduler/util/RectangularPathFinder\n */\n\n/**\n * Class which finds rectangular path, i.e. path with 90 degrees turns, between two boxes.\n * @private\n */\nexport default class RectangularPathFinder extends Base {\n    static get configurable() {\n        return {\n            /**\n             * Default start connection side: 'left', 'right', 'top', 'bottom'\n             * @config {'top'|'bottom'|'left'|'right'}\n             * @default\n             */\n            startSide : 'right',\n\n            // /**\n            //  * Default start arrow size in pixels\n            //  * @config {Number}\n            //  * @default\n            //  */\n            // startArrowSize : 0,\n\n            /**\n             * Default start arrow staff size in pixels\n             * @config {Number}\n             * @default\n             */\n            startArrowMargin : 12,\n\n            /**\n             * Default starting connection point shift from box's arrow pointing side middle point\n             * @config {Number}\n             * @default\n             */\n            startShift : 0,\n\n            /**\n             * Default end arrow pointing direction, possible values are: 'left', 'right', 'top', 'bottom'\n             * @config {'top'|'bottom'|'left'|'right'}\n             * @default\n             */\n            endSide : 'left',\n\n            // /**\n            //  * Default end arrow size in pixels\n            //  * @config {Number}\n            //  * @default\n            //  */\n            // endArrowSize : 0,\n\n            /**\n             * Default end arrow staff size in pixels\n             * @config {Number}\n             * @default\n             */\n            endArrowMargin : 12,\n\n            /**\n             * Default ending connection point shift from box's arrow pointing side middle point\n             * @config {Number}\n             * @default\n             */\n            endShift : 0,\n\n            /**\n             * Start / End box vertical margin, the amount of pixels from top and bottom line of a box where drawing\n             * is prohibited\n             * @config {Number}\n             * @default\n             */\n            verticalMargin : 2,\n\n            /**\n             * Start / End box horizontal margin, the amount of pixels from left and right line of a box where drawing\n             * @config {Number}\n             * @default\n             */\n            horizontalMargin : 5,\n\n            /**\n             * Other rectangular areas (obstacles) to search path through\n             * @config {Object[]}\n             * @default\n             */\n            otherBoxes : null,\n\n            /**\n             * The owning Scheduler. Mandatory so that it can determin RTL state.\n             * @config {Scheduler.view.Scheduler}\n             * @private\n             */\n            client : {}\n        };\n    }\n\n    /**\n     * Returns list of horizontal and vertical segments connecting two boxes\n     * <pre>\n     *    |    | |  |    |       |\n     *  --+----+----+----*-------*---\n     *  --+=>Start  +----*-------*--\n     *  --+----+----+----*-------*--\n     *    |    | |  |    |       |\n     *    |    | |  |    |       |\n     *  --*----*-+-------+-------+--\n     *  --*----*-+         End <=+--\n     *  --*----*-+-------+-------+--\n     *    |    | |  |    |       |\n     * </pre>\n     * Path goes by lines (-=) and turns at intersections (+), boxes depicted are adjusted by horizontal/vertical\n     * margin and arrow margin, original boxes are smaller (path can't go at original box borders). Algorithm finds\n     * the shortest path with minimum amount of turns. In short it's mix of \"Lee\" and \"Dijkstra pathfinding\"\n     * with turns amount taken into account for distance calculation.\n     *\n     * The algorithm is not very performant though, it's O(N^2), where N is amount of\n     * points in the grid, but since the maximum amount of points in the grid might be up to 34 (not 36 since\n     * two box middle points are not permitted) that might be ok for now.\n     *\n     * @param {Object} lineDef An object containing any of the class configuration option overrides as well\n     *                         as `startBox`, `endBox`, `startHorizontalMargin`, `startVerticalMargin`,\n     *                         `endHorizontalMargin`, `endVerticalMargin` properties\n     * @param {Object} lineDef.startBox An object containing `start`, `end`, `top`, `bottom` properties\n     * @param {Object} lineDef.endBox   An object containing `start`, `end`, `top`, `bottom` properties\n     * @param {Number} lineDef.startHorizontalMargin Horizontal margin override for start box\n     * @param {Number} lineDef.startVerticalMargin   Vertical margin override for start box\n     * @param {Number} lineDef.endHorizontalMargin   Horizontal margin override for end box\n     * @param {Number} lineDef.endVerticalMargin     Vertical margin override for end box\n     *\n     *\n     * @returns {Object[]|Boolean} Array of line segments or false if path cannot be found\n     * @returns {Number} return.x1\n     * @returns {Number} return.y1\n     * @returns {Number} return.x2\n     * @returns {Number} return.y2\n     */\n    //\n    //@ignore\n    //@privateparam {Function[]|Function} noPathFallbackFn\n    //     A function or array of functions which will be tried in case a path can't be found\n    //     Each function will be given a line definition it might try to adjust somehow and return.\n    //     The new line definition returned will be tried to find a path.\n    //     If a function returns false, then next function will be called if any.\n    //\n    findPath(lineDef, noPathFallbackFn) {\n        const\n            me              = this,\n            originalLineDef = lineDef;\n\n        let lineDefFull,\n            startBox,\n            endBox,\n            startShift,\n            endShift,\n            startSide,\n            endSide,\n            // startArrowSize,\n            // endArrowSize,\n            startArrowMargin,\n            endArrowMargin,\n            horizontalMargin,\n            verticalMargin,\n            startHorizontalMargin,\n            startVerticalMargin,\n            endHorizontalMargin,\n            endVerticalMargin,\n            otherHorizontalMargin,\n            otherVerticalMargin,\n            otherBoxes,\n\n            connStartPoint, connEndPoint,\n            pathStartPoint, pathEndPoint,\n            gridStartPoint, gridEndPoint,\n            startGridBox, endGridBox,\n            grid, path, tryNum;\n\n        noPathFallbackFn = ArrayHelper.asArray(noPathFallbackFn);\n\n        for (tryNum = 0; lineDef && !path;) {\n            lineDefFull = Object.assign(me.config, lineDef);\n\n            startBox              = lineDefFull.startBox;\n            endBox                = lineDefFull.endBox;\n            startShift            = lineDefFull.startShift;\n            endShift              = lineDefFull.endShift;\n            startSide             = lineDefFull.startSide;\n            endSide               = lineDefFull.endSide;\n            // startArrowSize        = lineDefFull.startArrowSize;\n            // endArrowSize          = lineDefFull.endArrowSize;\n            startArrowMargin      = lineDefFull.startArrowMargin;\n            endArrowMargin        = lineDefFull.endArrowMargin;\n            horizontalMargin      = lineDefFull.horizontalMargin;\n            verticalMargin        = lineDefFull.verticalMargin;\n            startHorizontalMargin = lineDefFull.hasOwnProperty('startHorizontalMargin') ? lineDefFull.startHorizontalMargin : horizontalMargin;\n            startVerticalMargin   = lineDefFull.hasOwnProperty('startVerticalMargin') ? lineDefFull.startVerticalMargin : verticalMargin;\n            endHorizontalMargin   = lineDefFull.hasOwnProperty('endHorizontalMargin') ? lineDefFull.endHorizontalMargin : horizontalMargin;\n            endVerticalMargin     = lineDefFull.hasOwnProperty('endVerticalMargin') ? lineDefFull.endVerticalMargin : verticalMargin;\n            otherHorizontalMargin = lineDefFull.hasOwnProperty('otherHorizontalMargin') ? lineDefFull.otherHorizontalMargin : horizontalMargin;\n            otherVerticalMargin   = lineDefFull.hasOwnProperty('otherVerticalMargin') ? lineDefFull.otherVerticalMargin : verticalMargin;\n            otherBoxes            = lineDefFull.otherBoxes;\n\n            startSide = me.normalizeSide(startSide);\n            endSide   = me.normalizeSide(endSide);\n\n            connStartPoint = me.getConnectionCoordinatesFromBoxSideShift(startBox, startSide, startShift);\n            connEndPoint   = me.getConnectionCoordinatesFromBoxSideShift(endBox, endSide, endShift);\n\n            startGridBox   = me.calcGridBaseBoxFromBoxAndDrawParams(startBox, startSide/*, startArrowSize*/, startArrowMargin, startHorizontalMargin, startVerticalMargin);\n            endGridBox     = me.calcGridBaseBoxFromBoxAndDrawParams(endBox, endSide/*, endArrowSize*/, endArrowMargin, endHorizontalMargin, endVerticalMargin);\n\n            // Iterate over points and merge those which are too close to each other (e.g. if difference is less than one\n            // over devicePixelRatio we won't even see this effect in GUI)\n            // https://github.com/bryntum/support/issues/3923\n            BOX_PROPERTIES.forEach(property => {\n                // We're talking subpixel precision here, so it doesn't really matter which value we choose\n                if (Math.abs(startGridBox[property] - endGridBox[property]) <= THRESHOLD) {\n                    endGridBox[property] = startGridBox[property];\n                }\n            });\n\n            if (me.shouldLookForPath(startBox, endBox, startGridBox, endGridBox)) {\n                otherBoxes     = otherBoxes?.map(box =>\n                    me.calcGridBaseBoxFromBoxAndDrawParams(box, false/*, 0*/, 0, otherHorizontalMargin, otherVerticalMargin)\n                );\n                pathStartPoint = me.getConnectionCoordinatesFromBoxSideShift(startGridBox, startSide, startShift);\n                pathEndPoint   = me.getConnectionCoordinatesFromBoxSideShift(endGridBox, endSide, endShift);\n                grid           = me.buildPathGrid(startGridBox, endGridBox, pathStartPoint, pathEndPoint, startSide, endSide, otherBoxes);\n                gridStartPoint = me.convertDecartPointToGridPoint(grid, pathStartPoint);\n                gridEndPoint   = me.convertDecartPointToGridPoint(grid, pathEndPoint);\n                path           = me.findPathOnGrid(grid, gridStartPoint, gridEndPoint, startSide, endSide);\n            }\n\n            //<debug>\n            // drawPathGrid(grid, lineDef.startBox, lineDef.endBox, startGridBox, endGridBox, otherBoxes, 4);\n            //</debug>\n\n            // Loop if\n            // - path is still not found\n            // - have no next line definition (which should be obtained from call to one of the functions from noPathFallbackFn array\n            // - have noPathFallBackFn array\n            // - current try number is less then noPathFallBackFn array length\n            for (lineDef = false; !path && !lineDef && noPathFallbackFn && tryNum < noPathFallbackFn.length; tryNum++) {\n                lineDef = (noPathFallbackFn[tryNum])(lineDefFull, originalLineDef);\n            }\n        }\n\n        if (path) {\n            path = me.prependPathWithArrowStaffSegment(path, connStartPoint/*, startArrowSize*/, startSide);\n            path = me.appendPathWithArrowStaffSegment(path, connEndPoint/*, endArrowSize*/, endSide);\n            path = me.optimizePath(path);\n        }\n\n        return path;\n    }\n\n    // Compares boxes relative position in the given direction.\n    //  0 - 1 is to the left/top of 2\n    //  1 - 1 overlaps with left/top edge of 2\n    //  2 - 1 is inside 2\n    // -2 - 2 is inside 1\n    //  3 - 1 overlaps with right/bottom edge of 2\n    //  4 - 1 is to the right/bottom of 2\n    static calculateRelativePosition(box1, box2, vertical = false) {\n        const\n            startProp = vertical ? 'top' : 'start',\n            endProp   = vertical ? 'bottom' : 'end';\n\n        let result;\n\n        if (box1[endProp] < box2[startProp]) {\n            result = 0;\n        }\n        else if (box1[endProp] <= box2[endProp] && box1[endProp] >= box2[startProp] && box1[startProp] < box2[startProp]) {\n            result = 1;\n        }\n        else if (box1[startProp] >= box2[startProp] && box1[endProp] <= box2[endProp]) {\n            result = 2;\n        }\n        else if (box1[startProp] < box2[startProp] && box1[endProp] > box2[endProp]) {\n            result = -2;\n        }\n        else if (box1[startProp] <= box2[endProp] && box1[endProp] > box2[endProp]) {\n            result = 3;\n        }\n        else {\n            result = 4;\n        }\n\n        return result;\n    }\n\n    // Checks if relative position of the original and marginized boxes is the same\n    static boxOverlapChanged(startBox, endBox, gridStartBox, gridEndBox, vertical = false) {\n        const\n            calculateOverlap = RectangularPathFinder.calculateRelativePosition,\n            originalOverlap  = calculateOverlap(startBox, endBox, vertical),\n            finalOverlap     = calculateOverlap(gridStartBox, gridEndBox, vertical);\n\n        return originalOverlap !== finalOverlap;\n    }\n\n    shouldLookForPath(startBox, endBox, gridStartBox, gridEndBox) {\n        let result = true;\n\n        // Only calculate overlap if boxes are narrow in horizontal direction\n        if (\n            // We refer to the original arrow margins because during lookup those might be nullified and we need some\n            // criteria to tell if events are too narrow\n            (startBox.end - startBox.start <= this.startArrowMargin || endBox.end - endBox.start <= this.endArrowMargin) &&\n            Math.abs(RectangularPathFinder.calculateRelativePosition(startBox, endBox, true)) === 2\n        ) {\n            result = !RectangularPathFinder.boxOverlapChanged(startBox, endBox, gridStartBox, gridEndBox);\n        }\n\n        return result;\n    }\n\n    getConnectionCoordinatesFromBoxSideShift(box, side, shift) {\n        let coords;\n\n        // Note that we deal with screen geometry here, not logical dependency sides\n        // Possible 'start' and 'end' have been resolved to box sides.\n        switch (side) {\n            case 'left':\n                coords = {\n                    x : box.start,\n                    y : (box.top + box.bottom) / 2 + shift\n                };\n                break;\n            case 'right':\n                coords = {\n                    x : box.end,\n                    y : (box.top + box.bottom) / 2 + shift\n                };\n                break;\n            case 'top':\n                coords = {\n                    x : (box.start + box.end) / 2 + shift,\n                    y : box.top\n                };\n                break;\n            case 'bottom':\n                coords = {\n                    x : (box.start + box.end) / 2 + shift,\n                    y : box.bottom\n                };\n                break;\n        }\n\n        return coords;\n    }\n\n    calcGridBaseBoxFromBoxAndDrawParams(box, side/*, arrowSize*/, arrowMargin, horizontalMargin, verticalMargin) {\n        let gridBox;\n\n        switch (this.normalizeSide(side)) {\n            case 'left':\n                gridBox = {\n                    start  : box.start - Math.max(/*arrowSize + */arrowMargin, horizontalMargin),\n                    end    : box.end + horizontalMargin,\n                    top    : box.top - verticalMargin,\n                    bottom : box.bottom + verticalMargin\n                };\n                break;\n            case 'right':\n                gridBox = {\n                    start  : box.start - horizontalMargin,\n                    end    : box.end + Math.max(/*arrowSize + */arrowMargin, horizontalMargin),\n                    top    : box.top - verticalMargin,\n                    bottom : box.bottom + verticalMargin\n                };\n                break;\n            case 'top':\n                gridBox = {\n                    start  : box.start - horizontalMargin,\n                    end    : box.end + horizontalMargin,\n                    top    : box.top - Math.max(/*arrowSize + */arrowMargin, verticalMargin),\n                    bottom : box.bottom + verticalMargin\n                };\n                break;\n            case 'bottom':\n                gridBox = {\n                    start  : box.start - horizontalMargin,\n                    end    : box.end + horizontalMargin,\n                    top    : box.top - verticalMargin,\n                    bottom : box.bottom + Math.max(/*arrowSize + */arrowMargin, verticalMargin)\n                };\n                break;\n            default:\n                gridBox = {\n                    start  : box.start - horizontalMargin,\n                    end    : box.end + horizontalMargin,\n                    top    : box.top - verticalMargin,\n                    bottom : box.bottom + verticalMargin\n                };\n        }\n\n        return gridBox;\n    }\n\n    normalizeSide(side) {\n        const { rtl } = this.client;\n\n        side => sideToSide[side] || side;\n\n        if (side === 'start') {\n            return rtl ? 'right' : 'left';\n        }\n        if (side === 'end') {\n            return rtl ? 'left' : 'right';\n        }\n        return side;\n    }\n\n    buildPathGrid(startGridBox, endGridBox, pathStartPoint, pathEndPoint, startSide, endSide, otherGridBoxes) {\n        let xs, ys,\n            y, x, ix, iy, xslen, yslen, ib, blen, box, permitted, point;\n\n        const\n            points       = {},\n            linearPoints = [];\n\n        xs = [\n            startGridBox.start,\n            (startSide === 'left' || startSide === 'right') ? (startGridBox.start + startGridBox.end) / 2 : pathStartPoint.x,\n            startGridBox.end,\n            endGridBox.start,\n            (endSide === 'left' || endSide === 'right') ? (endGridBox.start + endGridBox.end) / 2 : pathEndPoint.x,\n            endGridBox.end\n        ];\n        ys = [\n            startGridBox.top,\n            (startSide === 'top' || startSide === 'bottom') ? (startGridBox.top + startGridBox.bottom) / 2 : pathStartPoint.y,\n            startGridBox.bottom,\n            endGridBox.top,\n            (endSide === 'top' || endSide === 'bottom') ? (endGridBox.top + endGridBox.bottom) / 2 : pathEndPoint.y,\n            endGridBox.bottom\n        ];\n\n        if (otherGridBoxes) {\n            otherGridBoxes.forEach(box => {\n                xs.push(box.start, (box.start + box.end) / 2, box.end);\n                ys.push(box.top, (box.top + box.bottom) / 2, box.bottom);\n            });\n        }\n\n        xs = [...new Set(xs.sort((a, b) => a - b))];\n        ys = [...new Set(ys.sort((a, b) => a - b))];\n\n        // <remove-on-release>\n        // TODO: fastest way to make unique, Set is slower\n        // for ( let i = 0, I = array.length; i < I; i++ ) {\n        //     if ( ~array.indexOf( array[ i ], i + 1 ) ) {\n        //         array.splice( i, 1 );\n        //         i--;\n        //         I--;\n        //     }\n        // }\n        // </remove-on-release>\n\n        for (iy = 0, yslen = ys.length; iy < yslen; ++iy) {\n            points[iy] = points[iy] || {};\n            y          = ys[iy];\n            for (ix = 0, xslen = xs.length; ix < xslen; ++ix) {\n                x = xs[ix];\n\n                permitted = (\n                    (x <= startGridBox.start || x >= startGridBox.end || y <= startGridBox.top || y >= startGridBox.bottom) &&\n                    (x <= endGridBox.start || x >= endGridBox.end || y <= endGridBox.top || y >= endGridBox.bottom)\n                );\n\n                if (otherGridBoxes) {\n                    for (ib = 0, blen = otherGridBoxes.length; permitted && ib < blen; ++ib) {\n                        box       = otherGridBoxes[ib];\n                        permitted = (x <= box.start || x >= box.end || y <= box.top || y >= box.bottom) ||\n                            // Allow point if it is a path start/end even if point is inside any box\n                            (x === pathStartPoint.x && y === pathStartPoint.y) ||\n                            (x === pathEndPoint.x && y === pathEndPoint.y);\n                    }\n                }\n\n                point = {\n                    distance : Number.MAX_SAFE_INTEGER,\n                    permitted,\n                    x,\n                    y,\n                    ix,\n                    iy\n                };\n\n                points[iy][ix] = point;\n                linearPoints.push(point);\n            }\n        }\n\n        return {\n            width  : xs.length,\n            height : ys.length,\n            xs,\n            ys,\n            points,\n            linearPoints\n        };\n    }\n\n    convertDecartPointToGridPoint(grid, point) {\n        const\n            x = grid.xs.indexOf(point.x),\n            y = grid.ys.indexOf(point.y);\n\n        return grid.points[y][x];\n    }\n\n    findPathOnGrid(grid, gridStartPoint, gridEndPoint, startSide, endSide) {\n        const me = this;\n\n        let path = false;\n\n        if (gridStartPoint.permitted && gridEndPoint.permitted) {\n            grid = me.waveForward(grid, gridStartPoint, 0);\n            path = me.collectPath(grid, gridEndPoint, endSide);\n        }\n\n        return path;\n    }\n\n    // Returns neighbors from Von Neiman ambit (see Lee pathfinding algorithm description)\n    getGridPointNeighbors(grid, gridPoint, predicateFn) {\n        const\n            ix     = gridPoint.ix,\n            iy     = gridPoint.iy,\n            result = [];\n\n        let neighbor;\n\n        // NOTE:\n        // It's important to push bottom neighbors first since this method is used\n        // in collectPath(), which recursively collects path from end to start node\n        // and if bottom neighbors are pushed first in result array then collectPath()\n        // will produce a line which is more suitable (pleasant looking) for our purposes.\n        if (iy < grid.height - 1) {\n            neighbor = grid.points[iy + 1][ix];\n            (!predicateFn || predicateFn(neighbor)) && result.push(neighbor);\n        }\n        if (iy > 0) {\n            neighbor = grid.points[iy - 1][ix];\n            (!predicateFn || predicateFn(neighbor)) && result.push(neighbor);\n        }\n        if (ix < grid.width - 1) {\n            neighbor = grid.points[iy][ix + 1];\n            (!predicateFn || predicateFn(neighbor)) && result.push(neighbor);\n        }\n        if (ix > 0) {\n            neighbor = grid.points[iy][ix - 1];\n            (!predicateFn || predicateFn(neighbor)) && result.push(neighbor);\n        }\n\n        return result;\n    }\n\n    waveForward(grid, gridStartPoint, distance) {\n        const me = this;\n\n        // I use the WalkHelper here because a point on a grid and it's neighbors might be considered as a hierarchy.\n        // The point is the parent node, and it's neighbors are the children nodes. Thus the grid here is hierarchical\n        // data structure which can be walked. WalkHelper walks non-recursively which is exactly what I need as well.\n        WalkHelper.preWalkUnordered(\n            // Walk starting point - a node is a grid point and it's distance from the starting point\n            [gridStartPoint, distance],\n            // Children query function\n            // NOTE: It's important to fix neighbor distance first, before waving to a neighbor, otherwise waving might\n            //       get through a neighbor point setting it's distance to a value more than (distance + 1) whereas we,\n            //       at the children querying moment in time, already know that the possibly optimal distance is (distance + 1)\n            ([point, distance]) => me.getGridPointNeighbors(\n                grid,\n                point,\n                neighborPoint => neighborPoint.permitted && (neighborPoint.distance > distance + 1)\n            ).map(\n                neighborPoint => [neighborPoint, distance + 1] // Neighbor distance fixation\n            ),\n            // Walk step iterator function\n            ([point, distance]) => point.distance = distance // Neighbor distance applying\n        );\n\n        return grid;\n    }\n\n    collectPath(grid, gridEndPoint, endSide) {\n        const\n            me   = this,\n            path = [];\n\n        let pathFound = true,\n            neighbors,\n            lowestDistanceNeighbor,\n            xDiff, yDiff;\n\n        while (pathFound && gridEndPoint.distance) {\n            neighbors = me.getGridPointNeighbors(grid, gridEndPoint, point =>\n                point.permitted && (point.distance === gridEndPoint.distance - 1)\n            );\n\n            pathFound = neighbors.length > 0;\n\n            if (pathFound) {\n                // Prefer turnless neighbors first\n                neighbors = neighbors.sort((a, b) => {\n                    let xDiff, yDiff;\n\n                    xDiff = a.ix - gridEndPoint.ix;\n                    yDiff = a.iy - gridEndPoint.iy;\n\n                    const resultA = (\n                        ((endSide === 'left' || endSide === 'right') && yDiff === 0) ||\n                        ((endSide === 'top' || endSide === 'bottom') && xDiff === 0)\n                    ) ? -1 : 1;\n\n                    xDiff = b.ix - gridEndPoint.ix;\n                    yDiff = b.iy - gridEndPoint.iy;\n\n                    const resultB = (\n                        ((endSide === 'left' || endSide === 'right') && yDiff === 0) ||\n                        ((endSide === 'top' || endSide === 'bottom') && xDiff === 0)\n                    ) ? -1 : 1;\n\n                    if (resultA > resultB) return 1;\n                    if (resultA < resultB) return -1;\n                    // apply additional sorting to be sure to pick bottom path in IE\n                    if (resultA === resultB) return a.y > b.y ? -1 : 1;\n                });\n\n                lowestDistanceNeighbor = neighbors[0];\n\n                path.push({\n                    x1 : lowestDistanceNeighbor.x,\n                    y1 : lowestDistanceNeighbor.y,\n                    x2 : gridEndPoint.x,\n                    y2 : gridEndPoint.y\n                });\n\n                // Detecting new side, either xDiff or yDiff must be 0 (but not both)\n                xDiff = lowestDistanceNeighbor.ix - gridEndPoint.ix;\n                yDiff = lowestDistanceNeighbor.iy - gridEndPoint.iy;\n\n                switch (true) {\n                    case !yDiff && xDiff > 0:\n                        endSide = 'left';\n                        break;\n                    case !yDiff && xDiff < 0:\n                        endSide = 'right';\n                        break;\n                    case !xDiff && yDiff > 0:\n                        endSide = 'top';\n                        break;\n                    case !xDiff && yDiff < 0:\n                        endSide = 'bottom';\n                        break;\n                }\n\n                gridEndPoint = lowestDistanceNeighbor;\n            }\n        }\n\n        return pathFound && path.reverse() || false;\n    }\n\n    prependPathWithArrowStaffSegment(path, connStartPoint/*, startArrowSize*/, startSide) {\n        if (path.length > 0) {\n            const\n                firstSegment   = path[0],\n                prependSegment = {\n                    x2 : firstSegment.x1,\n                    y2 : firstSegment.y1\n                };\n\n            switch (startSide) {\n                case 'left':\n                    prependSegment.x1 = connStartPoint.x/* - startArrowSize*/;\n                    prependSegment.y1 = firstSegment.y1;\n                    break;\n                case 'right':\n                    prependSegment.x1 = connStartPoint.x/* + startArrowSize*/;\n                    prependSegment.y1 = firstSegment.y1;\n                    break;\n                case 'top':\n                    prependSegment.x1 = firstSegment.x1;\n                    prependSegment.y1 = connStartPoint.y/* - startArrowSize*/;\n                    break;\n                case 'bottom':\n                    prependSegment.x1 = firstSegment.x1;\n                    prependSegment.y1 = connStartPoint.y/* + startArrowSize*/;\n                    break;\n            }\n\n            path.unshift(prependSegment);\n        }\n\n        return path;\n    }\n\n    appendPathWithArrowStaffSegment(path, connEndPoint/*, endArrowSize*/, endSide) {\n        if (path.length > 0) {\n            const\n                lastSegment   = path[path.length - 1],\n                appendSegment = {\n                    x1 : lastSegment.x2,\n                    y1 : lastSegment.y2\n                };\n\n            switch (endSide) {\n                case 'left':\n                    appendSegment.x2 = connEndPoint.x/* - endArrowSize*/;\n                    appendSegment.y2 = lastSegment.y2;\n                    break;\n                case 'right':\n                    appendSegment.x2 = connEndPoint.x/* + endArrowSize*/;\n                    appendSegment.y2 = lastSegment.y2;\n                    break;\n                case 'top':\n                    appendSegment.x2 = lastSegment.x2;\n                    appendSegment.y2 = connEndPoint.y/* - endArrowSize*/;\n                    break;\n                case 'bottom':\n                    appendSegment.x2 = lastSegment.x2;\n                    appendSegment.y2 = connEndPoint.y/* + endArrowSize*/;\n                    break;\n            }\n\n            path.push(appendSegment);\n        }\n\n        return path;\n    }\n\n    optimizePath(path) {\n        const optPath = [];\n\n        let prevSegment,\n            curSegment;\n\n        if (path.length > 0) {\n            prevSegment = path.shift();\n            optPath.push(prevSegment);\n\n            while (path.length > 0) {\n                curSegment = path.shift();\n                // both segments are as good as equal\n                if (\n                    equalEnough(prevSegment.x1, curSegment.x1) && equalEnough(prevSegment.y1, curSegment.y1) &&\n                    equalEnough(prevSegment.x2, curSegment.x2) && equalEnough(prevSegment.y2, curSegment.y2)\n                ) {\n                    prevSegment = curSegment;\n                }\n                // both segments are horizontal or very nearly so\n                else if (equalEnough(prevSegment.y1, prevSegment.y2) && equalEnough(curSegment.y1, curSegment.y2)) {\n                    prevSegment.x2 = curSegment.x2;\n                }\n                // both segments are vertical or very nearly so\n                else if (equalEnough(prevSegment.x1, prevSegment.x2) && equalEnough(curSegment.x1, curSegment.x2)) {\n                    prevSegment.y2 = curSegment.y2;\n                }\n                // segments have different orientation (path turn)\n                else {\n                    optPath.push(curSegment);\n                    prevSegment = curSegment;\n                }\n            }\n        }\n\n        return optPath;\n    }\n}\n\n//<debug>\nfunction createBox(startBox, deltaX, deltaY, scale, stroke) {\n    const points = [\n        [startBox.start * scale - deltaX, startBox.top * scale - deltaY],\n        [startBox.start * scale - deltaX, startBox.bottom * scale - deltaY],\n        [startBox.end * scale - deltaX, startBox.bottom * scale - deltaY],\n        [startBox.end * scale - deltaX, startBox.top * scale - deltaY],\n        [startBox.start * scale - deltaX, startBox.top * scale - deltaY]\n    ].map(pair => `${pair[0]},${pair[1]}`).join(' ');\n\n    return `<polyline points=\"${points}\" style=\"stroke:${stroke || 'blue'};stroke-width:4;\"/>`;\n}\n// eslint-disable-next-line no-unused-vars\nfunction drawPathGrid(grid, sourceBox, targetBox, sourceRegion, targetRegion, otherBoxes, scale = 4) {\n    const\n        rowHeight       = 61,\n        xs              = grid.xs.map(x => x * scale),\n        ys              = grid.ys.map(y => y * scale),\n        xsLength        = xs.length,\n        ysLength        = ys.length,\n        verticalLines   = xs.map(x => `<line style=\"stroke:black\" x1=\"${x - xs[0]}\" x2=\"${x - xs[0]}\"\" y1=\"0\" y2=\"${ys[ysLength - 1] - ys[0]}\"/>`),\n        horizontalLines = ys.map(y => `<line style=\"stroke:black\" x1=\"0\" x2=\"${xs[xsLength - 1] - xs[0]}\"\" y1=\"${y - ys[0]}\" y2=\"${y - ys[0]}\" style=\"${y / scale === rowHeight ? 'stroke:red' : ''}\"/>`),\n        extraLines      = [];\n\n    sourceRegion && extraLines.push(createBox(sourceRegion, xs[0], ys[0], scale, 'green'));\n    targetRegion && extraLines.push(createBox(targetRegion, xs[0], ys[0], scale, 'green'));\n    sourceBox && extraLines.push(createBox(sourceBox, xs[0], ys[0], scale));\n    targetBox && extraLines.push(createBox(targetBox, xs[0], ys[0], scale));\n\n    (otherBoxes || []).forEach(box => extraLines.push(createBox(box, xs[0], ys[0], scale, 'red')));\n\n    console.log(`<svg width=\"${xs[xsLength - 1] - xs[0]}\" height=\"${ys[ysLength - 1] - ys[0]}\">${\n        verticalLines.concat(horizontalLines, extraLines).join('')}</svg>`);\n}\n//</debug>\n","import DependencyModel from '../../model/DependencyModel.js';\nimport RectangularPathFinder from '../../util/RectangularPathFinder.js';\nimport DomHelper from '../../../Core/helper/DomHelper.js';\nimport ObjectHelper from '../../../Core/helper/ObjectHelper.js';\nimport Rectangle from '../../../Core/helper/util/Rectangle.js';\n\n// <remove-on-release>\n// TODO: Tests\n// </remove-on-release>\n\n// Determine a line segments drawing direction\nfunction drawingDirection(pointSet) {\n    if (pointSet.x1 === pointSet.x2) {\n        return pointSet.y2 > pointSet.y1 ? 'd' : 'u';\n    }\n\n    return pointSet.x2 > pointSet.x1 ? 'r' : 'l';\n}\n\n// Determine a line segments length\nfunction segmentLength(pointSet) {\n    return pointSet.x1 === pointSet.x2 ? pointSet.y2 - pointSet.y1 : pointSet.x2 - pointSet.x1;\n}\n\n// Define an arc to tie two line segments together\nfunction arc(pointSet, nextPointSet, radius) {\n    const\n        corner  = drawingDirection(pointSet) + drawingDirection(nextPointSet),\n        // Flip x if this or next segment is drawn right to left\n        rx      = radius * (corner.includes('l') ? -1 : 1),\n        // Flip y if this or next segment is drawn bottom to top\n        ry      = radius * (corner.includes('u') ? -1 : 1),\n        // Positive (0) or negative (1) angle\n        sweep   = corner === 'ur' || corner === 'lu' || corner === 'dl' || corner === 'rd' ? 1 : 0;\n\n    return `a${rx},${ry} 0 0 ${sweep} ${rx},${ry}`;\n}\n\n// Define a line for a set of points, tying it together with the next set with an arc when applicable\nfunction line(pointSet, nextPointSet, location, radius, prevRadius) {\n\n    // Horizontal or vertical line\n    let line      = pointSet.x1 === pointSet.x2 ? 'v' : 'h',\n        useRadius = radius;\n\n    // Add an arc?\n    if (radius) {\n        const\n            // Length of this line segment\n            length     = segmentLength(pointSet),\n            // Length of the next one. Both are needed to determine max radius (half of the shortest delta)\n            nextLength = nextPointSet ? Math.abs(segmentLength(nextPointSet)) : Number.MAX_SAFE_INTEGER,\n            // Line direction\n            sign       = Math.sign(length);\n\n        // If we are not passed a radius from the previous line drawn, we use the configured radius. It is used to shorten\n        // this lines length to fit the arc that connects it to the previous line\n        if (prevRadius == null) {\n            prevRadius = radius;\n        }\n\n        // We cannot use a radius larger than half our or our successor's length, doing so would make the segment too long\n        // when the arc is created\n        if (Math.abs(length) < radius * 2 || nextLength < radius * 2) {\n            useRadius = Math.min(Math.abs(length), nextLength) / 2;\n        }\n\n        const\n            // Radius of neighbouring arcs, subtracted from length below...\n            subtract  = location === 'single' ? 0 : location === 'first' ? useRadius : location === 'between' ? prevRadius + useRadius : /*last*/ prevRadius,\n            // ...to produce the length of the line segment to draw\n            useLength = length - subtract * sign;\n\n        // Apply line segment length, unless it passed over 0 in which case we stick to 0\n        line += Math.sign(useLength) !== sign ? 0 : useLength;\n\n        // Add an arc if applicable\n        if (location !== 'last' && location !== 'single' && useRadius > 0) {\n            line += ` ${arc(pointSet, nextPointSet, useRadius)}`;\n        }\n    }\n    // Otherwise take a shorter code path\n    else {\n        line += segmentLength(pointSet);\n    }\n\n    return {\n        line,\n        currentRadius : radius !== useRadius ? useRadius : null\n    };\n}\n\n// Define an SVG path base on points from the path finder.\n// Each segment in the path can be joined by an arc\nfunction pathMapper(radius, points) {\n    const { length } = points;\n\n    if (!length) {\n        return '';\n    }\n\n    let currentRadius = null;\n\n    return `M${points[0].x1},${points[0].y1} ${points.map((pointSet, i) => {\n        // Segment placement among all segments, used to determine if an arc should be added\n        const\n            location =\n                  length === 1 ? 'single'\n                      : i === length - 1 ? 'last'\n                          : i === 0 ? 'first'\n                              : 'between',\n            lineSpec = line(pointSet, points[i + 1], location, radius, currentRadius);\n\n        ({ currentRadius } = lineSpec);\n\n        return lineSpec.line;\n    }).join(' ')}`;\n}\n\n// Mixin that holds the code needed to generate DomConfigs for dependency lines\nexport default Target => class DependencyLineGenerator extends Target {\n    static $name = 'DependencyLineGenerator';\n\n    lineCache = {};\n\n    onSVGReady() {\n        // <remove-on-release>\n        // TODO: Get rid of pathFinderConfig?? Move to configurable\n        // </remove-on-release>\n        const me = this;\n\n        me.pathFinder = new RectangularPathFinder({\n            ...me.pathFinderConfig,\n            client : me.client\n        });\n        me.lineDefAdjusters = me.createLineDefAdjusters();\n\n        me.createMarker();\n    }\n\n    changeRadius(radius) {\n        if (radius !== null) {\n            ObjectHelper.assertNumber(radius, 'radius');\n        }\n\n        return radius;\n    }\n\n    updateRadius() {\n        if (!this.isConfiguring) {\n            this.reset();\n        }\n    }\n\n    updateRenderer() {\n        if (!this.isConfiguring) {\n            this.reset();\n        }\n    }\n\n    changeClickWidth(width) {\n        if (width !== null) {\n            ObjectHelper.assertNumber(width, 'clickWidth');\n        }\n\n        return width;\n    }\n\n    updateClickWidth() {\n        if (!this.isConfiguring) {\n            this.reset();\n        }\n    }\n\n    //region Marker\n\n    createMarker() {\n        const\n            me            = this,\n            { markerDef } = me,\n            svg           = this.client.svgCanvas,\n            // SVG markers has to use an id, we want the id to be per scheduler when using multiple\n            markerId      = markerDef ? `${me.client.id}-arrowEnd` : 'arrowEnd';\n\n        me.marker?.remove();\n\n        svg.style.setProperty('--scheduler-dependency-marker', `url(#${markerId})`);\n\n        me.marker = DomHelper.createElement({\n            parent        : svg,\n            id            : markerId, // no-sanity\n            tag           : 'marker',\n            className     : 'b-sch-dependency-arrow',\n            ns            : 'http://www.w3.org/2000/svg',\n            markerHeight  : 11,\n            markerWidth   : 11,\n            refX          : 8.5,\n            refY          : 3,\n            viewBox       : '0 0 9 6',\n            orient        : 'auto-start-reverse',\n            markerUnits   : 'userSpaceOnUse',\n            retainElement : true,\n            children      : [{\n                tag : 'path',\n                ns  : 'http://www.w3.org/2000/svg',\n                d   : me.markerDef ?? 'M3,0 L3,6 L9,3 z'\n            }]\n        });\n    }\n\n    updateMarkerDef() {\n        if (!this.isConfiguring) {\n            this.createMarker();\n        }\n    }\n\n    //endregion\n\n    //region DomConfig\n\n    getAssignmentElement(assignment) {\n        // If we are dragging an event, we need to use the proxy element\n        // (which is not the original element if we are not constrained to timeline)\n        const proxyElement = this.client.features.eventDrag?.getProxyElement?.(assignment);\n\n        return proxyElement || this.client.getElementFromAssignmentRecord(assignment);\n    }\n\n    // Generate a DomConfig for a dependency line between two assignments (tasks in Gantt)\n    getDomConfigs(dependency, fromAssignment, toAssignment, forceBoxes) {\n        const\n            me     = this,\n            key    = me.getDependencyKey(dependency, fromAssignment, toAssignment),\n            // Under certain circumstances (scrolling) we might be able to reuse the previous DomConfig.\n            cached = me.lineCache[key];\n\n        // Create line def if not cached, or we are live drawing and have event elements (dragging, transitioning etc)\n        if (me.constructLineCache || !cached || forceBoxes || (me.drawingLive && (me.getAssignmentElement(fromAssignment) || me.getAssignmentElement(toAssignment)))) {\n            const\n                lineDef     = me.prepareLineDef(dependency, fromAssignment, toAssignment, forceBoxes),\n                points      = lineDef && me.pathFinder.findPath(lineDef, me.lineDefAdjusters),\n                {\n                    client,\n                    clickWidth\n                }           = me,\n                { toEvent } = dependency;\n\n            if (points) {\n                const\n                    highlighted = me.highlighted.get(dependency),\n                    domConfig   = {\n                        tag     : 'path',\n                        ns      : 'http://www.w3.org/2000/svg',\n                        d       : pathMapper(me.radius ?? 0, points),\n                        role    : 'presentation',\n                        dataset : {\n                            syncId : key,\n                            depId  : dependency.id,\n                            fromId : fromAssignment.id,\n                            toId   : toAssignment.id\n                        },\n                        elementData : {\n                            dependency,\n                            points\n                        },\n                        class : {\n                            [me.baseCls]                                : 1,\n                            [dependency.cls]                            : dependency.cls,\n                            // Data highlight\n                            [dependency.highlighted]                    : dependency.highlighted,\n                            // Feature highlight\n                            [highlighted && [...highlighted].join(' ')] : highlighted,\n                            [me.noMarkerCls]                            : lineDef.hideMarker,\n                            'b-inactive'                                : dependency.active === false,\n                            'b-sch-bidirectional-line'                  : dependency.bidirectional,\n                            'b-readonly'                                : dependency.readOnly,\n                            // If target event is outside the view add special CSS class to hide marker (arrow)\n                            'b-sch-dependency-ends-outside' :\n                                (!toEvent.milestone && (toEvent.endDate <= client.startDate || client.endDate <= toEvent.startDate)) ||\n                                (toEvent.milestone && (toEvent.endDate < client.startDate || client.endDate < toEvent.startDate))\n                        }\n                    };\n\n                me.renderer?.({\n                    domConfig,\n                    points,\n                    dependencyRecord     : dependency,\n                    fromAssignmentRecord : fromAssignment,\n                    toAssignmentRecord   : toAssignment,\n                    fromBox              : lineDef.startBox,\n                    toBox                : lineDef.endBox,\n                    fromSide             : lineDef.startSide,\n                    toSide               : lineDef.endSide\n                });\n\n                const configs = [domConfig];\n\n                if (clickWidth > 1) {\n                    configs.push({\n                        ...domConfig, // Shallow on purpose, to not waste perf cloning deeply\n                        class : {\n                            ...domConfig.class,\n                            'b-click-area' : 1\n                        },\n                        dataset : {\n                            ...domConfig.dataset,\n                            syncId : `${domConfig.dataset.syncId}-click-area`\n                        },\n                        style : {\n                            strokeWidth : clickWidth\n                        }\n                    });\n                }\n\n                return me.lineCache[key] = configs;\n            }\n\n            // Nothing to draw or cache\n            return me.lineCache[key] = null;\n        }\n\n        return cached;\n    }\n\n    //endregion\n\n    //region Bounds\n\n    // Generates `otherBoxes` config for rectangular path finder, which push dependency line to the row boundary.\n    // It should be enough to return single box with top/bottom taken from row top/bottom and left/right taken from source\n    // box, extended by start arrow margin to both sides.\n    generateBoundaryBoxes(box, side) {\n        // We need two boxes for the bottom edge, because otherwise path cannot be found. Ideally that shouldn't be\n        // necessary. Other solution would be to adjust bottom by -1px, but that would make some dependency lines to take\n        // 1px different path on a row boundary, which doesn't look nice (but slightly more performant)\n        if (side === 'bottom') {\n            return [\n                {\n                    start  : box.left,\n                    end    : box.left + box.width / 2,\n                    top    : box.rowTop,\n                    bottom : box.rowBottom\n                },\n                {\n                    start  : box.left + box.width / 2,\n                    end    : box.right,\n                    top    : box.rowTop,\n                    bottom : box.rowBottom\n                }\n            ];\n        }\n        else {\n            return [\n                {\n                    start  : box.left - this.pathFinder.startArrowMargin,\n                    end    : box.right + this.pathFinder.startArrowMargin,\n                    top    : box.rowTop,\n                    bottom : box.rowBottom\n                }\n            ];\n        }\n\n        // //<debug>\n        // globalThis.DEBUG && boxes.forEach(box => {\n        //     DomHelper.createElement({\n        //         parent : document.querySelector('.b-sch-foreground-canvas'),\n        //         html   : `<div style=\"left:${box.start}px;top:${box.top}px;width:${box.end - box.start}px;height:${box.bottom - box.top}px;border:1px solid green;position:absolute;\"></div>`\n        //     });\n        // });\n        // //</debug>\n    }\n\n    // Bounding box for an assignment, uses elements bounds if rendered\n    getAssignmentBounds(assignment) {\n        const\n            { client } = this,\n            element    = this.getAssignmentElement(assignment);\n\n        if (element && !client.isExporting) {\n            const rectangle = Rectangle.from(element, this.relativeTo);\n\n            if (client.isHorizontal) {\n                let row = client.getRowById(assignment.resource.id);\n\n                // Outside of its row? It is being dragged, resolve new row\n                if (rectangle.y < row.top || rectangle.bottom > row.bottom) {\n                    const overRow = client.rowManager.getRowAt(rectangle.center.y, true);\n                    if (overRow) {\n                        row = overRow;\n                    }\n                }\n\n                rectangle.rowTop = row.top;\n                rectangle.rowBottom = row.bottom;\n            }\n\n            return rectangle;\n        }\n\n        return client.isEngineReady && client.getAssignmentEventBox(assignment, true);\n    }\n\n    //endregion\n\n    //region Sides\n\n    getConnectorStartSide(timeSpanRecord) {\n        return this.client.currentOrientation.getConnectorStartSide(timeSpanRecord);\n    }\n\n    getConnectorEndSide(timeSpanRecord) {\n        return this.client.currentOrientation.getConnectorEndSide(timeSpanRecord);\n    }\n\n    getDependencyStartSide(dependency) {\n        const { fromEvent, type, fromSide } = dependency;\n\n        if (fromSide) {\n            return fromSide;\n        }\n\n        switch (true) {\n            case type === DependencyModel.Type.StartToEnd:\n            case type === DependencyModel.Type.StartToStart:\n                return this.getConnectorStartSide(fromEvent);\n\n            case type === DependencyModel.Type.EndToStart:\n            case type === DependencyModel.Type.EndToEnd:\n                return this.getConnectorEndSide(fromEvent);\n\n            default:\n                // Default value might not be applied yet when rendering early in Pro / Gantt\n                return this.getConnectorEndSide(fromEvent);\n        }\n    }\n\n    getDependencyEndSide(dependency) {\n        const { toEvent, type, toSide } = dependency;\n\n        if (toSide) {\n            return toSide;\n        }\n\n        // Fallback to view trait if dependency end side is not given /*or can be obtained from type*/\n        switch (true) {\n            case type === DependencyModel.Type.EndToEnd:\n            case type === DependencyModel.Type.StartToEnd:\n                return this.getConnectorEndSide(toEvent);\n\n            case type === DependencyModel.Type.EndToStart:\n            case type === DependencyModel.Type.StartToStart:\n                return this.getConnectorStartSide(toEvent);\n\n            default:\n                // Default value might not be applied yet when rendering early in Pro / Gantt\n                return this.getConnectorStartSide(toEvent);\n        }\n    }\n\n    //endregion\n\n    //region Line def\n\n    // An array of functions used to alter path config when no path found.\n    // It first tries to shrink arrow margins and secondly hides arrows entirely\n    createLineDefAdjusters() {\n        const { client } = this;\n\n        function shrinkArrowMargins(lineDef) {\n            const { barMargin } = client;\n\n            let adjusted = false;\n\n            if (lineDef.startArrowMargin > barMargin || lineDef.endArrowMargin > barMargin) {\n                lineDef.startArrowMargin = lineDef.endArrowMargin = barMargin;\n                adjusted = true;\n            }\n\n            return adjusted ? lineDef : adjusted;\n        }\n\n        function resetArrowMargins(lineDef) {\n            let adjusted = false;\n\n            if (lineDef.startArrowMargin > 0 || lineDef.endArrowMargin > 0) {\n                lineDef.startArrowMargin = lineDef.endArrowMargin = 0;\n                adjusted = true;\n            }\n\n            return adjusted ? lineDef : adjusted;\n        }\n\n        function shrinkHorizontalMargin(lineDef, originalLineDef) {\n            let adjusted = false;\n\n            if (lineDef.horizontalMargin > 2) {\n                lineDef.horizontalMargin = 1;\n                adjusted = true;\n                originalLineDef.hideMarker = true;\n            }\n\n            return adjusted ? lineDef : adjusted;\n        }\n\n        return [\n            shrinkArrowMargins,\n            resetArrowMargins,\n            shrinkHorizontalMargin\n        ];\n    }\n\n    // Overridden in Gantt\n    adjustLineDef(dependency, lineDef) {\n        return lineDef;\n    }\n\n    // Prepare data to feed to the path finder\n    prepareLineDef(dependency, fromAssignment, toAssignment, forceBoxes) {\n        const\n            me             = this,\n            startSide      = me.getDependencyStartSide(dependency),\n            endSide        = me.getDependencyEndSide(dependency),\n            startRectangle = forceBoxes?.from ?? me.getAssignmentBounds(fromAssignment),\n            endRectangle   = forceBoxes?.to ?? me.getAssignmentBounds(toAssignment),\n            otherBoxes     = [];\n\n        if (!startRectangle || !endRectangle) {\n            return null;\n        }\n\n        let {\n            startArrowMargin,\n            verticalMargin\n        } = me.pathFinder;\n\n        if (me.client.isHorizontal) {\n            // Only add otherBoxes if assignments are in different resources\n            if (startRectangle.rowTop != null && startRectangle.rowTop !== endRectangle.rowTop) {\n                otherBoxes.push(...me.generateBoundaryBoxes(startRectangle, startSide));\n            }\n\n            // Do not change start arrow margin in case dependency is bidirectional\n            if (!dependency.bidirectional) {\n                if (/(top|bottom)/.test(startSide)) {\n                    startArrowMargin = me.client.barMargin / 2;\n                }\n\n                verticalMargin = me.client.barMargin / 2;\n            }\n        }\n\n        return me.adjustLineDef(dependency, {\n            startBox              : startRectangle,\n            endBox                : endRectangle,\n            otherBoxes,\n            startArrowMargin,\n            verticalMargin,\n            otherVerticalMargin   : 0,\n            otherHorizontalMargin : 0,\n            startSide,\n            endSide\n        });\n    }\n\n    //endregion\n\n    //region Cache\n\n    // All dependencies are about to be drawn, check if we need to build the line cache\n    beforeDraw() {\n        super.beforeDraw();\n\n        if (!Object.keys(this.lineCache).length) {\n            this.constructLineCache = true;\n        }\n    }\n\n    // All dependencies are drawn, we no longer need to rebuild the cache\n    afterDraw() {\n        super.afterDraw();\n\n        this.constructLineCache = false;\n    }\n\n    reset() {\n        super.reset();\n\n        this.lineCache = {};\n    }\n\n    //endregion\n\n};\n","import Tooltip from '../../../Core/widget/Tooltip.js';\n\n/**\n * @module Scheduler/feature/mixin/DependencyTooltip\n */\n\nconst\n    // Map dependency type to side of a box, for displaying an icon in the tooltip\n    fromBoxSide = [\n        'start',\n        'start',\n        'end',\n        'end'\n    ],\n    toBoxSide   = [\n        'start',\n        'end',\n        'start',\n        'end'\n    ];\n\n/**\n * Mixin that adds tooltip support to the {@link Scheduler/feature/Dependencies} feature.\n * @mixin\n */\nexport default Target => class DependencyTooltip extends Target {\n    static $name = 'DependencyTooltip';\n\n    static configurable = {\n        /**\n         * Set to true to show a tooltip when hovering a dependency line\n         * @config {Boolean}\n         */\n        showTooltip : true,\n\n        /**\n         * A template function allowing you to configure the contents of the tooltip shown when hovering a\n         * dependency line. You can return either an HTML string or a {@link DomConfig} object.\n         * @prp {Function} tooltipTemplate\n         * @param {Scheduler.model.DependencyBaseModel} dependency The dependency record\n         * @returns {String|DomConfig}\n         */\n        tooltipTemplate(dependency) {\n            return {\n                children : [{\n                    className : 'b-sch-dependency-tooltip',\n                    children  : [\n                        { tag : 'label', text : this.L('L{Dependencies.from}') },\n                        { text : dependency.fromEvent.name },\n                        { className : `b-sch-box b-${dependency.fromSide || fromBoxSide[dependency.type]}` },\n                        { tag : 'label', text : this.L('L{Dependencies.to}') },\n                        { text : dependency.toEvent.name },\n                        { className : `b-sch-box b-${dependency.toSide || toBoxSide[dependency.type]}` }\n                    ]\n                }]\n            };\n        },\n\n        /**\n         * A tooltip config object that will be applied to the dependency hover tooltip. Can be used to for example\n         * customize delay\n         * @config {TooltipConfig}\n         */\n        tooltip : {\n            $config : 'nullify',\n\n            value : {}\n        }\n    };\n\n    changeTooltip(tooltip, old) {\n        const me = this;\n\n        old?.destroy();\n\n        if (!me.showTooltip || !tooltip) {\n            return null;\n        }\n\n        return Tooltip.new({\n            align          : 'b-t',\n            id             : `${me.client.id}-dependency-tip`,\n            // <remove-on-release>\n            // TODO: need some way better to specify this. maybe each feature should be queried?\n            // </remove-on-release>\n            forSelector    : `.b-timelinebase:not(.b-eventeditor-editing,.b-taskeditor-editing,.b-resizing-event,.b-dragcreating,.b-dragging-event,.b-creating-dependency) .${me.baseCls}`,\n            forElement     : me.client.timeAxisSubGridElement,\n            showOnHover    : true,\n            hoverDelay     : 0,\n            hideDelay      : 0,\n            anchorToTarget : false,\n            textContent    : false, // Skip max-width setting\n            trackMouse     : false,\n            getHtml        : me.getHoverTipHtml.bind(me)\n        }, tooltip);\n    }\n\n    /**\n     * Generates DomConfig content for the tooltip shown when hovering a dependency\n     * @param {Object} tooltipConfig\n     * @returns {DomConfig} DomConfig used as tooltips content\n     * @private\n     */\n    getHoverTipHtml({ activeTarget }) {\n        return this.tooltipTemplate(this.resolveDependencyRecord(activeTarget));\n    }\n};\n","import DomSync from '../../Core/helper/DomSync.js';\nimport VersionHelper from '../../Core/helper/VersionHelper.js';\nimport Rectangle from '../../Core/helper/util/Rectangle.js';\nimport Delayable from '../../Core/mixin/Delayable.js';\nimport InstancePlugin from '../../Core/mixin/InstancePlugin.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport AttachToProjectMixin from '../data/mixin/AttachToProjectMixin.js';\nimport DependencyCreation from './mixin/DependencyCreation.js';\nimport DependencyGridCache from './mixin/DependencyGridCache.js';\nimport DependencyLineGenerator from './mixin/DependencyLineGenerator.js';\nimport DependencyTooltip from './mixin/DependencyTooltip.js';\n\nconst eventNameMap = {\n    click       : 'Click',\n    dblclick    : 'DblClick',\n    contextmenu : 'ContextMenu'\n};\n/**\n * @module Scheduler/feature/Dependencies\n */\n\nconst collectLinkedAssignments = assignment => {\n    const result = [assignment];\n\n    if (assignment.resource?.hasLinks) {\n        // Fake linked assignments\n        result.push(...assignment.resource.$links.map(l => ({\n            id               : `${l.id}_${assignment.id}`,\n            resource         : l,\n            event            : assignment.event,\n            drawDependencies : assignment.drawDependencies\n        })));\n    }\n\n    return result;\n};\n\n/**\n * Feature that draws dependencies between events. Uses a {@link Scheduler.data.DependencyStore} to determine which\n * dependencies to draw, if none is defined one will be created automatically. Dependencies can also be specified as\n * `scheduler.dependencies`, see example below:\n *\n * {@inlineexample Scheduler/feature/Dependencies.js}\n *\n * Dependencies also work in vertical mode:\n *\n * {@inlineexample Scheduler/feature/DependenciesVertical.js}\n *\n * To customize the dependency tooltip, you can provide the {@link #config-tooltip} config and specify a\n * {@link Core.widget.Tooltip#config-getHtml} function. For example:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         dependencies : {\n *             tooltip : {\n *                 getHtml({ activeTarget }) {\n *                     const dependencyModel = scheduler.resolveDependencyRecord(activeTarget);\n *\n *                     if (!dependencyModel) return null;\n *\n *                     const { fromEvent, toEvent } = dependencyModel;\n *\n *                     return `${fromEvent.name} (${fromEvent.id}) -> ${toEvent.name} (${toEvent.id})`;\n *                 }\n *             }\n *         }\n *     }\n * }\n * ```\n *\n * ## Styling dependency lines\n *\n * You can easily customize the arrows drawn between events. To change all arrows, apply the following basic SVG CSS:\n *\n * ```css\n * .b-sch-dependency {\n *    stroke-width: 2;\n *    stroke : red;\n * }\n *\n * .b-sch-dependency-arrow {\n *     fill: red;\n * }\n * ```\n *\n * To style an individual dependency line, you can provide a [cls](#Scheduler/model/DependencyModel#field-cls) in your\n * data:\n *\n * ```json\n * {\n *     \"id\"   : 9,\n *     \"from\" : 7,\n *     \"to\"   : 8,\n *     \"cls\"  : \"special-dependency\"\n * }\n * ```\n *\n * ```scss\n * // Make line dashed\n * .b-sch-dependency {\n *    stroke-dasharray: 5, 5;\n * }\n * ```\n *\n * To customize the marker used for the lines (the arrow header), you can supply a SVG path definition to the\n * {@link #config-markerDef} config:\n *\n * {@inlineexample Scheduler/feature/DependenciesMarker.js}\n *\n * You can also specify a {@link #config-radius} to get lines with rounded \"corners\", for a less boxy look:\n *\n * {@inlineexample Scheduler/feature/DependenciesRadius.js}\n *\n * For advanced use cases, you can also manipulate the {@link DomConfig} used to create a dependency line in a\n * {@link #config-renderer} function.\n *\n * This feature is **off** by default. For info on enabling it, see {@link Grid.view.mixin.GridFeatures}.\n *\n * @mixes Core/mixin/Delayable\n * @mixes Scheduler/feature/mixin/DependencyCreation\n * @mixes Scheduler/feature/mixin/DependencyTooltip\n *\n * @extends Core/mixin/InstancePlugin\n * @demo Scheduler/dependencies\n * @classtype dependencies\n * @feature\n */\nexport default class Dependencies extends InstancePlugin.mixin(\n    AttachToProjectMixin,\n    Delayable,\n    DependencyCreation,\n    DependencyGridCache,\n    DependencyLineGenerator,\n    DependencyTooltip\n) {\n\n    // <debug>\n    // region Localization test\n    static localization = [\n        'L{DependencyType.SS}',\n        'L{DependencyType.SF}',\n        'L{DependencyType.FS}',\n        'L{DependencyType.FF}',\n        'L{DependencyType.StartToStart}',\n        'L{DependencyType.StartToEnd}',\n        'L{DependencyType.EndToStart}',\n        'L{DependencyType.EndToEnd}',\n        'L{DependencyType.long}',\n        'L{DependencyType.short}'\n    ];\n    // endregion\n    // </debug>\n\n    static $name = 'Dependencies';\n\n    /**\n     * Fired when dependencies are rendered\n     * @on-owner\n     * @event dependenciesDrawn\n     */\n\n    //region Config\n\n    static configurable = {\n        /**\n         * The CSS class to add to a dependency line when hovering over it\n         * @config {String}\n         * @default\n         * @private\n         */\n        overCls : 'b-sch-dependency-over',\n\n        /**\n         * The CSS class applied to dependency lines\n         * @config {String}\n         * @default\n         * @private\n         */\n        baseCls : 'b-sch-dependency',\n\n        /**\n         * The CSS class applied to a too narrow dependency line (to hide markers)\n         * @config {String}\n         * @default\n         * @private\n         */\n        noMarkerCls : 'b-sch-dependency-markerless',\n\n        /**\n         * SVG path definition used as marker (arrow head) for the dependency lines.\n         * Should fit in a viewBox that is 9 x 6.\n         *\n         * ```javascript\n         * const scheduler = new Scheduler({\n         *     features : {\n         *         dependencies : {\n         *             // Circular marker\n         *             markerDef : 'M 2,3 a 3,3 0 1,0 6,0 a 3,3 0 1,0 -6,0'\n         *         }\n         *     }\n         * });\n         * ```\n         *\n         * @config {String}\n         * @default 'M3,0 L3,6 L9,3 z'\n         */\n        markerDef : null,\n\n        /**\n         * Radius (in px) used to draw arcs where dependency line segments connect. Specify it to get a rounded look.\n         * The radius will during drawing be reduced as needed on a per segment basis to fit lines.\n         *\n         * ```javascript\n         * const scheduler = new Scheduler({\n         *     features : {\n         *         dependencies : {\n         *             // Round the corner where line segments connect, similar to 'border-radius: 5px'\n         *             radius : 5\n         *         }\n         *     }\n         * });\n         * ```\n         *\n         * <div class=\"note\">Using a radius slightly degrades dependency rendering performance. If your app displays\n         * a lot of dependencies, it might be worth taking this into account when deciding if you want to use radius\n         * or not</div>\n         *\n         * @config {Number}\n         */\n        radius : null,\n\n        /**\n         * Renderer function, supply one if you want to manipulate the {@link DomConfig} object used to draw a\n         * dependency line between two assignments.\n         *\n         * ```javascript\n         * const scheduler = new Scheduler({\n         *     features : {\n         *         dependencies : {\n         *             renderer({ domConfig, fromAssignmentRecord : from, toAssignmentRecord : to }) {\n         *                 // Add a custom CSS class to dependencies between important assignments\n         *                 domConfig.class.important = from.important || to.important;\n         *                 domConfig.class.veryImportant = from.important && to.important;\n         *             }\n         *         }\n         *     }\n         * }\n         * ```\n         *\n         * @param {Object} renderData\n         * @param {DomConfig} renderData.domConfig that will be used to create the dependency line, can be manipulated by the\n         * renderer\n         * @param {Scheduler.model.DependencyModel} renderData.dependencyRecord The dependency being rendered\n         * @param {Scheduler.model.AssignmentModel} renderData.fromAssignmentRecord Drawing line from this assignment\n         * @param {Scheduler.model.AssignmentModel} renderData.toAssignmentRecord Drawing line to this assignment\n         * @param {Object[]} renderData.points A collection of points making up the line segments for the dependency\n         * line. Read-only in the renderer, any manipulation should be done to `domConfig`\n         * @param {Core.helper.util.Rectangle} renderData.fromBox Bounds for the fromAssignment's element\n         * @param {Core.helper.util.Rectangle} renderData.toBox Bounds for the toAssignment's element\n         * @param {'top'|'right'|'bottom'|'left'} renderData.fromSide Drawn from this side of the fromAssignment\n         * @param {'top'|'right'|'bottom'|'left'} renderData.toSide Drawn to this side of the fromAssignment\n         * @prp {Function}\n         */\n        renderer : null,\n\n        /**\n         * Specify `true` to highlight incoming and outgoing dependencies when hovering an event.\n         * @prp {Boolean}\n         */\n        highlightDependenciesOnEventHover : null,\n\n        /**\n         * Specify `false` to prevent dependencies from being drawn during scroll, for smoother scrolling in schedules\n         * with lots of dependencies. Dependencies will be drawn when scrolling stops instead.\n         * @prp {Boolean}\n         * @default\n         */\n        drawOnScroll : true,\n\n        /**\n         * The clickable/touchable width of the dependency line in pixels. Setting this to a number greater than 1 will\n         * draw an invisible but clickable line along the same path as the dependency line, making it easier to click.\n         * The tradeoff is that twice as many lines will be drawn, which can affect performance.\n         * @prp {Number}\n         */\n        clickWidth : null\n    };\n\n    static delayable = {\n        doRefresh : 10\n    };\n\n    static get pluginConfig() {\n        return {\n            chain  : ['render', 'onPaint', 'onElementClick', 'onElementDblClick', 'onElementContextMenu', 'onElementMouseOver', 'onElementMouseOut', 'bindStore'],\n            assign : ['getElementForDependency', 'getElementsForDependency', 'resolveDependencyRecord']\n        };\n    };\n\n    domConfigs  = new Map();\n    drawingLive = false;\n    lastScrollX = null;\n    highlighted = new Map();\n    // Cached lookups\n    visibleResources = null;\n    usingLinks       = null;\n    visibleDateRange = null;\n    relativeTo       = null;\n\n    //endregion\n\n    //region Init & destroy\n\n    construct(client, config) {\n        super.construct(client, config);\n\n        const { scheduledEventName } = client;\n\n        client.ion({\n            svgCanvasCreated                            : 'onSVGReady',\n            // These events trigger live refresh behaviour\n            animationStart                              : 'refresh',\n            // eventDrag in Scheduler, taskDrag in Gantt\n            [scheduledEventName + 'DragStart']          : 'refresh',\n            [scheduledEventName + 'DragAbort']          : 'refresh',\n            [scheduledEventName + 'ResizeStart']        : 'refresh',\n            [scheduledEventName + 'SegmentDragStart']   : 'refresh',\n            [scheduledEventName + 'SegmentResizeStart'] : 'refresh',\n            // These events shift the surroundings to such extent that grid cache needs rebuilding to be sure that\n            // all dependencies are considered\n            timelineViewportResize                      : 'reset',\n            timeAxisViewModelUpdate                     : 'reset',\n            toggleNode                                  : 'reset',\n            thisObj                                     : this\n        });\n\n        client.rowManager.ion({\n            refresh           : 'reset', // For example when changing barMargin or rowHeight\n            changeTotalHeight : 'reset', // For example when collapsing groups\n            thisObj           : this\n        });\n\n        this.bindStore(client.store);\n    }\n\n    doDisable(disable) {\n        if (!this.isConfiguring) {\n            // Need a flag to clear dependencies when disabled, since drawing is otherwise disabled too\n            this._isDisabling = disable;\n            this.draw();\n            this._isDisabling = false;\n        }\n\n        super.doDisable(disable);\n    }\n\n    //endregion\n\n    //region RefreshTriggers\n\n    get rowStore() {\n        return this.client.isVertical ? this.client.resourceStore : this.client.store;\n    }\n\n    // React to replacing or refreshing a display store\n    bindStore(store) {\n        const me = this;\n\n        if (!me.client.isVertical) {\n            me.detachListeners('store');\n\n            if (me.client.usesDisplayStore) {\n                store?.ion({\n                    name    : 'store',\n                    refresh : 'onStoreRefresh',\n                    thisObj : me\n                });\n\n                me.reset();\n            }\n        }\n    }\n\n    onStoreRefresh() {\n        this.reset();\n    }\n\n    // <remove-on-release>\n    // TODO: Need toggleNode, viewportResize, translateRow, changeTotalHeight, idChange ?\n    // </remove-on-release>\n\n    attachToProject(project) {\n        super.attachToProject(project);\n\n        project?.ion({\n            name            : 'project',\n            commitFinalized : 'reset',\n            thisObj         : this\n        });\n    }\n\n    attachToResourceStore(resourceStore) {\n        super.attachToResourceStore(resourceStore);\n\n        resourceStore?.ion({\n            name    : 'resourceStore',\n            change  : 'onResourceStoreChange',\n            refresh : 'onResourceStoreChange',\n            thisObj : this\n        });\n    }\n\n    onResourceStoreChange() {\n        // Might have added or removed links, need to re-cache the flag\n        this.usingLinks = null;\n        this.reset();\n    }\n\n    attachToEventStore(eventStore) {\n        super.attachToEventStore(eventStore);\n\n        eventStore?.ion({\n            name    : 'eventStore',\n            refresh : 'reset',\n            thisObj : this\n        });\n    }\n\n    attachToAssignmentStore(assignmentStore) {\n        super.attachToAssignmentStore(assignmentStore);\n\n        assignmentStore?.ion({\n            name    : 'assignmentStore',\n            refresh : 'reset',\n            thisObj : this\n        });\n    }\n\n    attachToDependencyStore(dependencyStore) {\n        super.attachToDependencyStore(dependencyStore);\n\n        dependencyStore?.ion({\n            name    : 'dependencyStore',\n            change  : 'reset',\n            refresh : 'reset',\n            thisObj : this\n        });\n    }\n\n    updateDrawOnScroll(drawOnScroll) {\n        const me = this;\n\n        me.detachListeners('scroll');\n\n        if (drawOnScroll) {\n            me.client.ion({\n                name             : 'scroll',\n                scroll           : 'doRefresh',\n                horizontalScroll : 'onHorizontalScroll',\n                prio             : -100, // After Scheduler draws on scroll, since we target elements\n                thisObj          : me\n            });\n        }\n        else {\n            me.client.scrollable.ion({\n                name      : 'scroll',\n                scrollEnd : 'draw',\n                thisObj   : me\n            });\n\n            me.client.timeAxisSubGrid.scrollable.ion({\n                name      : 'scroll',\n                scrollEnd : 'draw',\n                thisObj   : me\n            });\n        }\n    }\n\n    onHorizontalScroll({ subGrid, scrollX }) {\n        if (scrollX !== this.lastScrollX && subGrid === this.client.timeAxisSubGrid) {\n            this.lastScrollX = scrollX;\n            this.draw();\n        }\n    }\n\n    onPaint() {\n        this.refresh();\n    }\n\n    //endregion\n\n    //region Dependency types\n\n    // Used by DependencyField\n    static getLocalizedDependencyType(type) {\n        return type ? this.L(`L{DependencyType.${type}}`) : '';\n    }\n\n    //endregion\n\n    //region Elements\n\n    getElementForDependency(dependency, fromAssignment, toAssignment) {\n        return this.getElementsForDependency(dependency, fromAssignment, toAssignment)[0];\n    }\n\n    // NOTE: If we ever make this public we should change it to use the syncIdMap. Currently not needed since only\n    // used in tests\n    getElementsForDependency(dependency, fromAssignment, toAssignment) {\n        // Selector targeting all instances of a dependency\n        let selector = `[data-dep-id=\"${dependency.id}\"]`;\n\n        // Optionally narrow it down to a single instance (assignment)\n        if (fromAssignment) {\n            selector += `[data-from-id=\"${fromAssignment.id}\"]`;\n        }\n        if (toAssignment) {\n            selector += `[data-to-id=\"${toAssignment.id}\"]`;\n        }\n\n        return Array.from(this.client.svgCanvas.querySelectorAll(selector));\n    }\n\n    /**\n     * Returns the dependency record for a DOM element\n     * @param {HTMLElement} element The dependency line element\n     * @returns {Scheduler.model.DependencyModel} The dependency record\n     */\n    resolveDependencyRecord(element) {\n        return element.elementData?.dependency;\n    }\n\n    isDependencyElement(element) {\n        return element.matches(`.${this.baseCls}`);\n    }\n\n    //endregion\n\n    //region DOM Events\n\n    onElementClick(event) {\n        const dependency = this.resolveDependencyRecord(event.target);\n\n        if (dependency) {\n            const eventName = eventNameMap[event.type];\n\n            /**\n             * Fires on the owning Scheduler/Gantt when a context menu event is registered on a dependency line.\n             * @event dependencyContextMenu\n             * @on-owner\n             * @param {Scheduler.view.Scheduler} source The scheduler\n             * @param {Scheduler.model.DependencyModel} dependency\n             * @param {MouseEvent} event\n             */\n            /**\n             * Fires on the owning Scheduler/Gantt when a click is registered on a dependency line.\n             * @event dependencyClick\n             * @on-owner\n             * @param {Scheduler.view.Scheduler} source The scheduler\n             * @param {Scheduler.model.DependencyModel} dependency\n             * @param {MouseEvent} event\n             */\n            /**\n             * Fires on the owning Scheduler/Gantt when a double click is registered on a dependency line.\n             * @event dependencyDblClick\n             * @on-owner\n             * @param {Scheduler.view.Scheduler} source The scheduler\n             * @param {Scheduler.model.DependencyModel} dependency\n             * @param {MouseEvent} event\n             */\n            this.client.trigger(`dependency${eventName}`, {\n                dependency,\n                event\n            });\n        }\n    }\n\n    onElementDblClick(event) {\n        return this.onElementClick(event);\n    }\n\n    onElementContextMenu(event) {\n        return this.onElementClick(event);\n    }\n\n    onElementMouseOver(event) {\n        const\n            me         = this,\n            dependency = me.resolveDependencyRecord(event.target);\n\n        if (dependency) {\n            /**\n             * Fires on the owning Scheduler/Gantt when the mouse moves over a dependency line.\n             * @event dependencyMouseOver\n             * @on-owner\n             * @param {Scheduler.view.Scheduler} source The scheduler\n             * @param {Scheduler.model.DependencyModel} dependency\n             * @param {MouseEvent} event\n             */\n            me.client.trigger('dependencyMouseOver', {\n                dependency,\n                event\n            });\n\n            if (me.overCls) {\n                me.highlight(dependency);\n            }\n        }\n    }\n\n    onElementMouseOut(event) {\n        const\n            me         = this,\n            dependency = me.resolveDependencyRecord(event.target);\n\n        if (dependency) {\n            /**\n             * Fires on the owning Scheduler/Gantt when the mouse moves out of a dependency line.\n             * @event dependencyMouseOut\n             * @on-owner\n             * @param {Scheduler.view.Scheduler} source The scheduler\n             * @param {Scheduler.model.DependencyModel} dependency\n             * @param {MouseEvent} event\n             */\n            me.client.trigger('dependencyMouseOut', {\n                dependency,\n                event\n            });\n\n            if (me.overCls) {\n                me.unhighlight(dependency);\n            }\n        }\n    }\n\n    //endregion\n\n    //region Export\n\n    // Export calls this fn to determine if a dependency should be included or not\n    isDependencyVisible(dependency) {\n        const\n            me           = this,\n            { rowStore } = me,\n            {\n                fromEvent,\n                toEvent\n            }            = dependency;\n\n        // Bail out early in case source or target doesn't exist\n        if (!fromEvent || !toEvent) {\n            return false;\n        }\n\n        const\n            fromResource = fromEvent.resource,\n            toResource   = toEvent.resource;\n\n        // Verify these are real existing Resources and not collapsed away (resource not existing in resource store)\n        if (!rowStore.isAvailable(fromResource) || !rowStore.isAvailable(toResource)) {\n            return false;\n        }\n\n        return fromEvent.isModel &&\n            !fromResource.instanceMeta(rowStore).hidden &&\n            !toResource.instanceMeta(rowStore).hidden;\n    }\n\n    //endregion\n\n    //region Highlight\n\n    updateHighlightDependenciesOnEventHover(enable) {\n        const me = this;\n\n        if (enable) {\n            const { client } = me;\n\n            client.ion({\n                name                                       : 'highlightOnHover',\n                [`${client.scheduledEventName}MouseEnter`] : params => me.highlightEventDependencies(params.eventRecord || params.taskRecord),\n                [`${client.scheduledEventName}MouseLeave`] : params => me.unhighlightEventDependencies(params.eventRecord || params.taskRecord),\n                thisObj                                    : me\n            });\n        }\n        else {\n            me.detachListeners('highlightOnHover');\n        }\n    }\n\n    highlight(dependency, cls = this.overCls) {\n        let classes = this.highlighted.get(dependency);\n\n        if (!classes) {\n            this.highlighted.set(dependency, classes = new Set());\n        }\n\n        classes.add(cls);\n\n        // Update element directly instead of refreshing and letting DomSync handle it,\n        // to optimize highlight performance with many dependencies on screen\n        for (const element of this.getElementsForDependency(dependency)) {\n            element.classList.add(cls);\n        }\n    }\n\n    unhighlight(dependency, cls = this.overCls) {\n        const classes = this.highlighted.get(dependency);\n\n        if (classes) {\n            classes.delete(cls);\n\n            if (!classes.size) {\n                this.highlighted.delete(dependency);\n            }\n        }\n\n        // Update element directly instead of refreshing and letting DomSync handle it,\n        // to optimize highlight performance with many dependencies on screen\n        for (const element of this.getElementsForDependency(dependency)) {\n            element.classList.remove(cls);\n        }\n    }\n\n    highlightEventDependencies(timespan, cls) {\n        timespan.dependencies.forEach(dep => this.highlight(dep, cls));\n    }\n\n    unhighlightEventDependencies(timespan, cls) {\n        timespan.dependencies.forEach(dep => this.unhighlight(dep, cls));\n    }\n\n    //endregion\n\n    //region Drawing\n\n    // Implemented in DependencyGridCache to return dependencies that might intersect the current viewport and thus\n    // should be considered for drawing. Fallback value here is used when there is no grid cache (which happens when it\n    // is reset. Also useful in case we want to have it configurable or opt out automatically for small datasets)\n    getDependenciesToConsider(startMS, endMS, startIndex, endIndex) {\n        // Get records from grid cache\n        return super.getDependenciesToConsider?.(startMS, endMS, startIndex, endIndex) ??\n            // Falling back to using all valid deps (fix for not trying to draw conflicted deps)\n            this.project.dependencyStore.records.filter(d => d.isValid);\n    }\n\n    // String key used as syncId\n    getDependencyKey(dependency, fromAssignment, toAssignment) {\n        return `dep:${dependency.id};from:${fromAssignment.id};to:${toAssignment.id}`;\n    }\n\n    // <remove-on-release>\n    // Draw a single dependency, if it is in view (overridden in Gantt)\n    // TODO: Was public\n    // </remove-on-release>\n    drawDependency(dependency, batch = false, forceBoxes = null) {\n        const\n            me           = this,\n            {\n                domConfigs,\n                client,\n                rowStore,\n                topIndex,\n                bottomIndex\n            }            = me,\n            {\n                eventStore,\n                useInitialAnimation\n            }            = client,\n            { idMap }    = rowStore,\n            {\n                startMS,\n                endMS\n            }            = me.visibleDateRange,\n            {\n                fromEvent,\n                toEvent\n            }            = dependency;\n\n        let fromAssigned = fromEvent.assigned,\n            toAssigned   = toEvent.assigned;\n\n        if (\n            // No point in trying to draw dep between unscheduled/non-existing events\n            fromEvent.isScheduled && toEvent.isScheduled &&\n            // Or between filtered out events\n            eventStore.includes(fromEvent) && eventStore.includes(toEvent) &&\n            // Or unassigned ones\n            fromAssigned?.size && toAssigned?.size\n        ) {\n            // Add links, if used\n            if (me.usingLinks) {\n                fromAssigned = [...fromAssigned].flatMap(collectLinkedAssignments);\n                toAssigned = [...toAssigned].flatMap(collectLinkedAssignments);\n            }\n\n            for (const from of fromAssigned) {\n                for (const to of toAssigned) {\n                    const\n                        // Using direct lookup in idMap instead of indexOf() for performance.\n                        // Resource might be filtered out or not exist at all\n                        fromIndex  = idMap[from.resource?.id]?.index,\n                        toIndex    = idMap[to.resource?.id]?.index,\n                        fromDateMS = Math.min(fromEvent.startDateMS, toEvent.startDateMS),\n                        toDateMS   = Math.max(fromEvent.endDateMS, toEvent.endDateMS);\n\n                    // Draw only if dependency intersects view, unless it is part of an export\n                    if (\n                        client.isExporting || fromIndex != null && toIndex != null &&\n                        (from.drawDependencies !== false && to.drawDependencies !== false) &&\n                        (rowStore.isAvailable(from.resource) && (rowStore.isAvailable(to.resource))) && !(\n                            // Both ends above view\n                            (fromIndex < topIndex && toIndex < topIndex) ||\n                            // Both ends below view\n                            (fromIndex > bottomIndex && toIndex > bottomIndex) ||\n                            // Both ends before view\n                            (fromDateMS < startMS && toDateMS < startMS) ||\n                            // Both ends after view\n                            (fromDateMS > endMS && toDateMS > endMS)\n                        )\n                    ) {\n                        const\n                            key            = me.getDependencyKey(dependency, from, to),\n                            lineDomConfigs = me.getDomConfigs(dependency, from, to, forceBoxes);\n\n                        if (lineDomConfigs) {\n                            // Allow deps to match animation delay of their events (the bottommost one) when fading in\n                            if (useInitialAnimation) {\n                                lineDomConfigs[0].style = {\n                                    animationDelay : `${Math.max(fromIndex, toIndex) / 20 * 1000}ms`\n                                };\n                            }\n\n                            domConfigs.set(key, lineDomConfigs);\n                        }\n                        // No room to draw a line\n                        else {\n                            domConfigs.delete(key);\n                        }\n                    }\n\n                    // Give mixins a shot at running code after a dependency is drawn. Used by grid cache to cache the\n                    // dependency (when needed)\n                    me.afterDrawDependency(dependency, fromIndex, toIndex, fromDateMS, toDateMS);\n                }\n            }\n        }\n\n        if (!batch) {\n            me.domSync();\n        }\n    }\n\n    // Hooks used by grid cache, to keep code in this file readable\n    afterDrawDependency(dependency, fromIndex, toIndex, fromDateMS, toDateMS) {\n        super.afterDrawDependency?.(dependency, fromIndex, toIndex, fromDateMS, toDateMS);\n    }\n\n    beforeDraw() {\n        super.beforeDraw?.();\n    }\n\n    afterDraw() {\n        super.afterDraw?.();\n    }\n\n    // Update DOM\n    domSync(targetElement = this.client.svgCanvas) {\n        DomSync.sync({\n            targetElement,\n            domConfig : {\n                onlyChildren : true,\n                children     : Array.from(this.domConfigs.values()).flat()\n            },\n            syncIdField      : 'syncId',\n            releaseThreshold : 0,\n            strict           : true,\n            callback() {\n                // <remove-on-release>\n                // TODO: trigger events\n                // </remove-on-release>\n            }\n        });\n    }\n\n    fillDrawingCache() {\n        const\n            me         = this,\n            { client } = me;\n\n        // Cache subgrid bounds for the duration of this draw call to not have to figure it out per dep\n        me.relativeTo = Rectangle.from(client.foregroundCanvas);\n\n        // Cache other lookups too\n        me.visibleResources = client.visibleResources;\n        me.visibleDateRange = client.visibleDateRange;\n\n        me.topIndex     = me.rowStore.indexOf(me.visibleResources.first);\n        me.bottomIndex  = me.rowStore.indexOf(me.visibleResources.last);\n\n        // Cache link lookup, to avoid semi-expensive flatMap calls in drawDependency\n        if (me.usingLinks == null) {\n            me.usingLinks = client.resourceStore.some(r => r.hasLinks);\n        }\n    }\n\n    // Draw all dependencies intersecting the current viewport immediately\n    draw() {\n        const\n            me         = this,\n            { client } = me;\n\n        if (client.refreshSuspended || !client.foregroundCanvas || !client.isEngineReady || (me.disabled && !me._isDisabling) || client.isExporting) {\n            return;\n        }\n\n        me.fillDrawingCache();\n\n        me.domConfigs.clear();\n\n        // Nothing to draw if there are no rows or no ticks or we are disabled\n        if (client.firstVisibleRow && client.lastVisibleRow && client.timeAxis.count && !me.disabled &&\n            (me.visibleDateRange.endMS - me.visibleDateRange.startMS > 0)\n        ) {\n            const\n                { visibleDateRange } = client,\n                {\n                    topIndex,\n                    bottomIndex\n                }                   = me,\n                dependencies        = me.getDependenciesToConsider(visibleDateRange.startMS, visibleDateRange.endMS, topIndex, bottomIndex);\n\n            // Give mixins a shot at doing something before deps are drawn. Used by grid cache to determine if\n            // the cache should be rebuilt\n            me.beforeDraw();\n\n            for (const dependency of dependencies) {\n                me.drawDependency(dependency, true);\n            }\n\n            // Give mixins a shot at doing something after all deps are drawn\n            me.afterDraw();\n        }\n\n        me.domSync();\n\n        client.trigger('dependenciesDrawn');\n    }\n\n    //endregion\n\n    //region Refreshing\n\n    // Performs a draw on next frame, not intended to be called directly, call refresh() instead\n    doRefresh() {\n        const\n            me                     = this,\n            { client }             = me,\n            { scheduledEventName } = client;\n\n        me.draw();\n\n        // Refresh each frame during animations, during dragging & resizing  (if we have dependencies)\n        me.drawingLive = client.dependencyStore.count &&\n            (\n                client.isAnimating || (client.useInitialAnimation && client.eventStore.count) ||\n                client.features[`${scheduledEventName}Drag`]?.isActivelyDragging ||\n                client.features[`${scheduledEventName}Resize`]?.isResizing ||\n                client.features[`${scheduledEventName}SegmentDrag`]?.isActivelyDragging ||\n                client.features[`${scheduledEventName}SegmentResize`]?.isResizing\n            );\n\n        me.drawingLive && me.refresh();\n    }\n\n    /**\n     * Redraws dependencies on the next animation frame\n     */\n    refresh() {\n        const { client } = this;\n\n        // Queue up a draw unless refresh is suspended\n        if (!client.refreshSuspended && !this.disabled && client.isPainted && !client.timeAxisSubGrid.collapsed) {\n            this.doRefresh();\n        }\n    }\n\n    // Resets grid cache and performs a draw on next frame. Conditions when it should be called:\n    // * Zooming\n    // * Shifting time axis\n    // * Resizing window\n    // * CRUD\n    // ...\n    reset() {\n        super.reset?.();\n        this.refresh();\n    }\n\n    /**\n     * Draws all dependencies for the specified task.\n     * @deprecated 5.1 The Dependencies feature was refactored and this fn is no longer needed\n     */\n    drawForEvent() {\n        VersionHelper.deprecate('Scheduler', '6.0.0', 'Dependencies.drawForEvent() is no longer needed');\n        this.refresh();\n    }\n\n    //endregion\n\n    //region Scheduler hooks\n\n    render() {\n        // Pull in the svg canvas early to have it available during drawing\n        this.client.getConfig('svgCanvas');\n    }\n\n    //endregion\n}\n\nGridFeatureManager.registerFeature(Dependencies, false, ['Scheduler', 'ResourceHistogram']);\nGridFeatureManager.registerFeature(Dependencies, true, 'SchedulerPro');\n","import InstancePlugin from '../../Core/mixin/InstancePlugin.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\n\n/**\n * @module Scheduler/feature/EventFilter\n */\n\n/**\n * Adds event filter menu items to the timeline header context menu.\n *\n * {@inlineexample Scheduler/feature/EventFilter.js}\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *   features : {\n *     eventFilter : true // `true` by default, set to `false` to disable the feature and remove the menu item from the timeline header\n *   }\n * });\n * ```\n *\n * This feature is **enabled** by default\n *\n * @extends Core/mixin/InstancePlugin\n * @classtype eventFilter\n * @feature\n */\nexport default class EventFilter extends InstancePlugin {\n\n    static get $name() {\n        return 'EventFilter';\n    }\n\n    static get pluginConfig() {\n        return {\n            chain : ['populateTimeAxisHeaderMenu']\n        };\n    }\n\n    /**\n     * Populates the header context menu items.\n     * @param {Object} options Contains menu items and extra data retrieved from the menu target.\n     * @param {Object<String,MenuItemConfig|Boolean|null>} options.items A named object to describe menu items\n     * @internal\n     */\n    populateTimeAxisHeaderMenu({ items }) {\n        const me = this;\n\n        items.eventsFilter = {\n            text        : 'L{filterEvents}',\n            icon        : 'b-fw-icon b-icon-filter',\n            disabled    : me.disabled,\n            localeClass : me,\n            weight      : 100,\n            menu        : {\n                type        : 'popup',\n                localeClass : me,\n                items       : {\n                    nameFilter : {\n                        weight               : 110,\n                        type                 : 'textfield',\n                        cls                  : 'b-eventfilter b-last-row',\n                        clearable            : true,\n                        keyStrokeChangeDelay : 300,\n                        label                : 'L{byName}',\n                        localeClass          : me,\n                        width                : 200,\n                        internalListeners    : {\n                            change  : me.onEventFilterChange,\n                            thisObj : me\n                        }\n                    }\n                },\n                onBeforeShow({ source : menu }) {\n                    const\n                        [filterByName] = menu.items,\n                        filter         = me.store.filters.getBy('property', 'name');\n\n                    filterByName.value = filter?.value || '';\n                }\n            }\n        };\n    }\n\n    onEventFilterChange({ value }) {\n        if (value !== '') {\n            this.store.filter('name', value);\n        }\n        else {\n            this.store.removeFilter('name');\n        }\n    }\n\n    get store() {\n        const { client } = this;\n\n        return client.isGanttBase ? client.store : client.eventStore;\n    }\n}\n\nEventFilter.featureClass = 'b-event-filter';\n\nGridFeatureManager.registerFeature(EventFilter, true, ['Scheduler', 'Gantt']);\nGridFeatureManager.registerFeature(EventFilter, false, 'ResourceHistogram');\n","import DateHelper from '../../../Core/helper/DateHelper.js';\nimport TimeSpan from '../../model/TimeSpan.js';\n\n/**\n * @module Scheduler/feature/mixin/NonWorkingTimeMixin\n */\n\n/**\n * Mixin with functionality shared between {@link Scheduler/feature/NonWorkingTime} and\n * {@link Scheduler/feature/EventNonWorkingTime}.\n * @mixin\n */\nexport default Target => class NonWorkingTimeMixin extends Target {\n    static $name = 'NonWorkingTimeMixin';\n\n    static configurable = {\n        /**\n         * The maximum time axis unit to display non-working ranges for ('hour' or 'day' etc).\n         * When zooming to a view with a larger unit, no non-working time elements will be rendered.\n         *\n         * **Note:** Be careful with setting this config to big units like 'year'. When doing this,\n         * make sure the timeline {@link Scheduler/view/TimelineBase#config-startDate start} and\n         * {@link Scheduler/view/TimelineBase#config-endDate end} dates are set tightly.\n         * When using a long range (for example many years) with non-working time elements rendered per hour,\n         * you will end up with millions of elements, impacting performance.\n         * When zooming, use the {@link Scheduler/view/mixin/TimelineZoomable#config-zoomKeepsOriginalTimespan} config.\n         * @config {'millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year'}\n         * @default\n         */\n        maxTimeAxisUnit : 'week'\n    };\n\n    getNonWorkingTimeRanges(calendar, startDate, endDate) {\n        if (!calendar.getNonWorkingTimeRanges) {\n            const result = [];\n\n            // <remove-on-release>\n            // TODO: Ask arcady if there is a built-in way for this\n            // </remove-on-release>\n\n            calendar.forEachAvailabilityInterval(\n                { startDate, endDate, isForward : true },\n                (intervalStartDate, intervalEndDate, calendarCacheInterval) => {\n                    for (const [entry, cache] of calendarCacheInterval.intervalGroups) {\n                        if (!cache.getIsWorking()) {\n                            result.push({\n                                name      : entry.name,\n                                iconCls   : entry.iconCls,\n                                cls       : entry.cls,\n                                startDate : intervalStartDate,\n                                endDate   : intervalEndDate\n                            });\n                        }\n                    }\n                }\n            );\n\n            return result;\n        }\n\n        return calendar.getNonWorkingTimeRanges(startDate, endDate);\n    }\n\n    getCalendarTimeRanges(calendar, ignoreName = false) {\n        const\n            me                      = this,\n            { timeAxis, fillTicks } = me.client,\n            { unit, increment }     = timeAxis,\n            shouldPaint             = !me.maxTimeAxisUnit || DateHelper.compareUnits(unit, me.maxTimeAxisUnit) <= 0;\n\n        if (calendar && shouldPaint && timeAxis.count) {\n            const\n                allRanges     = me.getNonWorkingTimeRanges(calendar, timeAxis.startDate, timeAxis.endDate),\n                timeSpans     = allRanges.map(interval => new TimeSpan({\n                    name      : interval.name,\n                    cls       : `b-nonworkingtime ${interval.cls || ''}`,\n                    startDate : interval.startDate,\n                    endDate   : interval.endDate\n                })),\n                mergedSpans = [];\n\n            let prevRange = null;\n\n            // intervals returned by the calendar are not merged, let's combine them to yield fewer elements\n            for (const range of timeSpans) {\n                if (prevRange && range.startDate <= prevRange.endDate && (ignoreName || range.name === prevRange.name) && range.duration > 0) {\n                    prevRange.endDate = range.endDate;\n                }\n                else {\n                    mergedSpans.push(range);\n                    range.setData('id', `nonworking-${mergedSpans.length}`);\n                    prevRange = range;\n                }\n            }\n\n            // When filling ticks, non-working-time ranges are cropped to full ticks too\n            if (fillTicks) {\n                mergedSpans.forEach(span => {\n                    span.setStartEndDate(\n                        DateHelper.ceil(span.startDate, { magnitude : increment, unit }),\n                        DateHelper.floor(span.endDate, { magnitude : increment, unit })\n                    );\n                });\n            }\n\n            return mergedSpans;\n        }\n        else {\n            return [];\n        }\n    }\n\n    //region Basic scheduler calendar\n\n    setupDefaultCalendar() {\n        const { client, project } = this;\n\n        if (\n            // Might have been set up by NonWorkingTime / EventNonWorkingTime already\n            !this.autoGeneratedWeekends &&\n            // For basic scheduler...\n            !client.isSchedulerPro &&\n            !client.isGantt &&\n            // ...that uses the default calendar...\n            project.effectiveCalendar === project.defaultCalendar &&\n            // ...and has no defined intervals\n            !project.defaultCalendar.intervalStore.count\n        ) {\n            this.autoGeneratedWeekends = true;\n            this.updateDefaultCalendar();\n        }\n    }\n\n    updateDefaultCalendar() {\n        if (this.autoGeneratedWeekends) {\n            const\n                calendar     = this.client.project.effectiveCalendar,\n                intervals    = this.defaultNonWorkingIntervals,\n                hasIntervals = Boolean(intervals.length);\n\n            calendar.clearIntervals(hasIntervals);\n\n            // Update weekends as non-working time\n            if (hasIntervals) {\n                calendar.addIntervals(intervals);\n            }\n        }\n    }\n\n    updateLocalization() {\n        super.updateLocalization?.();\n\n        this.autoGeneratedWeekends && this.updateDefaultCalendar();\n    }\n\n    get defaultNonWorkingIntervals() {\n        const dayNames  = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n        return DateHelper.nonWorkingDaysAsArray.map(dayIndex => ({\n            recurrentStartDate : `on ${dayNames[dayIndex]} at 0:00`,\n            recurrentEndDate   : `on ${dayNames[(dayIndex + 1) % 7]} at 0:00`,\n            isWorking          : false\n        }));\n    }\n\n    //endregion\n};\n","import AbstractTimeRanges from './AbstractTimeRanges.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\nimport VersionHelper from '../../Core/helper/VersionHelper.js';\nimport AttachToProjectMixin from '../data/mixin/AttachToProjectMixin.js';\nimport NonWorkingTimeMixin from './mixin/NonWorkingTimeMixin.js';\n\n/**\n * @module Scheduler/feature/NonWorkingTime\n */\n\n/**\n * Feature that allows styling of weekends (and other non working time) by adding timeRanges for those days.\n *\n * {@inlineexample Scheduler/feature/NonWorkingTime.js}\n *\n * By default, the basic Scheduler's calendar is empty. When enabling this feature in the basic Scheduler, it injects\n * Saturday and Sunday weekend intervals if no intervals are encountered. For Scheduler Pro, it visualizes the project\n * calendar and does not automatically inject anything. You have to define a Calendar in the application and assign it\n * to the project, for more information on how to do that, please see Scheduler Pro's Scheduling/Calendars guide.\n *\n * Please note that to not clutter the view (and have a large negative effect on performance) the feature does not\n * render ranges shorter than the base unit used by the time axis. The behavior can be disabled with\n * {@link #config-hideRangesOnZooming} config.\n *\n * The feature also bails out of rendering ranges for very zoomed out views completely for the same reasons (see\n * {@link #config-maxTimeAxisUnit} for details).\n *\n * Also note that the feature uses virtualized rendering, only the currently visible non-working-time ranges are\n * available in the DOM.\n *\n * This feature is **off** by default for Scheduler, but **enabled** by default for Scheduler Pro.\n * For info on enabling it, see {@link Grid/view/mixin/GridFeatures}.\n *\n * @extends Scheduler/feature/AbstractTimeRanges\n * @demo Scheduler/nonworkingdays\n * @classtype nonWorkingTime\n * @mixes Scheduler/feature/mixin/NonWorkingTimeMixin\n * @feature\n */\nexport default class NonWorkingTime extends AbstractTimeRanges.mixin(AttachToProjectMixin, NonWorkingTimeMixin) {\n    //region Default config\n\n    static $name = 'NonWorkingTime';\n\n    /** @hideconfigs enableResizing, store*/\n\n    static get defaultConfig() {\n        return {\n            /**\n             * Set to `true` to highlight non working periods of time\n             * @config {Boolean}\n             * @deprecated Since 5.2.0, will be removed since the feature is pointless if set to false\n             */\n            highlightWeekends : null,\n\n            /**\n             * The feature by default does not render ranges smaller than the base unit used by the time axis.\n             * Set this config to `false` to disable this behavior.\n             *\n             * <div class=\"note\">The {@link #config-maxTimeAxisUnit} config defines a zoom level at which to bail out of\n             * rendering ranges completely.</div>\n             * @config {Boolean}\n             * @default\n             */\n            hideRangesOnZooming : true,\n\n            showHeaderElements : true,\n            showLabelInBody    : true,\n\n            autoGeneratedWeekends : false\n        };\n    }\n\n    static pluginConfig = {\n        chain : [\n            'onPaint',\n            'attachToProject',\n            'updateLocalization',\n            'onConfigChange',\n            'onSchedulerHorizontalScroll'\n        ]\n    };\n\n    //endregion\n\n    //region Init & destroy\n\n    doDestroy() {\n        this.attachToCalendar(null);\n        super.doDestroy();\n    }\n\n    set highlightWeekends(highlight) {\n        VersionHelper.deprecate('Scheduler', '6.0.0', 'Deprecated in favour of disabling the feature');\n\n        this.disabled = !highlight;\n    }\n\n    get highlightWeekends() {\n        return !this.disabled;\n    }\n\n    onConfigChange({ name }) {\n        if (!this.isConfiguring && name === 'fillTicks') {\n            this.refresh();\n        }\n    }\n\n    //endregion\n\n    //region Project\n\n    attachToProject(project) {\n        super.attachToProject(project);\n\n        this.attachToCalendar(project.effectiveCalendar);\n\n        // if there's no graph yet - need to delay this call until it appears, but not for scheduler\n        if (!project.graph && !this.client.isScheduler) {\n            project.ion({\n                name      : 'project',\n                dataReady : { fn : () => this.attachToCalendar(project.effectiveCalendar), once : true },\n                thisObj   : this\n            });\n        }\n\n        project.ion({\n            name           : 'project',\n            calendarChange : () => this.attachToCalendar(project.effectiveCalendar),\n            thisObj        : this\n        });\n    }\n\n    //endregion\n\n    //region TimeAxisViewModel\n\n    onTimeAxisViewModelUpdate(...args) {\n        this._timeAxisUnitDurationMs = null;\n        return super.onTimeAxisViewModelUpdate(...args);\n    }\n\n    //endregion\n\n    //region Calendar\n\n    attachToCalendar(calendar) {\n        const\n            me                  = this,\n            { project, client } = me;\n\n        me.detachListeners('calendar');\n\n        me.autoGeneratedWeekends = false;\n\n        if (calendar) {\n            // Sets up a default weekend calendar for basic Scheduler, when no calendar is set\n            me.setupDefaultCalendar();\n\n            calendar.intervalStore.ion({\n                name   : 'calendar',\n                change : () => me.setTimeout(() => me.refresh(), 1)\n            });\n        }\n\n        // On changing calendar we react to a data level event which is triggered after project refresh.\n        // Redraw right away\n        if (client.isEngineReady && !client.project.isDelayingCalculation && !client.isDestroying) {\n            me.refresh();\n        }\n        // Initially there is no guarantee we are ready to draw, wait for refresh\n        else if (!project.isDestroyed) {\n            me.detachListeners('initialProjectListener');\n            project.ion({\n                name : 'initialProjectListener',\n                refresh({ isCalculated }) {\n                    // Cant render early, have to wait for calculations\n                    if (isCalculated !== false) {\n                        me.refresh();\n                        me.detachListeners('initialProjectListener');\n                    }\n                },\n                thisObj : me\n            });\n        }\n    }\n\n    get calendar() {\n        return this.project?.effectiveCalendar;\n    }\n\n    //endregion\n\n    //region Draw\n\n    get timeAxisUnitDurationMs() {\n        // calculate and cache duration of the timeAxis unit in milliseconds\n        if (!this._timeAxisUnitDurationMs) {\n            this._timeAxisUnitDurationMs = DateHelper.as('ms', 1, this.client.timeAxis.unit);\n        }\n\n        return this._timeAxisUnitDurationMs;\n    }\n\n    /**\n     * Based on this method result the feature decides whether the provided non-working period should\n     * be rendered or not.\n     * The method checks that the range has non-zero {@link Scheduler.model.TimeSpan#field-duration},\n     * lays in the visible timespan and its duration is longer or equal the base timeaxis unit\n     * (if {@link #config-hideRangesOnZooming} is `true`).\n     *\n     * Override the method to implement your custom range rendering vetoing logic.\n     * @param {Scheduler.model.TimeSpan} range Range to render.\n     * @returns {Boolean} `true` if the range should be rendered and `false` otherwise.\n     */\n    shouldRenderRange(range) {\n        // if the range is longer or equal than one timeAxis unit then render it\n        return super.shouldRenderRange(range) && (!this.hideRangesOnZooming || range.durationMS >= this.timeAxisUnitDurationMs);\n    }\n\n    // Calendar intervals as TimeSpans, with adjacent intervals merged to create fewer\n    get timeRanges() {\n        const me = this;\n\n        if (!me._timeRanges) {\n            me._timeRanges = me.getCalendarTimeRanges(me.calendar);\n        }\n\n        return me._timeRanges;\n    }\n\n    //endregion\n}\n\nGridFeatureManager.registerFeature(NonWorkingTime, false, 'Scheduler');\nGridFeatureManager.registerFeature(NonWorkingTime, true, ['SchedulerPro', 'Gantt', 'ResourceHistogram']);\n","import InstancePlugin from '../../Core/mixin/InstancePlugin.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport Tooltip from '../../Core/widget/Tooltip.js';\nimport ClockTemplate from '../tooltip/ClockTemplate.js';\nimport EventHelper from '../../Core/helper/EventHelper.js';\n\n/**\n * @module Scheduler/feature/ScheduleTooltip\n */\n\n/**\n * Feature that displays a tooltip containing the time at the mouse position when hovering empty parts of the schedule.\n * To hide the schedule tooltip, just disable this feature:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         scheduleTooltip : false\n *     }\n * });\n * ```\n *\n * You can also output a message along with the default time indicator (to indicate resource availability etc)\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *    features : {\n *       scheduleTooltip : {\n *           getText(date, event, resource) {\n *               return 'Hovering ' + resource.name;\n *           }\n *       }\n *   }\n * });\n * ```\n *\n * To take full control over the markup shown in the tooltip you can override the {@link #function-generateTipContent} method:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         scheduleTooltip : {\n *             generateTipContent({ date, event, resourceRecord }) {\n *                 return `\n *                     <dl>\n *                         <dt>Date</dt><dd>${date}</dd>\n *                         <dt>Resource</dt><dd>${resourceRecord.name}</dd>\n *                     </dl>\n *                 `;\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * Configuration properties from the feature are passed down into the resulting {@link Core.widget.Tooltip} instance.\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         scheduleTooltip : {\n *             // Don't show the tip until the mouse has been over the schedule for three seconds\n *             hoverDelay : 3000\n *         }\n *     }\n * });\n * ```\n *\n * @extends Core/mixin/InstancePlugin\n * @demo Scheduler/basic\n * @inlineexample Scheduler/feature/ScheduleTooltip.js\n * @classtype scheduleTooltip\n * @feature\n */\nexport default class ScheduleTooltip extends InstancePlugin {\n    //region Config\n\n    static get $name() {\n        return 'ScheduleTooltip';\n    }\n\n    static get configurable() {\n        return {\n            messageTemplate : data => `<div class=\"b-sch-hovertip-msg\">${data.message}</div>`,\n\n            /**\n             * Set to `true` to hide this tooltip when hovering non-working time. Defaults to `false` for Scheduler,\n             * `true` for SchedulerPro\n             * @config {Boolean}\n             */\n            hideForNonWorkingTime : null\n        };\n    }\n\n    // Plugin configuration. This plugin chains some of the functions in Grid.\n    static get pluginConfig() {\n        return {\n            chain : ['onPaint']\n        };\n    }\n\n    //endregion\n\n    //region Init\n\n    /**\n     * Set up drag and drop and hover tooltip.\n     * @private\n     */\n    onPaint({ firstPaint }) {\n        if (!firstPaint) {\n            return;\n        }\n\n        const\n            me         = this,\n            { client } = me;\n\n        if (client.isSchedulerPro && me.hideForNonWorkingTime === undefined) {\n            me.hideForNonWorkingTime = true;\n        }\n\n        let reshowListener;\n\n        const tip = me.hoverTip = new Tooltip({\n            id                       : `${client.id}-schedule-tip`,\n            cls                      : 'b-sch-scheduletip',\n            allowOver                : true,\n            hoverDelay               : 0,\n            hideDelay                : 100,\n            showOnHover              : true,\n            forElement               : client.timeAxisSubGridElement,\n            anchorToTarget           : false,\n            trackMouse               : true,\n            updateContentOnMouseMove : true,\n            // disable text content and monitor resize for tooltip, otherwise it doesn't\n            // get sized properly on first appearance\n            monitorResize            : false,\n            textContent              : false,\n            forSelector              : '.b-schedulerbase:not(.b-dragging-event):not(.b-dragcreating) .b-grid-body-container:not(.b-scrolling) .b-timeline-subgrid:not(.b-scrolling) > :not(.b-sch-foreground-canvas):not(.b-group-footer):not(.b-group-row) *',\n            // Do not constrain at all, want it to be able to go outside of the viewport to not get in the way\n            getHtml                  : me.getHoverTipHtml.bind(me),\n            onDocumentMouseDown(event) {\n                // Click on the scheduler hides until the very next\n                // non-button-pressed mouse move!\n                if (tip.forElement.contains(event.event.target)) {\n                    reshowListener = EventHelper.on({\n                        thisObj   : me,\n                        element   : client.timeAxisSubGridElement,\n                        mousemove : e => tip.internalOnPointerOver(e),\n                        capture   : true\n                    });\n                }\n\n                const hideAnimation = tip.hideAnimation;\n                tip.hideAnimation = false;\n                tip.constructor.prototype.onDocumentMouseDown.call(tip, event);\n                tip.hideAnimation = hideAnimation;\n            },\n            // on Core/mixin/Events constructor, me.config.listeners is deleted and attributed its value to me.configuredListeners\n            // to then on processConfiguredListeners it set me.listeners to our TooltipBase\n            // but since we need our initial config.listeners to set to our internal tooltip, we leave processConfiguredListeners empty\n            // to avoid lost our listeners to apply for our internal tooltip here and force our feature has all Tooltip events firing\n            ...me.config,\n            internalListeners : me.configuredListeners\n        });\n\n        // We have to add our own listener after instantiation because it may conflict with a configured listener\n        tip.ion({\n            pointerover({ event }) {\n                const buttonsPressed = 'buttons' in event ? event.buttons > 0\n                    : event.which > 0; // fallback for Safari which doesn't support 'buttons'\n\n                // This is the non-button-pressed mousemove\n                // after the document mousedown\n                if (!buttonsPressed && reshowListener) {\n                    reshowListener();\n                }\n\n                // Never any tooltip while interaction is ongoing and a mouse button is pressed\n                return !me.disabled && !buttonsPressed;\n            },\n            innerhtmlupdate({ source }) {\n                me.clockTemplate.updateDateIndicator(source.element, me.lastTime);\n            }\n        });\n\n        // Update tooltip after zooming\n        client.ion({\n            timeAxisViewModelUpdate : 'updateTip',\n            thisObj                 : me\n        });\n\n        me.clockTemplate = new ClockTemplate({\n            scheduler : client\n        });\n    }\n\n    // leave configuredListeners alone until render time at which they are used on the tooltip\n    processConfiguredListeners() {}\n\n    updateTip() {\n        if (this.hoverTip.isVisible) {\n            this.hoverTip.updateContent();\n        }\n    }\n\n    doDestroy() {\n        this.destroyProperties('clockTemplate', 'hoverTip');\n        super.doDestroy();\n    }\n\n    //endregion\n\n    //region Contents\n\n    /**\n     * @deprecated Use {@link #function-generateTipContent} instead.\n     * Gets html to display in hover tooltip (tooltip displayed on empty parts of scheduler)\n     * @private\n     */\n    getHoverTipHtml({ tip, event }) {\n        const\n            me        = this,\n            scheduler = me.client,\n            date      = event && scheduler.getDateFromDomEvent(event, 'floor', true);\n\n        let html      = me.lastHtml;\n\n        // event.target might be null in the case of being hosted in a web component https://github.com/bryntum/bryntum-suite/pull/4488\n        if (date && event.target) {\n            const resourceRecord = scheduler.resolveResourceRecord(event);\n\n            // resourceRecord might be null if user hover over the tooltip, but we shouldn't hide the tooltip in this case\n            if ((resourceRecord && (date - me.lastTime !== 0 || resourceRecord.id !== me.lastResourceId))) {\n                if (me.hideForNonWorkingTime) {\n                    const isWorkingTime = resourceRecord.isWorkingTime(date);\n\n                    tip.element.classList.toggle('b-nonworking-time', !isWorkingTime);\n                }\n\n                me.lastResourceId = resourceRecord.id;\n                html              = me.lastHtml = me.generateTipContent({ date, event, resourceRecord });\n            }\n        }\n        else {\n            tip.hide();\n            me.lastTime = null;\n            me.lastResourceId = null;\n        }\n\n        return html;\n    }\n\n    /**\n     * Called as mouse pointer is moved over a new resource or time block. You can override this to show\n     * custom HTML in the tooltip.\n     * @param {Object} context\n     * @param {Date} context.date The date of the hovered point\n     * @param {Event} context.event The DOM event that triggered this tooltip to show\n     * @param {Scheduler.model.ResourceModel} context.resourceRecord The resource record\n     * @returns {String} The HTML contents to show in the tooltip (an empty return value will hide the tooltip)\n     */\n    generateTipContent({ date, event, resourceRecord }) {\n        const\n            me          = this,\n            clockHtml   = me.clockTemplate.generateContent({\n                date,\n                text : me.client.getFormattedDate(date)\n            }),\n            messageHtml = me.messageTemplate({\n                message : me.getText(date, event, resourceRecord) || ''\n            });\n\n        me.lastTime = date;\n\n        return clockHtml + messageHtml;\n    }\n\n    /**\n     * Override this to render custom text to default hover tip\n     * @param {Date} date\n     * @param {Event} event Browser event\n     * @param {Scheduler.model.ResourceModel} resourceRecord The resource record\n     * @returns {String}\n     */\n    getText(date, event, resourceRecord) {}\n\n    //endregion\n}\n\n// <remove-on-release>\n// TODO: Refactor SASS so that auto-generated class name of 'b-' + cls.name.toLowerCase() can be used.\n// </remove-on-release>\nScheduleTooltip.featureClass = 'b-scheduletip';\n\nGridFeatureManager.registerFeature(ScheduleTooltip, true, 'Scheduler');\nGridFeatureManager.registerFeature(ScheduleTooltip, false, 'ResourceUtilization');\n","import HeaderMenu from '../../Grid/feature/HeaderMenu.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\nimport '../../Core/widget/Slider.js';\n\n/**\n * @module Scheduler/feature/TimeAxisHeaderMenu\n */\nconst setTimeSpanOptions = {\n    maintainVisibleStart : true\n};\n\n/**\n * Adds scheduler specific menu items to the timeline header context menu.\n *\n * ## Default timeaxis header menu items\n *\n * Here is the list of menu items provided by this and other features:\n *\n * | Reference          | Text                  | Weight | Feature                                           | Description                  |\n * |--------------------|-----------------------|--------|---------------------------------------------------|------------------------------|\n * | `eventsFilter`     | Filter tasks          | 100    | {@link Scheduler.feature.EventFilter EventFilter} | Submenu for event filtering  |\n * | \\>`nameFilter`     | By name               | 110    | {@link Scheduler.feature.EventFilter EventFilter} | Filter by `name`             |\n * | `zoomLevel`        | Zoom                  | 200    | *This feature*                                    | Submenu for timeline zooming |\n * | \\>`zoomSlider`     | -                     | 210    | *This feature*                                    | Changes current zoom level   |\n * | `dateRange`        | Date range            | 300    | *This feature*                                    | Submenu for timeline range   |\n * | \\>`startDateField` | Start date            | 310    | *This feature*                                    | Start date for the timeline  |\n * | \\>`endDateField`   | End date              | 320    | *This feature*                                    | End date for the timeline    |\n * | \\>`leftShiftBtn`   | <                     | 330    | *This feature*                                    | Shift backward               |\n * | \\>`todayBtn`       | Today                 | 340    | *This feature*                                    | Go to today                  |\n * | \\>`rightShiftBtn`  | \\>                    | 350    | *This feature*                                    | Shift forward                |\n * | `currentTimeLine`  | Show current timeline | 400    | {@link Scheduler.feature.TimeRanges TimeRanges}   | Show current time line       |\n *\n * \\> - first level of submenu\n *\n * ## Customizing the menu items\n *\n * The menu items in the TimeAxis Header menu can be customized, existing items can be changed or removed,\n * and new items can be added. This is handled using the `items` config of the feature.\n *\n * ### Add extra items:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         timeAxisHeaderMenu : {\n *             items : {\n *                 extraItem : {\n *                     text : 'Extra',\n *                     icon : 'b-fa b-fa-fw b-fa-flag',\n *                     onItem() {\n *                         ...\n *                     }\n *                 }\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * ### Remove existing items:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         timeAxisHeaderMenu : {\n *             items : {\n *                 zoomLevel : false\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * ### Customize existing item:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         timeAxisHeaderMenu : {\n *             items : {\n *                 zoomLevel : {\n *                     text : 'Scale'\n *                 }\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * ### Customizing submenu items:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *      features : {\n *          timeAxisHeaderMenu : {\n *              items : {\n *                  dateRange : {\n *                      menu : {\n *                          items : {\n *                              todayBtn : {\n *                                  text : 'Now'\n *                              }\n *                          }\n *                      }\n *                  }\n *              }\n *          }\n *      }\n * });\n * ```\n *\n * ### Manipulate existing items:\n *\n * ```javascript\n * const scheduler = new Scheduler({\n *     features : {\n *         timeAxisHeaderMenu : {\n *             // Process items before menu is shown\n *             processItems({ items }) {\n *                  // Add an extra item dynamically\n *                 items.coolItem = {\n *                     text : 'Cool action',\n *                     onItem() {\n *                           // ...\n *                     }\n *                 }\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * Full information of the menu customization can be found in the [\"Customizing the Event menu, the Schedule menu, and the TimeAxisHeader menu\"](#Scheduler/guides/customization/contextmenu.md)\n * guide.\n *\n * This feature is **enabled** by default\n *\n * @extends Grid/feature/HeaderMenu\n * @demo Scheduler/basic\n * @classtype timeAxisHeaderMenu\n * @feature\n * @inlineexample Scheduler/feature/TimeAxisHeaderMenu.js\n */\nexport default class TimeAxisHeaderMenu extends HeaderMenu {\n\n    //region Config\n\n    static get $name() {\n        return 'TimeAxisHeaderMenu';\n    }\n\n    static get defaultConfig() {\n        return {\n            /**\n             * A function called before displaying the menu that allows manipulations of its items.\n             * Returning `false` from this function prevents the menu being shown.\n             *\n             * ```javascript\n             *   features         : {\n             *       timeAxisHeaderMenu : {\n             *           processItems({ items }) {\n             *               // Add or hide existing items here as needed\n             *               items.myAction = {\n             *                   text   : 'Cool action',\n             *                   icon   : 'b-fa b-fa-fw b-fa-ban',\n             *                   onItem : () => console.log('Some coolness'),\n             *                   weight : 300 // Move to end\n             *               };\n             *\n             *               // Hide zoom slider\n             *               items.zoomLevel.hidden = true;\n             *           }\n             *       }\n             *   },\n             * ```\n             *\n             * @param {Object} context An object with information about the menu being shown\n             * @param {Object<String,MenuItemConfig>} context.items An object containing the {@link Core.widget.MenuItem menu item} configs keyed by their id\n             * @param {Event} context.event The DOM event object that triggered the show\n             * @config {Function}\n             * @preventable\n             */\n            processItems : null,\n\n            /**\n             * This is a preconfigured set of items used to create the default context menu.\n             *\n             * The `items` provided by this feature are listed in the intro section of this class. You can\n             * configure existing items by passing a configuration object to the keyed items.\n             *\n             * To remove existing items, set corresponding keys `null`:\n             *\n             * ```javascript\n             * const scheduler = new Scheduler({\n             *     features : {\n             *         timeAxisHeaderMenu : {\n             *             items : {\n             *                 eventsFilter : null\n             *             }\n             *         }\n             *     }\n             * });\n             * ```\n             *\n             * See the feature config in the above example for details.\n             *\n             * @config {Object<String,MenuItemConfig|Boolean|null>} items\n             */\n            items : null,\n\n            type : 'timeAxisHeader'\n        };\n    }\n\n    static get pluginConfig() {\n        const config = super.pluginConfig;\n\n        config.chain.push('populateTimeAxisHeaderMenu');\n\n        return config;\n    }\n\n    //endregion\n\n    //region Events\n\n    /**\n     * This event fires on the owning Scheduler before the context menu is shown for the time axis header.\n     * Allows manipulation of the items to show in the same way as in the {@link #config-processItems}.\n     *\n     * Returning `false` from a listener prevents the menu from being shown.\n     *\n     * @event timeAxisHeaderMenuBeforeShow\n     * @on-owner\n     * @preventable\n     * @param {Scheduler.view.Scheduler} source The scheduler\n     * @param {Core.widget.Menu} menu The menu\n     * @param {Object<String,MenuItemConfig>} items Menu item configs\n     * @param {Grid.column.Column} column Time axis column\n     */\n\n    /**\n     * This event fires on the owning Scheduler after the context menu is shown for a header\n     * @event timeAxisHeaderMenuShow\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source The scheduler\n     * @param {Core.widget.Menu} menu The menu\n     * @param {Object<String,MenuItemConfig>} items Menu item configs\n     * @param {Grid.column.Column} column Time axis column\n     */\n\n    /**\n     * This event fires on the owning Scheduler when an item is selected in the header context menu.\n     * @event timeAxisHeaderMenuItem\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source The scheduler\n     * @param {Core.widget.Menu} menu The menu\n     * @param {Core.widget.MenuItem} item Selected menu item\n     * @param {Grid.column.Column} column Time axis column\n     */\n\n    //endregion\n\n    construct() {\n        super.construct(...arguments);\n\n        if (this.triggerEvent.includes('click') && this.client.zoomOnTimeAxisDoubleClick) {\n            this.client.zoomOnTimeAxisDoubleClick = false;\n        }\n    }\n\n    shouldShowMenu(eventParams) {\n        const\n            { column, targetElement } = eventParams,\n            { client } = this;\n\n        if (client.isHorizontal) {\n            return column?.enableHeaderContextMenu !== false && column?.isTimeAxisColumn;\n        }\n\n        return targetElement.matches('.b-sch-header-timeaxis-cell');\n    }\n\n    showContextMenu(eventParams) {\n        super.showContextMenu(...arguments);\n\n        if (this.menu) {\n            // the TimeAxis's context menu probably will cause scrolls because it manipulates the dates.\n            // The menu should not hide on scroll when for a TimeAxisColumn\n            this.menu.scrollAction = 'realign';\n        }\n    }\n\n    populateTimeAxisHeaderMenu({ items }) {\n        const\n            me         = this,\n            { client } = me,\n            dateStep   = {\n                magnitude : client.timeAxis.shiftIncrement,\n                unit      : client.timeAxis.shiftUnit\n            };\n\n        Object.assign(items, {\n            zoomLevel : {\n                text        : 'L{pickZoomLevel}',\n                localeClass : me,\n                icon        : 'b-fw-icon b-icon-search-plus',\n                disabled    : !client.presets.count || me.disabled,\n                weight      : 200,\n                menu        : {\n                    type  : 'popup',\n                    items : {\n                        zoomSlider : {\n                            weight               : 210,\n                            type                 : 'slider',\n                            minWidth             : 130,\n                            showValue            : false,\n                            // so that we can use the change event which is easier to inject in tests\n                            triggerChangeOnInput : true\n                        }\n                    },\n                    onBeforeShow({ source : menu }) {\n                        const [zoom] = menu.items;\n\n                        zoom.min = client.minZoomLevel;\n                        zoom.max = client.maxZoomLevel;\n                        zoom.value = client.zoomLevel;\n\n                        // Default slider value is 50 which causes the above to trigger onZoomSliderChange (when\n                        // maxZoomLevel < 50) if we add our listener prior to this point.\n                        me.zoomDetatcher = zoom.ion({ change : 'onZoomSliderChange', thisObj : me });\n                    },\n                    onHide() {\n                        if (me.zoomDetatcher) {\n                            me.zoomDetatcher();\n                            me.zoomDetatcher = null;\n                        }\n                    }\n                }\n            },\n            dateRange : {\n                text        : 'L{activeDateRange}',\n                localeClass : me,\n                icon        : 'b-fw-icon b-icon-calendar',\n                weight      : 300,\n                menu        : {\n                    type     : 'popup',\n                    cls      : 'b-sch-timeaxis-menu-daterange-popup',\n                    defaults : {\n                        localeClass : me\n                    },\n                    items : {\n                        startDateField : {\n                            type              : 'datefield',\n                            label             : 'L{startText}',\n                            weight            : 310,\n                            labelWidth        : '6em',\n                            required          : true,\n                            step              : dateStep,\n                            internalListeners : {\n                                change  : me.onRangeDateFieldChange,\n                                thisObj : me\n                            }\n                        },\n                        endDateField : {\n                            type              : 'datefield',\n                            label             : 'L{endText}',\n                            weight            : 320,\n                            labelWidth        : '6em',\n                            required          : true,\n                            step              : dateStep,\n                            internalListeners : {\n                                change  : me.onRangeDateFieldChange,\n                                thisObj : me\n                            }\n                        },\n                        leftShiftBtn : {\n                            type              : 'button',\n                            weight            : 330,\n                            cls               : 'b-left-nav-btn',\n                            icon              : 'b-icon b-icon-previous',\n                            color             : 'b-blue b-raised',\n                            flex              : 1,\n                            margin            : 0,\n                            internalListeners : {\n                                click   : me.onLeftShiftBtnClick,\n                                thisObj : me\n                            }\n                        },\n                        todayBtn : {\n                            type              : 'button',\n                            weight            : 340,\n                            cls               : 'b-today-nav-btn',\n                            color             : 'b-blue b-raised',\n                            text              : 'L{todayText}',\n                            flex              : 4,\n                            margin            : '0 8',\n                            internalListeners : {\n                                click   : me.onTodayBtnClick,\n                                thisObj : me\n                            }\n                        },\n                        rightShiftBtn : {\n                            type              : 'button',\n                            weight            : 350,\n                            cls               : 'b-right-nav-btn',\n                            icon              : 'b-icon b-icon-next',\n                            color             : 'b-blue b-raised',\n                            flex              : 1,\n                            internalListeners : {\n                                click   : me.onRightShiftBtnClick,\n                                thisObj : me\n                            }\n                        }\n                    },\n                    internalListeners : {\n                        paint   : me.initDateRangeFields,\n                        thisObj : me\n                    }\n                }\n            }\n        });\n    }\n\n    onZoomSliderChange({ value }) {\n        const me = this;\n\n        // Zooming maintains timeline center point by scrolling the newly rerendered timeline to the\n        // correct point to maintain the visual center. Temporarily inhibit context menu hide on scroll\n        // of its context element.\n        me.menu.scrollAction = 'realign';\n\n        me.client.zoomLevel = value;\n\n        me.menu.setTimeout({\n            fn                : () => me.menu.scrollAction = 'hide',\n            delay             : 100,\n            cancelOutstanding : true\n        });\n    }\n\n    initDateRangeFields({ source : dateRange, firstPaint }) {\n        if (firstPaint) {\n            const { widgetMap } = dateRange;\n\n            this.startDateField = widgetMap.startDateField;\n            this.endDateField = widgetMap.endDateField;\n        }\n\n        this.initDates();\n    }\n\n    initDates() {\n        const me = this;\n\n        me.startDateField.suspendEvents();\n        me.endDateField.suspendEvents();\n\n        // The actual scheduler start dates may include time, but our Date field cannot currently handle\n        // a time portion and throws it away, so when we need the value from an unchanged field, we need\n        // to use the initialValue set from the timeAxis values.\n        // Until our DateField can optionally include a time value, this is the solution.\n        me.startDateField.value = me.startDateFieldInitialValue = me.client.startDate;\n        me.endDateField.value = me.endDateFieldInitialValue = me.client.endDate;\n\n        me.startDateField.resumeEvents();\n        me.endDateField.resumeEvents();\n    }\n\n    onRangeDateFieldChange({ source }) {\n        const\n            me               = this,\n            startDateChanged = (source === me.startDateField),\n            { client }       = me,\n            { timeAxis }     = client,\n            startDate        = me.startDateFieldInitialValue && !startDateChanged ? me.startDateFieldInitialValue : me.startDateField.value;\n\n        let endDate = me.endDateFieldInitialValue && startDateChanged ? me.endDateFieldInitialValue : me.endDateField.value;\n\n        // When either of the fields is changed, we no longer use its initialValue from the timeAxis start or end\n        // so that gets nulled to indicate that it's unavailable and the real field value is to be used.\n        if (startDateChanged) {\n            me.startDateFieldInitialValue = null;\n        }\n        else {\n            me.endDateFieldInitialValue = null;\n        }\n\n        // Because the start and end dates are exclusive, avoid a zero\n        // length time axis by incrementing the end by one tick unit\n        // if they are the same.\n        if (!(endDate - startDate)) {\n            endDate = DateHelper.add(endDate, timeAxis.shiftIncrement, timeAxis.shiftUnit);\n        }\n        // if start date got bigger than end date set end date to start date plus one tick\n        else if (endDate < startDate) {\n            endDate = DateHelper.add(startDate, timeAxis.shiftIncrement, timeAxis.shiftUnit);\n        }\n\n        // setTimeSpan will try to keep the scroll position the same.\n        client.setTimeSpan(startDate, endDate, setTimeSpanOptions);\n\n        me.initDates();\n    }\n\n    onLeftShiftBtnClick() {\n        this.client.timeAxis.shiftPrevious();\n        this.initDates();\n    }\n\n    onTodayBtnClick() {\n        const today = DateHelper.clearTime(new Date());\n\n        this.client.setTimeSpan(today, DateHelper.add(today, 1, 'day'));\n        this.initDates();\n    }\n\n    onRightShiftBtnClick() {\n        this.client.timeAxis.shiftNext();\n        this.initDates();\n    }\n}\n\nGridFeatureManager.registerFeature(TimeAxisHeaderMenu, true, ['Scheduler', 'Gantt']);\nGridFeatureManager.registerFeature(TimeAxisHeaderMenu, false, 'ResourceHistogram');\n","import DH from '../../../Core/helper/DateHelper.js';\nimport Events from '../../../Core/mixin/Events.js';\nimport PresetManager from '../../preset/PresetManager.js';\nimport ViewPreset from '../../preset/ViewPreset.js';\nimport '../../data/TimeAxis.js';\n\n/**\n * @module Scheduler/view/model/TimeAxisViewModel\n */\n\n/**\n * This class is an internal view model class, describing the visual representation of a {@link Scheduler.data.TimeAxis}.\n * The config for the header rows is described in the {@link Scheduler.preset.ViewPreset#field-headers headers}.\n * To calculate the size of each cell in the time axis, this class requires:\n *\n * - availableSpace  - The total width or height available for the rendering\n * - tickSize       - The fixed width or height of each cell in the lowest header row. This value is normally read from the\n * {@link Scheduler.preset.ViewPreset viewPreset} but this can also be updated programmatically using the {@link #property-tickSize} setter\n *\n * Normally you should not interact with this class directly.\n *\n * @extends Core/mixin/Events\n */\nexport default class TimeAxisViewModel extends Events() {\n    //region Default config\n\n    // <remove-on-release>\n    // TODO: replace _availableSpace etc. with availableSpace in config and make setters work during config phase\n    // </remove-on-release>\n\n    static get defaultConfig() {\n        return {\n            /**\n             * The time axis providing the underlying data to be visualized\n             * @config {Scheduler.data.TimeAxis}\n             * @internal\n             */\n            timeAxis : null,\n\n            /**\n             * The available width/height, this is normally not known by the consuming UI component using this model\n             * class until it has been fully rendered. The consumer of this model should set\n             * {@link #property-availableSpace} when its width has changed.\n             * @config {Number}\n             * @internal\n             */\n            availableSpace : null,\n\n            /**\n             * The \"tick width\" for horizontal mode or \"tick height\" for vertical mode, to use for the cells in the\n             * bottom most header row.\n             * This value is normally read from the {@link Scheduler.preset.ViewPreset viewPreset}\n             * @config {Number}\n             * @default\n             * @internal\n             */\n            tickSize : 100,\n\n            /**\n             * true if there is a requirement to be able to snap events to a certain view resolution.\n             * This has implications of the {@link #config-tickSize} that can be used, since all widths must be in even pixels.\n             * @config {Boolean}\n             * @default\n             * @internal\n             */\n            snap : false,\n\n            /**\n             * true if cells in the bottom-most row should be fitted to the {@link #property-availableSpace available space}.\n             * @config {Boolean}\n             * @default\n             * @internal\n             */\n            forceFit : false,\n\n            headers : null,\n\n            mode : 'horizontal', // or 'vertical'\n\n            //used for Exporting. Make sure the tick columns are not recalculated when resizing.\n            suppressFit : false,\n\n            // cache of the config currently used.\n            columnConfig : [],\n\n            // the view preset name to apply initially\n            viewPreset : null,\n\n            // The default header level to draw column lines for\n            columnLinesFor : null,\n\n            originalTickSize : null,\n\n            headersDatesCache : []\n        };\n    }\n\n    //endregion\n\n    //region Init & destroy\n\n    construct(config) {\n        const me = this;\n\n        // getSingleUnitInPixels results are memoized because of frequent calls during rendering.\n        me.unitToPixelsCache = {};\n\n        super.construct(config);\n\n        const viewPreset = me.timeAxis.viewPreset || me.viewPreset;\n\n        if (viewPreset) {\n            if (viewPreset instanceof ViewPreset) {\n                me.consumeViewPreset(viewPreset);\n            }\n            else {\n                const preset = PresetManager.getPreset(viewPreset);\n                preset && me.consumeViewPreset(preset);\n            }\n        }\n\n        // When time axis is changed, reconfigure the model\n        me.timeAxis.ion({ reconfigure : 'onTimeAxisReconfigure', thisObj : me });\n\n        me.configured = true;\n    }\n\n    doDestroy() {\n        this.timeAxis.un('reconfigure', this.onTimeAxisReconfigure, this);\n        super.doDestroy();\n    }\n\n    /**\n     * Used to calculate the range to extend the TimeAxis to during infinite scroll.\n     * @param {Date} date\n     * @param {Boolean} centered\n     * @param {Scheduler.preset.ViewPreset} [preset] Optional, the preset for which to calculate the range.\n     * defaults to the currently active ViewPreset\n     * @returns {Object} `{ startDate, endDate }`\n     * @internal\n     */\n    calculateInfiniteScrollingDateRange(date, centered, preset = this.viewPreset) {\n        const\n            {\n                timeAxis,\n                availableSpace\n            } = this,\n            {\n                bufferCoef\n            } = this.owner,\n            {\n                leafUnit,\n                leafIncrement,\n                topUnit,\n                topIncrement,\n                tickSize\n            } = preset,\n            // If the units are the same and the increments are integer, snap to the top header's unit & increment\n            useTop    = leafUnit === topUnit && Math.round(topIncrement) === topIncrement && Math.round(leafIncrement) === leafIncrement,\n            snapSize  = useTop ? topIncrement : leafIncrement,\n            snapUnit  = useTop ? topUnit      : leafUnit;\n\n        // if provided date is the central point on the timespan\n        if (centered) {\n            const halfSpan = Math.ceil((availableSpace * bufferCoef + (availableSpace / 2)) / tickSize);\n\n            return {\n                startDate : timeAxis.floorDate(DH.add(date, -halfSpan * leafIncrement, leafUnit), false, snapUnit, snapSize),\n                endDate   : timeAxis.ceilDate(DH.add(date, halfSpan * leafIncrement, leafUnit), false, snapUnit, snapSize)\n            };\n        }\n        // if provided date is the left coordinate of the visible timespan area\n        else {\n            const bufferedTicks = Math.ceil(availableSpace * bufferCoef / tickSize);\n\n            return {\n                startDate : timeAxis.floorDate(DH.add(date, -bufferedTicks * leafIncrement, leafUnit), false, snapUnit, snapSize),\n                endDate   : timeAxis.ceilDate(DH.add(date, Math.ceil((availableSpace / tickSize + bufferedTicks) * leafIncrement), leafUnit), false, snapUnit, snapSize)\n            };\n        }\n    }\n\n    /**\n     * Returns an array representing the headers of the current timeAxis. Each element is an array representing the cells for that level in the header.\n     * @returns {Object[]} An array of headers, each element being an array representing each cell (with start date and end date) in the timeline representation.\n     * @internal\n     */\n    get columnConfig() {\n        return this._columnConfig;\n    }\n\n    set columnConfig(config) {\n        this._columnConfig = config;\n    }\n\n    get headers() {\n        return this._headers;\n    }\n\n    set headers(headers) {\n        if (headers && headers.length && headers[headers.length - 1].cellGenerator) {\n            throw new Error('`cellGenerator` cannot be used for the bottom level of your headers. Use TimeAxis#generateTicks() instead.');\n        }\n\n        this._headers = headers;\n    }\n\n    get isTimeAxisViewModel() {\n        return true;\n    }\n\n    //endregion\n\n    //region Events\n\n    /**\n     * Fires after the model has been updated.\n     * @event update\n     * @param {Scheduler.view.model.TimeAxisViewModel} source The model instance\n     */\n\n    /**\n     * Fires after the model has been reconfigured.\n     * @event reconfigure\n     * @param {Scheduler.view.model.TimeAxisViewModel} source The model instance\n     */\n\n    //endregion\n\n    //region Mode\n\n    /**\n     * Using horizontal mode?\n     * @returns {Boolean}\n     * @readonly\n     * @internal\n     */\n    get isHorizontal() {\n        return this.mode !== 'vertical';\n    }\n\n    /**\n     * Using vertical mode?\n     * @returns {Boolean}\n     * @readonly\n     * @internal\n     */\n    get isVertical() {\n        return this.mode === 'vertical';\n    }\n\n    /**\n     * Gets/sets the forceFit value for the model. Setting it will cause it to update its contents and fire the\n     * {@link #event-update} event.\n     * @property {Boolean}\n     * @internal\n     */\n    set forceFit(value) {\n        if (value !== this._forceFit) {\n            this._forceFit = value;\n            this.update();\n        }\n    }\n\n    //endregion\n\n    //region Reconfigure & update\n\n    reconfigure(config) {\n        // clear the cached headers\n        this.headers = null;\n\n        // Ensure correct ordering\n        this.setConfig(config);\n\n        this.trigger('reconfigure');\n    }\n\n    onTimeAxisReconfigure({ source : timeAxis, suppressRefresh }) {\n        if (this.viewPreset !== timeAxis.viewPreset) {\n            this.consumeViewPreset(timeAxis.viewPreset);\n        }\n        if (!suppressRefresh && timeAxis.count > 0) {\n            this.update();\n        }\n    }\n\n    /**\n     * Updates the view model current timeAxis configuration and available space.\n     * @param {Number} [availableSpace] The available space for the rendering of the axis (used in forceFit mode)\n     * @param {Boolean} [silent] Pass `true` to suppress the firing of the `update` event.\n     * @param {Boolean} [forceUpdate] Pass `true` to fire the `update` event even if the size has not changed.\n     * @internal\n     */\n    update(availableSpace, silent = false, forceUpdate = false) {\n        const\n            me                    = this,\n            { timeAxis, headers } = me,\n            spaceAvailable        = availableSpace !== 0;\n\n        // We're in configuration, or no change, quit\n        if (me.isConfiguring || (spaceAvailable && me._availableSpace === availableSpace)) {\n            if (forceUpdate) {\n                me.trigger('update');\n            }\n            return;\n        }\n\n        me._availableSpace = Math.max(availableSpace || me.availableSpace || 0, 0);\n\n        if (typeof me.availableSpace !== 'number') {\n            throw new Error('Invalid available space provided to TimeAxisModel');\n        }\n\n        me.columnConfig = [];\n\n        // The \"column width\" is considered to be the width of each tick in the lowest header row and this width\n        // has to be same for all cells in the lowest row.\n        const tickSize = me._tickSize = me.calculateTickSize(me.originalTickSize);\n\n        if (typeof tickSize !== 'number' || tickSize <= 0) {\n            throw new Error('Invalid timeAxis tick size');\n        }\n\n        // getSingleUnitInPixels results are memoized because of frequent calls during rendering.\n        me.unitToPixelsCache = {};\n\n        // totalSize is cached because of frequent calls which calculate it.\n        me._totalSize = null;\n\n        // Generate the underlying date ranges for each header row, which will provide input to the cell rendering\n        for (let pos = 0, { length } = headers; pos < length; pos++) {\n            const header = headers[pos];\n\n            if (header.cellGenerator) {\n                const headerCells = header.cellGenerator.call(me, timeAxis.startDate, timeAxis.endDate);\n\n                me.columnConfig[pos] = me.createHeaderRow(pos, header, headerCells);\n            }\n            else {\n                me.columnConfig[pos] = me.createHeaderRow(pos, header);\n            }\n        }\n\n        if (!silent) {\n            me.trigger('update');\n        }\n    }\n\n    //endregion\n\n    //region Date / position mapping\n\n    /**\n     * Returns the distance in pixels for a timespan with the given start and end date.\n     * @param {Date} start start date\n     * @param {Date} end end date\n     * @returns {Number} The length of the time span\n     * @category Date mapping\n     */\n    getDistanceBetweenDates(start, end) {\n        return this.getPositionFromDate(end) - this.getPositionFromDate(start);\n    }\n\n    /**\n     * Returns the distance in pixels for a time span\n     * @param {Number} durationMS Time span duration in ms\n     * @returns {Number} The length of the time span\n     * @category Date mapping\n     */\n    getDistanceForDuration(durationMs) {\n        return this.getSingleUnitInPixels('millisecond') * durationMs;\n    }\n\n    /**\n     * Gets the position of a date on the projected time axis or -1 if the date is not in the timeAxis.\n     * @param {Date} date the date to query for.\n     * @returns {Number} the coordinate representing the date\n     * @category Date mapping\n     */\n    getPositionFromDate(date, options = {}) {\n        const tick = this.getScaledTick(date, options);\n\n        if (tick === -1) {\n            return -1;\n        }\n\n        return this.tickSize * (tick - this.timeAxis.visibleTickStart);\n    }\n\n    // Translates a tick along the time axis to facilitate scaling events when excluding certain days or hours\n    getScaledTick(date, { respectExclusion, snapToNextIncluded, isEnd, min, max }) {\n        const\n            { timeAxis }      = this,\n            { include, unit } = timeAxis;\n\n        let tick = timeAxis.getTickFromDate(date);\n\n        if (tick !== -1 && respectExclusion && include) {\n            let tickChanged = false;\n\n            // Stretch if we are using a larger unit than 'hour', except if it is 'day'. If so, it is already handled\n            // by a cheaper reconfiguration of the ticks in `generateTicks`\n            if (include.hour && DH.compareUnits(unit, 'hour') > 0 && unit !== 'day') {\n                const\n                    { from, to, lengthFactor, center } = include.hour,\n                    // Original hours\n                    originalHours                      = date.getHours(),\n                    // Crop to included hours\n                    croppedHours                       = Math.min(Math.max(originalHours, from), to);\n\n                // If we are not asked to snap (when other part of span is not included) any cropped away hour\n                // should be considered excluded\n                if (!snapToNextIncluded && croppedHours !== originalHours) {\n                    return -1;\n                }\n\n                const\n                    // Should scale hour and smaller units (seconds will hardly affect visible result...)\n                    fractionalHours = croppedHours + date.getMinutes() / 60,\n                    // Number of hours from the center    |xxxx|123c----|xxx|\n                    hoursFromCenter = center - fractionalHours,\n                    // Step from center to stretch event  |x|112233c----|xxx|\n                    newHours        = center - hoursFromCenter * lengthFactor;\n\n                // Adding instead of setting to get a clone of the date, to not affect the original\n                date = DH.add(date, newHours - originalHours, 'h');\n\n                tickChanged = true;\n            }\n\n            if (include.day && DH.compareUnits(unit, 'day') > 0) {\n                const { from, to, lengthFactor, center } = include.day;\n\n                //region Crop\n                let checkDay = date.getDay();\n\n                // End date is exclusive, check the day before if at 00:00\n                if (isEnd && date.getHours() === 0 && date.getMinutes() === 0 && date.getSeconds() === 0 && date.getMilliseconds() === 0) {\n                    if (--checkDay < 0) {\n                        checkDay = 6;\n                    }\n                }\n                let addDays = 0;\n\n                if (checkDay < from || checkDay >= to) {\n                    // If end date is in view but start date is excluded, snap to next included day\n                    if (snapToNextIncluded) {\n\n                        // Step back to \"to-1\" (not inclusive) for end date\n                        if (isEnd) {\n                            addDays = (to - checkDay - 8) % 7;\n                        }\n                        // Step forward to \"from\" for start date\n                        else {\n                            addDays = (from - checkDay + 7) % 7;\n                        }\n\n                        date = DH.add(date, addDays, 'd');\n                        date = DH.startOf(date, 'd', false);\n\n                        // Keep end after start and vice versa\n                        if (\n                            (max && date.getTime() >= max) ||\n                            (min && date.getTime() <= min)\n                        ) {\n                            return -1;\n                        }\n                    }\n                    else {\n                        // day excluded at not snapping to next\n                        return -1;\n                    }\n                }\n                //endregion\n\n                const\n                    { weekStartDay } = timeAxis,\n                    // Center to stretch around, for some reason pre-calculated cannot be used for sundays :)\n                    fixedCenter      = date.getDay() === 0 ? 0 : center,\n                    // Should scale day and smaller units (minutes will hardly affect visible result...)\n                    fractionalDay    = date.getDay() + date.getHours() / 24, //+ dateClone.getMinutes() / (24 * 1440),\n                    // Number of days from the calculated center\n                    daysFromCenter   = fixedCenter - fractionalDay,\n                    // Step from center to stretch event\n                    newDay           = fixedCenter - daysFromCenter * lengthFactor;\n\n                // Adding instead of setting to get a clone of the date, to not affect the original\n                date = DH.add(date, newDay - fractionalDay + weekStartDay, 'd');\n\n                tickChanged = true;\n            }\n\n            // Now the date might start somewhere else (fraction of ticks)\n            if (tickChanged) {\n                // When stretching date might end up outside of time axis, making it invalid to use. Clip it to time axis\n                // to circumvent this\n                date = DH.constrain(date, timeAxis.startDate, timeAxis.endDate);\n\n                // Get a new tick based on the \"scaled\" date\n                tick = timeAxis.getTickFromDate(date);\n            }\n        }\n\n        return tick;\n    }\n\n    /**\n     * Gets the date for a position on the time axis\n     * @param {Number} position The page X or Y coordinate\n     * @param {'floor'|'round'|'ceil'} [roundingMethod] Rounding method to use. 'floor' to take the tick (lowest header\n     * in a time axis) start date, 'round' to round the value to nearest increment or 'ceil' to take the tick end date\n     * @param {Boolean} [allowOutOfRange=false] By default, this returns `null` if the position is outside\n     * of the time axis. Pass `true` to attempt to calculate a date outside of the time axis.\n     * @returns {Date} the Date corresponding to the xy coordinate\n     * @category Date mapping\n     */\n    getDateFromPosition(position, roundingMethod, allowOutOfRange = false) {\n        const\n            me           = this,\n            { timeAxis } = me,\n            tick         = me.getScaledPosition(position) / me.tickSize + timeAxis.visibleTickStart;\n\n        if (tick < 0 || tick > timeAxis.count) {\n            if (allowOutOfRange) {\n                let result;\n\n                // Subtract the correct number of tick units from the start date\n                if (tick < 0) {\n                    result = DH.add(timeAxis.startDate, tick, timeAxis.unit);\n                }\n                else {\n                    // Add the correct number of tick units to the end date\n                    result = DH.add(timeAxis.endDate, tick - timeAxis.count, timeAxis.unit);\n                }\n\n                // Honour the rounding requested\n                if (roundingMethod) {\n                    result = timeAxis[roundingMethod + 'Date'](result);\n                }\n                return result;\n            }\n            return null;\n        }\n\n        return timeAxis.getDateFromTick(tick, roundingMethod);\n    }\n\n    // Translates a position along the time axis to facilitate scaling events when excluding certain days or hours\n    getScaledPosition(position) {\n        const { include, unit, weekStartDay } = this.timeAxis;\n\n        // Calculations are\n\n        if (include) {\n            const dayWidth = this.getSingleUnitInPixels('day');\n\n            // Have to calculate day before hour to get end result correct\n            if (include.day && DH.compareUnits(unit, 'day') > 0) {\n                const { from, lengthFactor } = include.day,\n                    // Scaling happens within a week, determine position within it\n                    positionInWeek         = position % (dayWidth * 7),\n                    // Store were the week starts to be able to re-add it after scale\n                    weekStartPosition      = position - positionInWeek;\n                // Scale position using calculated length per day factor, adding the width of excluded days\n                position                     = positionInWeek / lengthFactor + (from - weekStartDay) * dayWidth + weekStartPosition;\n            }\n\n            // Hours are not taken into account when viewing days, since the day ticks are reconfigured in\n            // `generateTicks` instead\n            if (include.hour && DH.compareUnits(unit, 'hour') > 0 && unit !== 'day') {\n                const { from, lengthFactorExcl } = include.hour,\n                    hourWidth                  = this.getSingleUnitInPixels('hour'),\n                    // Scaling happens within a day, determine position within it\n                    positionInDay              = position % dayWidth,\n                    // Store were the day starts to be able to re-add it after scale\n                    dayStartPosition           = position - positionInDay;\n                // Scale position using calculated length per day factor, adding the width of excluded hours\n                position                         = positionInDay / lengthFactorExcl + from * hourWidth + dayStartPosition;\n            }\n        }\n\n        return position;\n    }\n\n    /**\n     * Returns the amount of pixels for a single unit\n     * @internal\n     * @returns {Number} The unit in pixel\n     */\n    getSingleUnitInPixels(unit) {\n        const me = this;\n\n        return me.unitToPixelsCache[unit] || (me.unitToPixelsCache[unit] = DH.getUnitToBaseUnitRatio(me.timeAxis.unit, unit, true) * me.tickSize / me.timeAxis.increment);\n    }\n\n    /**\n     * Returns the pixel increment for the current view resolution.\n     * @internal\n     * @returns {Number} The increment\n     */\n    get snapPixelAmount() {\n        if (this.snap) {\n            const { resolution } = this.timeAxis;\n            return (resolution.increment || 1) * this.getSingleUnitInPixels(resolution.unit);\n        }\n        return 1;\n    }\n\n    //endregion\n\n    //region Sizes\n\n    /**\n     * Get/set the current time column size (the width or height of a cell in the bottom-most time axis header row,\n     * depending on mode)\n     * @internal\n     * @property {Number}\n     */\n    get tickSize() {\n        return this._tickSize;\n    }\n\n    set tickSize(size) {\n        this.setTickSize(size, false);\n    }\n\n    setTickSize(size, suppressEvent) {\n        this._tickSize = this.originalTickSize = size;\n\n        this.update(undefined, suppressEvent);\n    }\n\n    get timeResolution() {\n        return this.timeAxis.resolution;\n    }\n\n    // Calculates the time column width/height based on the value defined viewPreset \"tickWidth/tickHeight\". It also\n    // checks for the forceFit view option and the snap, both of which impose constraints on the time column width\n    // configuration.\n    calculateTickSize(proposedSize) {\n        const\n            me                                  = this,\n            { forceFit, timeAxis, suppressFit } = me,\n            timelineUnit                        = timeAxis.unit;\n\n        let size  = 0,\n            ratio = 1; //Number.MAX_VALUE;\n\n        if (me.snap) {\n            const resolution = timeAxis.resolution;\n            ratio            = DH.getUnitToBaseUnitRatio(timelineUnit, resolution.unit) * resolution.increment;\n        }\n\n        if (!suppressFit) {\n            const fittingSize = me.availableSpace / timeAxis.visibleTickTimeSpan;\n\n            size = (forceFit || proposedSize < fittingSize) ? fittingSize : proposedSize;\n\n            if (ratio > 0 && (!forceFit || ratio < 1)) {\n                size = Math.max(1, ratio * size) / ratio;\n            }\n        }\n        else {\n            size = proposedSize;\n        }\n\n        return size;\n    }\n\n    /**\n     * Returns the total width/height of the time axis representation, depending on mode.\n     * @returns {Number} The width or height\n     * @internal\n     * @readonly\n     */\n    get totalSize() {\n        // Floor the space to prevent spurious overflow\n        return this._totalSize || (this._totalSize = Math.floor(this.tickSize * this.timeAxis.visibleTickTimeSpan));\n    }\n\n    /**\n     * Get/set the available space for the time axis representation. If size changes it will cause it to update its\n     * contents and fire the {@link #event-update} event.\n     * @internal\n     * @property {Number}\n     */\n    get availableSpace() {\n        return this._availableSpace;\n    }\n\n    set availableSpace(space) {\n        const me = this;\n        // We should only need to repaint fully if the tick width has changed (which will happen if forceFit is set, or if the full size of the time axis doesn't\n        // occupy the available space - and gets stretched\n        me._availableSpace = Math.max(0, space);\n\n        if (me._availableSpace > 0) {\n            const newTickSize = me.calculateTickSize(me.originalTickSize);\n\n            if (newTickSize > 0 && newTickSize !== me.tickSize) {\n                me.update();\n            }\n        }\n    }\n\n    //endregion\n\n    //region Fitting & snapping\n\n    /**\n     * Returns start dates for ticks at the specified level in format { date, isMajor }.\n     * @param {Number} level Level in headers array, `0` meaning the topmost...\n     * @param {Boolean} useLowestHeader Use lowest level\n     * @param getEnd\n     * @returns {Array}\n     * @internal\n     */\n    getDates(level = this.columnLinesFor, useLowestHeader = false, getEnd = false) {\n        const\n            me            = this,\n            ticks         = [],\n            linesForLevel = useLowestHeader ? me.lowestHeader : level,\n            majorLevel    = me.majorHeaderLevel,\n            levelUnit     = me.headers && me.headers[level].unit,\n            majorUnit     = majorLevel != null && me.headers && me.headers[majorLevel].unit,\n            validMajor    = majorLevel != null && DH.doesUnitsAlign(majorUnit, levelUnit),\n            hasGenerator  = !!(me.headers && me.headers[linesForLevel].cellGenerator);\n\n        if (hasGenerator) {\n            const cells = me.columnConfig[linesForLevel];\n\n            for (let i = 1, l = cells.length; i < l; i++) {\n                ticks.push({ date : cells[i].startDate });\n            }\n        }\n        else {\n            me.forEachInterval(linesForLevel, (start, end) => {\n                ticks.push({\n                    date    : getEnd ? end : start,\n                    // do not want to consider tick to be major tick, hence the check for majorHeaderLevel\n                    isMajor : majorLevel !== level && validMajor && me.isMajorTick(getEnd ? end : start)\n                });\n            });\n        }\n\n        return ticks;\n    }\n\n    get forceFit() {\n        return this._forceFit;\n    }\n\n    /**\n     * This function fits the time columns into the available space in the time axis column.\n     * @param {Boolean} suppressEvent `true` to skip firing the 'update' event.\n     * @internal\n     */\n    fitToAvailableSpace(suppressEvent) {\n        const proposedSize = Math.floor(this.availableSpace / this.timeAxis.visibleTickTimeSpan);\n        this.setTickSize(proposedSize, suppressEvent);\n    }\n\n    get snap() {\n        return this._snap;\n    }\n\n    /**\n     * Gets/sets the snap value for the model. Setting it will cause it to update its contents and fire the\n     * {@link #event-update} event.\n     * @property {Boolean}\n     * @internal\n     */\n    set snap(value) {\n        if (value !== this._snap) {\n            this._snap = value;\n            if (this.configured) {\n                this.update();\n            }\n        }\n    }\n\n    //endregion\n\n    //region Headers\n\n    // private\n    createHeaderRow(position, headerRowConfig, headerCells) {\n        const\n            me                            = this,\n            cells                         = [],\n            { align, headerCellCls = '' } = headerRowConfig,\n            today                         = DH.clearTime(new Date()),\n            { timeAxis }                  = me,\n            tickLevel                     = me.headers.length - 1,\n            createCellContext             = (start, end, i, isLast, data) => {\n                let value = DH.format(start, headerRowConfig.dateFormat);\n\n                const\n                    // So that we can use shortcut tickSize as the tickLevel cell width.\n                    // We can do this if the TimeAxis is aligned to start and end on tick boundaries\n                    // or if it's not the first or last tick.\n                    // getDistanceBetweenDates is an expensive operation.\n                    isInteriorTick = i > 0 && !isLast,\n                    cellData       = {\n                        align,\n                        start,\n                        end,\n                        value : data ? data.header : value,\n                        headerCellCls,\n                        width : tickLevel === position && me.owner && (timeAxis.fullTicks || isInteriorTick) ? me.owner.tickSize : me.getDistanceBetweenDates(start, end),\n                        index : i\n                    };\n                if (cellData.width === 0) {\n                    return;\n                }\n\n                // Vertical mode uses absolute positioning for header cells\n                cellData.coord = size - 1;\n                size += cellData.width;\n\n                me.headersDatesCache[position][start.getTime()] = 1;\n\n                if (headerRowConfig.renderer) {\n                    value = headerRowConfig.renderer.call(headerRowConfig.thisObj || me, start, end, cellData, i);\n\n                    cellData.value = value == null ? '' : value;\n                }\n\n                // To be able to style individual day cells, weekends or other important days\n                if (headerRowConfig.unit === 'day' && (!headerRowConfig.increment || headerRowConfig.increment === 1)) {\n                    cellData.headerCellCls += ' b-sch-dayheadercell-' + start.getDay();\n\n                    if (DH.clearTime(start, true) - today === 0) {\n                        cellData.headerCellCls += ' b-sch-dayheadercell-today';\n                    }\n                }\n\n                cells.push(cellData);\n            };\n\n        let size = 0;\n\n        me.headersDatesCache[position] = {};\n\n        if (headerCells) {\n            headerCells.forEach((cellData, i) => createCellContext(cellData.start, cellData.end, i, i === headerCells.length - 1, cellData));\n        }\n        else {\n            me.forEachInterval(position, createCellContext);\n        }\n\n        return cells;\n    }\n\n    get mainHeader() {\n        return ('mainHeaderLevel' in this) ? this.headers[this.mainHeaderLevel] : this.bottomHeader;\n    }\n\n    get bottomHeader() {\n        return this.headers[this.headers.length - 1];\n    }\n\n    get lowestHeader() {\n        return this.headers.length - 1;\n    }\n\n    /**\n     * This method is meant to return the level of the header which 2nd lowest.\n     * It is used for {@link #function-isMajorTick} method\n     * @returns {String}\n     * @private\n     */\n    get majorHeaderLevel() {\n        const { headers } = this;\n\n        if (headers) {\n            return Math.max(headers.length - 2, 0);\n        }\n\n        return null;\n    }\n\n    //endregion\n\n    //region Ticks\n\n    /**\n     * For vertical view (and column lines plugin) we sometimes want to know if current tick starts along with the\n     * upper header level.\n     * @param {Date} date\n     * @returns {Boolean}\n     * @private\n     */\n    isMajorTick(date) {\n        const nextLevel = this.majorHeaderLevel;\n        // if forceFit is used headersDatesCache won´t have been generated yet on the first call here,\n        // since no size is set yet\n        return nextLevel != null && this.headersDatesCache[nextLevel] && this.headersDatesCache[nextLevel][date.getTime()] || false;\n    }\n\n    /**\n     * Calls the supplied iterator function once per interval. The function will be called with three parameters, start date and end date and an index.\n     * Return false to break the iteration.\n     * @param {Number} position The index of the header in the headers array.\n     * @param {Function} iteratorFn The function to call, will be called with start date, end date and \"tick index\"\n     * @param {Object} [thisObj] `this` reference for the function\n     * @internal\n     */\n    forEachInterval(position, iteratorFn, thisObj = this) {\n        const { headers, timeAxis } = this;\n\n        if (headers) {\n            // This is the lowest header row, which should be fed the data in the tickStore (or a row above using same unit)\n            if (position === headers.length - 1) {\n                timeAxis.forEach((r, index) =>\n                    iteratorFn.call(thisObj, r.startDate, r.endDate, index, index === timeAxis.count - 1)\n                );\n            }\n            // All other rows\n            else {\n                const header = headers[position];\n\n                timeAxis.forEachAuxInterval(header.unit, header.increment, iteratorFn, thisObj);\n            }\n        }\n    }\n\n    /**\n     * Calls the supplied iterator function once per interval. The function will be called with three parameters, start date and end date and an index.\n     * Return false to break the iteration.\n     * @internal\n     * @param {Function} iteratorFn The function to call\n     * @param {Object} [thisObj] `this` reference for the function\n     */\n    forEachMainInterval(iteratorFn, thisObj) {\n        this.forEachInterval(this.mainHeaderLevel, iteratorFn, thisObj);\n    }\n\n    //endregion\n\n    //region ViewPreset\n\n    consumeViewPreset(preset) {\n        const me = this;\n\n        // clear the cached headers\n        me.headers = null;\n\n        me.getConfig('tickSize');\n\n        // Since we are bypassing the tickSize setter below, ensure that\n        // the config initial setter has been removed by referencing the property.\n        // We only do this to avoid multiple updates from this.\n        // <remove-on-release>\n        // TODO: Fix this issue, and do not bypass setters.\n        // </remove-on-release>\n        me.viewPreset = preset;\n\n        Object.assign(me, {\n            headers         : preset.headers,\n            columnLinesFor  : preset.columnLinesFor,\n            mainHeaderLevel : preset.mainHeaderLevel,\n            _tickSize       : me.isHorizontal ? preset.tickWidth : preset.tickHeight\n        });\n\n        me.originalTickSize = me.tickSize;\n    }\n\n    //endregion\n}\n","import Base from '../../../Core/Base.js';\nimport DateHelper from '../../../Core/helper/DateHelper.js';\n\n// Used to avoid having to create huge amounts of Date objects\nconst tempDate = new Date();\n\n/**\n * @module Scheduler/view/mixin/TimelineDateMapper\n */\n\n/**\n * Mixin that contains functionality to convert between coordinates and dates etc.\n *\n * @mixin\n */\nexport default Target => class TimelineDateMapper extends (Target || Base) {\n    static $name = 'TimelineDateMapper';\n\n    static configurable = {\n        /**\n         * Set to `true` to snap to the current time resolution increment while interacting with scheduled events.\n         *\n         * The time resolution increment is either determined by the currently applied view preset, or it can be\n         * overridden using {@link #property-timeResolution}.\n         *\n         * <div class=\"note\">When the {@link Scheduler/view/mixin/TimelineEventRendering#config-fillTicks} option is\n         * enabled, snapping will align to full ticks, regardless of the time resolution.</div>\n         *\n         * @prp {Boolean}\n         * @default\n         * @category Scheduled events\n         */\n        snap : false\n    };\n\n    //region Coordinate <-> Date\n\n    getRtlX(x) {\n        if (this.rtl && this.isHorizontal) {\n            x = this.timeAxisViewModel.totalSize - x;\n        }\n        return x;\n    }\n\n    /**\n     * Gets the date for an X or Y coordinate, either local to the view element or the page based on the 3rd argument.\n     * If the coordinate is not in the currently rendered view, null will be returned unless the `allowOutOfRange`\n     * parameter is passed a `true`.\n     * @param {Number} coordinate The X or Y coordinate\n     * @param {'floor'|'round'|'ceil'} [roundingMethod] Rounding method to use. 'floor' to take the tick (lowest header\n     * in a time axis) start date, 'round' to round the value to nearest increment or 'ceil' to take the tick end date\n     * @param {Boolean} [local] true if the coordinate is local to the scheduler view element\n     * @param {Boolean} [allowOutOfRange] By default, this returns `null` if the position is outside\n     * of the time axis. Pass `true` to attempt to calculate a date outside of the time axis.\n     * @returns {Date} The Date corresponding to the X or Y coordinate\n     * @category Dates\n     */\n    getDateFromCoordinate(coordinate, roundingMethod, local = true, allowOutOfRange = false, ignoreRTL = false) {\n        if (!local) {\n            coordinate = this.currentOrientation.translateToScheduleCoordinate(coordinate);\n        }\n\n        // Time axis is flipped for RTL\n        if (!ignoreRTL) {\n            coordinate = this.getRtlX(coordinate);\n        }\n\n        return this.timeAxisViewModel.getDateFromPosition(coordinate, roundingMethod, allowOutOfRange);\n    }\n\n    getDateFromCoord(options) {\n        return this.getDateFromCoordinate(options.coord, options.roundingMethod, options.local, options.allowOutOfRange, options.ignoreRTL);\n    }\n\n    /**\n     * Gets the date for an XY coordinate regardless of the orientation of the time axis.\n     * @param {Array} xy The page X and Y coordinates\n     * @param {'floor'|'round'|'ceil'} [roundingMethod] Rounding method to use. 'floor' to take the tick (lowest header\n     * in a time axis) start date, 'round' to round the value to nearest increment or 'ceil' to take the tick end date\n     * @param {Boolean} [local] true if the coordinate is local to the scheduler element\n     * @param {Boolean} [allowOutOfRange] By default, this returns `null` if the position is outside\n     * of the time axis. Pass `true` to attempt to calculate a date outside of the time axis.\n     * @returns {Date} the Date corresponding to the xy coordinate\n     * @category Dates\n     */\n    getDateFromXY(xy, roundingMethod, local = true, allowOutOfRange = false) {\n        return this.currentOrientation.getDateFromXY(xy, roundingMethod, local, allowOutOfRange);\n    }\n\n    /**\n     * Gets the time for a DOM event such as 'mousemove' or 'click' regardless of the orientation of the time axis.\n     * @param {Event} e the Event instance\n     * @param {'floor'|'round'|'ceil'} [roundingMethod] Rounding method to use. 'floor' to take the tick (lowest header\n     * in a time axis) start date, 'round' to round the value to nearest increment or 'ceil' to take the tick end date\n     * @param {Boolean} [allowOutOfRange] By default, this returns `null` if the position is outside\n     * of the time axis. Pass `true` to attempt to calculate a date outside of the time axis.\n     * @returns {Date} The date corresponding to the EventObject's position along the orientation of the time axis.\n     * @category Dates\n     */\n    getDateFromDomEvent(e, roundingMethod, allowOutOfRange = false) {\n        return this.getDateFromXY([e.pageX, e.pageY], roundingMethod, false, allowOutOfRange);\n    }\n\n    /**\n     * Gets the start and end dates for an element Region\n     * @param {Core.helper.util.Rectangle} rect The rectangle to map to start and end dates\n     * @param {'floor'|'round'|'ceil'} roundingMethod Rounding method to use. 'floor' to take the tick (lowest header\n     * in a time axis) start date, 'round' to round the value to nearest increment or 'ceil' to take the tick end date\n     * @param {Number} duration The duration in MS of the underlying event\n     * @returns {Object} an object containing start/end properties\n     */\n    getStartEndDatesFromRectangle(rect, roundingMethod, duration, allowOutOfRange = false) {\n        const\n            me               = this,\n            { isHorizontal } = me,\n            startPos         = isHorizontal ? rect.x : rect.top,\n            endPos           = isHorizontal ? rect.right : rect.bottom;\n\n        let start, end;\n\n        // Element within bounds\n        if (startPos >= 0 && endPos < me.timeAxisViewModel.totalSize) {\n            start = me.getDateFromCoordinate(startPos, roundingMethod, true);\n            end = me.getDateFromCoordinate(endPos, roundingMethod, true);\n        }\n        // Starts before, start is worked backwards from end\n        else if (startPos < 0) {\n            end = me.getDateFromCoordinate(endPos, roundingMethod, true, allowOutOfRange);\n            start = end && DateHelper.add(end, -duration, 'ms');\n        }\n        // Ends after, end is calculated from the start\n        else {\n            start = me.getDateFromCoordinate(startPos, roundingMethod, true, allowOutOfRange);\n            end = start && DateHelper.add(start, duration, 'ms');\n        }\n\n        return {\n            start, end\n        };\n    }\n\n    //endregion\n\n    //region Date display\n\n    /**\n     * Method to get a displayed end date value, see {@link #function-getFormattedEndDate} for more info.\n     * @private\n     * @param {Date} endDate The date to format\n     * @param {Date} startDate The start date\n     * @returns {Date} The date value to display\n     */\n    getDisplayEndDate(endDate, startDate) {\n        if (\n            // If time is midnight,\n            endDate.getHours() === 0 && endDate.getMinutes() === 0 &&\n\n            // and end date is greater then start date\n            (!startDate || !(endDate.getYear() === startDate.getYear() && endDate.getMonth() === startDate.getMonth() && endDate.getDate() === startDate.getDate())) &&\n\n            // and UI display format doesn't contain hour info (in this case we'll just display the exact date)\n            !DateHelper.formatContainsHourInfo(this.displayDateFormat)\n        ) {\n            // format the date inclusively as 'the whole previous day'.\n            endDate = DateHelper.add(endDate, -1, 'day');\n        }\n\n        return endDate;\n    }\n\n    /**\n     * Method to get a formatted end date for a scheduled event, the grid uses the \"displayDateFormat\" property defined in the current view preset.\n     * End dates are formatted as 'inclusive', meaning when an end date falls on midnight and the date format doesn't involve any hour/minute information,\n     * 1ms will be subtracted (e.g. 2010-01-08T00:00:00 will first be modified to 2010-01-07 before being formatted).\n     * @private\n     * @param {Date} endDate The date to format\n     * @param {Date} startDate The start date\n     * @returns {String} The formatted date\n     */\n    getFormattedEndDate(endDate, startDate) {\n        return this.getFormattedDate(this.getDisplayEndDate(endDate, startDate));\n    }\n\n    //endregion\n\n    //region Other date functions\n\n    /**\n     * Gets the x or y coordinate relative to the scheduler element, or page coordinate (based on the 'local' flag)\n     * If the coordinate is not in the currently rendered view, -1 will be returned.\n     * @param {Date|Number} date the date to query for (or a date as ms)\n     * @param {Boolean|Object} options true to return a coordinate local to the scheduler view element (defaults to true),\n     * also accepts a config object like { local : true }.\n     * @returns {Number} the x or y position representing the date on the time axis\n     * @category Dates\n     */\n    getCoordinateFromDate(date, options = true) {\n        const\n            me                    = this,\n            { timeAxisViewModel } = me,\n            {\n                isContinuous,\n                startMS,\n                endMS,\n                startDate,\n                endDate,\n                unit\n            }                     = me.timeAxis,\n            dateMS                = date.valueOf();\n\n        // Avoiding to break the API while allowing passing options through to getPositionFromDate()\n        if (options === true) {\n            options = {\n                local : true\n            };\n        }\n        else if (!options) {\n            options = {\n                local : false\n            };\n        }\n        else if (!('local' in options)) {\n            options.local = true;\n        }\n\n        let pos;\n\n        // <remove-on-release>\n        // TODO: for 6.0 try to normalize and just use dates as input for this method,\n        //  then this if-statement would not be needed\n        // </remove-on-release>\n        if (!(date instanceof Date)) {\n            tempDate.setTime(date);\n            date = tempDate;\n        }\n\n        // Shortcut for continuous time axis that is using a unit that can be reliably translated to days (or smaller)\n        if (isContinuous &&\n            date.getTimezoneOffset() === startDate.getTimezoneOffset() &&\n            startDate.getTimezoneOffset() === endDate.getTimezoneOffset() &&\n            DateHelper.getUnitToBaseUnitRatio(unit, 'day') !== -1\n        ) {\n            if (dateMS < startMS || dateMS > endMS) {\n                return -1;\n            }\n            pos = (dateMS - startMS) / (endMS - startMS) * timeAxisViewModel.totalSize;\n        }\n        // Non-continuous or using for example months (vary in length)\n        else {\n            pos = timeAxisViewModel.getPositionFromDate(date, options);\n        }\n\n        // RTL coords from the end of the time axis\n        if (me.rtl && me.isHorizontal) {\n            pos = timeAxisViewModel.totalSize - pos;\n        }\n\n        if (!options.local) {\n            pos = me.currentOrientation.translateToPageCoordinate(pos);\n        }\n\n        return pos;\n    }\n\n    /**\n     * Returns the distance in pixels for the time span in the view.\n     * @param {Date} startDate The start date of the span\n     * @param {Date} endDate The end date of the span\n     * @returns {Number} The distance in pixels\n     * @category Dates\n     */\n    getTimeSpanDistance(startDate, endDate) {\n        return this.timeAxisViewModel.getDistanceBetweenDates(startDate, endDate);\n    }\n\n    /**\n     * Returns the center date of the currently visible timespan of scheduler.\n     *\n     * @property {Date}\n     * @readonly\n     * @category Dates\n     */\n    get viewportCenterDate() {\n        const { timeAxis, timelineScroller } = this;\n\n        // Take the easy way if the axis is continuous.\n        // We can just work out how far along the time axis the viewport center is.\n        if (timeAxis.isContinuous) {\n            // The offset from the start of the whole time axis\n            const timeAxisOffset = (timelineScroller.position + timelineScroller.clientSize / 2) / timelineScroller.scrollSize;\n\n            return new Date(timeAxis.startMS + (timeAxis.endMS - timeAxis.startMS) * timeAxisOffset);\n        }\n        return this.getDateFromCoordinate(timelineScroller.position + timelineScroller.clientSize / 2);\n    }\n\n    get viewportCenterDateCached() {\n        return this.cachedCenterDate || (this.cachedCenterDate = this.viewportCenterDate);\n    }\n\n    //endregion\n\n    //region TimeAxis getters/setters\n\n    /**\n     * Gets/sets the current time resolution object, which contains a unit identifier and an increment count\n     * `{ unit, increment }`. This value means minimal task duration you can create using UI.\n     *\n     * For example when you drag create a task or drag & drop a task, if increment is 5 and unit is 'minute'\n     * that means that you can create tasks in 5 minute increments, or move it in 5 minute steps.\n     *\n     * This value is taken from viewPreset {@link Scheduler.preset.ViewPreset#field-timeResolution timeResolution}\n     * config by default. When supplying a `Number` to the setter only the `increment` is changed and the `unit` value\n     * remains untouched.\n     *\n     * ```javascript\n     * timeResolution : {\n     *   unit      : 'minute',  //Valid values are \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\", \"year\".\n     *   increment : 5\n     * }\n     * ```\n     *\n     * <div class=\"note\">When the {@link Scheduler/view/mixin/TimelineEventRendering#config-fillTicks} option is\n     * enabled, the resolution will be in full ticks regardless of configured value.</div>\n     *\n     * @property {Object|Number}\n     * @category Dates\n     */\n    get timeResolution() {\n        return this.timeAxis.resolution;\n    }\n\n    set timeResolution(resolution) {\n        this.timeAxis.resolution = (typeof resolution === 'number') ? {\n            increment : resolution,\n            unit      : this.timeAxis.resolution.unit\n        } : resolution;\n    }\n\n    //endregion\n\n    //region Snap\n\n    get snap() {\n        return this._timeAxisViewModel?.snap ?? this._snap;\n    }\n\n    updateSnap(snap) {\n        if (!this.isConfiguring) {\n            this.timeAxisViewModel.snap = snap;\n            this.timeAxis.forceFullTicks = snap && this.fillTicks;\n        }\n    }\n\n    //endregion\n\n    onSchedulerHorizontalScroll({ subGrid, scrollLeft, scrollX }) {\n        // Invalidate cached center date unless we are scrolling to center on it.\n        if (!this.scrollingToCenter) {\n            this.cachedCenterDate = null;\n        }\n    }\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n};\n","import Base from '../../../Core/Base.js';\nimport BrowserHelper from '../../../Core/helper/BrowserHelper.js';\nimport DomHelper from '../../../Core/helper/DomHelper.js';\nimport StringHelper from '../../../Core/helper/StringHelper.js';\nimport EventHelper from '../../../Core/helper/EventHelper.js';\nimport DomDataStore from '../../../Core/data/DomDataStore.js';\nimport GlobalEvents from '../../../Core/GlobalEvents.js';\n\n/**\n * @module Scheduler/view/mixin/TimelineDomEvents\n */\n\nconst { eventNameMap } = EventHelper;\n\n/**\n * An object which encapsulates a schedule timeline tick context based on a DOM event. This will include\n * the row and resource information and the tick and time information for a DOM pointer event detected\n * in the timeline.\n * @typedef {Object} TimelineContext\n * @property {Event} domEvent The DOM event which triggered the context change.\n * @property {HTMLElement} eventElement If the `domEvent` was on an event bar, this will be the event bar element.\n * @property {HTMLElement} cellElement The cell element under the `domEvent`\n * @property {Date} date The date corresponding to the `domEvent` position in the timeline\n * @property {Scheduler.model.TimeSpan} tick A {@link Scheduler.model.TimeSpan} record which encapsulates the contextual tick\n * @property {Number} tickIndex The contextual tick index. This may be fractional.\n * @property {Number} tickParentIndex The integer contextual tick index.\n * @property {Date} tickStartDate The start date of the contextual tick.\n * @property {Date} tickEndDate The end date of the contextual tick.\n * @property {Grid.row.Row} row The contextual {@link Grid.row.Row}\n * @property {Number} index The contextual row index\n * @property {Scheduler.model.EventModel} [eventRecord] The contextual event record (if any) if the event source is a `Scheduler`\n * @property {Scheduler.model.AssignmentModel} [assignmentRecord] The contextual assignment record (if any) if the event source is a `Scheduler`\n * @property {Scheduler.model.ResourceModel} [resourceRecord] The contextual resource record(if any)  if the event source is a `Scheduler`\n */\n\n/**\n * Mixin that handles dom events (click etc) for scheduler and rendered events.\n *\n * @mixin\n */\nexport default Target => class TimelineDomEvents extends (Target || Base) {\n    /**\n     * Fires after a click on a time axis cell\n     * @event timeAxisHeaderClick\n     * @param {Scheduler.column.TimeAxisColumn|Scheduler.column.VerticalTimeAxisColumn} source The column object\n     * @param {Date} startDate The start date of the header cell\n     * @param {Date} endDate The end date of the header cell\n     * @param {Event} event The event object\n     */\n\n    /**\n     * Fires after a double click on a time axis cell\n     * @event timeAxisHeaderDblClick\n     * @param {Scheduler.column.TimeAxisColumn|Scheduler.column.VerticalTimeAxisColumn} source The column object\n     * @param {Date} startDate The start date of the header cell\n     * @param {Date} endDate The end date of the header cell\n     * @param {Event} event The event object\n     */\n\n    /**\n     * Fires after a right click on a time axis cell\n     * @event timeAxisHeaderContextMenu\n     * @param {Scheduler.column.TimeAxisColumn|Scheduler.column.VerticalTimeAxisColumn} source The column object\n     * @param {Date} startDate The start date of the header cell\n     * @param {Date} endDate The end date of the header cell\n     * @param {Event} event The event object\n     */\n\n    static $name = 'TimelineDomEvents';\n\n    //region Default config\n\n    static configurable = {\n        /**\n         * The currently hovered timeline context. This is updated as the mouse or pointer moves over the timeline.\n         * @member {TimelineContext} timelineContext\n         * @readonly\n         * @category Dates\n         */\n        timelineContext : {\n            $config : {\n                // Reject non-changes so that when set from scheduleMouseMove and EventMouseMove,\n                // we only update the context and fire events when it changes.\n                equal(c1, c2) {\n                    // index is the resource index, tickParentIndex is the\n                    // tick's index in the TimeAxis.\n                    return c1?.index === c2?.index &&\n                        c1?.tickParentIndex === c2?.tickParentIndex &&\n                        !((c1?.tickStartDate || 0) - (c2?.tickStartDate || 0));\n                }\n            }\n        },\n\n        /**\n         * By default, scrolling the schedule will update the {@link #property-timelineContext} to reflect the new\n         * currently hovered context. When displaying a large number of events on screen at the same time, this will\n         * have a slight impact on scrolling performance. In such scenarios, opt out of this behavior by setting\n         * this config to `false`.\n         * @default\n         * @prp {Boolean}\n         * @category Misc\n         */\n        updateTimelineContextOnScroll : true\n    };\n\n    static properties = {\n        schedulerEvents : {\n            pointermove : 'handleScheduleEvent',\n            mouseover   : 'handleScheduleEvent',\n            mousedown   : 'handleScheduleEvent',\n            mouseup     : 'handleScheduleEvent',\n            click       : 'handleScheduleEvent',\n            dblclick    : 'handleScheduleEvent',\n            contextmenu : 'handleScheduleEvent',\n            mousemove   : 'handleScheduleEvent',\n            mouseout    : 'handleScheduleEvent'\n        },\n\n        schedulerEnterLeaveEvents : {\n            mouseenter : 'handleScheduleEnterLeaveEvent',\n            mouseleave : 'handleScheduleEnterLeaveEvent',\n            capture    : true\n        }\n    };\n\n    static delayable = {\n        // Allow the scroll event to complete in its thread, and dispatch the mousemove event next AF\n        onScheduleScroll : 'raf'\n    };\n\n    // Currently hovered events (can be parent + child)\n    hoveredEvents = new Set();\n\n    //endregion\n\n    //region Init\n\n    /**\n     * Adds listeners for DOM events for the scheduler and its events.\n     * Which events is specified in Scheduler#schedulerEvents.\n     * @private\n     */\n    initDomEvents() {\n        const\n            me = this,\n            {\n                schedulerEvents,\n                schedulerEnterLeaveEvents\n            }  = me;\n\n        // Set thisObj and element of the configured listener specs.\n        schedulerEvents.element = schedulerEnterLeaveEvents.element = me.timeAxisSubGridElement;\n        schedulerEvents.thisObj = schedulerEnterLeaveEvents.thisObj = me;\n        EventHelper.on(schedulerEvents);\n        EventHelper.on(schedulerEnterLeaveEvents);\n\n        // This is to handle scroll events while the mouse is over the schedule.\n        // For example magic mouse or touchpad scrolls, or scrolls caused by keyboard\n        // navigation while the mouse happens to be over the schedule.\n        // The context must update. We must consider any scroll because the document\n        // or some other wrapping element could be scrolling the Scheduler under the mouse.\n        if (BrowserHelper.supportsPointerEventConstructor) {\n            EventHelper.on({\n                element : document,\n                scroll  : 'onScheduleScroll',\n                capture : true,\n                thisObj : me\n            });\n        }\n    };\n\n    //endregion\n\n    //region Event handling\n    getTimeSpanMouseEventParams(eventElement, event) {\n        throw new Error('Implement in subclass');\n    }\n\n    getScheduleMouseEventParams(cellData, event) {\n        throw new Error('Implement in subclass');\n    }\n\n    /**\n     * Wraps dom Events for the scheduler and event bars and fires as our events.\n     * For example click -> scheduleClick or eventClick\n     * @private\n     * @param event\n     */\n    handleScheduleEvent(event) {\n        const\n            me              = this,\n            timelineContext = me.getTimelineEventContext(event);\n\n        // Cache the last pointer event so that  when scrolling below the mouse\n        // we can inject mousemove events at that point.\n        me.lastPointerEvent = event;\n\n        // We are over the schedule region\n        if (timelineContext) {\n            // Only fire a scheduleXXXX event if we are *not* over an event.\n            // If over an event fire (event|task)XXXX.\n            me.trigger(`${timelineContext.eventElement ? me.scheduledEventName : 'schedule'}${eventNameMap[event.type] || StringHelper.capitalize(event.type)}`, timelineContext);\n        }\n\n        // If the context has changed, updateTimelineContext will fire events\n        me.timelineContext = timelineContext;\n    }\n\n    handleScheduleEnterLeaveEvent(event) {\n        if (event.target.parentElement === this.foregroundCanvas) {\n            this.handleScheduleEvent(event);\n        }\n    }\n\n    /**\n     * This handles the scheduler being scrolled below the mouse by trackpad or keyboard events.\n     * The context, if present needs to be recalculated.\n     * @private\n     */\n    onScheduleScroll({ target }) {\n        const me = this;\n        // If the latest mouse event resulted in setting a context, we need to reproduce that event at the same clientX,\n        // clientY in order to keep the context up to date while scrolling.\n        // If the scroll is because of a pan feature drag (on us or a partner), we must not do this.\n        // Target might be removed in salesforce by Locker Service if scroll event occurs on body\n        if (\n            target && me.updateTimelineContextOnScroll && !me.features.pan?.isActive &&\n            !me.partners.some(p => p.features.pan?.isActive) &&\n            (target.contains(me.element) || me.bodyElement.contains(target))\n        ) {\n            const { timelineContext, lastPointerEvent } = me;\n\n            if (timelineContext) {\n                const\n                    targetElement = DomHelper.elementFromPoint(timelineContext.domEvent.clientX, timelineContext.domEvent.clientY),\n                    pointerEvent  = new BrowserHelper.PointerEventConstructor('pointermove', lastPointerEvent),\n                    mouseEvent    = new MouseEvent('mousemove', lastPointerEvent);\n\n                // See https://github.com/bryntum/support/issues/6274\n                // The pointerId does not propagate correctly on the synthetic PointerEvent, but also is readonly, so\n                // redefine the property. This is required by Ext JS gesture publisher which tracks pointer movements\n                // while a pointer is down. Without the correct pointerId, Ext JS would see this move as a \"missed\"\n                // pointerdown and forever await its pointerup (i.e., it would get stuck in the activeTouches). This\n                // would cause all future events to be perceived as part of or the end of a drag and would never again\n                // dispatch pointer events correctly. Finally, lastPointerEvent.pointerId is often incorrect (undefined\n                // in fact), so check the most recent pointerdown/touchstart event and default to 1\n                Object.defineProperty(pointerEvent, 'pointerId', {\n                    value : GlobalEvents.currentPointerDown?.pointerId ?? GlobalEvents.currentTouch?.identifier ?? 1\n                });\n\n                // Drag code should ignore these synthetic events\n                pointerEvent.scrollInitiated = mouseEvent.scrollInitiated = true;\n\n                // Emulate the correct browser sequence for mouse move events\n                targetElement?.dispatchEvent(pointerEvent);\n                targetElement?.dispatchEvent(mouseEvent);\n            }\n        }\n    }\n\n    updateTimelineContext(context, oldContext) {\n        /**\n         * Fired when the pointer-activated {@link #property-timelineContext} has changed.\n         * @event timelineContextChange\n         * @param {TimelineContext} oldContext The tick/resource context being deactivated.\n         * @param {TimelineContext} context The tick/resource context being activated.\n         */\n        this.trigger('timelineContextChange', { oldContext, context });\n\n        if (!context) {\n            this.trigger('scheduleMouseLeave');\n        }\n    }\n\n    /**\n     * Gathers contextual information about the schedule contextual position of the passed event.\n     *\n     * Used by schedule mouse event handlers, but also by the scheduleContext feature.\n     * @param {Event} domEvent The DOM event to gather context for.\n     * @returns {TimelineContext} the schedule DOM event context\n     * @internal\n     */\n    getTimelineEventContext(domEvent) {\n        const\n            me           = this,\n            eventElement = domEvent.target.closest(me.eventInnerSelector),\n            cellElement  = me.getCellElementFromDomEvent(domEvent);\n\n        if (cellElement) {\n            const clickedDate = me.getDateFromDomEvent(domEvent, 'floor');\n\n            if (!clickedDate) {\n                return;\n            }\n\n            const\n                cellData    = DomDataStore.get(cellElement),\n                mouseParams = eventElement ? me.getTimeSpanMouseEventParams(eventElement, domEvent) : me.getScheduleMouseEventParams(cellData, domEvent);\n\n            if (!mouseParams) {\n                return;\n            }\n\n            const\n                index     = me.isVertical ? me.resourceStore.indexOf(mouseParams.resourceRecord) : cellData.row.dataIndex,\n                tickIndex = me.timeAxis.getTickFromDate(clickedDate),\n                tick      = me.timeAxis.getAt(Math.floor(tickIndex));\n\n            if (tick) {\n                return {\n                    isTimelineContext : true,\n                    domEvent,\n                    eventElement,\n                    cellElement,\n                    index,\n                    tick,\n                    tickIndex,\n                    date              : clickedDate,\n                    tickStartDate     : tick.startDate,\n                    tickEndDate       : tick.endDate,\n                    tickParentIndex   : tick.parentIndex,\n                    row               : cellData.row,\n                    event             : domEvent,\n                    ...mouseParams\n                };\n            }\n        }\n    }\n\n    getCellElementFromDomEvent({ target, clientY, type }) {\n        const\n            me           = this,\n            {\n                isVertical,\n                foregroundCanvas\n            }            = me,\n            eventElement = target.closest(me.eventSelector);\n\n        // If event was on an event bar, calculate the cell.\n        if (eventElement) {\n            return me.getCell({\n                [isVertical ? 'row' : 'record'] : isVertical ? 0 : me.resolveRowRecord(eventElement),\n                column                          : me.timeAxisColumn\n            });\n        }\n        // If event was triggered by an element in the foreground canvas, but not an event element\n        // we need to ascertain the cell \"behind\" that element to be able to create the context.\n        else if (foregroundCanvas.contains(target)) {\n            // Only trigger a Scheduler event if the event was on the background itself.\n            // Otherwise, we will trigger unexpected events on things like dependency lines which historically\n            // have never triggered scheduleXXXX events. The exception to this is the mousemove event which\n            // needs to always fire so that timelineContext and scheduleTooltip correctly track the mouse\n            if (target === foregroundCanvas || type === 'mousemove') {\n                return me.rowManager.getRowAt(clientY, false)?.getCell(me.timeAxisColumn.id);\n            }\n        }\n        else {\n            // Event was inside a row, or on a row border.\n            return target.matches('.b-grid-row') ? target.firstElementChild : target.closest(me.timeCellSelector);\n        }\n    }\n\n    // Overridden by ResourceTimeRanges to \"pass events through\" to the schedule\n    matchScheduleCell(element) {\n        return element.closest(this.timeCellSelector);\n    }\n\n    onElementMouseButtonEvent(event) {\n        const targetCell = event.target.closest('.b-sch-header-timeaxis-cell');\n        if (targetCell) {\n            const\n                me           = this,\n                position     = targetCell.parentElement.dataset.headerPosition,\n                headerCells  = me.timeAxisViewModel.columnConfig[position],\n                index        = me.timeAxis.isFiltered ? headerCells.findIndex(cell => cell.index == targetCell.dataset.tickIndex) : targetCell.dataset.tickIndex,\n                cellConfig   = headerCells[index],\n                contextMenu  = me.features.contextMenu;\n\n            // Skip same events with Grid context menu triggerEvent\n            if (!contextMenu || event.type !== contextMenu.triggerEvent) {\n                this.trigger(`timeAxisHeader${StringHelper.capitalize(event.type)}`, {\n                    startDate : cellConfig.start,\n                    endDate   : cellConfig.end,\n                    event\n                });\n            }\n        }\n    }\n\n    onElementMouseDown(event) {\n        this.onElementMouseButtonEvent(event);\n        super.onElementMouseDown(event);\n    }\n\n    onElementClick(event) {\n        this.onElementMouseButtonEvent(event);\n        super.onElementClick(event);\n    }\n\n    onElementDblClick(event) {\n        this.onElementMouseButtonEvent(event);\n        super.onElementDblClick(event);\n    }\n\n    onElementContextMenu(event) {\n        this.onElementMouseButtonEvent(event);\n        super.onElementContextMenu(event);\n    }\n\n    /**\n     * Relays mouseover events as eventmouseenter if over rendered event.\n     * Also adds Scheduler#overScheduledEventClass to the hovered element.\n     * @private\n     */\n    onElementMouseOver(event) {\n        super.onElementMouseOver(event);\n\n        const\n            me                = this,\n            { target }        = event,\n            { hoveredEvents } = me;\n\n        // We must be over the event bar\n        if (target.closest(me.eventInnerSelector) && !me.features.eventDrag?.isDragging) {\n            const eventElement = target.closest(me.eventSelector);\n\n            if (!hoveredEvents.has(eventElement) && !me.preventOverCls) {\n                hoveredEvents.add(eventElement);\n                eventElement.classList.add(me.overScheduledEventClass);\n\n                const params = me.getTimeSpanMouseEventParams(eventElement, event);\n                if (params) {\n                    // do not fire this event if model cannot be found\n                    // this can be the case for \"b-sch-dragcreator-proxy\" elements for example\n                    me.trigger(`${me.scheduledEventName}MouseEnter`, params);\n                }\n            }\n        }\n        else if (hoveredEvents.size) {\n            me.unhoverAll(event);\n        }\n    }\n\n    /**\n     * Relays mouseout events as eventmouseleave if out from rendered event.\n     * Also removes Scheduler#overScheduledEventClass from the hovered element.\n     * @private\n     */\n    onElementMouseOut(event) {\n        super.onElementMouseOut(event);\n\n        const\n            me                        = this,\n            { target, relatedTarget } = event,\n            eventInner                = target.closest(me.eventInnerSelector),\n            eventWrap                 = target.closest(me.eventSelector),\n            timeSpanRecord            = me.resolveTimeSpanRecord(target);\n\n        // We must be over the event bar\n        // <remove-on-release>\n        // TODO: this isDragging check should be done in the feature (all drag/resize features actually) and here we should have a hook call\n        // </remove-on-release>\n        if (eventInner && timeSpanRecord && me.hoveredEvents.has(eventWrap) && !me.features.eventDrag?.isDragging) {\n            // out to child shouldn't count...\n            if (relatedTarget && DomHelper.isDescendant(eventInner, relatedTarget)) {\n                return;\n            }\n\n            me.unhover(eventWrap, event);\n        }\n    }\n\n    unhover(element, event) {\n        const me = this;\n\n        element.classList.remove(me.overScheduledEventClass);\n        me.trigger(`${me.scheduledEventName}MouseLeave`, me.getTimeSpanMouseEventParams(element, event));\n        me.hoveredEvents.delete(element);\n    }\n\n    unhoverAll(event) {\n        for (const element of this.hoveredEvents) {\n            !element.isReleased && !element.classList.contains('b-released') && this.unhover(element, event);\n        }\n\n        // Might not be empty because of conditional unhover above\n        this.hoveredEvents.clear();\n    }\n\n    //endregion\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n};\n","import Base from '../../../Core/Base.js';\nimport PresetManager from '../../preset/PresetManager.js';\nimport ObjectHelper from '../../../Core/helper/ObjectHelper.js';\nimport PresetStore from '../../preset/PresetStore.js';\nimport DateHelper, { unitMagnitudes } from '../../../Core/helper/DateHelper.js';\n\n/**\n * @module Scheduler/view/mixin/TimelineViewPresets\n */\n\nconst\n    datesDiffer = (d1 = 0, d2 = 0) => d2 - d1;\n\n/**\n * View preset handling.\n *\n * A Scheduler's {@link #config-presets} are loaded with a default set of {@link Scheduler.preset.ViewPreset ViewPresets}\n * which are defined by the system in the {@link Scheduler.preset.PresetManager PresetManager}.\n *\n * The zooming feature works by reconfiguring the Scheduler with a new {@link Scheduler.preset.ViewPreset ViewPreset} selected\n * from the {@link #config-presets} store.\n *\n * {@link Scheduler.preset.ViewPreset ViewPresets} can be added and removed from the store to change the amount of available steps.\n * Range of zooming in/out can be also modified with {@link Scheduler.view.mixin.TimelineZoomable#config-maxZoomLevel} / {@link Scheduler.view.mixin.TimelineZoomable#config-minZoomLevel} properties.\n *\n * This mixin adds additional methods to the column : {@link Scheduler.view.mixin.TimelineZoomable#property-maxZoomLevel}, {@link Scheduler.view.mixin.TimelineZoomable#property-minZoomLevel}, {@link Scheduler.view.mixin.TimelineZoomable#function-zoomToLevel}, {@link Scheduler.view.mixin.TimelineZoomable#function-zoomIn},\n * {@link Scheduler.view.mixin.TimelineZoomable#function-zoomOut}, {@link Scheduler.view.mixin.TimelineZoomable#function-zoomInFull}, {@link Scheduler.view.mixin.TimelineZoomable#function-zoomOutFull}.\n *\n * **Notice**: Zooming is not supported when `forceFit` option is set to true for the Scheduler or for filtered timeaxis.\n *\n * @mixin\n */\nexport default Target => class TimelineViewPresets extends (Target || Base) {\n    static get $name() {\n        return 'TimelineViewPresets';\n    }\n\n    //region Default config\n\n    static get configurable() {\n        return {\n            /**\n             * A string key used to lookup a predefined {@link Scheduler.preset.ViewPreset} (e.g. 'weekAndDay', 'hourAndDay'),\n             * managed by {@link Scheduler.preset.PresetManager}. See {@link Scheduler.preset.PresetManager} for more information.\n             * Or a config object for a viewPreset.\n             *\n             * Options:\n             * - 'secondAndMinute'\n             * - 'minuteAndHour'\n             * - 'hourAndDay'\n             * - 'dayAndWeek'\n             * - 'dayAndMonth'\n             * - 'weekAndDay'\n             * - 'weekAndMonth',\n             * - 'monthAndYear'\n             * - 'year'\n             * - 'manyYears'\n             * - 'weekAndDayLetter'\n             * - 'weekDateAndMonth'\n             * - 'day'\n             * - 'week'\n             *\n             * If passed as a config object, the settings from the viewPreset with the provided `base` property will be used along\n             * with any overridden values in your object.\n             *\n             * To override:\n             * ```javascript\n             * viewPreset : {\n             *   base    : 'hourAndDay',\n             *   id      : 'myHourAndDayPreset',\n             *   headers : [\n             *       {\n             *           unit      : \"hour\",\n             *           increment : 12,\n             *           renderer  : (startDate, endDate, headerConfig, cellIdx) => {\n             *               return \"\";\n             *           }\n             *       }\n             *   ]\n             * }\n             * ```\n             * or set a new valid preset config if the preset is not registered in the {@link Scheduler.preset.PresetManager}.\n             *\n             * When you use scheduler in weekview mode, this config is used to pick view preset. If passed view preset is not\n             * supported by weekview (only 2 supported by default - 'day' and 'week') default preset will be used - 'week'.\n             * @config {String|ViewPresetConfig}\n             * @default\n             * @category Common\n             */\n            viewPreset : 'weekAndDayLetter',\n\n            /**\n             * Get the {@link Scheduler.preset.PresetStore} created for the Scheduler,\n             * or set an array of {@link Scheduler.preset.ViewPreset} config objects.\n             * @member {Scheduler.preset.PresetStore|ViewPresetConfig[]} presets\n             * @category Common\n             */\n            /**\n             * An array of {@link Scheduler.preset.ViewPreset} config objects\n             * which describes the available timeline layouts for this scheduler.\n             *\n             * By default, a predefined set is loaded from the {@link Scheduler.preset.PresetManager}.\n             *\n             * A {@link Scheduler.preset.ViewPreset} describes the granularity of the\n             * timeline view and the layout and subdivisions of the timeline header.\n             * @config {ViewPresetConfig[]} presets\n             *\n             * @category Common\n             */\n            presets : true,\n\n            /**\n             * Defines how dates will be formatted in tooltips etc. This config has priority over similar config on the\n             * view preset. For allowed values see {@link Core.helper.DateHelper#function-format-static}.\n             *\n             * By default, this is ingested from {@link Scheduler.preset.ViewPreset} upon change of\n             * {@link Scheduler.preset.ViewPreset} (Such as when zooming in or out). But Setting this\n             * to your own value, overrides that behaviour.\n             * @prp {String}\n             * @category Scheduled events\n             */\n            displayDateFormat : null\n        };\n    }\n\n    //endregion\n\n    /**\n     * Get/set the current view preset\n     * @member {Scheduler.preset.ViewPreset|ViewPresetConfig|String} viewPreset\n     * @param [viewPreset.options]\n     * @param {Date} [viewPreset.options.startDate] A new start date for the time axis\n     * @param {Date} [viewPreset.options.endDate] A new end date for the time axis\n     * @param {Date} [viewPreset.options.centerDate] Where to center the new time axis\n     * @category Common\n    */\n\n    //region Get/set\n\n    changePresets(presets) {\n        const config = {\n            owner : this\n        };\n        let data = [];\n\n        // By default includes all presets\n        if (presets === true) {\n            data = PresetManager.allRecords;\n        }\n        // Accepts an array of presets\n        else if (Array.isArray(presets)) {\n            for (const preset of presets) {\n                // If we got a presetId\n                if (typeof preset === 'string') {\n                    const presetRecord = PresetManager.getById(preset);\n                    if (presetRecord) {\n                        data.push(presetRecord);\n                    }\n                }\n                else {\n                    data.push(preset);\n                }\n            }\n        }\n        // Or a store config object\n        else {\n            ObjectHelper.assign(config, presets);\n        }\n        // Creates store first and then adds data, because data config does not support a mix of raw objects and records.\n        const presetStore = new PresetStore(config);\n        presetStore.add(data);\n\n        return presetStore;\n    }\n\n    changeViewPreset(viewPreset, oldViewPreset) {\n        const\n            me           = this,\n            { presets } = me;\n\n        if (viewPreset) {\n            viewPreset = presets.createRecord(viewPreset);\n\n            // If an existing ViewPreset id is used, this will replace it.\n            if (!presets.includes(viewPreset)) {\n                presets.add(viewPreset);\n            }\n        }\n        else {\n            viewPreset = presets.first;\n        }\n\n        const\n            lastOpts = me.lastViewPresetOptions || {},\n            options  = viewPreset.options || (viewPreset.options = {}),\n            event    = options.event = {\n                startDate : options.startDate,\n                endDate   : options.endDate,\n                from      : oldViewPreset,\n                to        : viewPreset,\n                preset    : viewPreset\n            },\n            presetChanged  = !me._viewPreset || !me._viewPreset.equals(viewPreset),\n            optionsChanged = datesDiffer(options.startDate, lastOpts.startDate) ||\n                datesDiffer(options.endDate, lastOpts.endDate) ||\n                datesDiffer(options.centerDate, lastOpts.centerDate) ||\n                (options.startDate && datesDiffer(options.startDate, me.startDate)) ||\n                (options.endDate && datesDiffer(options.endDate, me.endDate));\n\n        // Only return the value for onward processing if there's a change\n        if (presetChanged || optionsChanged) {\n\n            // Bypass the no-change check if the viewPreset is the same and we only got in here\n            // because different options were asked for.\n            if (!presetChanged) {\n                me._viewPreset = null;\n            }\n\n            /**\n             * Fired before the {@link #config-viewPreset} is changed.\n             * @event beforePresetChange\n             * @param {Scheduler.view.Scheduler} source This Scheduler instance.\n             * @param {Date} startDate The new start date of the timeline.\n             * @param {Date} endDate The new end date of the timeline.\n             * @param {Scheduler.preset.ViewPreset} from The outgoing ViewPreset.\n             * @param {Scheduler.preset.ViewPreset} to The ViewPreset being switched to.\n             * @preventable\n             */\n            // Do not trigger events for the initial preset\n            if (me.isConfiguring || me.trigger('beforePresetChange', event) !== false) {\n                return viewPreset;\n            }\n        }\n    }\n\n    get displayDateFormat() {\n        return this._displayDateFormat || this.viewPreset.displayDateFormat;\n    }\n\n    updateDisplayDateFormat(format) {\n        // Start/EndDateColumn listens for this to change their format to match\n        this.trigger('displayDateFormatChange', { format });\n    }\n\n    /**\n     * Method to get a formatted display date\n     * @private\n     * @param {Date} date The date\n     * @returns {String} The formatted date\n     */\n    getFormattedDate(date) {\n        return DateHelper.format(date, this.displayDateFormat);\n    }\n\n    updateViewPreset(preset) {\n        const\n            me          = this,\n            { options } = preset,\n            {\n                event,\n                startDate,\n                endDate\n            }           = options,\n            {\n                isHorizontal,\n                _timeAxis : timeAxis,    // Do not tickle the getter, we are just peeking to see if it's there yet.\n                _timeAxisViewModel : timeAxisViewModel // Ditto\n            } = me,\n            rtl = isHorizontal && me.rtl;\n\n        let\n            {\n                centerDate,\n                zoomDate,\n                zoomPosition\n            }           = options,\n            forceUpdate = false;\n\n        // Options must not be reused when this preset is used again.\n        delete preset.options;\n\n        // Raise flag to prevent partner from changing view preset if one is in progress\n        me._viewPresetChanging = true;\n\n        if (timeAxis && !me.isConfiguring) {\n            const { timelineScroller } = me;\n\n            // Cache options only when they are applied so that non-change vetoing in changeViewPreset is accurate\n            me.lastViewPresetOptions = options;\n\n            // Timeaxis may already be configured (in case of sharing with the timeline partner), no need to reconfigure it\n            if (timeAxis.isConfigured) {\n                // None of this reconfiguring should cause a refresh\n                me.suspendRefresh();\n\n                // Set up these configs only if we actually have them.\n                const timeAxisCfg = ObjectHelper.copyProperties({}, me, [\n                    'weekStartDay',\n                    'startTime',\n                    'endTime'\n                ]);\n\n                if (me.infiniteScroll) {\n                    Object.assign(timeAxisCfg, timeAxisViewModel.calculateInfiniteScrollingDateRange(\n                        centerDate || new Date((startDate.getTime() + endDate.getTime()) / 2),\n                        true,\n                        preset\n                    ));\n                }\n                // if startDate is provided we use it and the provided endDate\n                else if (startDate) {\n                    timeAxisCfg.startDate = startDate;\n                    timeAxisCfg.endDate = endDate;\n\n                    // if both dates are provided we can calculate centerDate for the viewport\n                    if (!centerDate && endDate) {\n                        centerDate = new Date((startDate.getTime() + endDate.getTime()) / 2);\n                    }\n\n                    // when no start/end dates are provided we use the current timespan\n                }\n                else {\n                    timeAxisCfg.startDate = timeAxis.startDate;\n                    timeAxisCfg.endDate = endDate || timeAxis.endDate;\n\n                    if (!centerDate) {\n                        centerDate = me.viewportCenterDate;\n                    }\n                }\n\n                timeAxis.isConfigured = false;\n                timeAxisCfg.viewPreset = preset;\n                timeAxis.reconfigure(timeAxisCfg, true);\n\n                timeAxisViewModel.reconfigure({\n                    viewPreset : preset,\n                    headers    : preset.headers,\n\n                    // This was hardcoded to 'middle' prior to the Preset refactor.\n                    // In the old code, the default headers were 'top' and 'middle', which\n                    // meant that 'middle' meant the lowest header.\n                    // So this is now length - 1.\n                    columnLinesFor : preset.columnLinesFor != null ? preset.columnLinesFor : preset.headers.length - 1,\n\n                    tickSize : isHorizontal ? preset.tickWidth : preset.tickHeight || preset.tickWidth || 60\n                });\n\n                // Allow refresh to run after the reconfiguring, without refreshing since we will do that below anyway\n                me.resumeRefresh(false);\n            }\n\n            me.refresh();\n\n            // if view is rendered and scroll is not disabled by \"notScroll\" option\n            if (!options.notScroll && me.isPainted) {\n                if (options.visibleDate) {\n                    me.visibleDate = options.visibleDate;\n                }\n                // If a zoom at a certain date position is being requested, scroll the zoomDate\n                // to the required zoomPosition so that the zoom happens centered where the\n                // pointer events that are driving it targeted.\n                else if (zoomDate && zoomPosition) {\n                    const\n                        unitMagnitude = unitMagnitudes[timeAxis.resolutionUnit],\n                        unit          = unitMagnitude > 3 ? 'hour' : 'minute',\n                        milliseconds  = DateHelper.asMilliseconds((unit === 'minute' ? 15 : 1), unit),\n                        // Round the date to either 15 minutes for fine levels or 1 hour for coarse levels\n                        targetDate    = new Date(Math.round(zoomDate / milliseconds) * milliseconds);\n\n                    // setViewPreset method on partner panels should be executed with same arguments.\n                    // if one partner was provided with zoom info, other one has to be too to generate exact\n                    // header and set same scroll\n                    event.zoomDate = zoomDate;\n                    event.zoomPosition = zoomPosition;\n                    event.zoomLevel = options.zoomLevel;\n\n                    // Move the targetDate back under the mouse position as indicated by zoomPosition.\n                    // That is the offset into the TimeAxisSubGridElement.\n                    if (rtl) {\n                        timelineScroller.position = timelineScroller.scrollWidth - (me.getCoordinateFromDate(targetDate) + zoomPosition);\n                    }\n                    else {\n                        timelineScroller.position = me.getCoordinateFromDate(targetDate) - zoomPosition;\n                    }\n                }\n                // and we have centerDate to scroll to\n                else if (centerDate) {\n                    // remember the central date we scroll to (it gets reset after user scroll)\n                    me.cachedCenterDate = centerDate;\n\n                    // setViewPreset method on partner panels should be executed with same arguments.\n                    // if one partner was provided with a centerDate, other one has to be too to generate exact\n                    // header and set same scroll\n                    event.centerDate = centerDate;\n\n                    const\n                        viewportSize = me.timelineScroller.clientSize,\n                        centerCoord  = rtl ? me.timeAxisViewModel.totalSize - me.getCoordinateFromDate(centerDate, true)\n                            : me.getCoordinateFromDate(centerDate, true),\n                        coord        = Math.max(centerCoord - viewportSize / 2, 0);\n\n                    // The horizontal scroll handler must not invalidate the cached center\n                    // when this scroll event rolls round on the next frame.\n                    me.scrollingToCenter = true;\n\n                    // If preset change does not lead to a scroll we have to \"refresh\" manually at the end\n                    if (coord === (me.isHorizontal ? me.scrollLeft : me.scrollTop)) {\n                        forceUpdate = true;\n                    }\n                    else if (me.isHorizontal) {\n                        me.scrollHorizontallyTo(coord, false);\n                    }\n                    else {\n                        me.scrollVerticallyTo(coord, false);\n                    }\n\n                    // Release the lock on scrolling invalidating the cached center.\n                    me.setTimeout(() => {\n                        me.scrollingToCenter = false;\n                    }, 100);\n                }\n                else {\n                    // If preset change does not lead to a scroll we have to \"refresh\" manually at the end\n                    if ((me.isHorizontal ? me.scrollLeft : me.scrollTop) === 0) {\n                        forceUpdate = true;\n                    }\n                    // If we don't have a center date to scroll to, we reset scroll (this is bw compatible behavior)\n                    else {\n                        me.timelineScroller.scrollTo(0);\n                    }\n                }\n            }\n        }\n\n        // Update Scheduler element showing what preset is applied\n        me.dataset.presetId = preset.id;\n\n        /**\n         * Fired after the {@link #config-viewPreset} has changed.\n         * @event presetChange\n         * @param {Scheduler.view.Scheduler} source This Scheduler instance.\n         * @param {Date} startDate The new start date of the timeline.\n         * @param {Date} centerDate The new center date of the timeline.\n         * @param {Date} endDate The new end date of the timeline.\n         * @param {Scheduler.preset.ViewPreset} from The outgoing ViewPreset.\n         * @param {Scheduler.preset.ViewPreset} to The ViewPreset being switched to.\n         * @preventable\n         */\n        me.trigger('presetChange', event);\n\n        me._viewPresetChanging = false;\n\n        if (forceUpdate) {\n            if (me.isHorizontal) {\n                me.currentOrientation.updateFromHorizontalScroll(me.scrollLeft, me.scrollX);\n            }\n            else {\n                me.currentOrientation.updateFromVerticalScroll(me.scrollTop);\n            }\n        }\n    }\n\n    //endregion\n\n    doDestroy() {\n        if (this._presets.owner === this) {\n            this._presets.destroy();\n        }\n        super.doDestroy();\n    }\n\n    // This function is not meant to be called by any code other than Base#getCurrentConfig().\n    getCurrentConfig(options) {\n        const result = super.getCurrentConfig(options);\n\n        // Cannot store name, will not be allowed when reapplying\n        if (result.viewPreset && result.viewPreset.name && !result.viewPreset.base) {\n            delete result.viewPreset.name;\n        }\n\n        return result;\n    }\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n};\n","import Base from '../../../Core/Base.js';\nimport DateHelper from '../../../Core/helper/DateHelper.js';\nimport EventHelper from '../../../Core/helper/EventHelper.js';\n\n/**\n * @module Scheduler/view/mixin/TimelineZoomable\n */\n\n/**\n * Options which may be used when changing the {@link Scheduler.view.Scheduler#property-viewPreset} property.\n *\n * @typedef {Object} ChangePresetOptions\n * @property {VisibleDate} [visibleDate] A `visibleDate` specification to bring into view after the new\n * `ViewPreset` is applied.\n * @property {Date} [startDate] New time frame start. If provided along with end, view will be centered in this\n * time interval, ignoring centerDate config. __Ignored if {@link Scheduler.view.Scheduler#config-infiniteScroll} is used.__\n * @property {Date} [endDate] New time frame end. __Ignored if {@link Scheduler.view.Scheduler#config-infiniteScroll} is used.__\n * @property {Date} [centerDate] Date to keep in center. Is ignored when start and end are provided.\n * @property {Date} [zoomDate] The date that should be positioned at the passed `datePosition` client offset.\n * @property {Number} [zoomPosition] The client offset at which the passed `zoomDate` should be positioned.\n * @property {Number} [width] Lowest tick width. Might be increased automatically\n */\n\n/**\n * Mixin providing \"zooming\" functionality.\n *\n * The zoom levels are stored as instances of {@link Scheduler.preset.ViewPreset}s, and are\n * cached centrally in the {@link Scheduler.preset.PresetManager}.\n *\n * The default presets are loaded into the {@link Scheduler.view.mixin.TimelineViewPresets#config-presets}\n * store upon Scheduler instantiation. Preset selection is covered in the\n * {@link Scheduler.view.mixin.TimelineViewPresets} mixin.\n *\n * To specify custom zoom levels please provide a set of view presets to the global PresetManager store **before**\n * scheduler creation, or provide a set of view presets to a specific scheduler only:\n *\n * ```javascript\n * const myScheduler = new Scheduler({\n *     presets : [\n *         {\n *             base : 'hourAndDay',\n *             id   : 'MyHourAndDay',\n *             // other preset configs....\n *         },\n *         {\n *             base : 'weekAndMonth',\n *             id   : 'MyWeekAndMonth',\n *             // other preset configs....\n *         }\n *     ],\n *     viewPreset : 'MyHourAndDay',\n *     // other scheduler configs....\n *     });\n * ```\n *\n * @mixin\n */\nexport default Target => class TimelineZoomable extends (Target || Base) {\n    static $name = 'TimelineZoomable';\n\n    static defaultConfig = {\n        /**\n         * If true, you can zoom in and out on the time axis using CTRL-key + mouse wheel.\n         * @config {Boolean}\n         * @default\n         * @category Zoom\n         */\n        zoomOnMouseWheel : true,\n\n        /**\n         * True to zoom to time span when double-clicking a time axis cell.\n         * @config {Boolean}\n         * @default\n         * @category Zoom\n         */\n        zoomOnTimeAxisDoubleClick : true,\n\n        /**\n         * The minimum zoom level to which {@link #function-zoomOut} will work. Defaults to 0 (year ticks)\n         * @config {Number}\n         * @category Zoom\n         * @default\n         */\n        minZoomLevel : 0,\n\n        /**\n         * The maximum zoom level to which {@link #function-zoomIn} will work. Defaults to the number of\n         * {@link Scheduler.preset.ViewPreset ViewPresets} available, see {@link Scheduler/view/mixin/TimelineViewPresets#property-presets}\n         * for information. Unless you have modified the collection of available presets, the max zoom level is\n         * milliseconds.\n         * @config {Number}\n         * @category Zoom\n         * @default 23\n         */\n        maxZoomLevel : null,\n\n        /**\n         * Integer number indicating the size of timespan during zooming. When zooming, the timespan is adjusted to make\n         * the scrolling area `visibleZoomFactor` times wider than the timeline area itself. Used in\n         * {@link #function-zoomToSpan} and {@link #function-zoomToLevel} functions.\n         * @config {Number}\n         * @default\n         * @category Zoom\n         */\n        visibleZoomFactor : 5,\n\n        /**\n         * Whether the originally rendered timespan should be preserved while zooming. By default, it is set to `false`,\n         * meaning the timeline panel will adjust the currently rendered timespan to limit the amount of HTML content to\n         * render. When setting this option to `true`, be careful not to allow to zoom a big timespan in seconds\n         * resolution for example. That will cause **a lot** of HTML content to be rendered and affect performance. You\n         * can use {@link #config-minZoomLevel} and {@link #config-maxZoomLevel} config options for that.\n         * @config {Boolean}\n         * @default\n         * @category Zoom\n         */\n        zoomKeepsOriginalTimespan : null\n    };\n\n    // We cache the last mousewheel position, so that during zooming we can\n    // maintain a stable zoom point even if the mouse moves a little.\n    lastWheelTime = -1;\n    lastZoomPosition = -1;\n\n    construct(config) {\n        const me = this;\n\n        super.construct(config);\n\n        if (me.zoomOnMouseWheel) {\n            EventHelper.on({\n                element   : me.timeAxisSubGridElement,\n                wheel     : 'onWheel',\n                // Throttle zooming with the wheel a bit to have greater control of it\n                throttled : {\n                    buffer : 100,\n                    // Prevent events from slipping through the throttle, causing scroll\n                    alt    : e => e.ctrlKey && e.preventDefault()\n                },\n                thisObj : me,\n                capture : true,\n                passive : false\n            });\n        }\n\n        if (me.zoomOnTimeAxisDoubleClick) {\n            me.ion({\n                timeaxisheaderdblclick : ({ startDate, endDate }) => {\n                    if (!me.forceFit) {\n                        me.zoomToSpan({\n                            startDate,\n                            endDate\n                        });\n                    }\n                }\n            });\n        }\n    }\n\n    get maxZoomLevel() {\n        return this._maxZoomLevel || (this.presets.count - 1);\n    }\n\n    /**\n     * Get/set the {@link #config-maxZoomLevel} value\n     * @property {Number}\n     * @category Zoom\n     */\n    set maxZoomLevel(level) {\n        if (typeof level !== 'number') {\n            level = this.presets.count - 1;\n        }\n\n        if (level < 0 || level >= this.presets.count) {\n            throw new Error('Invalid range for `maxZoomLevel`');\n        }\n\n        this._maxZoomLevel = level;\n    }\n\n    get minZoomLevel() {\n        return this._minZoomLevel;\n    }\n\n    /**\n     * Sets the {@link #config-minZoomLevel} value\n     * @property {Number}\n     * @category Zoom\n     */\n    set minZoomLevel(level) {\n        if (typeof level !== 'number') {\n            level = 0;\n        }\n\n        if (level < 0 || level >= this.presets.count) {\n            throw new Error('Invalid range for `minZoomLevel`');\n        }\n\n        this._minZoomLevel = level;\n    }\n\n    /**\n     * Current zoom level, which is equal to the {@link Scheduler.preset.ViewPreset ViewPreset} index\n     * in the provided array of {@link Scheduler.view.mixin.TimelineViewPresets#config-presets zoom levels}.\n     * @property {Number}\n     * @category Zoom\n     */\n    get zoomLevel() {\n        return this.presets.indexOf(this.viewPreset);\n    }\n\n    // noinspection JSAnnotator\n    set zoomLevel(level) {\n        this.zoomToLevel(level);\n    }\n\n    /**\n     * Returns number of milliseconds per pixel.\n     * @param {Object} level Element from array of {@link Scheduler.view.mixin.TimelineViewPresets#config-presets}.\n     * @param {Boolean} ignoreActualWidth If true, then density will be calculated using default zoom level settings.\n     * Otherwise, density will be calculated for actual tick width.\n     * @returns {Number} Return number of milliseconds per pixel.\n     * @private\n     */\n    getMilliSecondsPerPixelForZoomLevel(preset, ignoreActualWidth) {\n        const\n            { bottomHeader } = preset,\n            // Scheduler uses direction independent tickSize, but presets are allowed to define different sizes for\n            // vertical and horizontal -> cant use preset.tickSize here\n            width            = this.isHorizontal ? preset.tickWidth : preset.tickHeight;\n\n        // trying to convert the unit + increment to a number of milliseconds\n        // this number is not fixed (month can be 28, 30 or 31 day), but at least this conversion\n        // will be consistent (should be no DST changes at year 1)\n        return Math.round(\n            (DateHelper.add(new Date(1, 0, 1), bottomHeader.increment || 1, bottomHeader.unit) - new Date(1, 0, 1)) /\n            // `actualWidth` is a column width after view adjustments applied to it (see `calculateTickWidth`)\n            // we use it if available to return the precise index value from `getCurrentZoomLevelIndex`\n            (ignoreActualWidth ? width : preset.actualWidth || width)\n        );\n    }\n\n    /**\n     * Zooms to passed view preset, saving center date. Method accepts config object as a first argument, which can be\n     * reduced to primitive type (string,number) when no additional options required. e.g.:\n     * ```javascript\n     * // zooming to preset\n     * scheduler.zoomTo({ preset : 'hourAndDay' })\n     * // shorthand\n     * scheduler.zoomTo('hourAndDay')\n     *\n     * // zooming to level\n     * scheduler.zoomTo({ level : 0 })\n     * // shorthand\n     * scheduler.zoomTo(0)\n     * ```\n     *\n     * It is also possible to zoom to a time span by omitting `preset` and `level` configs, in which case scheduler sets\n     * the time frame to a specified range and applies zoom level which allows to fit all columns to this range. The\n     * given time span will be centered in the scheduling view (unless `centerDate` config provided). In the same time,\n     * the start/end date of the whole time axis will be extended to allow scrolling for user.\n     * ```javascript\n     * // zooming to time span\n     * scheduler.zoomTo({\n     *     startDate : new Date(..),\n     *     endDate : new Date(...)\n     * });\n     * ```\n     *\n     * @param {ViewPresetConfig|Object|String|Number} config Config object, preset name or zoom level index.\n     * @param {String} [config.preset] Preset name to zoom to. Ignores level config in this case\n     * @param {Number} [config.level] Zoom level to zoom to. Is ignored, if preset config is provided\n     * @param {VisibleDate} [config.visibleDate] A `visibleDate` specification to bring into view after the zoom.\n     * @param {Date} [config.startDate] New time frame start. If provided along with end, view will be centered in this\n     * time interval (unless `centerDate` is present)\n     * @param {Date} [config.endDate] New time frame end\n     * @param {Date} [config.centerDate] Date that should be kept in the center. Has priority over start and end params\n     * @param {Date} [config.zoomDate] The date that should be positioned at the passed `datePosition` client offset.\n     * @param {Number} [config.zoomPosition] The client offset at which the passed `date` should be positioned.\n     * @param {Number} [config.width] Lowest tick width. Might be increased automatically\n     * @param {Number} [config.leftMargin] Amount of pixels to extend span start on (used, when zooming to span)\n     * @param {Number} [config.rightMargin] Amount of pixels to extend span end on (used, when zooming to span)\n     * @param {Number} [config.adjustStart] Amount of units to extend span start on (used, when zooming to span)\n     * @param {Number} [config.adjustEnd] Amount of units to extend span end on (used, when zooming to span)\n     * @category Zoom\n     */\n    zoomTo(config) {\n        const me = this;\n\n        if (typeof config === 'object') {\n            if (config.preset) {\n                me.zoomToLevel(config.preset, config);\n            }\n            else if (config.level != null) {\n                me.zoomToLevel(config.level, config);\n            }\n            else {\n                me.zoomToSpan(config);\n            }\n        }\n        else {\n            me.zoomToLevel(config);\n        }\n    }\n\n    /**\n     * Allows zooming to certain level of {@link Scheduler.view.mixin.TimelineViewPresets#config-presets} array.\n     * Automatically limits zooming between {@link #config-maxZoomLevel} and {@link #config-minZoomLevel}. Can also set\n     * time axis timespan to the supplied start and end dates.\n     *\n     * @param {Number} preset Level to zoom to.\n     * @param {ChangePresetOptions} [options] Object containing options which affect how the new preset is applied.\n     * @returns {Number|null} level Current zoom level or null if it hasn't changed.\n     * @category Zoom\n     */\n    zoomToLevel(preset, options = {}) {\n        if (this.forceFit) {\n            console.warn('Warning: The forceFit setting and zooming cannot be combined');\n            return;\n        }\n        // Sanitize numeric zooming.\n        if (typeof preset === 'number') {\n            preset = Math.min(Math.max(preset, this.minZoomLevel), this.maxZoomLevel);\n        }\n\n        const\n            me                 = this,\n            { presets }       = me,\n            tickSizeProp       = me.isVertical ? 'tickHeight' : 'tickWidth',\n            newPreset          = presets.createRecord(preset),\n            configuredTickSize = newPreset[tickSizeProp],\n            startDate          = options.startDate ? new Date(options.startDate) : null,\n            endDate            = options.endDate ? new Date(options.endDate) : null;\n\n        // If an existing ViewPreset id is used, this will replace it.\n        presets.add(newPreset);\n\n        let span = startDate && endDate ? { startDate, endDate } : null;\n\n        const\n            centerDate             = options.centerDate ? new Date(options.centerDate) : (span ? new Date((startDate.getTime() + endDate.getTime()) / 2) : me.viewportCenterDateCached);\n\n        let scrollableViewportSize = me.isVertical ? me.scrollable.clientHeight : me.timeAxisSubGrid.width;\n\n        if (scrollableViewportSize === 0) {\n            const\n                { _beforeCollapseState } = me.timeAxisSubGrid;\n\n            if (me.isHorizontal && me.timeAxisSubGrid.collapsed && _beforeCollapseState?.width) {\n                scrollableViewportSize = _beforeCollapseState.width;\n            }\n            else {\n                return null;\n            }\n        }\n\n        // Always calculate an optimal date range for the new zoom level\n        if (!span) {\n            span = me.calculateOptimalDateRange(centerDate, scrollableViewportSize, newPreset);\n        }\n\n        // Temporarily override tick size while reconfiguring the TimeAxisViewModel\n        if ('width' in options) {\n            newPreset.setData(tickSizeProp, options.width);\n        }\n\n        me.isZooming = true;\n\n        // Passed through to the viewPreset changing method\n        newPreset.options = {\n            ...options,\n            startDate : span.startDate || me.startDate,\n            endDate   : span.endDate || me.endDate,\n            centerDate\n        };\n        me.viewPreset = newPreset;\n\n        // after switching the view preset the `width` config of the zoom level may change, because of adjustments\n        // we will save the real value in the `actualWidth` property, so that `getCurrentZoomLevelIndex` method\n        // will return the exact level index after zooming\n        newPreset.actualWidth = me.timeAxisViewModel.tickSize;\n\n        me.isZooming = false;\n\n        // Restore the tick size because the default presets are shared.\n        newPreset.setData(tickSizeProp, configuredTickSize);\n\n        return me.zoomLevel;\n    }\n\n    /**\n     * Changes the range of the scheduling chart to fit all the events in its event store.\n     * @param {Object} [options] Options object for the zooming operation.\n     * @param {Number} [options.leftMargin] Defines margin in pixel between the first event start date and first visible\n     * date\n     * @param {Number} [options.rightMargin] Defines margin in pixel between the last event end date and last visible\n     * date\n     */\n    zoomToFit(options) {\n        const eventStore = this.eventStore,\n            span       = eventStore.getTotalTimeSpan();\n\n        options = {\n            leftMargin  : 0,\n            rightMargin : 0,\n            ...options,\n            ...span\n        };\n\n        // Make sure we received a time span, event store might be empty\n        if (options.startDate && options.endDate) {\n            if (options.endDate > options.startDate) {\n                this.zoomToSpan(options);\n            }\n            else {\n                // If we only had a zero time span, just scroll it into view\n                this.scrollToDate(options.startDate);\n            }\n        }\n    }\n\n    /**\n     * Sets time frame to specified range and applies zoom level which allows to fit all columns to this range.\n     *\n     * The given time span will be centered in the scheduling view, in the same time, the start/end date of the whole\n     * time axis will be extended in the same way as {@link #function-zoomToLevel} method does, to allow scrolling for\n     * user.\n     *\n     * @param {Object} config The time frame.\n     * @param {Date} config.startDate The time frame start.\n     * @param {Date} config.endDate The time frame end.\n     * @param {Date} [config.centerDate] Date that should be kept in the center. Has priority over start and end params\n     * @param {Number} [config.leftMargin] Amount of pixels to extend span start on\n     * @param {Number} [config.rightMargin] Amount of pixels to extend span end on\n     * @param {Number} [config.adjustStart] Amount of units to extend span start on\n     * @param {Number} [config.adjustEnd] Amount of units to extend span end on\n     *\n     * @returns {Number|null} level Current zoom level or null if it hasn't changed.\n     * @category Zoom\n     */\n    zoomToSpan(config = {}) {\n        if (config.leftMargin || config.rightMargin) {\n            config.adjustStart = 0;\n            config.adjustEnd = 0;\n        }\n\n        if (!config.leftMargin) config.leftMargin = 0;\n        if (!config.rightMargin) config.rightMargin = 0;\n\n        if (!config.startDate || !config.endDate) throw new Error('zoomToSpan: must provide startDate + endDate dates');\n\n        const\n            me           = this,\n            { timeAxis } = me,\n            // this config enables old zoomToSpan behavior which we want to use for zoomToFit in Gantt\n            needToAdjust = config.adjustStart >= 0 || config.adjustEnd >= 0;\n\n        let {\n            startDate,\n            endDate\n        } = config;\n\n        if (needToAdjust) {\n            startDate = DateHelper.add(startDate, -config.adjustStart, timeAxis.mainUnit);\n            endDate   = DateHelper.add(endDate, config.adjustEnd, timeAxis.mainUnit);\n        }\n\n        if (startDate <= endDate) {\n            // get scheduling view width\n            const\n                { availableSpace } = me.timeAxisViewModel,\n                presets = me.presets.allRecords,\n                diffMS  = endDate - startDate || 1;\n\n            // if potential width of col is less than col width provided by zoom level\n            //   - we'll zoom out panel until col width fit into width from zoom level\n            // and if width of column is more than width from zoom level\n            //   - we'll zoom in until col width fit won't fit into width from zoom level\n\n            let currLevel = me.zoomLevel,\n                inc, range;\n\n            // if we zoomed out even more than the highest zoom level - limit it to the highest zoom level\n            if (currLevel === -1) currLevel = 0;\n\n            let msPerPixel             = me.getMilliSecondsPerPixelForZoomLevel(presets[currLevel], true),\n                // increment to get next zoom level:\n                // -1 means that given timespan won't fit the available width in the current zoom level, we need to zoom out,\n                // so that more content will \"fit\" into 1 px\n                //\n                // +1 mean that given timespan will already fit into available width in the current zoom level, but,\n                // perhaps if we'll zoom in a bit more, the fitting will be better\n                candidateLevel         = currLevel + (inc = diffMS / msPerPixel + config.leftMargin + config.rightMargin > availableSpace ? -1 : 1),\n                zoomLevel, levelToZoom = null;\n\n            // loop over zoom levels\n            while (candidateLevel >= 0 && candidateLevel <= presets.length - 1) {\n                // get zoom level\n                zoomLevel = presets[candidateLevel];\n\n                msPerPixel = me.getMilliSecondsPerPixelForZoomLevel(zoomLevel, true);\n                const spanWidth = diffMS / msPerPixel + config.leftMargin + config.rightMargin;\n\n                // if zooming out\n                if (inc === -1) {\n                    // if columns fit into available space, then all is fine, we've found appropriate zoom level\n                    if (spanWidth <= availableSpace) {\n                        levelToZoom = candidateLevel;\n                        // stop searching\n                        break;\n                    }\n                    // if zooming in\n                }\n                else {\n                    // if columns still fits into available space, we need to remember the candidate zoom level as a potential\n                    // resulting zoom level, the indication that we've found correct zoom level will be that timespan won't fit\n                    // into available view\n                    if (spanWidth <= availableSpace) {\n                        // if it's not currently active level\n                        if (currLevel !== candidateLevel - inc) {\n                            // remember this level as applicable\n                            levelToZoom = candidateLevel;\n                        }\n                    }\n                    else {\n                        // Sanity check to find the following case:\n                        // If we're already zoomed in at the appropriate level, but the current zoomLevel is \"too small\" to fit and had to be expanded,\n                        // there is an edge case where we should actually just stop and use the currently selected zoomLevel\n                        break;\n                    }\n                }\n\n                candidateLevel += inc;\n            }\n\n            // If we didn't find a large/small enough zoom level, use the lowest/highest level\n            levelToZoom = levelToZoom != null ? levelToZoom : candidateLevel - inc;\n\n            // presets is the array of all ViewPresets this Scheduler is using\n            zoomLevel = presets[levelToZoom];\n\n            const unitToZoom = zoomLevel.bottomHeader.unit;\n\n            // Extract the correct msPerPixel value for the new zoom level\n            msPerPixel = me.getMilliSecondsPerPixelForZoomLevel(zoomLevel, true);\n\n            if (config.leftMargin || config.rightMargin) {\n                // time axis doesn't yet know about new view preset (zoom level) so it cannot round/ceil date correctly\n                startDate = new Date(startDate.getTime() - msPerPixel * config.leftMargin);\n                endDate   = new Date(endDate.getTime() + msPerPixel * config.rightMargin);\n            }\n\n            const tickCount = DateHelper.getDurationInUnit(startDate, endDate, unitToZoom, true) / zoomLevel.bottomHeader.increment;\n\n            if (tickCount === 0) {\n                return null;\n            }\n\n            const\n                customWidth = Math.floor(availableSpace / tickCount),\n                centerDate  = config.centerDate || new Date((startDate.getTime() + endDate.getTime()) / 2);\n\n            if (needToAdjust) {\n                range = {\n                    startDate,\n                    endDate\n                };\n            }\n            else {\n                range = me.calculateOptimalDateRange(centerDate, availableSpace, zoomLevel);\n            }\n\n            let result = me.zoomLevel;\n\n            // No change of zoom level needed, just move to the date range\n            if (me.zoomLevel === levelToZoom) {\n                timeAxis.reconfigure(range);\n            }\n            else {\n                result = me.zoomToLevel(levelToZoom,\n                    Object.assign(range, {\n                        width : customWidth,\n                        centerDate\n                    })\n                );\n            }\n\n            if (me.infiniteScroll) {\n                me.scrollToDate(startDate, { block : 'start' });\n            }\n\n            return result;\n        }\n\n        return null;\n    }\n\n    /**\n     * Zooms in the timeline according to the array of zoom levels. If the amount of levels to zoom is given, the view\n     * will zoom in by this value. Otherwise, a value of `1` will be used.\n     *\n     * @param {Number} [levels] (optional) amount of levels to zoom in\n     * @param {ChangePresetOptions} [options] Object containing options which affect how the new preset is applied.\n     * @returns {Number|null} currentLevel New zoom level of the panel or null if level hasn't changed.\n     * @category Zoom\n     */\n    zoomIn(levels = 1, options) {\n        // Allow zoomIn({ visibleDate : ... })\n        if (typeof levels === 'object') {\n            options = levels;\n            levels = 1;\n        }\n        const currentZoomLevelIndex = this.zoomLevel;\n\n        if (currentZoomLevelIndex >= this.maxZoomLevel) {\n            return null;\n        }\n\n        return this.zoomToLevel(currentZoomLevelIndex + levels, options);\n    }\n\n    /**\n     * Zooms out the timeline according to the array of zoom levels. If the amount of levels to zoom is given, the view\n     * will zoom out by this value. Otherwise, a value of `1` will be used.\n     *\n     * @param {Number} levels (optional) amount of levels to zoom out\n     * @param {ChangePresetOptions} [options] Object containing options which affect how the new preset is applied.\n     * @returns {Number|null} currentLevel New zoom level of the panel or null if level hasn't changed.\n     * @category Zoom\n     */\n    zoomOut(levels = 1, options) {\n        // Allow zoomOut({ visibleDate : ... })\n        if (typeof levels === 'object') {\n            options = levels;\n            levels = 1;\n        }\n        const currentZoomLevelIndex = this.zoomLevel;\n\n        if (currentZoomLevelIndex <= this.minZoomLevel) {\n            return null;\n        }\n\n        return this.zoomToLevel(currentZoomLevelIndex - levels, options);\n    }\n\n    /**\n     * Zooms in the timeline to the {@link #config-maxZoomLevel} according to the array of zoom levels.\n     *\n     * @param {ChangePresetOptions} [options] Object containing options which affect how the new preset is applied.\n     * @returns {Number|null} currentLevel New zoom level of the panel or null if level hasn't changed.\n     * @category Zoom\n     */\n    zoomInFull(options) {\n        return this.zoomToLevel(this.maxZoomLevel, options);\n    }\n\n    /**\n     * Zooms out the timeline to the {@link #config-minZoomLevel} according to the array of zoom levels.\n     *\n     * @param {ChangePresetOptions} [options] Object containing options which affect how the new preset is applied.\n     * @returns {Number|null} currentLevel New zoom level of the panel or null if level hasn't changed.\n     * @category Zoom\n     */\n    zoomOutFull(options) {\n        return this.zoomToLevel(this.minZoomLevel, options);\n    }\n\n    /*\n     * Adjusts the timespan of the panel to the new zoom level. Used for performance reasons,\n     * as rendering too many columns takes noticeable amount of time so their number is limited.\n     * @category Zoom\n     * @private\n     */\n    calculateOptimalDateRange(centerDate, viewportSize, viewPreset, userProvidedSpan) {\n        // this line allows us to always use the `calculateOptimalDateRange` method when calculating date range for zooming\n        // (even in case when user has provided own interval)\n        // other methods may override/hook into `calculateOptimalDateRange` to insert own processing\n        // (infinite scrolling feature does)\n        if (userProvidedSpan) return userProvidedSpan;\n\n        const\n            me               = this,\n            { timeAxis }     = me,\n            { bottomHeader } = viewPreset,\n            tickWidth        = me.isHorizontal ? viewPreset.tickWidth : viewPreset.tickHeight;\n\n        if (me.zoomKeepsOriginalTimespan) {\n            return {\n                startDate : timeAxis.startDate,\n                endDate   : timeAxis.endDate\n            };\n        }\n\n        const\n            unit       = bottomHeader.unit,\n            difference = Math.ceil(viewportSize / tickWidth * bottomHeader.increment * me.visibleZoomFactor / 2),\n            startDate  = DateHelper.add(centerDate, -difference, unit),\n            endDate    = DateHelper.add(centerDate, difference, unit);\n\n        if (me.infiniteScroll) {\n            return me.timeAxisViewModel.calculateInfiniteScrollingDateRange(centerDate, true);\n        }\n        else {\n            return {\n                startDate : timeAxis.floorDate(startDate, false, unit, bottomHeader.increment),\n                endDate   : timeAxis.ceilDate(endDate, false, unit, bottomHeader.increment)\n            };\n        }\n    }\n\n    onElementMouseMove(event) {\n        const\n            {\n                isHorizontal,\n                zoomContext\n            } = this;\n\n        super.onElementMouseMove(event);\n\n        if (event.isTrusted && zoomContext) {\n            // Invalidate the zoomContext if mouse has strayed away from it\n            if (Math.abs(event[`client${isHorizontal ? 'X' : 'Y'}`] - zoomContext.coordinate) > 10) {\n                this.zoomContext = null;\n            }\n        }\n    }\n\n    async onWheel(event) {\n        if (event.ctrlKey && !this.forceFit) {\n            event.preventDefault();\n\n            const\n                me           = this,\n                {\n                    zoomContext,\n                    isHorizontal,\n                    timelineScroller,\n                    zoomLevel\n                }            = me,\n                now          = performance.now(),\n                coordinate   = event[`client${isHorizontal ? 'X' : 'Y'}`];\n\n            let zoomPosition = coordinate - timelineScroller.viewport[`${isHorizontal ? 'x' : 'y'}`];\n\n            // zoomPosition is the offset into the TimeAxisSubGridElement.\n            if (isHorizontal && me.rtl) {\n                zoomPosition = timelineScroller.viewport.width + timelineScroller.viewport.x - coordinate;\n            }\n\n            // If we are in a fast-arriving stream of wheel events, we use the same zoomDate as last time.\n            // If it's a new zoom gesture or the pointer has strayed away from the context then ascertain\n            // the gesture's center date\n            if (now - me.lastWheelTime > 200 || !zoomContext || Math.abs(coordinate - me.zoomContext.coordinate) > 20) {\n                // We're creating a zoom gesture which lasts as long as the\n                // wheel events keep arriving at the same timeline position\n                me.zoomContext = {\n                    // So we can track if we're going in (to finer resolutions)\n                    zoomLevel,\n\n                    // Pointer client(X|Y)\n                    coordinate,\n\n                    // Full TimeAxis offset position at which to place the date\n                    zoomPosition,\n\n                    // The date to place at the position\n                    zoomDate : me.getDateFromDomEvent(event)\n                };\n            }\n            // Use the current zoomContext's zoomDate, but at each level, the relative position of that date\n            // in the TimeAxis has to be corrected as the TimeAxis grows and scrolls to keep the zoomPosition\n            // stable.\n            else {\n                // If we zoom in to a finer resolution, get a more accurate centering date.\n                // If gesture was started at a years/months level, the date will be inaccurate.\n                if (zoomLevel > zoomContext.zoomLevel) {\n                    zoomContext.zoomDate = me.getDateFromDomEvent(event);\n                    zoomContext.zoomLevel = zoomLevel;\n                }\n                zoomContext.zoomPosition = zoomPosition;\n            }\n\n            me.lastWheelTime = now;\n            me[`zoom${event.deltaY > 0 ? 'Out' : 'In'}`](undefined, me.zoomContext);\n        }\n    }\n\n    /**\n     * Changes the time axis timespan to the supplied start and end dates.\n     * @param {Date} startDate The new start date\n     * @param {Date} [endDate] The new end date. If omitted or equal to startDate, the\n     * {@link Scheduler.preset.ViewPreset#field-defaultSpan} property of the current view preset will be used to\n     * calculate the new end date.\n     */\n    setTimeSpan(startDate, endDate) {\n        this.timeAxis.setTimeSpan(startDate, endDate);\n    }\n\n    /**\n     * Moves the time axis by the passed amount and unit.\n     *\n     * NOTE: If using a filtered time axis, see {@link Scheduler.data.TimeAxis#function-shift} for more information.\n     *\n     * @param {Number} amount The number of units to jump\n     * @param {'ms'|'s'|'m'|'h'|'d'|'w'|'M'|'y'} [unit] The unit (Day, Week etc)\n     */\n    shift(amount, unit) {\n        this.timeAxis.shift(amount, unit);\n    }\n\n    /**\n     * Moves the time axis forward in time in units specified by the view preset `shiftUnit`, and by the amount\n     * specified by the `shiftIncrement` config of the current view preset.\n     *\n     * NOTE: If using a filtered time axis, see {@link Scheduler.data.TimeAxis#function-shiftNext} for more information.\n     *\n     * @param {Number} [amount] The number of units to jump forward\n     */\n    shiftNext(amount) {\n        this.timeAxis.shiftNext(amount);\n    }\n\n    /**\n     * Moves the time axis backward in time in units specified by the view preset `shiftUnit`, and by the amount\n     * specified by the `shiftIncrement` config of the current view preset.\n     *\n     * NOTE: If using a filtered time axis, see {@link Scheduler.data.TimeAxis#function-shiftPrevious} for more\n     * information.\n     *\n     * @param {Number} [amount] The number of units to jump backward\n     */\n    shiftPrevious(amount) {\n        this.timeAxis.shiftPrevious(amount);\n    }\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n};\n","import Base from '../../../Core/Base.js';\nimport ObjectHelper from '../../../Core/helper/ObjectHelper.js';\n\n/**\n * @module Scheduler/view/mixin/TimelineEventRendering\n */\n\n/**\n * Functions to handle event rendering (EventModel -> dom elements).\n *\n * @mixin\n */\nexport default Target => class TimelineEventRendering extends (Target || Base) {\n    static get $name() {\n        return 'TimelineEventRendering';\n    }\n\n    //region Default config\n\n    static get defaultConfig() {\n        return {\n            resourceMargin : null,\n\n            /**\n             * When `true`, events are sized and positioned based on rowHeight, resourceMargin and barMargin settings.\n             * Set this to `false` if you want to control height and vertical position using CSS instead.\n             *\n             * Note that events always get an absolute top position, but when this setting is enabled that position\n             * will match row's top. To offset within the row using CSS, use `transform : translateY(y)`.\n             *\n             * @config {Boolean}\n             * @default\n             * @category Scheduled events\n             */\n            managedEventSizing : true,\n\n            /**\n             * The CSS class added to an event/assignment when it is newly created\n             * in the UI and unsynced with the server.\n             * @config {String}\n             * @default\n             * @private\n             * @category CSS\n             */\n            generatedIdCls : 'b-sch-dirty-new',\n\n            /**\n             * The CSS class added to an event when it has unsaved modifications\n             * @config {String}\n             * @default\n             * @private\n             * @category CSS\n             */\n            dirtyCls : 'b-sch-dirty',\n\n            /**\n             * The CSS class added to an event when it is currently committing changes\n             * @config {String}\n             * @default\n             * @private\n             * @category CSS\n             */\n            committingCls : 'b-sch-committing',\n\n            /**\n             * The CSS class added to an event/assignment when it ends outside of the visible time range.\n             * @config {String}\n             * @default\n             * @private\n             * @category CSS\n             */\n            endsOutsideViewCls : 'b-sch-event-endsoutside',\n\n            /**\n             * The CSS class added to an event/assignment when it starts outside of the visible time range.\n             * @config {String}\n             * @default\n             * @private\n             * @category CSS\n             */\n            startsOutsideViewCls : 'b-sch-event-startsoutside',\n\n            /**\n             * The CSS class added to an event/assignment when it is not draggable.\n             * @config {String}\n             * @default\n             * @private\n             * @category CSS\n             */\n            fixedEventCls : 'b-sch-event-fixed',\n\n            /**\n             * Event style used by default. Events and resources can specify their own style, with priority order being:\n             * Event -> Resource -> Scheduler default. Determines the appearance of the event by assigning a CSS class\n             * to it. Available styles are:\n             *\n             * * `'plain'` (default) - flat look\n             * * `'border'` - has border in darker shade of events color\n             * * `'colored'` - has colored text and wide left border in same color\n             * * `'hollow'` - only border + text until hovered\n             * * `'line'` - as a line with the text below it\n             * * `'dashed'` - as a dashed line with the text below it\n             * * `'minimal'` - as a thin line with small text above it\n             * * `'rounded'` - minimalistic style with rounded corners\n             * * `null` - do not apply a default style and take control using custom CSS (easily overridden basic styling will be used).\n             *\n             * In addition, there are two styles intended to be used when integrating with Bryntum Calendar. To match\n             * the look of Calendar events, you can use:\n             *\n             * * `'calendar'` - a variation of the \"colored\" style matching the default style used by Calendar\n             * * `'interday'` - a variation of the \"plain\" style, for interday events\n             *\n             * @config {'plain'|'border'|'colored'|'hollow'|'line'|'dashed'|'minimal'|'rounded'|'calendar'|'interday'|null}\n             * @default\n             * @category Scheduled events\n             */\n            eventStyle : 'plain',\n\n            /**\n             * Event color used by default. Events and resources can specify their own color, with priority order being:\n             * Event -> Resource -> Scheduler default. Available colors are:\n             * * `HEX colors`\n             * * `'red'`\n             * * `'pink'`\n             * * `'purple'`\n             * * `'violet'`\n             * * `'indigo'`\n             * * `'blue'`\n             * * `'cyan'`\n             * * `'teal'`\n             * * `'green'`\n             * * `'lime'`\n             * * `'yellow'`\n             * * `'orange'`\n             * * `'deep-orange'`\n             * * `'gray'`\n             * * `'gantt-green'` (Useful when you want to match the color to the default color in Gantt)\n             * * `null` - do not apply a default color and take control using custom CSS (an easily overridden color will be used to make sure events are still visible).\n             *\n             * @member {'red'|'pink'|'purple'|'violet'|'indigo'|'blue'|'cyan'|'teal'|'green'|'lime'|'yellow'|'orange'|'deep-orange'|'gray'|'gantt-green'|String|null} eventColor\n             * @category Scheduled events\n             */\n            /**\n             * The event color used by the Scheduler. Events and resources can specify their own color. See\n             * {@link #property-eventColor} for more details.\n             *\n             * @config {'red'|'pink'|'purple'|'violet'|'indigo'|'blue'|'cyan'|'teal'|'green'|'lime'|'yellow'|'orange'|'deep-orange'|'gray'|'gantt-green'|String|null} eventColor\n             * @default 'green'\n             * @category Scheduled events\n             */\n            eventColor : 'green',\n\n            /**\n             * The width/height (depending on vertical / horizontal mode) of all the time columns.\n             * @config {Number}\n             * @category Scheduled events\n             */\n            tickSize : null\n        };\n    }\n\n    static configurable = {\n        /**\n         * Controls how much space to leave between stacked event bars in px.\n         *\n         * Value will be constrained by half the row height in horizontal mode.\n         *\n         * @prp {Number}\n         * @default\n         * @category Scheduled events\n         */\n        barMargin : 10,\n\n        /**\n         * Specify `true` to force rendered events/tasks to fill entire ticks. This only affects rendering, start\n         * and end dates retain their value on the data level.\n         *\n         * When enabling `fillTicks` you should consider either disabling EventDrag/TaskDrag and EventResize/TaskResize,\n         * or enabling {@link Scheduler/view/mixin/TimelineDateMapper#config-snap}. Otherwise their behaviour might not\n         * be what a user expects.\n         *\n         * @prp {Boolean}\n         * @default\n         * @category Scheduled events\n         */\n        fillTicks : false\n    };\n\n    //endregion\n\n    //region Settings\n\n    updateFillTicks(fillTicks) {\n        if (!this.isConfiguring) {\n            this.timeAxis.forceFullTicks = fillTicks && this.snap;\n\n            this.refreshWithTransition();\n\n            this.trigger('stateChange');\n        }\n    }\n\n    changeBarMargin(margin) {\n        ObjectHelper.assertNumber(margin, 'barMargin');\n\n        // bar margin should not exceed half of the row height\n        if (this.isHorizontal && this.rowHeight) {\n            return Math.min(Math.ceil(this.rowHeight / 2), margin);\n        }\n\n        return margin;\n    }\n\n    updateBarMargin() {\n        if (this.rendered) {\n            this.currentOrientation.onBeforeRowHeightChange();\n            this.refreshWithTransition();\n            this.trigger('stateChange');\n        }\n    }\n\n    // Documented in SchedulerEventRendering to not show up in Gantt docs\n    get resourceMargin() {\n        return this._resourceMargin == null ? this.barMargin : this._resourceMargin;\n    }\n\n    set resourceMargin(margin) {\n        const me = this;\n\n        ObjectHelper.assertNumber(margin, 'resourceMargin');\n\n        // bar margin should not exceed half of the row height\n        if (me.isHorizontal && me.rowHeight) {\n            margin = Math.min(Math.ceil(me.rowHeight / 2), margin);\n        }\n\n        if (me._resourceMargin !== margin) {\n            me._resourceMargin = margin;\n            if (me.rendered) {\n                me.currentOrientation.onBeforeRowHeightChange();\n                me.refreshWithTransition();\n            }\n        }\n    }\n\n    /**\n     * Get/set the width/height (depending on mode) of all the time columns to the supplied value.\n     * There is a limit for the tick size value. Its minimal allowed value is calculated so ticks would fit the available space.\n     * Only applicable when {@link Scheduler.view.TimelineBase#config-forceFit} is set to `false`.\n     * To set `tickSize` freely skipping that limitation please set {@link Scheduler.view.TimelineBase#config-suppressFit} to `true`.\n     * @property {Number}\n     * @category Scheduled events\n     */\n    set tickSize(width) {\n        ObjectHelper.assertNumber(width, 'tickSize');\n\n        this.timeAxisViewModel.tickSize = width;\n    }\n\n    get tickSize() {\n        return this.timeAxisViewModel.tickSize;\n    }\n\n    /**\n     * Predefined event colors, useful in combos etc.\n     * @type {String[]}\n     * @category Scheduled events\n     */\n    static get eventColors() {\n        return ['red', 'pink', 'purple', 'violet', 'indigo', 'blue', 'cyan', 'teal', 'green', 'lime', 'yellow', 'orange', 'deep-orange', 'gray'];\n    }\n\n    /**\n     * Predefined event styles , useful in combos etc.\n     * @type {String[]}\n     * @category Scheduled events\n     */\n    static get eventStyles() {\n        return ['plain', 'border', 'hollow', 'colored', 'line', 'dashed', 'minimal', 'rounded'];\n    }\n\n    //endregion\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n};\n","import Base from '../../../Core/Base.js';\nimport Rectangle from '../../../Core/helper/util/Rectangle.js';\nimport DateHelper from '../../../Core/helper/DateHelper.js';\nimport Scroller from '../../../Core/helper/util/Scroller.js';\nimport DomHelper from '../../../Core/helper/DomHelper.js';\n\n/**\n * @module Scheduler/view/mixin/TimelineScroll\n */\nconst\n    maintainVisibleStart = {\n        maintainVisibleStart : true\n    },\n    defaultScrollOptions = {\n        block : 'nearest'\n    };\n\n/**\n * Functions for scrolling to events, dates etc.\n *\n * @mixin\n */\nexport default Target => class TimelineScroll extends (Target || Base) {\n    static get $name() {\n        return 'TimelineScroll';\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * This config defines the size of the start and end invisible parts of the timespan when {@link #config-infiniteScroll} set to `true`.\n             *\n             * It should be provided as a coefficient, which will be multiplied by the size of the scheduling area.\n             *\n             * For example, if `bufferCoef` is `5` and the panel view width is 200px then the timespan will be calculated to\n             * have approximately 1000px (`5 * 200`) to the left and 1000px to the right of the visible area, resulting\n             * in 2200px of totally rendered content.\n             *\n             * @config {Number}\n             * @category Infinite scroll\n             * @default\n             */\n            bufferCoef : 5,\n\n            /**\n             * This config defines the scroll limit, which, when exceeded will cause a timespan shift.\n             * The limit is calculated as the `panelWidth * {@link #config-bufferCoef} * bufferThreshold`. During scrolling, if the left or right side\n             * has less than that of the rendered content - a shift is triggered.\n             *\n             * For example if `bufferCoef` is `5` and the panel view width is 200px and `bufferThreshold` is 0.2, then the timespan\n             * will be shifted when the left or right side has less than 200px (5 * 200 * 0.2) of content.\n             * @config {Number}\n             * @category Infinite scroll\n             * @default\n             */\n            bufferThreshold : 0.2,\n\n            /**\n             * Configure as `true` to automatically adjust the panel timespan during scrolling in the time dimension,\n             * when the scroller comes close to the start/end edges.\n             *\n             * The actually rendered timespan in this mode (and thus the amount of HTML in the DOM) is calculated based\n             * on the {@link #config-bufferCoef} option, and is thus not controlled by the {@link Scheduler/view/TimelineBase#config-startDate}\n             * and {@link Scheduler/view/TimelineBase#config-endDate} configs. The moment when the timespan shift\n             * happens is determined by the {@link #config-bufferThreshold} value.\n             *\n             * To specify initial point in time to view, supply the\n             * {@link Scheduler/view/TimelineBase#config-visibleDate} config.\n             *\n             * @config {Boolean} infiniteScroll\n             * @category Infinite scroll\n             * @default\n             */\n            infiniteScroll : false\n        };\n    }\n\n    initScroll() {\n        const\n            me = this,\n            {\n                isHorizontal,\n                visibleDate\n            }  = me;\n\n        super.initScroll();\n\n        const { scrollable } = isHorizontal ? me.timeAxisSubGrid : me;\n\n        scrollable.ion({\n            scroll  : 'onTimelineScroll',\n            thisObj : me\n        });\n\n        // Ensure the TimeAxis starts life at the correct size with buffer zones\n        // outside the visible window.\n        if (me.infiniteScroll) {\n            const\n                setTimeSpanOptions     = visibleDate ? { ...visibleDate, visibleDate : visibleDate.date } : { visibleDate : me.viewportCenterDate, block : 'center' },\n                { startDate, endDate } = me.timeAxisViewModel.calculateInfiniteScrollingDateRange(setTimeSpanOptions.visibleDate, setTimeSpanOptions.block === 'center');\n\n            // Don't ask to maintain visible start - we're initializing - there's no visible start yet.\n            // If there's a visibleDate set, it will execute its scroll on paint.\n            me.setTimeSpan(\n                startDate,\n                endDate,\n                setTimeSpanOptions\n            );\n        }\n    }\n\n    /**\n     * A {@link Core.helper.util.Scroller} which scrolls the time axis in whatever {@link Scheduler.view.Scheduler#config-mode} the\n     * Scheduler is configured, either `horiontal` or `vertical`.\n     *\n     * The width and height dimensions are replaced by `size`. So this will expose the following properties:\n     *\n     *    - `clientSize` The size of the time axis viewport.\n     *    - `scrollSize` The full scroll size of the time axis viewport\n     *    - `position` The position scrolled to along the time axis viewport\n     *\n     * @property {Core.helper.util.Scroller}\n     * @readonly\n     * @category Scrolling\n     */\n    get timelineScroller() {\n        const me = this;\n\n        if (!me.scrollInitialized) {\n            me.initScroll();\n        }\n        return me._timelineScroller || (me._timelineScroller = new TimelineScroller({\n            widget       : me,\n            scrollable   : me.isHorizontal ? me.timeAxisSubGrid.scrollable : me.scrollable,\n            isHorizontal : me.isHorizontal\n        }));\n    }\n\n    doDestroy() {\n        this._timelineScroller?.destroy();\n\n        super.doDestroy();\n    }\n\n    onTimelineScroll({ source }) {\n        // On scroll, check if we are nearing the end to see if the sliding window needs moving.\n        // onSchedulerHorizontalScroll is delayed to animationFrame\n        if (this.infiniteScroll) {\n            this.checkTimeAxisScroll(source[this.isHorizontal ? 'x' : 'y']);\n        }\n    }\n\n    checkTimeAxisScroll(scrollPos) {\n        const\n            me             = this,\n            scrollable     = me.timelineScroller,\n            { clientSize } = scrollable,\n            requiredSize   = clientSize * me.bufferCoef,\n            limit          = requiredSize * me.bufferThreshold,\n            maxScroll      = scrollable.maxPosition,\n            { style }      = me.timeAxisSubGrid.virtualScrollerElement;\n\n        // if scroll violates limits let's shift timespan\n        if ((maxScroll - scrollPos < limit) || scrollPos < limit) {\n            // If they were dragging the thumb, this must be a one-time thing. They *must* lose contact\n            // with the thumb when the window shift occurs and the thumb zooms back to the center.\n            // Changing for a short time to overflow:hidden terminates the thumb drag.\n            // They can start again from the center, the reset happens very quickly.\n            style.overflow = 'hidden';\n            style.pointerEvents = 'none';\n\n            // Avoid content height changing when scrollbar disappears\n            style.paddingBottom = `${DomHelper.scrollBarWidth}px`;\n\n            me.setTimeout(() => {\n                style.overflow = '';\n                style.paddingBottom = '';\n                style.pointerEvents = '';\n            }, 100);\n\n            me.shiftToDate(me.getDateFromCoordinate(scrollPos, null, true, false, true));\n        }\n    }\n\n    shiftToDate(date, centered) {\n        const newRange = this.timeAxisViewModel.calculateInfiniteScrollingDateRange(date, centered);\n\n        // this will trigger a refresh (`refreshKeepingScroll`) which will perform `restoreScrollState` and sync the scrolling position\n        this.setTimeSpan(newRange.startDate, newRange.endDate, maintainVisibleStart);\n    }\n\n    // If we change to infinite scrolling dynamically, it should create the buffer zones.\n    updateInfiniteScroll(infiniteScroll) {\n        // At construction time, this is handled in initScroll.\n        // This is just here to handle dynamic updates.\n        if (!this.isConfiguring && infiniteScroll) {\n            this.checkTimeAxisScroll(this.timelineScroller.position);\n        }\n    }\n\n    //region Scroll to date\n\n    /**\n     * Scrolls the timeline \"tick\" encapsulating the passed `Date` into view according to the passed options.\n     * @param {Date} date The date to which to scroll the timeline\n     * @param {ScrollOptions} [options] How to scroll.\n     * @returns {Promise} A Promise which resolves when the scrolling is complete.\n     * @category Scrolling\n     */\n    async scrollToDate(date, options = {}) {\n        const\n            me               = this,\n            {\n                timeAxis,\n                visibleDateRange,\n                infiniteScroll\n            }              = me,\n            {\n                unit,\n                increment\n            }              = timeAxis,\n            edgeOffset     = options.edgeOffset || 0,\n            visibleWidth   = DateHelper.ceil(visibleDateRange.endDate, increment + ' ' + unit) - DateHelper.floor(visibleDateRange.startDate, increment + ' ' + unit),\n            direction      = date > me.viewportCenterDate ? 1 : -1,\n            extraScroll    = (infiniteScroll ? visibleWidth * me.bufferCoef * me.bufferThreshold : (options.block === 'center' ? visibleWidth / 2 : (edgeOffset ? me.getMilliSecondsPerPixelForZoomLevel(me.viewPreset) * edgeOffset : 0))) * direction,\n            visibleDate    = new Date(date.getTime() + extraScroll),\n            shiftDirection = visibleDate > timeAxis.endDate ? 1 : visibleDate < timeAxis.startDate ? -1 : 0;\n\n        // Required visible date outside TimeAxis and infinite scrolling, that has opinions about how\n        // much scroll range has to be created after the target date.\n        if (shiftDirection && me.infiniteScroll) {\n            me.shiftToDate(new Date(date - extraScroll), null, true);\n            // shift to date could trigger a native browser async scroll out of our control. If a scroll\n            // happens during scrollToCoordinate, the scrolling is cancelled so we wait a bit here\n            await me.nextAnimationFrame();\n        }\n\n        const\n            scrollerViewport = me.timelineScroller.viewport,\n            localCoordinate  = me.getCoordinateFromDate(date, true),\n            // Available space can be less than tick size (Export.t.js in Gantt)\n            width            = Math.min(me.timeAxisViewModel.tickSize, me.timeAxisViewModel.availableSpace),\n            target           = me.isHorizontal\n                // In RTL coordinate is for the right edge of the tick, so we need to subtract width\n                ? new Rectangle(me.getCoordinateFromDate(date, false) - (me.rtl ? width : 0), scrollerViewport.y, width, scrollerViewport.height)\n                : new Rectangle(scrollerViewport.x, me.getCoordinateFromDate(date, false), scrollerViewport.width, me.timeAxisViewModel.tickSize);\n\n        await me.scrollToCoordinate(localCoordinate, target, date, options);\n    }\n\n    /**\n     * Scrolls to current time.\n     * @param {ScrollOptions} [options] How to scroll.\n     * @returns {Promise} A Promise which resolves when the scrolling is complete.\n     * @category Scrolling\n     */\n    scrollToNow(options = {}) {\n        return this.scrollToDate(new Date(), options);\n    }\n\n    /**\n     * Used by {@link #function-scrollToDate} to scroll to correct coordinate.\n     * @param {Number} localCoordinate Coordinate to scroll to\n     * @param {Date} date Date to scroll to, used for reconfiguring the time axis\n     * @param {ScrollOptions} [options] How to scroll.\n     * @returns {Promise} A Promise which resolves when the scrolling is complete.\n     * @private\n     * @category Scrolling\n     */\n    async scrollToCoordinate(localCoordinate, target, date, options = {}) {\n        const me = this;\n\n        // Not currently have this date in a timeaxis. Ignore negative scroll in weekview, it can be just 'filtered' with\n        // startTime/endTime config\n        if (localCoordinate < 0) {\n            // adjust the timeaxis first\n            const\n                visibleSpan         = me.endDate - me.startDate,\n                { unit, increment } = me.timeAxis,\n                newStartDate        = DateHelper.floor(new Date(date.getTime() - (visibleSpan / 2)), increment + ' ' + unit),\n                newEndDate          = DateHelper.add(newStartDate, visibleSpan);\n\n            // We're trying to reconfigure time span to current dates, which means we are as close to center as it\n            // could be. Do nothing then.\n            // covered by 1102_panel_api\n            if (newStartDate - me.startDate !== 0 && newEndDate - me.endDate !== 0) {\n                me.setTimeSpan(newStartDate, newEndDate);\n\n                return me.scrollToDate(date, options);\n            }\n\n            return;\n        }\n\n        await me.timelineScroller.scrollIntoView(target, options);\n\n        // Horizontal scroll is triggered on next frame in SubGrid.js, view is not up to date yet. Resolve on next frame\n        return !me.isDestroyed && me.nextAnimationFrame();\n    }\n\n    //endregion\n\n    //region Relative scrolling\n    // These methods are important to users because although they are mixed into the top level Grid/Scheduler,\n    // for X scrolling the explicitly target the SubGrid that holds the scheduler.\n\n    /**\n     * Get/set the `scrollLeft` value of the SubGrid that holds the scheduler.\n     *\n     * This may be __negative__ when the writing direction is right-to-left.\n     * @property {Number}\n     * @category Scrolling\n     */\n    set scrollLeft(left) {\n        this.timeAxisSubGrid.scrollable.element.scrollLeft = left;\n    }\n\n    get scrollLeft() {\n        return this.timeAxisSubGrid.scrollable.element.scrollLeft;\n    }\n\n    /**\n     * Get/set the writing direction agnostic horizontal scroll position.\n     *\n     * This is always the __positive__ offset from the scroll origin whatever the writing\n     * direction in use.\n     *\n     * Applies to the SubGrid that holds the scheduler\n     * @property {Number}\n     * @category Scrolling\n     */\n    set scrollX(x) {\n        this.timeAxisSubGrid.scrollable.x = x;\n    }\n\n    get scrollX() {\n        return this.timeAxisSubGrid.scrollable.x;\n    }\n\n    /**\n     * Get/set vertical scroll\n     * @property {Number}\n     * @category Scrolling\n     */\n    set scrollTop(top) {\n        this.scrollable.y = top;\n    }\n\n    get scrollTop() {\n        return this.scrollable.y;\n    }\n\n    /**\n     * Horizontal scrolling. Applies to the SubGrid that holds the scheduler\n     * @param {Number} x\n     * @param {ScrollOptions|Boolean} [options] How to scroll. May be passed as `true` to animate.\n     * @returns {Promise} A promise which is resolved when the scrolling has finished.\n     * @category Scrolling\n     */\n    scrollHorizontallyTo(coordinate, options = true) {\n        return this.timeAxisSubGrid.scrollable.scrollTo(coordinate, null, options);\n    }\n\n    /**\n     * Vertical scrolling\n     * @param {Number} y\n     * @param {ScrollOptions|Boolean} [options] How to scroll. May be passed as `true` to animate.\n     * @returns {Promise} A promise which is resolved when the scrolling has finished.\n     * @category Scrolling\n     */\n    scrollVerticallyTo(y, options = true) {\n        return this.scrollable.scrollTo(null, y, options);\n    }\n\n    /**\n     * Scrolls the subgrid that contains the scheduler\n     * @param {Number} x\n     * @param {ScrollOptions|Boolean} [options] How to scroll. May be passed as `true` to animate.\n     * @returns {Promise} A promise which is resolved when the scrolling has finished.\n     * @category Scrolling\n     */\n    scrollTo(x, options = true) {\n        return this.timeAxisSubGrid.scrollable.scrollTo(x, null, options);\n    }\n\n    //endregion\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n};\n\n// Internal class used to interrogate and manipulate the timeline scroll position.\n// This delegates all operations to the appropriate Scroller, horizontal or vertical.\nclass TimelineScroller extends Scroller {\n    static get configurable() {\n        return {\n            position : null,\n            x        : null,\n            y        : null\n        };\n    }\n\n    // This class is passive about configuring the element.\n    // It has no opinions about *how* the overflow is handled.\n    updateOverflowX() {}\n    updateOverflowY() {}\n\n    onScroll(e) {\n        super.onScroll(e);\n        this._position = null;\n    }\n\n    syncPartners(force) {\n        this.scrollable.syncPartners(force);\n    }\n\n    updatePosition(position) {\n        this.scrollable[this.isHorizontal ? 'x' : 'y'] = position;\n    }\n\n    get viewport() {\n        return this.scrollable.viewport;\n    }\n\n    get position() {\n        return this._position = this.scrollable[this.isHorizontal ? 'x' : 'y'];\n    }\n\n    get clientSize() {\n        return this.scrollable[`client${this.isHorizontal ? 'Width' : 'Height'}`];\n    }\n\n    get scrollSize() {\n        return this.scrollable[`scroll${this.isHorizontal ? 'Width' : 'Height'}`];\n    }\n\n    get maxPosition() {\n        return this.scrollable[`max${this.isHorizontal ? 'X' : 'Y'}`];\n    }\n\n    scrollTo(position, options) {\n        return this.isHorizontal ? this.scrollable.scrollTo(position, null, options) : this.scrollable.scrollTo(null, position, options);\n    }\n\n    scrollBy(xDelta = 0, yDelta = 0, options = defaultScrollOptions) {\n        // Use the correct delta by default, but if it's zero, accommodate axis error.\n        return this.isHorizontal ? this.scrollable.scrollBy(xDelta || yDelta, 0, options) : this.scrollable.scrollBy(0, yDelta || xDelta, options);\n    }\n\n    scrollIntoView() {\n        return this.scrollable.scrollIntoView(...arguments);\n    }\n\n    // We accommodate mistakes. Setting X and Y sets the appropriate scroll axis position\n    changeX(x) {\n        this.position = x;\n    }\n\n    changeY(y) {\n        this.position = y;\n    }\n\n    get x() {\n        return this.position;\n    }\n\n    set x(x) {\n        this.scrollable[this.isHorizontal ? 'x' : 'y'] = x;\n    }\n\n    get y() {\n        return this.position;\n    }\n\n    set y(y) {\n        this.scroller[this.isHorizontal ? 'x' : 'y'] = y;\n    }\n\n    get clientWidth() {\n        return this.clientSize;\n    }\n\n    get clientHeight() {\n        return this.clientSize;\n    }\n\n    get scrollWidth() {\n        return this.scrollSize;\n    }\n\n    get scrollHeight() {\n        return this.scrollSize;\n    }\n\n    get maxX() {\n        return this.maxPosition;\n    }\n\n    get maxY() {\n        return this.maxPosition;\n    }\n}\n","import Base from '../../../Core/Base.js';\nimport ObjectHelper from '../../../Core/helper/ObjectHelper.js';\n\n/**\n * @module Scheduler/view/mixin/TimelineState\n */\n\nconst copyProperties = [\n    'barMargin'\n];\n\n/**\n * Mixin for Timeline base that handles state. It serializes the following timeline properties:\n *\n * * barMargin\n * * zoomLevel\n *\n * See {@link Grid.view.mixin.GridState} and {@link Core.mixin.State} for more information on state.\n *\n * @mixin\n */\nexport default Target => class TimelineState extends (Target || Base) {\n    static get $name() {\n        return 'TimelineState';\n    }\n\n    /**\n     * Gets or sets timeline's state. Check out {@link Scheduler.view.mixin.TimelineState} mixin for details.\n     * @member {Object} state\n     * @property {Object[]} state.columns\n     * @property {Number} state.rowHeight\n     * @property {Object} state.scroll\n     * @property {Number} state.scroll.scrollLeft\n     * @property {Number} state.scroll.scrollTop\n     * @property {Array} state.selectedRecords\n     * @property {String} state.style\n     * @property {String} state.selectedCell\n     * @property {Object} state.store\n     * @property {Object} state.store.sorters\n     * @property {Object} state.store.groupers\n     * @property {Object} state.store.filters\n     * @property {Object} state.subGrids\n     * @property {Number} state.barMargin\n     * @property {Number} state.zoomLevel\n     * @category State\n     */\n\n    /**\n     * Get timeline's current state for serialization. State includes rowHeight, headerHeight, readOnly, selectedCell,\n     * selectedRecordId, column states and store state etc.\n     * @returns {Object} State object to be serialized\n     * @private\n     */\n    getState() {\n        const\n            me    = this,\n            state = ObjectHelper.copyProperties(super.getState(), me, copyProperties);\n\n        state.zoomLevel = me.zoomLevel;\n\n        state.zoomLevelOptions = {\n            startDate  : me.startDate,\n            endDate    : me.endDate,\n            // With infinite scroll reading viewportCenterDate too early will lead to exception\n            centerDate : !me.infiniteScroll || me.timeAxisViewModel.availableSpace ? me.viewportCenterDate : undefined,\n            width      : me.tickSize\n        };\n\n        return state;\n    }\n\n    /**\n     * Apply previously stored state.\n     * @param {Object} state\n     * @private\n     */\n    applyState(state) {\n        const me = this;\n\n        me.suspendRefresh();\n\n        ObjectHelper.copyProperties(me, state, copyProperties);\n\n        super.applyState(state);\n\n        if (state.zoomLevel != null) {\n            // Do not restore left scroll, infinite scroll should do all the work\n            if (me.infiniteScroll) {\n                if (state?.scroll?.scrollLeft) {\n                    state.scroll.scrollLeft = {};\n                }\n            }\n\n            if (me.isPainted) {\n                me.zoomToLevel(state.zoomLevel, state.zoomLevelOptions);\n            }\n            else {\n                me._zoomAfterPaint = { zoomLevel : state.zoomLevel, zoomLevelOptions : state.zoomLevelOptions };\n            }\n        }\n\n        me.resumeRefresh(true);\n    }\n\n    onPaint(...args) {\n        super.onPaint(...args);\n\n        if (this._zoomAfterPaint) {\n            const { zoomLevel, zoomLevelOptions } = this._zoomAfterPaint;\n\n            this.zoomToLevel(zoomLevel, zoomLevelOptions);\n\n            delete this._zoomAfterPaint;\n        }\n    }\n\n    // This does not need a className on Widgets.\n    // Each *Class* which doesn't need 'b-' + constructor.name.toLowerCase() automatically adding\n    // to the Widget it's mixed in to should implement thus.\n    get widgetClass() {}\n};\n","import GridHeader from '../../Grid/view/Header.js';\n\n/**\n * @module Scheduler/view/Header\n */\n\n/**\n * Custom header subclass which handles the existence of the special TimeAxisColumn\n *\n * @extends Grid/view/Header\n * @private\n */\nexport default class Header extends GridHeader {\n    static get $name() {\n        return 'SchedulerHeader';\n    }\n\n    refreshContent() {\n        // Only render contents into the header once as it contains the special rendering of the TimeAxisColumn\n        // In case ResizeObserver polyfill is used headers element will have resize monitors inserted and we should\n        // take that into account\n        // https://github.com/bryntum/support/issues/3444\n        if (!this.headersElement?.querySelector('.b-sch-timeaxiscolumn')) {\n            super.refreshContent();\n        }\n    }\n}\n","import SubGrid from '../../Grid/view/SubGrid.js';\nimport Header from './Header.js';\nimport DomHelper from '../../Core/helper/DomHelper.js';\n\n/**\n * @module Scheduler/view/TimeAxisSubGrid\n */\n\n/**\n * Widget that encapsulates the SubGrid part of the scheduler which houses the timeline view.\n * @extends Grid/view/SubGrid\n * @private\n */\nexport default class TimeAxisSubGrid extends SubGrid {\n\n    static get $name() {\n        return 'TimeAxisSubGrid';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'timeaxissubgrid';\n    }\n\n    static get configurable() {\n        return {\n            // A Scheduler's SubGrid doesn't accept external columns moving in\n            sealedColumns : true,\n\n            // Use Scheduler's Header class\n            headerClass : Header\n        };\n    }\n\n    startConfigure(config) {\n        const { grid : scheduler } = config;\n\n        // Scheduler references its TimeAxisSubGrid instance through this property.\n        scheduler.timeAxisSubGrid = this;\n\n        super.startConfigure(config);\n\n        if (scheduler.isHorizontal) {\n            config.header = {\n                cls : {\n                    'b-sticky-headers' : scheduler.stickyHeaders\n                }\n            };\n            // We don't use what the GridSubGrids mixin tells us to.\n            // We use the Sheduler's Header class.\n            delete config.headerClass;\n        }\n\n        // If user have not specified a width or flex for scheduler region, default to flex=1\n        if (!('flex' in config || 'width' in config)) {\n            config.flex = 1;\n        }\n    }\n\n    changeScrollable() {\n        const\n            me         = this,\n            scrollable = super.changeScrollable(...arguments);\n\n        // TimeAxisSubGrid's X axis is stretched by its canvas.\n        // We don't need the Scroller's default stretching implementation.\n        if (scrollable) {\n            Object.defineProperty(scrollable, 'scrollWidth', {\n                get() {\n                    return this.element?.scrollWidth ?? 0;\n                },\n                set() {\n                    // Setting the scroll width to be wide just updates the canvas side in Scheduler.\n                    // We do not need the Scroller's default stretcher element to be added.\n                    // Note that \"me\" here is the TimeAxisSubGrid, so we are calling Scheduler.\n                    me.grid.updateCanvasSize();\n                }\n            });\n        }\n\n        return scrollable;\n    }\n\n    syncScrollingPartners(addCls = true) {\n        // Swallow scroll syncing calls that happen during view preset changes, that process triggers multiple when\n        // it first changes tickWidth, then scrolls to center and then an additional sync on scroll end\n        if (!this.grid._viewPresetChanging) {\n            super.syncScrollingPartners(addCls);\n        }\n    }\n\n    /**\n     * This is an event handler triggered when the TimeAxisSubGrid changes size.\n     * Its height changes when content height changes, and that is not what we are\n     * interested in here. If the *width* changes, that means the visible viewport\n     * has changed size.\n     * @param {HTMLElement} element\n     * @param {Number} width\n     * @param {Number} height\n     * @param {Number} oldWidth\n     * @param {Number} oldHeight\n     * @private\n     */\n    onInternalResize(element, width, height, oldWidth, oldHeight) {\n        const me = this;\n\n        // We, as the TimeAxisSubGrid dictate the scheduler viewport width\n        if (me.isPainted && width !== oldWidth) {\n            const\n                scheduler  = me.grid,\n                bodyHeight = scheduler._bodyRectangle.height;\n\n            // Avoid ResizeObserver errors when this operation may create a scrollbar\n            if (DomHelper.scrollBarWidth && width < oldWidth) {\n                me.monitorResize = false;\n            }\n            scheduler.onSchedulerViewportResize(width, bodyHeight, oldWidth, bodyHeight);\n\n            // Revert to monitoring on the next animation frame.\n            // This is to avoid \"ResizeObserver loop completed with undelivered notifications.\"\n            if (!me.monitorResize) {\n                me.requestAnimationFrame(() => me.monitorResize = true);\n            }\n        }\n\n        super.onInternalResize(...arguments);\n    }\n\n    // When restoring state we need to update time axis size immediately, resize event is not triggered fast enough to\n    // restore center date consistently\n    clearWidthCache() {\n        super.clearWidthCache();\n\n        // Check if we are in horizontal mode\n        if (this.owner.isHorizontal) {\n            this.owner.updateViewModelAvailableSpace(this.width);\n        }\n    }\n\n    async expand() {\n        const { owner } = this;\n\n        await super.expand();\n\n        if (owner.isPainted) {\n            owner.timeAxisViewModel.update(this.width, false, true);\n        }\n    }\n}\n\n// Register this widget type with its Factory\nTimeAxisSubGrid.initClass();\n","import GlobalEvents from '../../Core/GlobalEvents.js';\nimport GridBase from '../../Grid/view/GridBase.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\nimport DomHelper from '../../Core/helper/DomHelper.js';\nimport StringHelper from '../../Core/helper/StringHelper.js';\nimport FunctionHelper from '../../Core/helper/FunctionHelper.js';\nimport ResizeMonitor from '../../Core/helper/ResizeMonitor.js';\nimport Collection from '../../Core/util/Collection.js';\nimport IdHelper from '../../Core/helper/IdHelper.js';\nimport ObjectHelper from '../../Core/helper/ObjectHelper.js';\n\nimport VersionHelper from '../../Core/helper/VersionHelper.js';\nimport TimeAxis from '../data/TimeAxis.js';\n\nimport TimeAxisViewModel from './model/TimeAxisViewModel.js';\nimport TimelineDateMapper from './mixin/TimelineDateMapper.js';\nimport TimelineDomEvents from './mixin/TimelineDomEvents.js';\nimport TimelineViewPresets from './mixin/TimelineViewPresets.js';\nimport TimelineZoomable from './mixin/TimelineZoomable.js';\nimport RecurringEvents from './mixin/RecurringEvents.js';\nimport TimelineEventRendering from './mixin/TimelineEventRendering.js';\nimport TimelineScroll from './mixin/TimelineScroll.js';\nimport TimelineState from './mixin/TimelineState.js';\nimport './TimeAxisSubGrid.js';\n\nconst\n    exitTransition = {\n        fn                : 'exitTransition',\n        delay             : 0,\n        cancelOutstanding : true\n    },\n    emptyObject    = {};\n\n/**\n * @module Scheduler/view/TimelineBase\n */\n\n/**\n * Options accepted by the Scheduler's {@link Scheduler.view.Scheduler#config-visibleDate} property.\n *\n * @typedef {Object} VisibleDate\n * @property {Date} date The date to bring into view.\n * @property {'start'|'end'|'center'|'nearest'} [block] How far to scroll the date.\n * @property {Number} [edgeOffset] edgeOffset A margin around the date to bring into view.\n * @property {AnimateScrollOptions|Boolean|Number} [animate] Set to `true` to animate the scroll by 300ms,\n * or the number of milliseconds to animate over, or an animation config object.\n */\n\n/**\n * Abstract base class used by timeline based components such as Scheduler and Gantt. Based on Grid, supplies a \"locked\"\n * region for columns and a \"normal\" for rendering of events etc.\n * @abstract\n *\n * @mixes Scheduler/view/mixin/TimelineDateMapper\n * @mixes Scheduler/view/mixin/TimelineDomEvents\n * @mixes Scheduler/view/mixin/TimelineEventRendering\n * @mixes Scheduler/view/mixin/TimelineScroll\n * @mixes Scheduler/view/mixin/TimelineState\n * @mixes Scheduler/view/mixin/TimelineViewPresets\n * @mixes Scheduler/view/mixin/TimelineZoomable\n * @mixes Scheduler/view/mixin/RecurringEvents\n *\n * @extends Grid/view/Grid\n */\nexport default class TimelineBase extends GridBase.mixin(\n    TimelineDateMapper,\n    TimelineDomEvents,\n    TimelineEventRendering,\n    TimelineScroll,\n    TimelineState,\n    TimelineViewPresets,\n    TimelineZoomable,\n    RecurringEvents\n) {\n    //region Config\n\n    static get $name() {\n        return 'TimelineBase';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'timelinebase';\n    }\n\n    static configurable = {\n        partnerSharedConfigs : {\n            value : ['timeAxisViewModel', 'timeAxis', 'viewPreset'],\n\n            $config : {\n                merge : 'distinct'\n            }\n        },\n\n        /**\n         * Get/set startDate. Defaults to current date if none specified.\n         *\n         * When using {@link #config-infiniteScroll}, use {@link #config-visibleDate} to control initially visible date\n         * instead.\n         *\n         * **Note:** If you need to set start and end date at the same time, use {@link #function-setTimeSpan} method.\n         * @member {Date} startDate\n         * @category Common\n         */\n        /**\n         * The start date of the timeline (if not configure with {@link #config-infiniteScroll}).\n         *\n         * If omitted, and a TimeAxis has been set, the start date of the provided {@link Scheduler.data.TimeAxis} will\n         * be used. If no TimeAxis has been configured, it'll use the start/end dates of the loaded event dataset. If no\n         * date information exists in the event data set, it defaults to the current date and time.\n         *\n         * If a string is supplied, it will be parsed using\n         * {@link Core/helper/DateHelper#property-defaultFormat-static DateHelper.defaultFormat}.\n         *\n         * When using {@link #config-infiniteScroll}, use {@link #config-visibleDate} to control initially visible date\n         * instead.\n         *\n         * **Note:** If you need to set start and end date at the same time, use the {@link #function-setTimeSpan} method.\n         * @config {Date|String}\n         * @category Common\n         */\n        startDate : {\n            $config : {\n                equal : 'date'\n            },\n            value : null\n        },\n\n        /**\n         * Get/set endDate. Defaults to startDate + default span of the used ViewPreset.\n         *\n         * **Note:** If you need to set start and end date at the same time, use {@link #function-setTimeSpan} method.\n         * @member {Date} endDate\n         * @category Common\n         */\n        /**\n         * The end date of the timeline (if not configure with {@link #config-infiniteScroll}).\n         *\n         * If omitted, it will be calculated based on the {@link #config-startDate} setting and the 'defaultSpan'\n         * property of the current {@link #config-viewPreset}.\n         *\n         * If a string is supplied, it will be parsed using\n         * {@link Core/helper/DateHelper#property-defaultFormat-static DateHelper.defaultFormat}.\n         *\n         * **Note:** If you need to set start and end date at the same time, use the {@link #function-setTimeSpan} method.\n         * @config {Date|String}\n         * @category Common\n         */\n        endDate : {\n            $config : {\n                equal : 'date'\n            },\n            value : null\n        },\n\n        /**\n         * When set, the text in the major time axis header sticks in the scrolling viewport as long as possible.\n         * @config {Boolean}\n         * @default\n         * @category Time axis\n         */\n        stickyHeaders : true,\n\n        /**\n         * A scrolling `options` object describing the scroll action, including a `date` option\n         * which references a `Date`. See {@link #function-scrollToDate} for details about scrolling options.\n         *\n         * ```javascript\n         *     // The date we want in the center of the Scheduler viewport\n         *     myScheduler.visibleDate = {\n         *         date    : new Date(2023, 5, 17, 12),\n         *         block   : 'center',\n         *         animate : true\n         *     };\n         * ```\n         * @member {Object} visibleDate\n         * @category Common\n         */\n        /**\n         * A date to bring into view initially on the scrollable timeline.\n         *\n         * This may be configured as either a `Date` or a scrolling `options` object describing\n         * the scroll action, including a `date` option which references a `Date`.\n         *\n         * See {@link #function-scrollToDate} for details about scrolling options.\n         *\n         * Note that if a naked `Date` is passed, it will be stored internally as a scrolling options object\n         * using the following defaults:\n         *\n         * ```javascript\n         * {\n         *     date  : <The Date object>,\n         *     block : 'nearest'\n         * }\n         * ```\n         *\n         * This moves the date into view by the shortest scroll, so that it just appears at an edge.\n         *\n         * To bring your date of interest to the center of the viewport, configure your\n         * Scheduler thus:\n         *\n         * ```javascript\n         *     visibleDate : {\n         *         date  : new Date(2023, 5, 17, 12),\n         *         block : 'center'\n         *     }\n         * ```\n         * @config {Date|VisibleDate}\n         * @category Common\n         */\n        visibleDate : null,\n\n        /**\n         * CSS class to add to rendered events\n         * @config {String}\n         * @category CSS\n         * @private\n         */\n        eventCls : null,\n\n        /**\n         * Set to `true` to force the time columns to fit to the available space (horizontal or vertical depends on mode).\n         * Note that setting {@link #config-suppressFit} to `true`, will disable `forceFit` functionality. Zooming\n         * cannot be used when `forceFit` is set.\n         * @prp {Boolean}\n         * @default\n         * @category Time axis\n         */\n        forceFit : false,\n\n        /**\n         * Set to a time zone or a UTC offset. This will set the projects\n         * {@link Scheduler.model.ProjectModel#config-timeZone} config accordingly. As this config is only a referer,\n         * please se project's config {@link Scheduler.model.ProjectModel#config-timeZone documentation} for more\n         * information.\n         *\n         * ```javascript\n         * new Calendar(){\n         *   timeZone : 'America/Chicago'\n         * }\n         * ```\n         * @prp {String|Number} timeZone\n         * @category Misc\n         */\n        timeZone : null\n\n    };\n\n    static get defaultConfig() {\n        return {\n            /**\n             * A valid JS day index between 0-6 (0: Sunday, 1: Monday etc.) to be considered the start day of the week.\n             * When omitted, the week start day is retrieved from the active locale class.\n             * @config {Number} weekStartDay\n             * @category Time axis\n             */\n\n            /**\n             * An object with format `{ fromDay, toDay, fromHour, toHour }` that describes the working days and hours.\n             * This object will be used to populate TimeAxis {@link Scheduler.data.TimeAxis#config-include} property.\n             *\n             * Using it results in a non-continuous time axis. Any ticks not covered by the working days and hours will\n             * be excluded. Events within larger ticks (for example if using week as the unit for ticks) will be\n             * stretched to fill the gap otherwise left by the non working hours.\n             *\n             * As with end dates, `toDay` and `toHour` are exclusive. Thus `toDay : 6` means that day 6 (saturday) will\n             * not be included.\n             *\n             *\n             * **NOTE:** When this feature is enabled {@link Scheduler.view.mixin.TimelineZoomable Zooming feature} is\n             * not supported. It's recommended to disable zooming controls:\n             *\n             * ```javascript\n             * new Scheduler({\n             *     zoomOnMouseWheel          : false,\n             *     zoomOnTimeAxisDoubleClick : false,\n             *     ...\n             * });\n             * ```\n             *\n             * @config {Object}\n             * @category Time axis\n             */\n            workingTime : null,\n\n            /**\n             * A backing data store of 'ticks' providing the input date data for the time axis of timeline panel.\n             * @member {Scheduler.data.TimeAxis} timeAxis\n             * @readonly\n             * @category Time axis\n             */\n\n            /**\n             * A {@link Scheduler.data.TimeAxis} config object or instance, used to create a backing data store of\n             * 'ticks' providing the input date data for the time axis of timeline panel. Created automatically if none\n             * supplied.\n             * @config {TimeAxisConfig|Scheduler.data.TimeAxis}\n             * @category Time axis\n             */\n            timeAxis : null,\n\n            /**\n             * The backing view model for the visual representation of the time axis.\n             * Either a real instance or a simple config object.\n             * @private\n             * @config {Scheduler.view.model.TimeAxisViewModel|TimeAxisViewModelConfig}\n             * @category Time axis\n             */\n            timeAxisViewModel : null,\n\n            /**\n             * You can set this option to `false` to make the timeline panel start and end on the exact provided\n             * {@link #config-startDate}/{@link #config-endDate} w/o adjusting them.\n             * @config {Boolean}\n             * @default\n             * @category Time axis\n             */\n            autoAdjustTimeAxis : true,\n\n            /**\n             * Affects drag drop and resizing of events when {@link Scheduler/view/mixin/TimelineDateMapper#config-snap}\n             * is enabled.\n             *\n             * If set to `true`, dates will be snapped relative to event start. e.g. for a zoom level with\n             * `timeResolution = { unit: \"s\", increment: \"20\" }`, an event that starts at 10:00:03 and is dragged would\n             * snap its start date to 10:00:23, 10:00:43 etc.\n             *\n             * When set to `false`, dates will be snapped relative to the timeAxis startDate (tick start)\n             * - 10:00:03 -> 10:00:20, 10:00:40 etc.\n             *\n             * @config {Boolean}\n             * @default\n             * @category Scheduled events\n             */\n            snapRelativeToEventStartDate : false,\n\n            /**\n             * Set to `true` to prevent auto calculating of a minimal {@link Scheduler.view.mixin.TimelineEventRendering#property-tickSize}\n             * to always fit the content to the screen size. Setting this property on `true` will disable {@link #config-forceFit} behaviour.\n             * @config {Boolean}\n             * @default false\n             * @category Time axis\n             */\n            suppressFit : false,\n\n            /**\n             * CSS class to add to cells in the timeaxis column\n             * @config {String}\n             * @category CSS\n             * @private\n             */\n            timeCellCls : null,\n\n            scheduledEventName : null,\n\n            //dblClickTime : 200,\n\n            /**\n             * A CSS class to apply to each event in the view on mouseover.\n             * @config {String}\n             * @category CSS\n             * @private\n             */\n            overScheduledEventClass : null,\n\n            // allow the panel to prevent adding the hover CSS class in some cases - during drag drop operations\n            preventOverCls : false,\n\n            // This setting is set to true by features that need it\n            useBackgroundCanvas : false,\n\n            /**\n             * Set to `false` if you don't want event bar DOM updates to animate.\n             * @prp {Boolean}\n             * @default true\n             * @category Scheduled events\n             */\n            enableEventAnimations : true,\n\n            disableGridRowModelWarning : true,\n\n            // does not look good with locked columns and also interferes with event animations\n            animateRemovingRows : false,\n\n            /**\n             * Partners this Timeline panel with another Timeline in order to sync their region sizes (sub-grids like locked, normal will get the same width),\n             * start and end dates, view preset, zoom level and scrolling position. All these values will be synced with the timeline defined as the `partner`.\n             *\n             * - To add a new partner dynamically see {@link #function-addPartner} method.\n             * - To remove existing partner see {@link #function-removePartner} method.\n             * - To check if timelines are partners see {@link #function-isPartneredWith} method.\n             *\n             * Column widths and hide/show state are synced between partnered schedulers when the column set is identical.\n             * @config {Scheduler.view.TimelineBase}\n             * @category Time axis\n             */\n            partner : null,\n\n            schedulerRegion : 'normal',\n\n            transitionDuration : 200,\n            // internal timer id reference\n            animationTimeout   : null,\n\n            /**\n             * Region to which columns are added when they have none specified\n             * @config {String}\n             * @default\n             * @category Misc\n             */\n            defaultRegion : 'locked',\n\n            /**\n             * Decimal precision used when displaying durations, used by tooltips and DurationColumn.\n             * Specify `false` to use raw value\n             * @config {Number|Boolean}\n             * @default\n             * @category Common\n             */\n            durationDisplayPrecision : 1,\n\n            asyncEventSuffix : 'PreCommit',\n\n            viewportResizeTimeout : 250,\n            /**\n             * An object with configuration for the {@link Scheduler.column.TimeAxisColumn} in horizontal\n             * {@link Scheduler.view.SchedulerBase#config-mode}.\n             *\n             * Example:\n             *\n             * ```javascript\n             * new Scheduler({\n             *     timeAxisColumn : {\n             *         renderer : ({ record, cellElement }) => {\n             *             // output some markup as a layer below the events layer, you can draw a chart for example\n             *         }\n             *     },\n             *     ...\n             * });\n             * ```\n             *\n             * @config {TimeAxisColumnConfig} timeAxisColumn\n             * @category Time axis\n             */\n\n            testConfig : {\n                viewportResizeTimeout : 50\n            }\n        };\n    }\n\n    timeCellSelector = null;\n\n    updateTimeZone(timeZone) {\n        if (this.isConfiguring) {\n            this.project._isConfiguringTimeZone = true;\n        }\n        this.project.timeZone = timeZone;\n    }\n\n    get timeZone() {\n        return this.project.timeZone;\n    }\n\n    //endregion\n\n    //region Feature hooks\n\n    /**\n     * Populates the event context menu. Chained in features to add menu items.\n     * @param {Object} options Contains menu items and extra data retrieved from the menu target.\n     * @param {Grid.column.Column} options.column Column for which the menu will be shown.\n     * @param {Scheduler.model.EventModel} options.eventRecord The context event.\n     * @param {Scheduler.model.ResourceModel} options.resourceRecord The context resource.\n     * @param {Scheduler.model.AssignmentModel} options.assignmentRecord The context assignment if any.\n     * @param {Object<String,MenuItemConfig|Boolean|null>} options.items A named object to describe menu items.\n     * @internal\n     */\n    populateEventMenu() {}\n\n    /**\n     * Populates the time axis context menu. Chained in features to add menu items.\n     * @param {Object} options Contains menu items and extra data retrieved from the menu target.\n     * @param {Grid.column.Column} options.column Column for which the menu will be shown.\n     * @param {Scheduler.model.ResourceModel} options.resourceRecord The context resource.\n     * @param {Date} options.date The Date corresponding to the mouse position in the time axis.\n     * @param {Object<String,MenuItemConfig|Boolean|null>} options.items A named object to describe menu items.\n     * @internal\n     */\n    populateScheduleMenu() {}\n\n    // Called when visible date range potentially changes such as when scrolling in\n    // the time axis.\n    onVisibleDateRangeChange(range) {\n        if (!this.handlingVisibleDateRangeChange) {\n            const\n                me                    = this,\n                { _visibleDateRange } = me,\n                dateRangeChange       = !_visibleDateRange || (_visibleDateRange.startDate - range.startDate || _visibleDateRange.endDate - range.endDate);\n\n            if (dateRangeChange) {\n                me.timeView.range                 = range;\n                me.handlingVisibleDateRangeChange = true;\n\n                /**\n                 * Fired when the range of dates visible within the viewport changes. This will be when\n                 * scrolling along a time axis.\n                 *\n                 * __Note__ that this event will fire frequently during scrolling, so any listener\n                 * should probably be added with the `buffer` option to slow down the calls to your\n                 * handler function :\n                 *\n                 * ```javascript\n                 * listeners : {\n                 *     visibleDateRangeChange({ old, new }) {\n                 *         this.updateRangeRequired(old, new);\n                 *     },\n                 *     // Only call once. 300 ms after the last event was detected\n                 *     buffer : 300\n                 * }\n                 * ```\n                 * @event visibleDateRangeChange\n                 * @param {Scheduler.view.Scheduler} source This Scheduler instance.\n                 * @param {Object} old The old date range\n                 * @param {Date} old.startDate the old start date.\n                 * @param {Date} old.endDate the old end date.\n                 * @param {Object} new The new date range\n                 * @param {Date} new.startDate the new start date.\n                 * @param {Date} new.endDate the new end date.\n                 */\n                me.trigger('visibleDateRangeChange', {\n                    old : _visibleDateRange,\n                    new : range\n                });\n                me.handlingVisibleDateRangeChange = false;\n                me._visibleDateRange              = range;\n            }\n        }\n    }\n\n    // Called when visible resource range changes in vertical mode\n    onVisibleResourceRangeChange() {}\n\n    //endregion\n\n    //region Init\n\n    construct(config = {}) {\n        const me = this;\n\n        super.construct(config);\n\n        me.$firstVerticalOverflow = true;\n\n        me.initDomEvents();\n\n        me.currentOrientation.init();\n\n        me.rowManager.ion({\n            refresh : () => {\n                me.forceLayout = false;\n            }\n        });\n    }\n\n    // Override from Grid.view.GridSubGrids\n    createSubGrid(region, config = {}) {\n        const\n            me                = this,\n            { stickyHeaders } = me;\n\n        // We are creating the TimeAxisSubGrid\n        if (region === (me.schedulerRegion || 'normal')) {\n            config.type = 'timeaxissubgrid';\n        }\n\n        // The assumption is that if we are in vertical mode, the locked SubGrid\n        // is used to house the verticalTimeAxis, and so it must all be overflow:visible\n        else if (region === 'locked' && stickyHeaders && me.isVertical) {\n            config.scrollable = {\n                overflowX : 'visible',\n                overflowY : 'visible'\n            };\n\n            // It's the child of the overflowElement\n            me.bodyContainer.classList.add('b-sticky-headers');\n        }\n\n        return super.createSubGrid(region, config);\n    }\n\n    doDestroy() {\n        const\n            me                                    = this,\n            { partneredWith, currentOrientation } = me;\n\n        currentOrientation?.destroy();\n\n        // Break links between this TimeLine and any partners.\n        if (partneredWith) {\n            partneredWith.forEach(p => {\n                me.removePartner(p);\n            });\n            partneredWith.destroy();\n        }\n        else {\n            me.timeAxisViewModel.destroy();\n            me.timeAxis.destroy();\n        }\n\n        super.doDestroy();\n    }\n\n    startConfigure(config) {\n        super.startConfigure(config);\n\n        // When the body height changes, we must update the SchedulerViewport's height\n        ResizeMonitor.addResizeListener(this.bodyContainer, this.onBodyResize.bind(this));\n\n        // partner needs to be initialized first so that the various shared\n        // configs are assigned first before we default them in.\n        this.getConfig('partner');\n    }\n\n    changeStartDate(startDate) {\n        if (typeof startDate === 'string') {\n            startDate = DateHelper.parse(startDate);\n        }\n        return startDate;\n    }\n\n    onPaint({ firstPaint }) {\n        // Upon first paint we need to pass the forceUpdate flag in case we are sharing the TimAxisViewModel\n        // with another Timeline which will already have done this.\n        if (firstPaint) {\n            // Take height from container element\n            // <remove-on-release>\n            // TODO: make flex element inherit height from parent (min-height: 100% doesn't work)\n            // </remove-on-release>\n            const\n                me             = this,\n                scrollable     = me.isHorizontal ? me.timeAxisSubGrid.scrollable : me.scrollable,\n                // Use exact subpixel available space so that tick size calculation is correct.\n                availableSpace = scrollable.element.getBoundingClientRect()[me.isHorizontal ? 'width' : 'height'];\n\n            // silent = true if infiniteScroll. If that is set, TimelineScroll.initScroll which is\n            // called by the base class's onPaint reconfigures the TAVM when it initializes.\n            me.timeAxisViewModel.update(availableSpace, me.infiniteScroll, true);\n\n            // If infiniteScroll caused the TAVM update to be silent, force the rendering to\n            // get hold of the scroll state and visible range\n            if (me.infiniteScroll) {\n                me.currentOrientation.doUpdateTimeView?.();\n            }\n        }\n\n        super.onPaint(...arguments);\n    }\n\n    onSchedulerHorizontalScroll(subGrid, scrollLeft, scrollX) {\n        // rerender cells in scheduler column on horizontal scroll to display events in view\n        this.currentOrientation.updateFromHorizontalScroll(scrollX);\n\n        super.onSchedulerHorizontalScroll(subGrid, scrollLeft, scrollX);\n    }\n\n    /**\n     * Overrides initScroll from Grid, listens for horizontal scroll to do virtual event rendering\n     * @private\n     */\n    initScroll() {\n        const me = this;\n\n        let frameCount = 0;\n\n        super.initScroll();\n\n        me.ion({\n            horizontalScroll : ({ subGrid, scrollLeft, scrollX }) => {\n                if (me.isPainted && subGrid === me.timeAxisSubGrid && !me.isDestroying && !me.refreshSuspended) {\n                    me.onSchedulerHorizontalScroll(subGrid, scrollLeft, scrollX);\n                }\n                frameCount++;\n            }\n        });\n\n        if (me.testPerformance === 'horizontal') {\n            me.setTimeout(() => {\n                const start     = performance.now();\n                let scrollSpeed = 5,\n                    direction   = 1;\n\n                const scrollInterval = me.setInterval(() => {\n                    scrollSpeed = scrollSpeed + 5;\n\n                    me.scrollX += (10 + Math.floor(scrollSpeed)) * direction;\n\n                    if (direction === 1 && me.scrollX > 5500) {\n                        direction   = -1;\n                        scrollSpeed = 5;\n                    }\n\n                    if (direction === -1 && me.scrollX <= 0) {\n                        const\n                            done    = performance.now(), // eslint-disable-line no-undef\n                            elapsed = done - start;\n\n                        const\n                            timePerFrame = elapsed / frameCount,\n                            fps          = Math.round((1000 / timePerFrame) * 10) / 10;\n\n                        clearInterval(scrollInterval);\n\n                        console.log(me.eventPositionMode, me.eventScrollMode, fps + 'fps');\n                    }\n                }, 0);\n            }, 500);\n        }\n    }\n\n    //endregion\n\n    /**\n     * Calls the specified function (returning its return value) and preserves the timeline center\n     * point. This is a useful way of retaining the user's visual context while making updates\n     * and changes to the view which require major changes or a full refresh.\n     * @param {Function} fn The function to call.\n     * @param {Object} thisObj The `this` context for the function.\n     * @param {...*} args Parameters to the function.\n     */\n    preserveViewCenter(fn, thisObj = this, ...args) {\n        const\n            me             = this,\n            centerDate     = me.viewportCenterDate,\n            result         = fn.apply(thisObj, args),\n            scroller       = me.timelineScroller,\n            { clientSize } = scroller,\n            scrollStart    = Math.max(Math.floor(me.getCoordinateFromDate(centerDate, true) - clientSize / 2), 0);\n\n        me.scrollingToCenter = true;\n        scroller.scrollTo(scrollStart, false).then(() => me.scrollingToCenter = false);\n\n        return result;\n    }\n\n    /**\n     * Changes this Scheduler's time axis timespan to the supplied start and end dates.\n     *\n     * @async\n     * @param {Date} newStartDate The new start date\n     * @param {Date} newEndDate The new end date\n     * @param {Object} [options] An object containing modifiers for the time span change operation.\n     * @param {Boolean} [options.maintainVisibleStart] Specify as `true` to keep the visible start date stable.\n     * @param {Date} [options.visibleDate] The date inside the range to scroll into view\n     */\n    setTimeSpan(newStartDate, newEndDate, options = emptyObject) {\n        const\n            me           = this,\n            { timeAxis } = me,\n            {\n                preventThrow = false, // Private, only used by the shift method.\n                maintainVisibleStart = false,\n                visibleDate\n            }            = options,\n            {\n                startDate,\n                endDate\n            }            = timeAxis.getAdjustedDates(newStartDate, newEndDate),\n            startChanged = timeAxis.startDate - startDate !== 0,\n            endChanged   = timeAxis.endDate - endDate !== 0;\n\n        if (startChanged || endChanged) {\n            if (maintainVisibleStart) {\n                const\n                    {\n                        timeAxisViewModel\n                    }             = me,\n                    { totalSize } = timeAxisViewModel,\n                    oldTickSize   = timeAxisViewModel.tickSize,\n                    scrollable    = me.timelineScroller,\n                    currentScroll = scrollable.position,\n                    visibleStart  = timeAxisViewModel.getDateFromPosition(currentScroll);\n\n                // If the current visibleStart is in the new range, maintain it\n                // So that there is no visual jump.\n                if (visibleStart >= startDate && visibleStart < endDate) {\n                    // We need to correct the scroll position as soon as the TimeAxisViewModel\n                    // has updated itself and before any other UI updates which that may trigger.\n                    timeAxisViewModel.ion({\n                        update() {\n                            const tickSizeChanged = timeAxisViewModel.tickSize !== oldTickSize;\n\n                            // Ensure the canvas element matches the TimeAxisViewModel's new totalSize.\n                            // This creates the required scroll range to be able to have the scroll\n                            // position correct before any further UI updates.\n                            me.updateCanvasSize();\n\n                            // If *only* the start moved, we can keep scroll position the same\n                            // by adjusting it by the amount the start moved.\n                            if (startChanged && !endChanged && !tickSizeChanged) {\n                                scrollable.position += (timeAxisViewModel.totalSize - totalSize);\n                            }\n                            // If only the end has changed, and tick size is same, we can maintain\n                            // the same scroll position.\n                            else if (!startChanged && !tickSizeChanged) {\n                                scrollable.position = currentScroll;\n                            }\n                            // Fall back to restoring the position by restoring the visible start time\n                            else {\n                                scrollable.position = timeAxisViewModel.getPositionFromDate(visibleStart);\n                            }\n\n                            // Force partners to sync with what we've just done to reset the scroll.\n                            // We are now in control.\n                            scrollable.syncPartners(true);\n                        },\n                        prio : 10000,\n                        once : true\n                    });\n                }\n            }\n\n            const returnValue = timeAxis.reconfigure({\n                startDate,\n                endDate\n            }, false, preventThrow);\n\n            if (visibleDate) {\n                return me.scrollToDate(visibleDate, options).then(() => returnValue);\n            }\n\n            return returnValue;\n        }\n    }\n\n    //region Config getters/setters\n\n    /**\n     * Returns `true` if any of the events/tasks or feature injected elements (such as ResourceTimeRanges) are within\n     * the {@link #config-timeAxis}\n     * @property {Boolean}\n     * @readonly\n     * @category Scheduled events\n     */\n    get hasVisibleEvents() {\n        return !this.noFeatureElementsInAxis() || this.eventStore.storage.values.some(t => this.timeAxis.isTimeSpanInAxis(t));\n    }\n\n    // Template function to be chained in features to determine if any elements are in time axis (needed since we cannot\n    // currently chain getters). Negated to not break chain. First feature that has elements visible returns false,\n    // which prevents other features from being queried.\n    noFeatureElementsInAxis() { }\n\n    // Private getter used to piece together event names such as beforeEventDrag / beforeTaskDrag. Could also be used\n    // in templates.\n    get capitalizedEventName() {\n        if (!this._capitalizedEventName) {\n            this._capitalizedEventName = StringHelper.capitalize(this.scheduledEventName);\n        }\n\n        return this._capitalizedEventName;\n    }\n\n    set partner(partner) {\n        this._partner = partner;\n\n        this.addPartner(partner);\n    }\n\n    /**\n     * Partners this Timeline with the passed Timeline in order to sync the horizontal scrolling position and zoom level.\n     *\n     * - To remove existing partner see {@link #function-removePartner} method.\n     * - To get the list of partners see {@link #property-partners} getter.\n     *\n     * @param {Scheduler.view.TimelineBase} otherTimeline The timeline to partner with\n     */\n    addPartner(partner) {\n        const me = this;\n\n        if (!me.isPartneredWith(partner)) {\n            const partneredWith = me.partneredWith || (me.partneredWith = new Collection());\n\n            // Each must know about the other so that they can sync others upon region resize\n            partneredWith.add(partner);\n\n            (partner.partneredWith || (partner.partneredWith = new Collection())).add(me);\n\n            // Flush through viewPreset initGetter so that the setup in setConfig doesn't\n            // take them to be the class's defined getters.\n            me.getConfig('viewPreset');\n\n            partner.ion({\n                presetchange : 'onPartnerPresetChange',\n                thisObj      : me\n            });\n            partner.scrollable.ion({\n                overflowChange : 'onPartnerOverflowChange',\n                thisObj        : me\n            });\n\n            // collect configs that are meant to be shared between partners\n            const partnerSharedConfig = me.partnerSharedConfigs.reduce((config, configName) => {\n                config[configName] = partner[configName];\n                return config;\n            }, {});\n\n            me.setConfig(partnerSharedConfig);\n\n            me.ion({\n                presetchange : 'onPartnerPresetChange',\n                thisObj      : partner\n            });\n            me.scrollable.ion({\n                overflowChange : 'onPartnerOverflowChange',\n                thisObj        : partner\n            });\n\n            if (me.isPainted) {\n                me.scrollable.addPartner(partner.scrollable, me.isHorizontal ? 'x' : 'y');\n\n                partner.syncPartnerSubGrids();\n            }\n            else {\n                // When initScroll comes round, make sure it syncs with the partner\n                me.initScroll = FunctionHelper.createSequence(me.initScroll, () => {\n                    me.scrollable.addPartner(partner.scrollable, me.isHorizontal ? 'x' : 'y');\n                    partner.syncPartnerSubGrids();\n                }, me);\n            }\n        }\n    }\n\n    /**\n     * Breaks the link between current Timeline and the passed Timeline\n     *\n     * - To add a new partner see {@link #function-addPartner} method.\n     * - To get the list of partners see {@link #property-partners} getter.\n     *\n     * @param {Scheduler.view.TimelineBase} otherTimeline The timeline to unlink from\n     */\n    removePartner(partner) {\n        const\n            me                = this,\n            { partneredWith } = me;\n\n        if (me.isPartneredWith(partner)) {\n            partneredWith.remove(partner);\n            me.scrollable.removePartner(partner.scrollable);\n            me.un({\n                presetchange : 'onPartnerPresetChange',\n                thisObj      : partner\n            });\n            me.scrollable.un({\n                overflowChange : 'onPartnerOverflowChange',\n                thisObj        : partner\n            });\n\n            partner.removePartner(me);\n        }\n    }\n\n    /**\n     * Checks whether the passed timeline is partnered with the current timeline.\n     * @param {Scheduler.view.TimelineBase} partner The timeline to check the partnering with\n     * @returns {Boolean} Returns `true` if the timelines are partnered\n     */\n    isPartneredWith(partner) {\n        return Boolean(this.partneredWith?.includes(partner));\n    }\n\n    /**\n     * Called when a partner scheduler changes its overflowing state. The scrollable\n     * of a Grid/Scheduler only handles overflowY, so this will mean the addition\n     * or removal of a vertical scrollbar.\n     *\n     * All partners must stay in sync. If another parter has a vertical scrollbar\n     * and we do not, we must set our overflowY to 'scroll' so that we show an empty\n     * scrollbar to keep widths synchronized.\n     * @param {Object} event A {@link Core.helper.util.Scroller#event-overflowChange} event\n     * @internal\n     */\n    onPartnerOverflowChange({ source : otherScrollable, y }) {\n        const\n            { scrollable } = this,\n            ourY           = scrollable.hasOverflow('y');\n\n        // If we disagree with our partner, the partner which doesn't have\n        // overflow, has to become overflowY : scroll\n        if (ourY !== y) {\n            if (ourY) {\n                otherScrollable.overflowY = 'scroll';\n            }\n            else {\n                otherScrollable.overflowY = true;\n                scrollable.overflowY      = 'scroll';\n                this.refreshVirtualScrollbars();\n            }\n        }\n        // If we agree with our partner, we can reset ourselves to overflowY : auto\n        else {\n            scrollable.overflowY = true;\n        }\n    }\n\n    onPartnerPresetChange({ preset, startDate, endDate, centerDate, zoomDate, zoomPosition, zoomLevel }) {\n        if (!this._viewPresetChanging && this.viewPreset !== preset) {\n\n            // Passed through to the viewPreset changing method\n            preset.options  = {\n                startDate,\n                endDate,\n                centerDate,\n                zoomDate,\n                zoomPosition,\n                zoomLevel\n            };\n            this.viewPreset = preset;\n        }\n    }\n\n    get partner() {\n        return this._partner;\n    }\n\n    /**\n     * Returns the partnered timelines.\n     *\n     * - To add a new partner see {@link #function-addPartner} method.\n     * - To remove existing partner see {@link #function-removePartner} method.\n     *\n     * @readonly\n     * @member {Scheduler.view.TimelineBase} partners\n     * @category Time axis\n     */\n    get partners() {\n        const partners = this.partner ? [this.partner] : [];\n\n        if (this.partneredWith) {\n            partners.push.apply(partners, this.partneredWith.allValues);\n        }\n\n        return partners;\n    }\n\n    get timeAxisColumn() {\n        return this.columns && this._timeAxisColumn;\n    }\n\n    changeColumns(columns, currentStore) {\n        const me = this;\n        let timeAxisColumnIndex, timeAxisColumnConfig;\n\n        // No columns means destroy\n        if (columns) {\n            const isArray = Array.isArray(columns);\n\n            let cols = columns;\n\n            if (!isArray) {\n                cols = columns.data;\n            }\n\n            timeAxisColumnIndex = cols && cols.length;\n\n            cols.some((col, index) => {\n                if (col.type === 'timeAxis') {\n                    timeAxisColumnIndex  = index;\n                    timeAxisColumnConfig = ObjectHelper.assign(col, me.timeAxisColumn);\n                    return true;\n                }\n                return false;\n            });\n\n            // <remove-on-release>\n            // TODO: Move to Scheduler\n            // </remove-on-release>\n            if (me.isVertical) {\n                cols = [\n                    ObjectHelper.assign({\n                        type : 'verticalTimeAxis'\n                    }, me.verticalTimeAxisColumn),\n                    // Make space for a regular TimeAxisColumn after the VerticalTimeAxisColumn\n                    cols[timeAxisColumnIndex]\n                ];\n\n                timeAxisColumnIndex = 1;\n            }\n            else {\n                // We're going to mutate this array which we do not own, so copy it first.\n                cols = cols.slice();\n            }\n\n            // Fix up the timeAxisColumn config in place\n            cols[timeAxisColumnIndex] = this._timeAxisColumn || {\n                type    : 'timeAxis',\n                cellCls : me.timeCellCls,\n                mode    : me.mode,\n                ...timeAxisColumnConfig\n            };\n\n            // If we are passed a raw array, or the Store we are passed is owned by another\n            // Scheduler, pass the raw column data ro the Grid's changeColumns\n            if (isArray || (columns.isStore && columns.owner !== this)) {\n                columns = cols;\n            }\n            else {\n                columns.data = cols;\n            }\n        }\n\n        return super.changeColumns(columns, currentStore);\n    }\n\n    updateColumns(columns, was) {\n        super.updateColumns(columns, was);\n\n        // Extract the known columns by type. Sorting will have placed them into visual order.\n        if (columns) {\n            const\n                me             = this,\n                timeAxisColumn = me._timeAxisColumn = me.columns.find(c => c.isTimeAxisColumn);\n\n            if (me.isVertical) {\n                me.verticalTimeAxisColumn = me.columns.find(c => c.isVerticalTimeAxisColumn);\n                me.verticalTimeAxisColumn.relayAll(me);\n            }\n\n            // Set up event relaying early\n            timeAxisColumn.relayAll(me);\n        }\n    }\n\n    onColumnsChanged({ action, changes, record : column, records }) {\n        const { timeAxisColumn, columns } = this;\n        // If someone replaces the column set (syncing leads to batch), ensure time axis is always added\n        if ((action === 'dataset' || action === 'batch') && !columns.includes(timeAxisColumn)) {\n            columns.add(timeAxisColumn, true);\n        }\n        // <remove-on-release>\n        // TODO: Have ResourceHeader call this directly instead of relying on event?\n        // </remove-on-release>\n        else if (column === timeAxisColumn && 'width' in changes) {\n            this.updateCanvasSize();\n        }\n\n        column && this.partneredWith?.forEach(partner => {\n            const partnerColumn = partner.columns.getAt(column.allIndex);\n\n            if (partnerColumn?.shouldSync(column)) {\n                const partnerChanges = {};\n                for (const k in changes) {\n                    partnerChanges[k] = changes[k].value;\n                }\n                partnerColumn.set(partnerChanges);\n            }\n        });\n\n        super.onColumnsChanged(...arguments);\n    }\n\n    get timeView() {\n        const me = this;\n        // Maintainer, we need to ensure that the columns property is initialized\n        // if this getter is called at configuration time before columns have been ingested.\n        return me.columns && me.isVertical\n            ? me.verticalTimeAxisColumn?.view\n            : me.timeAxisColumn?.timeAxisView;\n    }\n\n    updateEventCls(eventCls) {\n        const me = this;\n\n        if (!me.eventSelector) {\n            // No difference with new rendering, released have 'b-released' only\n            me.unreleasedEventSelector = me.eventSelector = `.${eventCls}-wrap`;\n        }\n        if (!me.eventInnerSelector) {\n            me.eventInnerSelector = `.${eventCls}`;\n        }\n    }\n\n    set timeAxisViewModel(timeAxisViewModel) {\n        const\n            me            = this,\n            currentModel  = me._timeAxisViewModel,\n            tavmListeners = {\n                name    : 'timeAxisViewModel',\n                update  : 'onTimeAxisViewModelUpdate',\n                prio    : 100,\n                thisObj : me\n            };\n\n        if ((me.partner && !timeAxisViewModel) || (currentModel && currentModel === timeAxisViewModel)) {\n            return;\n        }\n\n        if (currentModel?.owner === me) {\n            // We created this model, destroy it\n            currentModel.destroy();\n        }\n\n        me.detachListeners('timeAxisViewModel');\n\n        // Getting rid of instanceof check to allow using code from different bundles\n        if (timeAxisViewModel?.isTimeAxisViewModel) {\n            timeAxisViewModel.ion(tavmListeners);\n        }\n        else {\n            timeAxisViewModel = TimeAxisViewModel.new({\n                mode              : me._mode,\n                snap              : me.snap,\n                forceFit          : me.forceFit,\n                timeAxis          : me.timeAxis,\n                suppressFit       : me.suppressFit,\n                internalListeners : tavmListeners,\n                owner             : me\n            }, timeAxisViewModel);\n        }\n\n        // Replace in dependent classes relying on the model\n        if (!me.isConfiguring) {\n            if (me.isHorizontal) {\n                me.timeAxisColumn.timeAxisViewModel = timeAxisViewModel;\n            }\n            else {\n                me.verticalTimeAxisColumn.view.model = timeAxisViewModel;\n            }\n        }\n\n        me._timeAxisViewModel = timeAxisViewModel;\n\n        me.relayEvents(timeAxisViewModel, ['update'], 'timeAxisViewModel');\n\n        if (currentModel && timeAxisViewModel) {\n            me.trigger('timeAxisViewModelChange', { timeAxisViewModel });\n        }\n    }\n\n    /**\n     * The internal view model, describing the visual representation of the time axis.\n     * @property {Scheduler.view.model.TimeAxisViewModel}\n     * @readonly\n     * @category Time axis\n     */\n    get timeAxisViewModel() {\n        if (!this._timeAxisViewModel) {\n            this.timeAxisViewModel = null;\n        }\n        return this._timeAxisViewModel;\n    }\n\n    get suppressFit() {\n        return this._timeAxisViewModel?.suppressFit ?? this._suppressFit;\n    }\n\n    set suppressFit(value) {\n        if (this._timeAxisViewModel) {\n            this.timeAxisViewModel.suppressFit = value;\n        }\n        else {\n            this._suppressFit = value;\n        }\n    }\n\n    set timeAxis(timeAxis) {\n        const\n            me                = this,\n            currentTimeAxis   = me._timeAxis,\n            timeAxisListeners = {\n                name        : 'timeAxis',\n                reconfigure : 'onTimeAxisReconfigure',\n                thisObj     : me\n            };\n\n        if (me.partner && !timeAxis || (currentTimeAxis && currentTimeAxis === timeAxis)) {\n            return;\n        }\n\n        if (currentTimeAxis) {\n            if (currentTimeAxis.owner === me) {\n                // We created this model, destroy it\n                currentTimeAxis.destroy();\n            }\n        }\n\n        me.detachListeners('timeAxis');\n\n        // Getting rid of instanceof check to allow using code from different bundles\n        if (!timeAxis?.isTimeAxis) {\n            timeAxis = ObjectHelper.assign({\n                owner          : me,\n                viewPreset     : me.viewPreset,\n                autoAdjust     : me.autoAdjustTimeAxis,\n                weekStartDay   : me.weekStartDay,\n                forceFullTicks : me.fillTicks && me.snap\n            }, timeAxis);\n\n            if (me.startDate) {\n                timeAxis.startDate = me.startDate;\n            }\n            if (me.endDate) {\n                timeAxis.endDate = me.endDate;\n            }\n\n            if (me.workingTime) {\n                me.applyWorkingTime(timeAxis);\n            }\n\n            timeAxis = new TimeAxis(timeAxis);\n        }\n\n        // Inform about reconfiguring the timeaxis, to allow users to react to start & end date changes\n        timeAxis.ion(timeAxisListeners);\n\n        me._timeAxis = timeAxis;\n    }\n\n    onTimeAxisReconfigure({ config, oldConfig }) {\n        if (config) {\n            const dateRangeChange = !oldConfig || (oldConfig.startDate - config.startDate || oldConfig.endDate - config.endDate);\n\n            if (dateRangeChange) {\n                /**\n                 * Fired when the range of dates encapsulated by the UI changes. This will be when\n                 * moving a view in time by reconfiguring its {@link #config-timeAxis}. This will happen\n                 * when zooming, or changing {@link #config-viewPreset}.\n                 *\n                 * Contrast this with the {@link #event-visibleDateRangeChange} event which fires much\n                 * more frequently, during scrolling along the time axis and changing the __visible__\n                 * date range.\n                 * @event dateRangeChange\n                 * @param {Scheduler.view.TimelineBase} source This Scheduler/Gantt instance.\n                 * @param {Object} old The old date range\n                 * @param {Date} old.startDate the old start date.\n                 * @param {Date} old.endDate the old end date.\n                 * @param {Object} new The new date range\n                 * @param {Date} new.startDate the new start date.\n                 * @param {Date} new.endDate the new end date.\n                 */\n                this.trigger('dateRangeChange', {\n                    old : {\n                        startDate : oldConfig.startDate,\n                        endDate   : oldConfig.endDate\n                    },\n                    new : {\n                        startDate : config.startDate,\n                        endDate   : config.endDate\n                    }\n                });\n            }\n        }\n\n        /**\n         * Fired when the timeaxis has changed, for example by zooming or configuring a new time span.\n         * @event timeAxisChange\n         * @param {Scheduler.view.Scheduler} source - This Scheduler\n         * @param {Object} config Config object used to reconfigure the time axis.\n         * @param {Date} config.startDate New start date (if supplied)\n         * @param {Date} config.endDate New end date (if supplied)\n         */\n        this.trigger('timeAxisChange', { config });\n    }\n\n    get timeAxis() {\n        if (!this._timeAxis) {\n            this.timeAxis = null;\n        }\n        return this._timeAxis;\n    }\n\n    updateForceFit(value) {\n        if (this._timeAxisViewModel) {\n            this._timeAxisViewModel.forceFit = value;\n        }\n    }\n\n    /**\n     * Get/set working time. Assign `null` to stop using working time. See {@link #config-workingTime} config for details.\n     * @property {Object}\n     * @category Scheduled events\n     */\n    set workingTime(config) {\n        this._workingTime = config;\n\n        if (!this.isConfiguring) {\n            this.applyWorkingTime(this.timeAxis);\n        }\n    }\n\n    get workingTime() {\n        return this._workingTime;\n    }\n\n    // Translates the workingTime configs into TimeAxis#include rules, applies them and then refreshes the header and\n    // redraws the events\n    applyWorkingTime(timeAxis) {\n        const me     = this,\n            config = me._workingTime;\n\n        if (config) {\n            let hour = null;\n            // Only use valid values\n            if (config.fromHour >= 0 && config.fromHour < 24 && config.toHour > config.fromHour && config.toHour <= 24 && config.toHour - config.fromHour < 24) {\n                hour = { from : config.fromHour, to : config.toHour };\n            }\n\n            let day = null;\n            // Only use valid values\n            if (config.fromDay >= 0 && config.fromDay < 7 && config.toDay > config.fromDay && config.toDay <= 7 && config.toDay - config.fromDay < 7) {\n                day = { from : config.fromDay, to : config.toDay };\n            }\n\n            if (hour || day) {\n                timeAxis.include = {\n                    hour,\n                    day\n                };\n            }\n            else {\n                // No valid rules, restore timeAxis\n                timeAxis.include = null;\n            }\n        }\n        else {\n            // No rules, restore timeAxis\n            timeAxis.include = null;\n        }\n\n        if (me.isPainted) {\n            // Refreshing header, which also recalculate tickSize and header data\n            me.timeAxisColumn.refreshHeader();\n            // Update column lines\n            me.features.columnLines?.refresh();\n\n            // Animate event changes\n            me.refreshWithTransition();\n        }\n    }\n\n    updateStartDate(date) {\n        this.setStartDate(date);\n    }\n\n    /**\n     * Sets the timeline start date.\n     *\n     * **Note:**\n     * - If you need to set start and end date at the same time, use the {@link #function-setTimeSpan} method.\n     * - If keepDuration is false and new start date is greater than end date, it will throw an exception.\n     *\n     * @param {Date} date The new start date\n     * @param {Boolean} keepDuration Pass `true` to keep the duration of the timeline (\"move\" the timeline),\n     * `false` to change the duration (\"resize\" the timeline). Defaults to `true`.\n     */\n    setStartDate(date, keepDuration = true) {\n        const\n            me = this,\n            ta = me._timeAxis,\n            {\n                startDate,\n                endDate,\n                mainUnit\n            }  = ta || emptyObject;\n\n        if (typeof date === 'string') {\n            date = DateHelper.parse(date);\n        }\n\n        if (ta && endDate) {\n            if (date) {\n                let calcEndDate = endDate;\n\n                if (keepDuration && startDate) {\n                    const diff  = DateHelper.diff(startDate, endDate, mainUnit, true);\n                    calcEndDate = DateHelper.add(date, diff, mainUnit);\n                }\n\n                me.setTimeSpan(date, calcEndDate);\n            }\n        }\n        else {\n            me._tempStartDate = date;\n        }\n    }\n\n    get startDate() {\n        const me = this;\n\n        if (me._timeAxis) {\n            return me._timeAxis.startDate;\n        }\n\n        return me._tempStartDate || new Date();\n    }\n\n    changeEndDate(date) {\n        if (typeof date === 'string') {\n            date = DateHelper.parse(date);\n        }\n        this.setEndDate(date);\n    }\n\n    /**\n     * Sets the timeline end date\n     *\n     * **Note:**\n     * - If you need to set start and end date at the same time, use the {@link #function-setTimeSpan} method.\n     * - If keepDuration is false and new end date is less than start date, it will throw an exception.\n     *\n     * @param {Date} date The new end date\n     * @param {Boolean} keepDuration Pass `true` to keep the duration of the timeline (\"move\" the timeline),\n     * `false` to change the duration (\"resize\" the timeline). Defaults to `false`.\n     */\n    setEndDate(date, keepDuration = false) {\n        const\n            me = this,\n            ta = me._timeAxis,\n            {\n                startDate,\n                endDate,\n                mainUnit\n            }  = ta || emptyObject;\n\n        if (typeof date === 'string') {\n            date = DateHelper.parse(date);\n        }\n\n        if (ta && startDate) {\n            if (date) {\n                let calcStartDate = startDate;\n\n                if (keepDuration && endDate) {\n                    const diff    = DateHelper.diff(startDate, endDate, mainUnit, true);\n                    calcStartDate = DateHelper.add(date, -diff, mainUnit);\n                }\n\n                me.setTimeSpan(calcStartDate, date);\n            }\n        }\n        else {\n            me._tempEndDate = date;\n        }\n    }\n\n    get endDate() {\n        const me = this;\n\n        if (me._timeAxis) {\n            return me._timeAxis.endDate;\n        }\n\n        return me._tempEndDate || DateHelper.add(me.startDate, me.viewPreset.defaultSpan, me.viewPreset.mainHeader.unit);\n    }\n\n    changeVisibleDate(options) {\n        if (options instanceof Date) {\n            return { date : options, block : 'nearest' };\n        }\n        if (options instanceof Object) {\n            return {\n                date : options.date,\n                ...options\n            };\n        }\n    }\n\n    updateVisibleDate(options) {\n        const me = this;\n\n        // Infinite scroll initialization takes care of its visibleDate after\n        // calculating the optimum scroll range in TimelineScroll#initScroll\n        if (!(me.infiniteScroll && me.isConfiguring)) {\n            if (me.isPainted) {\n                me.scrollToDate(options.date, options);\n            }\n            else {\n                me.ion({\n                    paint : () => me.scrollToDate(options.date, options),\n                    once  : true\n                });\n            }\n        }\n    }\n\n    get features() {\n        return super.features;\n    }\n\n    // add region resize by default\n    set features(features) {\n        features = features === true ? {} : features;\n\n        if (!('regionResize' in features)) {\n            features.regionResize = true;\n        }\n\n        super.features = features;\n    }\n\n    get eventStyle() {\n        return this._eventStyle;\n    }\n\n    set eventStyle(style) {\n        this._eventStyle = style;\n\n        this.refreshWithTransition();\n\n        this.trigger('stateChange');\n    }\n\n    get eventColor() {\n        return this._eventColor;\n    }\n\n    set eventColor(color) {\n        this._eventColor = color;\n\n        this.refreshWithTransition();\n\n        this.trigger('stateChange');\n    }\n\n    //endregion\n\n    //region Event handlers\n\n    onLocaleChange() {\n        super.onLocaleChange();\n\n        const oldAutoAdjust = this.timeAxis.autoAdjust;\n        // Time axis should rebuild as weekStartDay may have changed\n        this.timeAxis.reconfigure({\n            autoAdjust : false\n        });\n\n        // Silently set it back to what the user had for next view refresh\n        this.timeAxis.autoAdjust = oldAutoAdjust;\n    }\n\n    /**\n     * Called when the element which encapsulates the Scheduler's visible height changes size.\n     * We only respond to *height* changes here. The TimeAxisSubGrid monitors its own width.\n     * @param {HTMLElement} element\n     * @param {DOMRect} oldRect\n     * @param {DOMRect} newRect\n     * @private\n     */\n    onBodyResize(element, oldRect, { width, height }) {\n        // Uncache old value upon element resize, not upon initial sizing\n        if (this.isVertical && oldRect && width !== oldRect.width) {\n            delete this.timeAxisSubGrid._width;\n        }\n\n        const newWidth = this.timeAxisSubGrid.element.offsetWidth;\n\n        // The Scheduler (The Grid) dictates the viewport height.\n        // Don't react on first invocation which will be initial size.\n        if (this._bodyRectangle && oldRect && (height !== oldRect.height)) {\n            this.onSchedulerViewportResize(newWidth, height, newWidth, oldRect.height);\n        }\n    }\n\n    // Note: This function is throttled in construct(), since it will do a full redraw per call\n    onSchedulerViewportResize(width, height, oldWidth, oldHeight) {\n        if (this.isPainted) {\n            const\n                me = this,\n                {\n                    isHorizontal,\n                    partneredWith\n                }  = me;\n\n            me.currentOrientation.onViewportResize(width, height, oldWidth, oldHeight);\n\n            // Raw width is always correct for horizontal layout because the TimeAxisSubGrid\n            // never shows a scrollbar. It's always contained by an owning Grid which shows\n            // the vertical scrollbar.\n            me.updateViewModelAvailableSpace(isHorizontal ? width : Math.floor(height));\n\n            if (partneredWith && !me.isSyncingFromPartner) {\n                me.syncPartnerSubGrids();\n            }\n\n            /**\n             * Fired when the *scheduler* viewport (not the overall Scheduler element) changes size.\n             * This happens when the grid changes height, or when the subgrid which encapsulates the\n             * scheduler column changes width.\n             * @event timelineViewportResize\n             * @param {Core.widget.Widget} source - This Scheduler\n             * @param {Number} width The new width\n             * @param {Number} height The new height\n             * @param {Number} oldWidth The old width\n             * @param {Number} oldHeight The old height\n             */\n            me.trigger('timelineViewportResize', { width, height, oldWidth, oldHeight });\n        }\n    }\n\n    updateViewModelAvailableSpace(space) {\n        this.timeAxisViewModel.availableSpace = space;\n    }\n\n    onTimeAxisViewModelUpdate() {\n        if (!this._viewPresetChanging && !this.timeAxisSubGrid.collapsed) {\n            this.updateCanvasSize();\n            this.currentOrientation.onTimeAxisViewModelUpdate();\n        }\n    }\n\n    syncPartnerSubGrids() {\n        this.partneredWith.forEach(partner => {\n            if (!partner.isSyncingFromPartner) {\n                partner.isSyncingFromPartner = true;\n                this.eachSubGrid(subGrid => {\n                    const partnerSubGrid = partner.subGrids[subGrid.region];\n\n                    // If there is a difference, sync the partner SubGrid state\n                    if (partnerSubGrid.width !== subGrid.width) {\n                        if (subGrid.collapsed) {\n                            partnerSubGrid.collapse();\n                        }\n                        else {\n                            if (partnerSubGrid.collapsed) {\n                                partnerSubGrid.expand();\n                            }\n                            // When using flexed subgrid, make sure flex values has prio over width\n                            if (subGrid.flex) {\n                                // If flex values match, resize should be fine without changing anything\n                                if (subGrid.flex !== partnerSubGrid.flex) {\n                                    partnerSubGrid.flex = subGrid.flex;\n                                }\n                            }\n                            else {\n                                partnerSubGrid.width = subGrid.width;\n                            }\n                        }\n                    }\n                });\n                partner.isSyncingFromPartner = false;\n            }\n        });\n    }\n\n    //endregion\n\n    //region Mode\n\n    get currentOrientation() {\n        throw new Error('Implement in subclass');\n    }\n\n    // Horizontal is the default, overridden in scheduler\n    get isHorizontal() {\n        return true;\n    }\n\n    //endregion\n\n    //region Canvases and elements\n\n    get backgroundCanvas() {\n        return this._backgroundCanvas;\n    }\n\n    get foregroundCanvas() {\n        return this._foregroundCanvas;\n    }\n\n    get svgCanvas() {\n        const me = this;\n        if (!me._svgCanvas) {\n            const svg = me._svgCanvas = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n            svg.setAttribute('id', IdHelper.generateId('svg'));\n            // To not be recycled by DomSync\n            svg.retainElement = true;\n            me.foregroundCanvas.appendChild(svg);\n            me.trigger('svgCanvasCreated', { svg });\n        }\n        return me._svgCanvas;\n    }\n\n    /**\n     * Returns the subGrid containing the time axis\n     * @member {Grid.view.SubGrid} timeAxisSubGrid\n     * @readonly\n     * @category Time axis\n     */\n\n    /**\n     * Returns the html element for the subGrid containing the time axis\n     * @property {HTMLElement}\n     * @readonly\n     * @category Time axis\n     */\n    get timeAxisSubGridElement() {\n        // Hit a lot, caching the element (it will never change)\n\n        if (!this._timeAxisSubGridElement) {\n            // We need the TimeAxisSubGrid to exist, so regions must be initialized\n            this.getConfig('regions');\n\n            this._timeAxisSubGridElement = this.timeAxisColumn?.subGridElement;\n        }\n\n        return this._timeAxisSubGridElement;\n    }\n\n    updateCanvasSize() {\n        const\n            me            = this,\n            { totalSize } = me.timeAxisViewModel,\n            width         = me.isHorizontal ? totalSize : me.timeAxisColumn.width;\n\n        let result = false;\n\n        if (me.isVertical) {\n            // Ensure vertical scroll range accommodates the TimeAxis\n            if (me.isPainted) {\n                // We used to have a bug here from not including the row border in the total height. Border is now\n                // removed, but leaving code here just in case some client is using border\n                me.refreshTotalHeight(totalSize + me._rowBorderHeight, true);\n            }\n\n            // Canvas might need a height in vertical mode, if ticks does not fill height (suppressFit : true)\n            if (me.suppressFit) {\n                DomHelper.setLength(me.foregroundCanvas, 'height', totalSize);\n            }\n\n            result = true;\n        }\n\n        if (width !== me.$canvasWidth && me.foregroundCanvas) {\n            if (me.backgroundCanvas) {\n                DomHelper.setLength(me.backgroundCanvas, 'width', width);\n            }\n\n            DomHelper.setLength(me.foregroundCanvas, 'width', width);\n\n            me.$canvasWidth = width;\n\n            result = true;\n        }\n\n        return result;\n    }\n\n    /**\n     * A chainable function which Features may hook to add their own content to the timeaxis header.\n     * @param {Array} configs An array of domConfigs, append to it to have the config applied to the header\n     */\n    getHeaderDomConfigs(configs) {}\n\n    /**\n     * A chainable function which Features may hook to add their own content to the foreground canvas\n     * @param {Array} configs An array of domConfigs, append to it to have the config applied to the foreground canvas\n     */\n    getForegroundDomConfigs(configs) {}\n\n    //endregion\n\n    //region Grid overrides\n\n    async onStoreDataChange({ action }) {\n        const me = this;\n\n        // Only update the UI immediately if we are visible\n        if (me.isVisible) {\n            // When repopulating stores (pro and up on data reload), the engine is not in a valid state until committed.\n            // Don't want to commit here, since it might be repopulating multiple stores.\n            // Instead delay grids refresh until project is ready\n            if (action === 'dataset' && me.project.isRepopulatingStores) {\n                await me.project.await('refresh', false);\n            }\n\n            super.onStoreDataChange(...arguments);\n        }\n        // Otherwise wait till next time we get painted (shown, or a hidden ancestor shown)\n        else {\n            me.whenVisible('refresh', me, [true]);\n        }\n    }\n\n    refresh(forceLayout = true) {\n        const me = this;\n\n        if (me.isPainted && !me.refreshSuspended) {\n            // We need to refresh if there are Features laying claim to the visible time axis.\n            // Or there are events which fall inside the time axis.\n            // Or (if no events fall inside the time axis) there are event elements to remove.\n            if (me.isVertical || me.hasVisibleEvents || me.timeAxisSubGridElement.querySelector(me.eventSelector)) {\n                if (me.isEngineReady) {\n                    me.refreshRows(false, forceLayout);\n                }\n                else {\n                    me.refreshAfterProjectRefresh             = true;\n                    me.currentOrientation.refreshAllWhenReady = true;\n                }\n            }\n            // Even if there are no events in our timeline, Features\n            // assume there will be a refresh event from the RowManager\n            // after a refresh request so fire it here.\n            else {\n                me.rowManager.trigger('refresh');\n            }\n        }\n    }\n\n    render() {\n        const\n            me          = this,\n            schedulerEl = me.timeAxisSubGridElement;\n\n        if (me.useBackgroundCanvas) {\n            me._backgroundCanvas = DomHelper.createElement({\n                className   : 'b-sch-background-canvas',\n                parent      : schedulerEl,\n                nextSibling : schedulerEl.firstElementChild\n            });\n        }\n\n        // The font-size trick is no longer used by scheduler, since it allows per resource margins\n        const fgCanvas = me._foregroundCanvas = DomHelper.createElement({\n            className : 'b-sch-foreground-canvas',\n            style     : `font-size:${(me.rowHeight - me.resourceMargin * 2)}px`,\n            parent    : schedulerEl\n        });\n\n        me.timeAxisSubGrid.insertRowsBefore = fgCanvas;\n\n        // Size correctly in case ticks does not fill height\n        if (me.isVertical && me.suppressFit) {\n            me.updateCanvasSize();\n        }\n\n        super.render(...arguments);\n    }\n\n    // <remove-on-release>\n    // TODO: refreshRows -> refresh in grid?\n    // </remove-on-release>\n    refreshRows(returnToTop = false, reLayoutEvents = true) {\n        const me = this;\n\n        if (me.isConfiguring) {\n            return;\n        }\n\n        me.currentOrientation.refreshRows(reLayoutEvents);\n\n        super.refreshRows(returnToTop);\n    }\n\n    getCellDataFromEvent(event, includeSingleAxisMatch) {\n        if (includeSingleAxisMatch) {\n            includeSingleAxisMatch = !Boolean(event.target.closest('.b-sch-foreground-canvas'));\n        }\n        return super.getCellDataFromEvent(event, includeSingleAxisMatch);\n    }\n\n    // This GridSelection override disables drag-selection in timeaxis column for scheduler and gantt\n    onCellNavigate(me, from, to) {\n        if (to.cell?.classList.contains('b-timeaxis-cell') && !GlobalEvents.currentMouseDown?.target.classList.contains('b-grid-cell')) {\n            this.preventDragSelect = true;\n        }\n        super.onCellNavigate(...arguments);\n    }\n\n    //endregion\n\n    //region Other\n\n    // duration = false prevents transition\n    runWithTransition(fn, duration) {\n        const me = this;\n\n        // Do not attempt to enter animating state if we are not visible\n        if (me.isVisible) {\n            // Allow calling with true/false to keep code simpler in other places\n            if (duration == null || duration === true) {\n                duration = me.transitionDuration;\n            }\n\n            // Ask Grid superclass to enter the animated state if requested and enabled.\n            if (duration && me.enableEventAnimations) {\n                if (!me.hasTimeout('exitTransition')) {\n                    me.isAnimating = true;\n                }\n\n                // Exit animating state in duration milliseconds.\n                exitTransition.delay = duration;\n                me.setTimeout(exitTransition);\n            }\n        }\n\n        fn();\n    }\n\n    exitTransition() {\n        this.isAnimating = false;\n        this.trigger('transitionend');\n    }\n\n    // Awaited by CellEdit to make sure that the editor is not moved until row heights have transitioned, to avoid it\n    // ending up misaligned\n    async waitForAnimations() {\n        // If project is calculating, we should await that too. It might lead to transitions\n        if (!this.isEngineReady) {\n            await this.project.await('dataReady', false);\n        }\n\n        await super.waitForAnimations();\n    }\n\n    /**\n     * Refreshes the grid with transitions enabled.\n     */\n    refreshWithTransition(forceLayout, duration) {\n        const me = this;\n\n        // No point in starting a transition if we cant refresh anyway\n        if (!me.refreshSuspended && me.isPainted) {\n            // Since we suspend refresh when loading with CrudManager, rows might not have been initialized yet\n            if (!me.rowManager.topRow) {\n                me.rowManager.reinitialize();\n            }\n            else {\n                me.runWithTransition(() => me.refresh(forceLayout), duration);\n            }\n        }\n    }\n\n    /**\n     * Returns an object representing the visible date range\n     * @property {Object}\n     * @property {Date} visibleDateRange.startDate\n     * @property {Date} visibleDateRange.endDate\n     * @readonly\n     * @category Dates\n     */\n    get visibleDateRange() {\n        return this.currentOrientation.visibleDateRange;\n    }\n\n    // This override will force row selection on timeaxis column selection, effectively disabling cell selection there\n    isRowNumberSelecting(...selectors) {\n        return super.isRowNumberSelecting(...selectors) ||\n            selectors.some(cs => cs.column ? cs.column.isTimeAxisColumn : cs.cell?.closest('.b-timeaxis-cell'));\n    }\n\n    //endregion\n\n    /**\n     * Returns a rounded duration value to be displayed in UI (tooltips, labels etc)\n     * @param {Number} The raw duration value\n     * @param {Number} [nbrDecimals] The number of decimals, defaults to {@link #config-durationDisplayPrecision}\n     * @returns {Number} The rounded duration\n     */\n    formatDuration(duration, nbrDecimals = this.durationDisplayPrecision) {\n        const multiplier = Math.pow(10, nbrDecimals);\n\n        return Math.round(duration * multiplier) / multiplier;\n    }\n\n    beginListeningForBatchedUpdates() {\n        this.listenToBatchedUpdates = (this.listenToBatchedUpdates || 0) + 1;\n    }\n\n    endListeningForBatchedUpdates() {\n        if (this.listenToBatchedUpdates) {\n            this.listenToBatchedUpdates -= 1;\n        }\n    }\n\n    onConnectedCallback(connected, initialConnect) {\n        if (connected && !initialConnect) {\n            this.timeAxisSubGrid.scrollable.x += 0.5;\n        }\n    }\n\n    updateRtl(rtl) {\n        const\n            me                = this,\n            { isConfiguring } = me;\n\n        let visibleDateRange;\n\n        if (!isConfiguring) {\n            visibleDateRange = me.visibleDateRange;\n        }\n\n        super.updateRtl(rtl);\n\n        if (!isConfiguring) {\n            me.currentOrientation.clearAll();\n            if (me.infiniteScroll) {\n                me.shiftToDate(visibleDateRange.startDate);\n                me.scrollToDate(visibleDateRange.startDate, { block : 'start' });\n            }\n            else {\n                me.timelineScroller.position += 0.5;\n            }\n        }\n    }\n\n    /**\n     * Applies the start and end date to each event store request (formatted in the same way as the start date field,\n     * defined in the EventStore Model class).\n     * @category Data\n     * @private\n     */\n    applyStartEndParameters(params) {\n        const\n            me    = this,\n            field = me.eventStore.modelClass.fieldMap.startDate;\n\n        if (me.passStartEndParameters) {\n            params[me.startParamName] = field.print(me.startDate);\n            params[me.endParamName] = field.print(me.endDate);\n        }\n    }\n}\n\n// Register this widget type with its Factory\nTimelineBase.initClass();\n\n// Has to be here because Gantt extends TimelineBase\nVersionHelper.setVersion('scheduler', '5.3.7');\n"],"names":["Base","initialize","props","Object","assign","new","instance","CalendarCacheIntervalMultiple","constructor","config","intervalGroups","combineWith","interval","copy","slice","push","calendar","getIsWorkingForEvery","isWorkingForEvery","_calendar","intervals","getGroups","isWorking","getIsWorkingForSome","isWorkingForSome","getCalendars","calendars","isCalendarWorking","getCalendarsWorkStatus","get","calendarsWorkStatus","res","Map","set","getCalendarsWorking","calendarsWorking","getCalendarsNonWorking","calendarsNonWorking","intervalsByCalendar","forEach","data","apply","unique","stripDuplicates","sort","interval1","interval2","getPriorityField","CalendarCacheMultiple","CalendarCache","calendarCaches","intervalCache","IntervalCache","emptyInterval","combineIntervalsFn","fillCache","startDate","endDate","calendarCache","includeWrappingRangeFrom","COMBINED_CALENDARS_CACHE","combineCalendars","uniqueOnly","length","Error","calendar1","calendar2","internalId","hash","map","join","versionsHash","version","cached","cache","DurationColumn","NumberColumn","compositeField","$name","type","isGanttColumn","fields","name","defaultValue","defaults","min","max","step","largeStep","field","text","instantUpdate","filterType","sortable","durationEntity1","durationEntity2","ms1","ms2","construct","arguments","sortFn","args","call","defaultEditor","ObjectHelper","cleanupProperties","durationUnitField","roundValue","duration","nbrDecimals","grid","durationDisplayPrecision","decimalPrecision","multiplier","Math","pow","rounded","round","formatValue","durationUnit","Duration","unit","magnitude","DateHelper","getLocalizedNameOfUnit","defaultRenderer","record","isExport","value","durationValue","toClipboardString","toString","fromClipboardString","string","parseDuration","fullDuration","calculateFillValue","ColumnStore","registerColumnType","_$name","isLastLevel","level","levels","isLastCell","cell","cells","TimeAxisBase","Widget","configurable","compactCellWidthThreshold","model","cls","sizeProperty","positionProperty","size","range","me","refresh","buildCells","start","end","_me$client","stickyHeaders","isVertical","client","featureHeaderConfigs","cellConfigs","i","_level$cells","stickyHeader","className","position","viewPreset","mainHeaderLevel","syncOptions","releaseThreshold","syncIdField","dataset","headerFeature","headerPosition","children","filter","j","role","headerCellCls","align","tickIndex","index","globalThis","DEBUG","date","getTime","style","coord","width","tag","html","getHeaderDomConfigs","widgetClassList","render","targetElement","rebuild","columnConfig","oldLevelsCount","reduce","sum","parentElement","element","classList","remove","add","DomSync","sync","domConfig","trigger","widgetClass","HorizontalTimeAxis","_this$owner","owner","rtl","onModelUpdate","availableSpace","updateModel","timeAxisViewModel","detachListeners","ion","update","thisObj","ResourceHeader","resourceStore","headerRenderer","showAvatars","$config","fillWidth","fitWidth","columnWidth","imagePath","imageExtension","defaultImageName","availableWidth","firstResource","lastResource","scheduler","_resourceColumns","EventHelper","on","delegate","capture","click","dblclick","contextmenu","changeShowAvatars","show","_this$avatarRendering","avatarRendering","destroy","AvatarRendering","updateShowAvatars","isConfiguring","updateResourceStore","store","changePreCommit","count","onResourceStoreDataChange","action","getConfig","updateWidthCache","totalWidth","variableColumnWidths","_fillWidth","_fitWidth","configuredFillWidth","configuredFitWidth","DomHelper","setLength","column","innerHTML","refreshWidths","toggleEmptyText","result","resource","instanceMeta","insetStart","insetEnd","resourceColumnWidth","changeColumnWidth","refreshingWidths","configuredColumnWidth","updateColumnWidth","oldWidth","isGrouped","changeFillWidth","updateFillWidth","changeFitWidth","updateFitWidth","getImageURL","imageName","StringHelper","joinPaths","updateImagePath","updateAvailableWidth","_me$resourceStore","fit","useWidth","floor","shouldAnimate","enableEventAnimations","abs","_columnWidth","addTemporaryClass","visibleResources","groupField","groupers","configs","toggle","Boolean","currentGroup","_currentGroup","resourceRecord","allResourceRecords","groupRecord","groupParent","groupChildren","id","resourceId","groupLeft","groupWidth","left","encodeHtml","elementConfig","DomClassList","imageUrl","image","_resourceRecord$name","toLowerCase","getResourceAvatar","initials","color","eventColor","iconCls","defaultImageUrl","onlyChildren","onResourceMouseEvent","event","resourceCell","target","closest","getById","capitalize","getCurrentConfig","options","TimeAxisColumn","Events","WidgetColumn","persist","draggable","groupable","hideable","showColumnPicker","filterable","resizable","searchable","editor","enableCellContextMenu","tooltipRenderer","needWidth","mode","region","exportable","htmlEncode","paint","once","autoExposeFields","doDestroy","_this$resourceColumns","_this$timeAxisView","resourceColumns","timeAxisView","resourceImagePath","resourceImageExtension","defaultResourceImageName","relayEvents","onViewModelUpdate","source","viewModel","timeAxisSubGrid","collapsed","refreshHeader","totalSize","subGrid","refreshFakeScroll","refreshRows","onTimelinePaint","firstPaint","insertRowsBefore","subGridElement","_me$grid","onHeightChange","internal","undefined","rendered","currentElement","internalRenderer","renderData","project","isInitialCommitPerformed","isDelayingCalculation","currentOrientation","renderer","_timeAxisViewModel","prio","getState","state","flex","ViewPreset","Model","normalizeUnits","generateId","headers","parts","getPrototypeOf","increment","multiple","includes","tickWidth","tickHeight","bottomHeader","IdHelper","timeResolution","shiftUnit","header","DH","normalizeUnit","splitUnit","normalizeHeaderConfig","headerConfig","columnLinesFor","top","middle","bottom","inSet","tickSize","_tickSize","mainHeader","topHeader","topUnit","topIncrement","leafUnit","leafIncrement","mainUnit","msPerPixel","asMilliseconds","isValid","valid","PresetStore","Localizable","Store","defaultConfig","useRawData","modelClass","zoomOrder","storage","addSorter","lhs","rhs","leftBottomHeader","rightBottomHeader","order","unitMagnitudes","isPresetManager","PresetManager","createRecord","isViewPreset","getAt","base","copyBaseValues","updateLocalization","presets","allRecords","Set","concat","values","basePresets","preset","localePreset","optionalL","baseId","originalDisplayDateFormat","displayDateFormat","topDateFormat","middleDateFormat","setData","levelConfig","localeLevelDateFormat","originalDateFormat","dateFormat","unlocalizedName","presetData","clone","merge","Array","isArray","originalData","preventSubClassingModel","secondAndMinute","shiftIncrement","defaultSpan","minuteAndHour","hourAndDay","day","format","week","dayAndWeek","getShortNameOfUnit","dayAndMonth","weekAndDay","weekAndMonth","weekAndDayLetter","verticalColumnWidth","weekDateAndMonth","monthAndYear","year","cfg","toUpperCase","getMonth","manyYears","getFullYear","defaultPresets","resolution","resolutionUnit","internalListeners","locale","presetCache","_basePresets","presetAdjustment","isBase","baseType","setPrototypeOf","height","getUnitByName","registerPreset","existingDuplicate","find","p","equals","getPreset","normalizePreset","deletePreset","presetOrId","pm","Tick","TimeSpan","TimeAxis","continuous","originalContinuous","include","autoAdjust","adjustedStart","adjustedEnd","visibleTickStart","visibleTickEnd","tickCache","maxTraverseTries","disableDuplicateIdCheck","disableDefaultValue","disableTypeConversion","generateTicks","resolutionIncrement","weekStartDay","forceFullTicks","change","supressRefresh","endreconfigure","internalOnReconfigure","getAdjustedDates","Date","isTimeAxis","reconfigure","suppressRefresh","preventThrow","normalized","oldConfig","_configuredStartDate","_configuredEndDate","propName","viewPresetChanged","isFiltered","filters","f","disabled","isConfigured","adjusted","ticks","suspendEvents","maintainFilter","disableFilters","resumeEvents","first","last","isContinuous","getNext","updateVisibleTickBoundaries","updateTickCache","startDenominator","getNormalizedUnitDuration","endDenominator","fullTicks","_viewPreset","presetName","_weekStartDay","_resolutionUnit","_resolutionIncrement","setTimeSpan","newStartDate","newEndDate","shift","amount","allCount","tries","shiftNext","shiftPrevious","filterBy","fn","clear","tick","retVal","triggerFilterEvent","forceAdjust","floorDate","ceilDate","_start","parse","_end","startMS","_startMS","endMS","_endMS","relativeToStart","incr","relativeTo","snap","snappedDuration","diff","dt","getDay","startDay","startOf","getHours","modifier","useUnit","snappedValue","roundDate","distanceToWeekStartDay","toAdd","nbrMonths","as","daysInMonth","snappedMonths","offset","getTimezoneOffset","doCall","isStartOf","isEqual","getDate","_include","processExclusion","entries","some","includeUnit","rule","from","to","compareUnits","getLargerUnit","stepUnit","datePart","initExclusion","lengthFactor","getUnitToBaseUnitRatio","lengthFactorExcl","center","updateGenerateTicks","_generateTicks","axisStartDate","axisEndDate","usesExclusion","intervalEnd","tickEnd","isExcluded","dstDiff","prev","visibleTickTimeSpan","getTickFromDate","_date$getTime","records","dateMS","begin","tickStart","startDateMS","endDateMS","getDateFromTick","roundingMethod","wholeTick","fraction","t","onlyStartEnd","_startMs","dateInAxis","inclusiveEnd","axisStart","axisEnd","betweenLesserEqual","betweenLesser","getCount","timeSpanInAxis","intersectSpans","isTimeSpanInAxis","timeSpan","meta","endDateCached","startTick","endTick","forEachAuxInterval","iteratorFn","DragBase","InstancePlugin","tooltipTemplate","startClockHtml","endClockHtml","message","showTooltip","showExactDropPosition","dragHelperConfig","tooltipCls","constrainDragToTimeline","constrainDragToResource","constrainDragToTimeSlot","tip","allowTargetOut","autoShow","updateContentOnMouseMove","throttleDragEvent","pluginConfig","chain","internalSnapToPosition","snapTo","_this$snapToPosition","dragData","snapToPosition","assignmentRecord","eventRecord","newResource","buildDragHelperConfig","isHorizontal","lockY","lockX","externalDropTargetSelector","dropTargetSelector","Objects","positioning","minX","maxX","constrain","cloneTarget","removeProxyAfterDrop","dragWithin","document","body","hideOriginalElement","dropTargetCls","outerElement","timeAxisSubGridElement","targetSelector","eventSelector","scrollManager","createProxy","el","snapCoordinates","newX","newY","draggedEventRecord","draggedEntities","coordinate","getCoordinate","snappedDate","getDateFromPosition","isWorkingTime","snappedPosition","getPositionFromDate","x","y","beforedragstart","dragstart","afterdragstart","drag","drop","abort","abortFinalized","reset","isElementDraggable","onPaint","_me$drag","DragHelper","rowManager","changeTotalHeight","_me$dragData","updateYConstraint","scheduledEventName","clockTemplate","ClockTemplate","_this$drag","_this$clockTemplate","_this$tip","tipId","changeTip","oldTip","Tooltip","mergeConfigs","forElement","getHtml","getTipHtml","bind","innerHtmlUpdate","proxy","cloneNode","onBeforeDragStart","context","getMinimalDragData","readOnly","isDraggable","pointerStartDate","getDateFromXY","startClientX","startPageY","triggerBeforeEventDrag","capitalizedEventName","_client","onAfterDragStart","isDragging","_this$drag2","isActivelyDragging","finalizing","onDragStart","_client2","_menuFeature$hideCont","findClientFromTarget","currentOverClient","unifiedProxy","unifiedDrag","onMouseOverNewTimeline","getDragData","suspendElementRedrawing","tipTarget","dragProxy","firstChild","showBy","triggerDragStart","eventMenu","taskMenu","features","menuFeature","hideContextMenu","updateDateIndicator","endDateElement","querySelector","test","Rectangle","elementFromPoint","fromElement","isResourceHistogram","onDrag","dd","updateDragContext","dirty","triggerEventDrag","externalDragValidity","lastAlignSpec","realign","newTimeline","initial","scrollables","stopMonitoring","scrollable","direction","startMonitoring","callback","onScrollManagerScrollCallback","triggerBeforeEventDropFinalize","eventType","eventData","onDrop","_me$tip","modified","hide","isValidDrop","externalDropTarget","beforeDropTriggered","finalize","async","domEvent","origStart","onDragAbort","_me$tip2","resetDraggedElements","triggerDragAbort","onDragAbortFinalized","_me$client2","triggerDragAbortFinalized","onDragReset","dragHelper","_dragHelper$context","currentTimeline","started","eventBarEls","resumeRecordElementRedrawing","draggingCls","retainElement","onInternalInvalidDrop","_me$tip3","triggerAfterDrop","updateRecords","isPromise","info","isAssignment","lastDragStartDate","constrainToTimeSlot","browserEvent","getProductDragContext","timeDiff","timeAxis","timeAxisPosition","pageX","startPageX","pageY","pointerDate","getDateFromCoordinate","resolveStartEndDates","adjustStartDate","positionDirty","L","checkDragValidity","_dd$externalDragValid","suspendRecordElementRedrawing","suspend","getRecordElement","resumeElementRedrawing","productDragData","setupProductDragData","startEvent","timespan","origEnd","startsOutsideView","endsOutsideView","multiSelect","isSchedulerBase","multiEventSelect","selectionMode","elementStartX","elementStartY","clientCoordinate","startClientY","selectAssignment","ctrlKey","selectEvent","sourceDate","screenSourceDate","relatedElements","setupConstraints","constrainRegion","elRegion","constrained","xTickSize","yTickSize","setXConstraint","right","setYConstraint","snapPixelAmount","getScheduleRegion","offsetHeight","iLeft","iRight","iTickSize","iUp","iDown","minY","maxY","snapRelativeToEventStartDate","constrainStartDate","draggedElement","timeline","proxyRect","eventInnerSelector","fillSnap","fillTicks","getStartEndDatesFromRectangle","offsetMS","proxyMS","offsetPx","deflate","proxyStart","getStart","startText","getFormattedDate","endText","getFormattedEndDate","dragged","timeSpanRecord","isTask","template","isMilestone","updateConstrainDragToTimeSlot","axis","updateConstrainDragToResource","updateConstrainDragToTimeline","dateConstraints","scheduleableRecord","taskRecord","durationMS","getElementFromContext","grabbed","getRelatedRecords","tipAlign","EventResize","mixin","Draggable","Droppable","draggingItemCls","resizingItemInnerCls","leftHandle","rightHandle","topHandle","bottomHandle","handleSize","dynamicHandleSize","allowResizeToZero","reservedSpace","touchHandleSize","dragThreshold","dragTouchStartDelay","draggingClsSelector","showExactResizePosition","validatorFn","validatorFnThisObj","axisLock","trackMouse","hideDelay","ignoreSelector","dragActiveCls","_this$dragging","dragging","dragSelector","dragItemSelector","dragRootElement","dropRootElement","dragLock","isEventElementDraggable","eventElement","eventResizable","isOverStartHandle","isOverEndHandle","onEventDataGenerated","wrapperCls","_this$dragging2","_this$dragging2$conte","onDragPointerMove","_dragging$context","visibleDateRange","dimension","pageScroll","clientRect","startCoord","endCoord","getEnd","getDateFromCoord","local","clientStartCoord","clientEndCoord","isResizing","beforeDrag","resolveTimeSpanRecord","itemElement","isGanttBase","resolveResourceRecord","isOccurrence","mousedownDate","triggerBeforeResize","dragStart","_client$features$even","_client$resolveAssign","resolveEventRecord","isBatchUpdating","wrapStartDate","wrapEndDate","useEventBuffer","eventBuffer","enabled","eventStartDate","eventEndDate","horizontal","draggingEnd","toSet","wrapToSet","otherEnd","setMethod","setOtherMethod","elRect","clientX","clientY","timespanRecord","oldValue","edge","originalStartDate","originalEndDate","split","listenToBatchedUpdates","beginListeningForBatchedUpdates","beginEventRecordBatch","setupProductResizeContext","triggerEventResizeStart","getResizeStartParams","resizedRecord","resolveAssignmentRecord","getTooltipTarget","getBeforeResizeParams","_this$client","_this$client2","triggerEventResizeEnd","triggerEventPartialResize","triggerBeforeEventResizeFinalize","dragEnter","_drag$context","resizeEventPartiallyInternal","_client$features$even2","applyDateConstraints","_context$dateConstrai","_context$dateConstrai2","minDate","maxDate","moveDrag","eventStart","eventEnd","isScroll","crossedOver","avoidedZeroSize","onDragEndSwitch","isEventDragCreate","tooNarrow","sign","checkValidity","partialResizeEvent","stores","eventStore","alignTo","dragEnd","aborted","getPagePoint","cleanup","dragDrop","updateRecord","wasChanged","internalUpdateRecord","cancelEventRecordBatch","resources","repaintEventsForResource","changed","endListeningForBatchedUpdates","unHighlightHandle","getResizeEndParams","generation","batching","prototype","inSetNormalize","isEntity","_client$features$even3","run","setOtherEnd","promisesToWait","Promise","all","endBatch","batchChanges","commitAsync","onDragItemMouseMove","pointerType","handleSelector","checkResizeHandles","overItem","allowResize","isOverAnyHandle","highlightHandle","onDragItemMouseLeave","oldOverItem","_item$syncIdMap","item","handleTargetElement","syncIdMap","_item$syncIdMap2","inner","_this$getHandleRect","getHandleRect","contains","_this$getHandleRect2","side","eventEl","eventCls","dim","handleSpec","offsetWidth","isResizable","eventRect","handleStyle","getComputedStyle","BrowserHelper","isHoverableDevice","parseFloat","handleVisThresh","handleVisibilityThreshold","centerGap","deflateArgs","oppositeEnd","constrainTo","setupDragContext","isElementResizable","changeHandleSize","VersionHelper","deprecate","changeTouchHandleSize","isTooltip","innerhtmlupdate","_me$clockTemplate","_element","handleHoldingElement","handleEl","startsOutside","endsOutside","anchorSize","basicValidityCheck","tipData","beginBatch","cancelBatch","_client$resolveResour","_client$resolveAssign2","_client$getDateConstr","getDateConstraints","allowOverlap","isDateRangeAvailable","GridFeatureManager","registerFeature","getDragCreateDragDistance","_this$source","_this$source$client$f","taskEdit","_canceling","getDistanceBetween","DragCreateBase","TaskEditStm","dragTolerance","preventMultiple","tipTemplate","before","changeValidatorFn","createValidatorFn","initialDate","pan","eventDragSelect","isRowEmpty","rowRecord","preventDragSelect","startDrag","proxyElement","matchScheduleCell","$original","isSpecialRow","monitoringConfig","getDistance","updateDragTolerance","doCreate","finalized","completeFinalization","isDestroyed","finalizeDragCreate","_me$onAborted","cancelDragCreate","onAborted","stmCapture","stmInitiallyAutoRecord","stmInitiallyDisabled","transferred","_this$tip2","onElementContextMenu","prepareCreateContextForFinalization","createContext","_this$dragging$contex","handleBeforeDragCreate","dateTime","TooltipBase","autoUpdate","hoverDelay","monitorRecordUpdate","testConfig","processConfig","forSelector","_me$tooltip","tooltip","setConfig","destroyProperties","doDisable","disable","_me$tooltip2","tipCls","scrollAction","showOnHover","anchorToTarget","configuredListeners","overtarget","keys","$meta","defineProperty","v","processConfiguredListeners","addListener","_this$tooltip","defaultDetacher","tooltipDetacher","removeListener","_this$tooltip2","activeTarget","recordProp","recordType","endDateValue","getDisplayEndDate","onTipShow","updateListener","onRecordUpdate","buffer","onTipHide","_this$updateListener","onOverNewTarget","newTarget","isVisible","updateContent","aligningToElement","internalOnPointerOver","lastPointerEvent","AbstractTimeRanges","Delayable","rangeCls","lineCls","enableResizing","dragTipTemplate","baseCls","bodyRenderer","narrowThreshold","showHeaderElements","renderRows","onUIReady","$$name","baseSelector","_me$resize","resize","renderRanges","setupTimeAxisViewModelListeners","includeChange","updateLineBuffer","timeAxisViewModelChange","hideHeaders","headerContainerElement","onTimeRangeClick","rtlSource","ResizeHelper","matches","resizestart","resizing","cancel","resizeHelperConfig","hoverTooltip","timeRange","resolveTimeRangeRecord","_timeRanges","getDOMConfig","bodyConfigs","headerConfigs","_labelRotationMap","timeRanges","renderRange","bodyConfig","foregroundCanvas","isPainted","updatedBodyElements","bodyCanvas","createElement","parent","childrenOnly","headerCanvas","bodyElement","cacheRotation","elementData","applyRotation","shouldRenderRange","rangeStart","rangeEnd","_lineBufferDurationMS","getRangeDomConfig","startPos","getCoordinateFromDate","respectExclusion","endPos","isEnd","isRange","translateX","icon","xss","labelTpl","showLabelInBody","label","firstElementChild","recurringTimeSpan","_range$recurringTimeS","_bodyElement$firstEle","rotate","getBodyElementByRecord","idOrRecord","getChild","timeView","timeAxisColumn","_headerContainerElement","_showHeaderElements","updateShowHeaderElements","populateTimeAxisHeaderMenu","items","onSchedulerHorizontalScroll","afterScroll","onInternalResize","newWidth","newHeight","oldHeight","onTimeAxisViewModelUpdate","timeRangeRecord","showTip","destroyTip","Number","MAX_SAFE_INTEGER","onInvalidDrop","onResizeStart","onResizeDrag","onResize","onInvalidResize","onResizeReset","box","emptyObject","freeze","ColumnLines","AttachToProjectMixin","delayable","cancelOutstanding","after","useBackgroundCanvas","attachToResourceStore","group","getColumnLinesDOMConfig","m","linesForLevel","majorLinesForLevel","domConfigs","dates","addLineConfig","isMajor","has","transform","line","columnLines","getResourceRange","nbrGroupHeaders","_instanceMeta$groupPa","_instanceMeta$groupPa2","isGroupHeader","backgroundCanvas","onVisibleDateRangeChange","onVisibleResourceRangeChange","updateCanvasSize","Target","DependencyCreation","allowDropOnEventBar","showCreationTooltip","creationTooltip","terminalCls","terminalSides","allowCreate","view","eventName","updateCreateListeners","_me$pointerUpMoveDeta","_me$creationTooltip","creationData","pointerUpMoveDetacher","isCreateAllowed","_allowCreate","onTimeSpanMouseEnter","isCreating","nestedEvents","isRoot","eventBarElement","down","showTerminals","timeSpanElement","onOverTargetEventBar","onTimeSpanMouseLeave","_event$event","timeSpanLeft","relatedTarget","isDescendant","isTrusted","sourceElement","hideTerminals","onOverNewTargetWhileCreating","onTerminalMouseOver","onTerminalMouseOut","showingTerminalsFor","unhover","onTerminalPointerDown","button","_scheduler$resolveRes","terminalNode","viewBounds","stopPropagation","fromSide","startPoint","startX","scrollLeft","startY","scrollTop","sourceResource","pointerup","getRootNode","handler","passive","pointermove","documentPointerUpDetacher","keydown","key","onElementTouchMove","_super$onElementTouch","connector","preventDefault","onMouseMove","deltaX","deltaY","sqrt","angle","atan2","onRequestDragCreate","lastMouseMoveEvent","createConnector","createDragTooltip","_overEventRecord","overEventRecord","isEventSegment","removeClsGlobally","toSide","_data$timeSpanElement","_data$timeSpanElement2","getTargetSideFromType","dependencyStore","fieldMap","DependencyBaseModel","Type","EndToStart","targetResource","dependencyType","updateValidity","StartToStart","StartToEnd","EndToEnd","isValidDependency","validityCls","updateCreationTooltip","onMouseUp","_me$pointerUpMoveDeta2","dependency","createDependency","doAfterDependencyDrop","onDocumentMouseUp","_me$pointerUpMoveDeta3","_me$documentPointerUp","getElementFromEventRecord","removeConnector","clearTimeout","removeConnectorTimeout","loadingMsg","dock","beforeShow","setTimeout","terminalsVisibleCls","fixSide","terminal","feature","detacher","mouseover","mouseout","pointerdown","internalCls","eventParams","getTimeSpanMouseEventParams","forEachSelector","newDependency","resolve","then","creationTooltipTemplate","_data$target","fromText","toText","tipTitleIconClsSuffix","tipTitleText","title","ref","ROWS_PER_CELL","DependencyGridCache","gridCache","getDependenciesToConsider","startIndex","endIndex","dependencies","fromMSCell","MS_PER_CELL","toMSCell","fromRowCell","toRowCell","msCell","intersectingDependencies","afterDrawDependency","fromIndex","toIndex","fromDateMS","toDateMS","constructGridCache","timeAxisStartMS","timeAxisEndMS","timeAxisCells","ceil","firstMSCell","lastMSCell","firstRowCell","lastRowCell","startMSCell","endMSCell","rowCell","beforeDraw","afterDraw","THRESHOLD","devicePixelRatio","BOX_PROPERTIES","equalEnough","a","b","RectangularPathFinder","startSide","startArrowMargin","startShift","endSide","endArrowMargin","endShift","verticalMargin","horizontalMargin","otherBoxes","findPath","lineDef","noPathFallbackFn","originalLineDef","lineDefFull","startBox","endBox","startHorizontalMargin","startVerticalMargin","endHorizontalMargin","endVerticalMargin","otherHorizontalMargin","otherVerticalMargin","connStartPoint","connEndPoint","pathStartPoint","pathEndPoint","gridStartPoint","gridEndPoint","startGridBox","endGridBox","path","tryNum","ArrayHelper","asArray","hasOwnProperty","normalizeSide","getConnectionCoordinatesFromBoxSideShift","calcGridBaseBoxFromBoxAndDrawParams","property","shouldLookForPath","_otherBoxes","buildPathGrid","convertDecartPointToGridPoint","findPathOnGrid","prependPathWithArrowStaffSegment","appendPathWithArrowStaffSegment","optimizePath","calculateRelativePosition","box1","box2","vertical","startProp","endProp","boxOverlapChanged","gridStartBox","gridEndBox","calculateOverlap","originalOverlap","finalOverlap","coords","arrowMargin","gridBox","otherGridBoxes","xs","ys","ix","iy","xslen","yslen","ib","blen","permitted","point","points","linearPoints","distance","indexOf","waveForward","collectPath","getGridPointNeighbors","gridPoint","predicateFn","neighbor","WalkHelper","preWalkUnordered","neighborPoint","pathFound","neighbors","lowestDistanceNeighbor","xDiff","yDiff","resultA","resultB","x1","y1","x2","y2","reverse","firstSegment","prependSegment","unshift","lastSegment","appendSegment","optPath","prevSegment","curSegment","drawingDirection","pointSet","segmentLength","arc","nextPointSet","radius","corner","rx","ry","sweep","location","prevRadius","useRadius","nextLength","subtract","useLength","currentRadius","pathMapper","lineSpec","DependencyLineGenerator","lineCache","onSVGReady","pathFinder","pathFinderConfig","lineDefAdjusters","createLineDefAdjusters","createMarker","changeRadius","assertNumber","updateRadius","updateRenderer","changeClickWidth","updateClickWidth","_me$marker","markerDef","svg","svgCanvas","markerId","marker","setProperty","ns","markerHeight","markerWidth","refX","refY","viewBox","orient","markerUnits","d","updateMarkerDef","getAssignmentElement","assignment","_this$client$features","_this$client$features2","eventDrag","getProxyElement","getElementFromAssignmentRecord","getDomConfigs","fromAssignment","toAssignment","forceBoxes","getDependencyKey","constructLineCache","drawingLive","prepareLineDef","clickWidth","toEvent","_me$renderer","highlighted","syncId","depId","fromId","toId","class","noMarkerCls","hideMarker","active","bidirectional","milestone","dependencyRecord","fromAssignmentRecord","toAssignmentRecord","fromBox","toBox","strokeWidth","generateBoundaryBoxes","rowTop","rowBottom","getAssignmentBounds","isExporting","rectangle","row","getRowById","overRow","getRowAt","isEngineReady","getAssignmentEventBox","getConnectorStartSide","getConnectorEndSide","getDependencyStartSide","fromEvent","DependencyModel","getDependencyEndSide","shrinkArrowMargins","barMargin","resetArrowMargins","shrinkHorizontalMargin","adjustLineDef","startRectangle","endRectangle","fromBoxSide","toBoxSide","DependencyTooltip","changeTooltip","old","textContent","getHoverTipHtml","resolveDependencyRecord","eventNameMap","collectLinkedAssignments","_assignment$resource","hasLinks","$links","l","drawDependencies","Dependencies","overCls","highlightDependenciesOnEventHover","drawOnScroll","doRefresh","lastScrollX","usingLinks","svgCanvasCreated","animationStart","timelineViewportResize","timeAxisViewModelUpdate","toggleNode","bindStore","_isDisabling","draw","rowStore","usesDisplayStore","onStoreRefresh","attachToProject","commitFinalized","onResourceStoreChange","attachToEventStore","attachToAssignmentStore","assignmentStore","attachToDependencyStore","updateDrawOnScroll","scroll","horizontalScroll","scrollEnd","onHorizontalScroll","scrollX","getLocalizedDependencyType","getElementForDependency","getElementsForDependency","selector","querySelectorAll","_element$elementData","isDependencyElement","onElementClick","onElementDblClick","onElementMouseOver","highlight","onElementMouseOut","unhighlight","isDependencyVisible","fromResource","toResource","isAvailable","isModel","hidden","updateHighlightDependenciesOnEventHover","enable","params","highlightEventDependencies","unhighlightEventDependencies","classes","delete","dep","_super$getDependencie","drawDependency","batch","_fromAssigned","_toAssigned","topIndex","bottomIndex","useInitialAnimation","idMap","fromAssigned","assigned","toAssigned","isScheduled","flatMap","_idMap$from$resource$","_from$resource","_idMap$to$resource$id","_to$resource","lineDomConfigs","animationDelay","domSync","_super$afterDrawDepen","_super$beforeDraw","_super$afterDraw","flat","strict","fillDrawingCache","r","refreshSuspended","firstVisibleRow","lastVisibleRow","_client$features","_client$features2","_client$features3","_client$features4","isAnimating","_super$reset","drawForEvent","EventFilter","eventsFilter","localeClass","weight","menu","nameFilter","clearable","keyStrokeChangeDelay","onEventFilterChange","onBeforeShow","filterByName","getBy","removeFilter","featureClass","NonWorkingTimeMixin","maxTimeAxisUnit","getNonWorkingTimeRanges","forEachAvailabilityInterval","isForward","intervalStartDate","intervalEndDate","calendarCacheInterval","entry","getIsWorking","getCalendarTimeRanges","ignoreName","shouldPaint","allRanges","timeSpans","mergedSpans","prevRange","span","setStartEndDate","setupDefaultCalendar","autoGeneratedWeekends","isSchedulerPro","isGantt","effectiveCalendar","defaultCalendar","intervalStore","updateDefaultCalendar","defaultNonWorkingIntervals","hasIntervals","clearIntervals","addIntervals","_super$updateLocaliza","dayNames","nonWorkingDaysAsArray","dayIndex","recurrentStartDate","recurrentEndDate","NonWorkingTime","highlightWeekends","hideRangesOnZooming","attachToCalendar","onConfigChange","graph","isScheduler","dataReady","calendarChange","_timeAxisUnitDurationMs","isDestroying","isCalculated","_this$project","timeAxisUnitDurationMs","ScheduleTooltip","messageTemplate","hideForNonWorkingTime","reshowListener","hoverTip","allowOver","monitorResize","onDocumentMouseDown","mousemove","e","hideAnimation","pointerover","buttonsPressed","buttons","which","lastTime","updateTip","getDateFromDomEvent","lastHtml","lastResourceId","generateTipContent","clockHtml","generateContent","messageHtml","getText","setTimeSpanOptions","maintainVisibleStart","TimeAxisHeaderMenu","HeaderMenu","processItems","triggerEvent","zoomOnTimeAxisDoubleClick","shouldShowMenu","enableHeaderContextMenu","isTimeAxisColumn","showContextMenu","dateStep","zoomLevel","zoomSlider","minWidth","showValue","triggerChangeOnInput","zoom","minZoomLevel","maxZoomLevel","zoomDetatcher","onHide","dateRange","startDateField","labelWidth","required","onRangeDateFieldChange","endDateField","leftShiftBtn","margin","onLeftShiftBtnClick","todayBtn","onTodayBtnClick","rightShiftBtn","onRightShiftBtnClick","initDateRangeFields","onZoomSliderChange","delay","widgetMap","initDates","startDateFieldInitialValue","endDateFieldInitialValue","startDateChanged","today","clearTime","TimeAxisViewModel","forceFit","suppressFit","originalTickSize","headersDatesCache","unitToPixelsCache","consumeViewPreset","configured","un","onTimeAxisReconfigure","calculateInfiniteScrollingDateRange","centered","bufferCoef","useTop","snapSize","snapUnit","halfSpan","bufferedTicks","_columnConfig","_headers","cellGenerator","isTimeAxisViewModel","_forceFit","silent","forceUpdate","spaceAvailable","_availableSpace","calculateTickSize","_totalSize","pos","headerCells","createHeaderRow","getDistanceBetweenDates","getDistanceForDuration","durationMs","getSingleUnitInPixels","getScaledTick","snapToNextIncluded","tickChanged","hour","originalHours","croppedHours","fractionalHours","getMinutes","hoursFromCenter","newHours","checkDay","getSeconds","getMilliseconds","addDays","fixedCenter","fractionalDay","daysFromCenter","newDay","allowOutOfRange","getScaledPosition","dayWidth","positionInWeek","weekStartPosition","hourWidth","positionInDay","dayStartPosition","setTickSize","suppressEvent","proposedSize","timelineUnit","ratio","fittingSize","space","newTickSize","getDates","useLowestHeader","lowestHeader","majorLevel","majorHeaderLevel","levelUnit","majorUnit","validMajor","doesUnitsAlign","hasGenerator","forEachInterval","isMajorTick","fitToAvailableSpace","_snap","headerRowConfig","tickLevel","createCellContext","isLast","isInteriorTick","cellData","nextLevel","forEachMainInterval","tempDate","TimelineDateMapper","getRtlX","ignoreRTL","translateToScheduleCoordinate","xy","rect","getYear","formatContainsHourInfo","valueOf","setTime","translateToPageCoordinate","getTimeSpanDistance","viewportCenterDate","timelineScroller","timeAxisOffset","clientSize","scrollSize","viewportCenterDateCached","cachedCenterDate","_this$_timeAxisViewMo","updateSnap","scrollingToCenter","TimelineDomEvents","timelineContext","equal","c1","c2","tickParentIndex","tickStartDate","updateTimelineContextOnScroll","properties","schedulerEvents","mousedown","mouseup","schedulerEnterLeaveEvents","mouseenter","mouseleave","onScheduleScroll","hoveredEvents","initDomEvents","supportsPointerEventConstructor","getScheduleMouseEventParams","handleScheduleEvent","getTimelineEventContext","handleScheduleEnterLeaveEvent","_me$features$pan","isActive","partners","_p$features$pan","_GlobalEvents$current","_GlobalEvents$current2","pointerEvent","PointerEventConstructor","mouseEvent","MouseEvent","GlobalEvents","currentPointerDown","pointerId","currentTouch","identifier","scrollInitiated","dispatchEvent","updateTimelineContext","oldContext","cellElement","getCellElementFromDomEvent","clickedDate","DomDataStore","mouseParams","dataIndex","isTimelineContext","tickEndDate","parentIndex","getCell","resolveRowRecord","_me$rowManager$getRow","timeCellSelector","onElementMouseButtonEvent","targetCell","findIndex","cellConfig","contextMenu","onElementMouseDown","_me$features$eventDra","preventOverCls","overScheduledEventClass","unhoverAll","_me$features$eventDra2","eventInner","eventWrap","isReleased","datesDiffer","d1","d2","TimelineViewPresets","changePresets","presetRecord","presetStore","changeViewPreset","oldViewPreset","lastOpts","lastViewPresetOptions","presetChanged","optionsChanged","centerDate","_displayDateFormat","updateDisplayDateFormat","updateViewPreset","_timeAxis","zoomDate","zoomPosition","_viewPresetChanging","suspendRefresh","timeAxisCfg","copyProperties","infiniteScroll","resumeRefresh","notScroll","visibleDate","unitMagnitude","milliseconds","targetDate","scrollWidth","viewportSize","centerCoord","scrollHorizontallyTo","scrollVerticallyTo","scrollTo","presetId","updateFromHorizontalScroll","updateFromVerticalScroll","_presets","TimelineZoomable","zoomOnMouseWheel","visibleZoomFactor","zoomKeepsOriginalTimespan","lastWheelTime","lastZoomPosition","wheel","throttled","alt","timeaxisheaderdblclick","zoomToSpan","_maxZoomLevel","_minZoomLevel","zoomToLevel","getMilliSecondsPerPixelForZoomLevel","ignoreActualWidth","actualWidth","zoomTo","console","warn","tickSizeProp","newPreset","configuredTickSize","scrollableViewportSize","clientHeight","_beforeCollapseState","calculateOptimalDateRange","isZooming","zoomToFit","getTotalTimeSpan","leftMargin","rightMargin","scrollToDate","adjustStart","adjustEnd","needToAdjust","diffMS","currLevel","inc","candidateLevel","levelToZoom","spanWidth","unitToZoom","tickCount","getDurationInUnit","customWidth","block","zoomIn","currentZoomLevelIndex","zoomOut","zoomInFull","zoomOutFull","userProvidedSpan","difference","onElementMouseMove","zoomContext","onWheel","now","performance","viewport","TimelineEventRendering","resourceMargin","managedEventSizing","generatedIdCls","dirtyCls","committingCls","endsOutsideViewCls","startsOutsideViewCls","fixedEventCls","eventStyle","updateFillTicks","refreshWithTransition","changeBarMargin","rowHeight","updateBarMargin","onBeforeRowHeightChange","_resourceMargin","eventColors","eventStyles","defaultScrollOptions","TimelineScroll","bufferThreshold","initScroll","scrollInitialized","_timelineScroller","TimelineScroller","widget","_this$_timelineScroll","onTimelineScroll","checkTimeAxisScroll","scrollPos","requiredSize","limit","maxScroll","maxPosition","virtualScrollerElement","overflow","pointerEvents","paddingBottom","scrollBarWidth","shiftToDate","newRange","updateInfiniteScroll","edgeOffset","visibleWidth","extraScroll","shiftDirection","nextAnimationFrame","scrollerViewport","localCoordinate","scrollToCoordinate","scrollToNow","visibleSpan","scrollIntoView","Scroller","updateOverflowX","updateOverflowY","onScroll","_position","syncPartners","force","updatePosition","scrollBy","xDelta","yDelta","changeX","changeY","scroller","clientWidth","scrollHeight","TimelineState","zoomLevelOptions","applyState","_state$scroll","_zoomAfterPaint","Header","GridHeader","refreshContent","_this$headersElement","headersElement","TimeAxisSubGrid","SubGrid","sealedColumns","headerClass","startConfigure","changeScrollable","_this$element","syncScrollingPartners","addCls","bodyHeight","_bodyRectangle","onSchedulerViewportResize","requestAnimationFrame","clearWidthCache","updateViewModelAvailableSpace","expand","initClass","exitTransition","TimelineBase","GridBase","RecurringEvents","partnerSharedConfigs","timeZone","workingTime","autoAdjustTimeAxis","timeCellCls","disableGridRowModelWarning","animateRemovingRows","partner","schedulerRegion","transitionDuration","animationTimeout","defaultRegion","asyncEventSuffix","viewportResizeTimeout","updateTimeZone","_isConfiguringTimeZone","populateEventMenu","populateScheduleMenu","handlingVisibleDateRangeChange","_visibleDateRange","dateRangeChange","$firstVerticalOverflow","init","forceLayout","createSubGrid","overflowX","overflowY","bodyContainer","partneredWith","removePartner","ResizeMonitor","addResizeListener","onBodyResize","changeStartDate","getBoundingClientRect","_me$currentOrientatio","_me$currentOrientatio2","doUpdateTimeView","frameCount","testPerformance","scrollSpeed","scrollInterval","setInterval","done","elapsed","timePerFrame","fps","clearInterval","log","eventPositionMode","eventScrollMode","preserveViewCenter","scrollStart","startChanged","endChanged","oldTickSize","currentScroll","visibleStart","tickSizeChanged","returnValue","hasVisibleEvents","noFeatureElementsInAxis","_capitalizedEventName","_partner","addPartner","isPartneredWith","Collection","presetchange","overflowChange","partnerSharedConfig","configName","syncPartnerSubGrids","FunctionHelper","createSequence","_this$partneredWith","onPartnerOverflowChange","otherScrollable","ourY","hasOverflow","refreshVirtualScrollbars","onPartnerPresetChange","allValues","columns","_timeAxisColumn","changeColumns","currentStore","timeAxisColumnIndex","timeAxisColumnConfig","cols","col","verticalTimeAxisColumn","cellCls","isStore","updateColumns","was","c","isVerticalTimeAxisColumn","relayAll","onColumnsChanged","changes","_this$partneredWith2","partnerColumn","allIndex","shouldSync","partnerChanges","k","_me$verticalTimeAxisC","_me$timeAxisColumn","updateEventCls","unreleasedEventSelector","currentModel","tavmListeners","_mode","_suppressFit","currentTimeAxis","timeAxisListeners","applyWorkingTime","updateForceFit","_workingTime","fromHour","toHour","fromDay","toDay","_me$features$columnLi","updateStartDate","setStartDate","keepDuration","ta","calcEndDate","_tempStartDate","changeEndDate","setEndDate","calcStartDate","_tempEndDate","changeVisibleDate","updateVisibleDate","regionResize","_eventStyle","_eventColor","onLocaleChange","oldAutoAdjust","oldRect","_width","onViewportResize","isSyncingFromPartner","eachSubGrid","partnerSubGrid","subGrids","collapse","_backgroundCanvas","_foregroundCanvas","_svgCanvas","createElementNS","setAttribute","appendChild","_timeAxisSubGridElement","_this$timeAxisColumn","refreshTotalHeight","_rowBorderHeight","$canvasWidth","getForegroundDomConfigs","onStoreDataChange","isRepopulatingStores","await","whenVisible","refreshAfterProjectRefresh","refreshAllWhenReady","schedulerEl","nextSibling","fgCanvas","returnToTop","reLayoutEvents","getCellDataFromEvent","includeSingleAxisMatch","onCellNavigate","_to$cell","currentMouseDown","runWithTransition","hasTimeout","waitForAnimations","topRow","reinitialize","isRowNumberSelecting","selectors","cs","_cs$cell","formatDuration","onConnectedCallback","connected","initialConnect","updateRtl","clearAll","applyStartEndParameters","passStartEndParameters","startParamName","print","endParamName","setVersion"],"mappings":"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A;AAC5BD,IAAAA,iBAAiB,aAAjBA,iBAAiB,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAjBA,iBAAiB,CAAEE,GAAG,CAAC;AACnB/I,MAAAA,IAAI,EAAM,MAAM;AAChBgJ,MAAAA,MAAM,EAAI,eAAe;AACzBC,MAAAA,OAAO,EAAG,IAAA;AACd,KAAC,CAAC,CAAA;AACN,GAAA;AACJ,CAAA;AACAX,kBAAkB,CAAC7E,MAAM,GAAG,oBAAoB;;ACnChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMyF,cAAc,SAASjF,MAAM,CAAC;AAC/C;EACA,OAAOrE,KAAK,GAAG,gBAAgB,CAAA;EAC/B,OAAOC,IAAI,GAAG,gBAAgB,CAAA;AAC9B,EAAA,OAAOqE,YAAY,GAAG;AAClB;AACR;AACA;AACA;AACA;AACQiF,IAAAA,aAAa,EAAG,IAAI;AACpB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQC,IAAAA,cAAc,EAAG,IAAI;AACrB;AACR;AACA;AACA;AACA;AACQC,IAAAA,WAAW,EAAG;AACVvG,MAAAA,KAAK,EAAG,IAAI;AACZwG,MAAAA,OAAO,EAAG,SAAA;KACb;AACD;AACR;AACA;AACA;AACA;AACA;AACA;AACQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQC,IAAAA,SAAS,EAAG,IAAI;AAChB;AACR;AACA;AACA;AACA;AACA;AACA;AACQ;AACR;AACA;AACA;AACA;AACA;AACA;AACQC,IAAAA,QAAQ,EAAG,KAAK;AAChB;AACR;AACA;AACA;AACA;AACA;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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM2U,aAAa,SAAShB,WAAW,CAAC;EACpC,WAAWxX,KAAKA,GAAG;AACf,IAAA,OAAO,eAAe,CAAA;AAC1B,GAAA;EACA,WAAW2X,aAAaA,GAAG;IACvB,OAAO;AACH;AACA8C,MAAAA,uBAAuB,EAAG,IAAI;AAC9BrB,MAAAA,WAAW,EAAG;AACVsB,QAAAA,eAAe,EAAG;AACdta,UAAAA,IAAI,EAAgB,SAAS;AAC7BsV,UAAAA,SAAS,EAAW,EAAE;AAAI;AAC1BC,UAAAA,UAAU,EAAU,EAAE;AACtB+D,UAAAA,iBAAiB,EAAG,QAAQ;AAAE;AAC9BiB,UAAAA,cAAc,EAAM,EAAE;AAAM;AAC5B5E,UAAAA,SAAS,EAAW,QAAQ;AAAE;AAC9B6E,UAAAA,WAAW,EAAS,EAAE;AAAK;AAC3B9E,UAAAA,cAAc,EAAM;AAAO;AACvBnT,YAAAA,IAAI,EAAQ,QAAQ;AAAG;AACvB4S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;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;EACA,WAAWn7B,KAAKA,GAAG;AACf,IAAA,OAAO,aAAa,CAAA;AACxB,GAAA;EACA,WAAWsE,YAAYA,GAAG;IACtB,OAAO;AACH82B,MAAAA,eAAe,EAAG,2BAA2B;AAC7CC,MAAAA,oBAAoB,EAAG,sBAAsB;AAC7C;AACZ;AACA;AACA;AACA;AACYC,MAAAA,UAAU,EAAG,IAAI;AACjB;AACZ;AACA;AACA;AACA;AACYC,MAAAA,WAAW,EAAG,IAAI;AAClB;AACZ;AACA;AACA;AACA;AACYC,MAAAA,SAAS,EAAG,IAAI;AAChB;AACZ;AACA;AACA;AACA;AACYC,MAAAA,YAAY,EAAG,IAAI;AACnB;AACZ;AACA;AACA;AACA;AACYC,MAAAA,UAAU,EAAG,IAAI;AACjB;AACZ;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,iBAAiB,EAAG,IAAI;AACxB;AACZ;AACA;AACA;AACA;AACYC,MAAAA,iBAAiB,EAAG,IAAI;AACxB;AACZ;AACA;AACA;AACA;AACA;AACYC,MAAAA,aAAa,EAAG,CAAC;AACjB;AACZ;AACA;AACA;AACA;AACYC,MAAAA,eAAe,EAAG,IAAI;AACtB;AACZ;AACA;AACA;AACA;AACYC,MAAAA,aAAa,EAAG,CAAC;AACjBC,MAAAA,mBAAmB,EAAG,CAAC;AACvBC,MAAAA,mBAAmB,EAAG,kBAAkB;AACxC;AACZ;AACA;AACA;AACA;AACYrT,MAAAA,WAAW,EAAG,IAAI;AAClB;AACZ;AACA;AACA;AACA;AACYsT,MAAAA,uBAAuB,EAAG,KAAK;AAC/B;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACYC,WAAW,EAAG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CA;AACe,MAAMC,qBAAqB,SAAStnD,MAAI,CAAC;EACpD,WAAWoJ,YAAYA,GAAG;IACtB,OAAO;AACH;AACZ;AACA;AACA;AACA;AACYm+C,MAAAA,SAAS,EAAG,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACZ;AACA;AACA;AACA;AACYC,MAAAA,gBAAgB,EAAG,EAAE;AACrB;AACZ;AACA;AACA;AACA;AACYC,MAAAA,UAAU,EAAG,CAAC;AACd;AACZ;AACA;AACA;AACA;AACYC,MAAAA,OAAO,EAAG,MAAM;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACZ;AACA;AACA;AACA;AACYC,MAAAA,cAAc,EAAG,EAAE;AACnB;AACZ;AACA;AACA;AACA;AACYC,MAAAA,QAAQ,EAAG,CAAC;AACZ;AACZ;AACA;AACA;AACA;AACA;AACYC,MAAAA,cAAc,EAAG,CAAC;AAClB;AACZ;AACA;AACA;AACA;AACYC,MAAAA,gBAAgB,EAAG,CAAC;AACpB;AACZ;AACA;AACA;AACA;AACYC,MAAAA,UAAU,EAAG,IAAI;AACjB;AACZ;AACA;AACA;AACA;AACY39C,MAAAA,MAAM,EAAG,EAAC;KACb,CAAA;AACL,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA49C,EAAAA,QAAQA,CAACC,OAAO,EAAEC,gBAAgB,EAAE;IAChC,MACIt+C,EAAE,GAAgB,IAAI;AACtBu+C,MAAAA,eAAe,GAAGF,OAAO,CAAA;AAC7B,IAAA,IAAIG,WAAW,EACXC,QAAQ,EACRC,MAAM,EACNb,UAAU,EACVG,QAAQ,EACRL,SAAS,EACTG,OAAO;AACP;AACA;AACAF,MAAAA,gBAAgB,EAChBG,cAAc,EACdG,gBAAgB,EAChBD,cA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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMukD,YAAY,SAASzoC,cAAc,CAAC0S,KAAK,CAC1D6a,oBAAoB,EACpB3G,SAAS,EACTwI,kBAAkB,EAClBuI,mBAAmB,EACnBoK,uBAAuB,EACvB6F,iBACJ,CAAC,CAAC;EACE,OAAOnwD,KAAK,GAAG,cAAc,CAAA;AAC7B;AACJ;AACA;AACA;AACA;AACI;AACA,EAAA,OAAOsE,YAAY,GAAG;AAClB;AACR;AACA;AACA;AACA;AACA;AACQ2sD,IAAAA,OAAO,EAAG,uBAAuB;AACjC;AACR;AACA;AACA;AACA;AACA;AACQzhB,IAAAA,OAAO,EAAG,kBAAkB;AAC5B;AACR;AACA;AACA;AACA;AACA;AACQqe,IAAAA,WAAW,EAAG,6BAA6B;AAC3C;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQxC,IAAAA,SAAS,EAAG,IAAI;AAChB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ7B,IAAAA,MAAM,EAAG,IAAI;AACb;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ90C,IAAAA,QAAQ,EAAG,IAAI;AACf;AACR;AACA;AACA;AACQw8C,IAAAA,iCAAiC,EAAG,IAAI;AACxC;AACR;AACA;AACA;AACA;AACA;AACQC,IAAAA,YAA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IACvB,OAAO;AACH;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYmlD,MAAAA,YAAY,EAAG,IAAI;AACnB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYvoB,MAAAA,KAAK,EAAG,IAAI;AACZt0C,MAAAA,IAAI,EAAG,gBAAA;KACV,CAAA;AACL,GAAA;EACA,WAAWupB,YAAYA,GAAG;AACtB,IAAA,MAAM7tB,MAAM,GAAG,KAAK,CAAC6tB,YAAY,CAAA;AACjC7tB,IAAAA,MAAM,CAAC8tB,KAAK,CAACxtB,IAAI,CAAC,4BAA4B,CAAC,CAAA;AAC/C,IAAA,OAAON,MAAM,CAAA;AACjB,GAAA;AACA;AACA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACAyF,EAAAA,SAASA,GAAG;AACR,IAAA,KAAK,CAACA,SAAS,CAAC,GAAGC,SAAS,CAAC,CAAA;AAC7B,IAAA,IAAI,IAAI,CAAC07D,YAAY,CAACtnD,QAAQ,CAAC,OAAO,CAAC,IAAI,IAAI,CAACnQ,MAAM,CAAC03D,yBAAyB,EAAE;AAC9E,MAAA,IAAI,CAAC13D,MAAM,CAAC03D,yBAAyB,GAAG,KAAK,CAAA;AACjD,KAAA;AACJ,GAAA;EACAC,cAAcA,CAAC9d,WAAW,EAAE;IACxB,MACI;QAAE9yC,MAAM;AAAE3E,QAAAA,aAAAA;AAAc,OAAC,GAAGy3C,WAAW;AACvC,MAAA;AAAE75C,QAAAA,MAAAA;AAAO,OAAC,GAAG,IAAI,CAAA;IACrB,IAAIA,MAAM,CAAC6kB,YAAY,EAAE;AACrB,MAAA,OAAO,CAAA9d,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAANA,MAAM,CAAE6wD,uBAAuB,MAAK,KAAK,KAAI7wD,MAAM,KAAA,IAAA,IAANA,MAAM,KAANA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,MAAM,CAAE8wD,gBAAgB,CAAA,CAAA;AAChF,KAAA;AACA,IAAA,OAAOz1D,aAAa,CAACkpC,OAAO,CAAC,6BAA6B,CAAC,CAAA;AAC/D,GAAA;EACAwsB,eAAeA,CAACje,WAAW,EAAE;AACzB,IAAA,KAAK,CAACie,eAAe,CAAC,GAAG/7D,SAAS,CAAC,CAAA;IACnC,IAAI,IAAI,CAAC+1D,IAAI,EAAE;AACX;AACA;AACA,MAAA,IAAI,CAACA,IAAI,CAACpqB,YAAY,GAAG,SAAS,CAAA;AACtC,KAAA;AACJ,GAAA;AACAsH,EAAAA,0BAA0BA,CAAC;AAAEC,IAAAA,KAAAA;AAAM,GAAC,EAAE;IAClC,MACIzvC,EAAE,GAAW,IAAI;AACjB,MAAA;AAAEQ,QAAAA,MAAAA;AAAO,OAAC,GAAGR,EAAE;AACfu4D,MAAAA,QAAQ,GAAK;AACTz6D,QAAAA,SAAS,EAAG0C,MAAM,CAAC6vB,QAAQ,CAACxa,cAAc;AAC1ChY,QAAAA,IAAI,EAAQ2C,MAAM,CAAC6vB,QAAQ,CAACpf,SAAAA;OAC/B,CAAA;AACL1a,IAAAA,MAAM,CAACC,MAAM,CAACi5C,KAAK,EAAE;AACjB+oB,MAAAA,SAAS,EAAG;AACR18D,QAAAA,IAAI,EAAU,kBAAkB;AAChCs2D,QAAAA,WAAW,EAAGpyD,EAAE;AAChBsuC,QAAAA,IAAI,EAAU,8BAA8B;QAC5CrzB,QAAQ,EAAM,CAACza,MAAM,CAACyT,OAAO,CAACvN,KAAK,IAAI1G,EAAE,CAACib,QAAQ;AAClDo3C,QAAAA,MAAM,EAAQ,GAAG;AACjBC,QAAAA,IAAI,EAAU;AACVn3D,UAAAA,IAAI,EAAI,OAAO;AACfs0C,UAAAA,KAAK,EAAG;AACJgpB,YAAAA,UAAU,EAAG;AACTpG,cAAAA,MAAM,EAAiB,GAAG;AAC1Bl3D,cAAAA,IAAI,EAAmB,QAAQ;AAC/Bu9D,cAAAA,QAAQ,EAAe,GAAG;AAC1BC,cAAAA,SAAS,EAAc,KAAK;AAC5B;AACAC,cAAAA,oBAAoB,EAAG,IAAA;AAC3B,aAAA;WACH;AACDjG,UAAAA,YAAYA,CAAC;AAAExkD,YAAAA,MAAM,EAAGmkD,IAAAA;AAAK,WAAC,EAAE;AAC5B,YAAA,MAAM,CAACuG,IAAI,CAAC,GAAGvG,IAAI,CAAC7iB,KAAK,CAAA;AACzBopB,YAAAA,IAAI,CAACp9D,GAAG,GAAG+E,MAAM,CAACs4D,YAAY,CAAA;AAC9BD,YAAAA,IAAI,CAACn9D,GAAG,GAAG8E,MAAM,CAACu4D,YAAY,CAAA;AAC9BF,YAAAA,IAAI,CAACz6D,KAAK,GAAGoC,MAAM,CAACg4D,SAAS,CAAA;AAC7B;AACA;AACAx4D,YAAAA,EAAE,CAACg5D,aAAa,GAAGH,IAAI,CAACx0D,GAAG,CAAC;AAAEyV,cAAAA,MAAM,EAAG,oBAAoB;AAAEvV,cAAAA,OAAO,EAAGvE,EAAAA;AAAG,aAAC,CAAC,CAAA;WAC/E;AACDi5D,UAAAA,MAAMA,GAAG;YACL,IAAIj5D,EAAE,CAACg5D,aAAa,EAAE;cAClBh5D,EAAE,CAACg5D,aAAa,EAAE,CAAA;cAClBh5D,EAAE,CAACg5D,aAAa,GAAG,IAAI,CAAA;AAC3B,aAAA;AACJ,WAAA;AACJ,SAAA;OACH;AACDE,MAAAA,SAAS,EAAG;AACRp9D,QAAAA,IAAI,EAAU,oBAAoB;AAClCs2D,QAAAA,WAAW,EAAGpyD,EAAE;AAChBsuC,QAAAA,IAAI,EAAU,2BAA2B;AACzC+jB,QAAAA,MAAM,EAAQ,GAAG;AACjBC,QAAAA,IAAI,EAAU;AACVn3D,UAAAA,IAAI,EAAO,OAAO;AAClBwE,UAAAA,GAAG,EAAQ,qCAAqC;AAChDnE,UAAAA,QAAQ,EAAG;AACP42D,YAAAA,WAAW,EAAGpyD,EAAAA;WACjB;AACDyvC,UAAAA,KAAK,EAAG;AACJ0pB,YAAAA,cAAc,EAAG;AACbh+D,cAAAA,IAAI,EAAgB,WAAW;AAC/BuzC,cAAAA,KAAK,EAAe,cAAc;AAClC2jB,cAAAA,MAAM,EAAc,GAAG;AACvB+G,cAAAA,UAAU,EAAU,KAAK;AACzBC,cAAAA,QAAQ,EAAY,IAAI;AACxB19D,cAAAA,IAAI,EAAgB48D,QAAQ;AAC5BjhD,cAAAA,iBAAiB,EAAG;gBAChBwC,MAAM,EAAI9Z,EAAE,CAACs5D,sBAAsB;AACnC/0D,gBAAAA,OAAO,EAAGvE,EAAAA;AACd,eAAA;aACH;AACDu5D,YAAAA,YAAY,EAAG;AACXp+D,cAAAA,IAAI,EAAgB,WAAW;AAC/BuzC,cAAAA,KAAK,EAAe,YAAY;AAChC2jB,cAAAA,MAAM,EAAc,GAAG;AACvB+G,cAAAA,UAAU,EAAU,KAAK;AACzBC,cAAAA,QAAQ,EAAY,IAAI;AACxB19D,cAAAA,IAAI,EAAgB48D,QAAQ;AAC5BjhD,cAAAA,iBAAiB,EAAG;gBAChBwC,MAAM,EAAI9Z,EAAE,CAACs5D,sBAAsB;AACnC/0D,gBAAAA,OAAO,EAAGvE,EAAAA;AACd,eAAA;aACH;AACDw5D,YAAAA,YAAY,EAAG;AACXr+D,cAAAA,IAAI,EAAgB,QAAQ;AAC5Bk3D,cAAAA,MAAM,EAAc,GAAG;AACvB1yD,cAAAA,GAAG,EAAiB,gBAAgB;AACpC2uC,cAAAA,IAAI,EAAgB,wBAAwB;AAC5CjjC,cAAAA,KAAK,EAAe,iBAAiB;AACrC4E,cAAAA,IAAI,EAAgB,CAAC;AACrBwpD,cAAAA,MAAM,EAAc,CAAC;AACrBniD,cAAAA,iBAAiB,EAAG;gBAChB1R,KAAK,EAAK5F,EAAE,CAAC05D,mBAAmB;AAChCn1D,gBAAAA,OAAO,EAAGvE,EAAAA;AACd,eAAA;aACH;AACD25D,YAAAA,QAAQ,EAAG;AACPx+D,cAAAA,IAAI,EAAgB,QAAQ;AAC5Bk3D,cAAAA,MAAM,EAAc,GAAG;AACvB1yD,cAAAA,GAAG,EAAiB,iBAAiB;AACrC0L,cAAAA,KAAK,EAAe,iBAAiB;AACrCvP,cAAAA,IAAI,EAAgB,cAAc;AAClCmU,cAAAA,IAAI,EAAgB,CAAC;AACrBwpD,cAAAA,MAAM,EAAc,KAAK;AACzBniD,cAAAA,iBAAiB,EAAG;gBAChB1R,KAAK,EAAK5F,EAAE,CAAC45D,eAAe;AAC5Br1D,gBAAAA,OAAO,EAAGvE,EAAAA;AACd,eAAA;aACH;AACD65D,YAAAA,aAAa,EAAG;AACZ1+D,cAAAA,IAAI,EAAgB,QAAQ;AAC5Bk3D,cAAAA,MAAM,EAAc,GAAG;AACvB1yD,cAAAA,GAAG,EAAiB,iBAAiB;AACrC2uC,cAAAA,IAAI,EAAgB,oBAAoB;AACxCjjC,cAAAA,KAAK,EAAe,iBAAiB;AACrC4E,cAAAA,IAAI,EAAgB,CAAC;AACrBqH,cAAAA,iBAAiB,EAAG;gBAChB1R,KAAK,EAAK5F,EAAE,CAAC85D,oBAAoB;AACjCv1D,gBAAAA,OAAO,EAAGvE,EAAAA;AACd,eAAA;AACJ,aAAA;WACH;AACDsX,UAAAA,iBAAiB,EAAG;YAChBhK,KAAK,EAAKtN,EAAE,CAAC+5D,mBAAmB;AAChCx1D,YAAAA,OAAO,EAAGvE,EAAAA;AACd,WAAA;AACJ,SAAA;AACJ,OAAA;AACJ,KAAC,CAAC,CAAA;AACN,GAAA;AACAg6D,EAAAA,kBAAkBA,CAAC;AAAE57D,IAAAA,KAAAA;AAAM,GAAC,EAAE;IAC1B,MAAM4B,EAAE,GAAG,IAAI,CAAA;AACf;AACA;AACA;AACAA,IAAAA,EAAE,CAACsyD,IAAI,CAACpqB,YAAY,GAAG,SAAS,CAAA;AAChCloC,IAAAA,EAAE,CAACQ,MAAM,CAACg4D,SAAS,GAAGp6D,KAAK,CAAA;AAC3B4B,IAAAA,EAAE,CAACsyD,IAAI,CAAC3Y,UAAU,CAAC;MACfz8B,EAAE,EAAkBA,MAAMld,EAAE,CAACsyD,IAAI,CAACpqB,YAAY,GAAG,MAAM;AACvD+xB,MAAAA,KAAK,EAAe,GAAG;AACvB/oB,MAAAA,iBAAiB,EAAG,IAAA;AACxB,KAAC,CAAC,CAAA;AACN,GAAA;AACA6oB,EAAAA,mBAAmBA,CAAC;AAAE5rD,IAAAA,MAAM,EAAG+qD,SAAS;AAAErqD,IAAAA,UAAAA;AAAW,GAAC,EAAE;AACpD,IAAA,IAAIA,UAAU,EAAE;MACZ,MAAM;AAAEqrD,QAAAA,SAAAA;AAAU,OAAC,GAAGhB,SAAS,CAAA;AAC/B,MAAA,IAAI,CAACC,cAAc,GAAGe,SAAS,CAACf,cAAc,CAAA;AAC9C,MAAA,IAAI,CAACI,YAAY,GAAGW,SAAS,CAACX,YAAY,CAAA;AAC9C,KAAA;IACA,IAAI,CAACY,SAAS,EAAE,CAAA;AACpB,GAAA;AACAA,EAAAA,SAASA,GAAG;IACR,MAAMn6D,EAAE,GAAG,IAAI,CAAA;AACfA,IAAAA,EAAE,CAACm5D,cAAc,CAAC99C,aAAa,EAAE,CAAA;AACjCrb,IAAAA,EAAE,CAACu5D,YAAY,CAACl+C,aAAa,EAAE,CAAA;AAC/B;AACA;AACA;AACA;AACArb,IAAAA,EAAE,CAACm5D,cAAc,CAAC/6D,KAAK,GAAG4B,EAAE,CAACo6D,0BAA0B,GAAGp6D,EAAE,CAACQ,MAAM,CAAC5G,SAAS,CAAA;AAC7EoG,IAAAA,EAAE,CAACu5D,YAAY,CAACn7D,KAAK,GAAG4B,EAAE,CAACq6D,wBAAwB,GAAGr6D,EAAE,CAACQ,MAAM,CAAC3G,OAAO,CAAA;AACvEmG,IAAAA,EAAE,CAACm5D,cAAc,CAAC39C,YAAY,EAAE,CAAA;AAChCxb,IAAAA,EAAE,CAACu5D,YAAY,CAAC/9C,YAAY,EAAE,CAAA;AAClC,GAAA;AACA89C,EAAAA,sBAAsBA,CAAC;AAAEnrD,IAAAA,MAAAA;AAAO,GAAC,EAAE;IAC/B,MACInO,EAAE,GAAiB,IAAI;AACvBs6D,MAAAA,gBAAgB,GAAInsD,MAAM,KAAKnO,EAAE,CAACm5D,cAAe;AACjD,MAAA;AAAE34D,QAAAA,MAAAA;AAAO,OAAC,GAASR,EAAE;AACrB,MAAA;AAAEqwB,QAAAA,QAAAA;AAAS,OAAC,GAAO7vB,MAAM;AACzB5G,MAAAA,SAAS,GAAUoG,EAAE,CAACo6D,0BAA0B,IAAI,CAACE,gBAAgB,GAAGt6D,EAAE,CAACo6D,0BAA0B,GAAGp6D,EAAE,CAACm5D,cAAc,CAAC/6D,KAAK,CAAA;AACnI,IAAA,IAAIvE,OAAO,GAAGmG,EAAE,CAACq6D,wBAAwB,IAAIC,gBAAgB,GAAGt6D,EAAE,CAACq6D,wBAAwB,GAAGr6D,EAAE,CAACu5D,YAAY,CAACn7D,KAAK,CAAA;AACnH;AACA;AACA,IAAA,IAAIk8D,gBAAgB,EAAE;MAClBt6D,EAAE,CAACo6D,0BAA0B,GAAG,IAAI,CAAA;AACxC,KAAC,MACI;MACDp6D,EAAE,CAACq6D,wBAAwB,GAAG,IAAI,CAAA;AACtC,KAAA;AACA;AACA;AACA;AACA,IAAA,IAAI,EAAExgE,OAAO,GAAGD,SAAS,CAAC,EAAE;AACxBC,MAAAA,OAAO,GAAGkE,UAAU,CAACuF,GAAG,CAACzJ,OAAO,EAAEw2B,QAAQ,CAACxa,cAAc,EAAEwa,QAAQ,CAACpf,SAAS,CAAC,CAAA;AAClF,KAAA;AACA;AAAA,SACK,IAAIpX,OAAO,GAAGD,SAAS,EAAE;AAC1BC,MAAAA,OAAO,GAAGkE,UAAU,CAACuF,GAAG,CAAC1J,SAAS,EAAEy2B,QAAQ,CAACxa,cAAc,EAAEwa,QAAQ,CAACpf,SAAS,CAAC,CAAA;AACpF,KAAA;AACA;IACAzQ,MAAM,CAACgc,WAAW,CAAC5iB,SAAS,EAAEC,OAAO,EAAE+9D,kBAAkB,CAAC,CAAA;IAC1D53D,EAAE,CAACm6D,SAAS,EAAE,CAAA;AAClB,GAAA;AACAT,EAAAA,mBAAmBA,GAAG;AAClB,IAAA,IAAI,CAACl5D,MAAM,CAAC6vB,QAAQ,CAACrT,aAAa,EAAE,CAAA;IACpC,IAAI,CAACm9C,SAAS,EAAE,CAAA;AACpB,GAAA;AACAP,EAAAA,eAAeA,GAAG;IACd,MAAMW,KAAK,GAAGx8D,UAAU,CAACy8D,SAAS,CAAC,IAAIrgD,IAAI,EAAE,CAAC,CAAA;AAC9C,IAAA,IAAI,CAAC3Z,MAAM,CAACgc,WAAW,CAAC+9C,KAAK,EAAEx8D,UAAU,CAACuF,GAAG,CAACi3D,KAAK,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAA;IAC/D,IAAI,CAACJ,SAAS,EAAE,CAAA;AACpB,GAAA;AACAL,EAAAA,oBAAoBA,GAAG;AACnB,IAAA,IAAI,CAACt5D,MAAM,CAAC6vB,QAAQ,CAACtT,SAAS,EAAE,CAAA;IAChC,IAAI,CAACo9C,SAAS,EAAE,CAAA;AACpB,GAAA;AACJ,CAAA;AACArC,kBAAkB,CAAC/4D,MAAM,GAAG,oBAAoB,CAAA;AAAEmlC,kBAAkB,CAACC,eAAe,CAAC2zB,kBAAkB,EAAE,IAAI,EAAE,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC,CAAA;AACtI5zB,kBAAkB,CAACC,eAAe,CAAC2zB,kBAAkB,EAAE,KAAK,EAAE,mBAAmB,CAAC;;ACvdlF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAM2C,iBAAiB,SAASruD,MAAM,EAAE,CAAC;AACpD;EACA,WAAWyG,aAAaA,GAAG;IACvB,OAAO;AACH;AACZ;AACA;AACA;AACA;AACYwd,MAAAA,QAAQ,EAAG,IAAI;AACf;AACZ;AACA;AACA;AACA;AACA;AACA;AACYpsB,MAAAA,cAAc,EAAG,IAAI;AACrB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACY4N,MAAAA,QAAQ,EAAG,GAAG;AACd;AACZ;AACA;AACA;AACA;AACA;AACA;AACYuM,MAAAA,IAAI,EAAG,KAAK;AACZ;AACZ;AACA;AACA;AACA;AACA;AACYs8C,MAAAA,QAAQ,EAAG,KAAK;AAChBpqD,MAAAA,OAAO,EAAG,IAAI;AACdpD,MAAAA,IAAI,EAAG,YAAY;AAAE;AACrB;AACAytD,MAAAA,WAAW,EAAG,KAAK;AACnB;AACA73D,MAAAA,YAAY,EAAG,EAAE;AACjB;AACA9B,MAAAA,UAAU,EAAG,IAAI;AACjB;AACAwQ,MAAAA,cAAc,EAAG,IAAI;AACrBopD,MAAAA,gBAAgB,EAAG,IAAI;AACvBC,MAAAA,iBAAiB,EAAG,EAAA;KACvB,CAAA;AACL,GAAA;AACA;AACA;EACAv+D,SAASA,CAACzF,MAAM,EAAE;IACd,MAAMmJ,EAAE,GAAG,IAAI,CAAA;AACf;AACAA,IAAAA,EAAE,CAAC86D,iBAAiB,GAAG,EAAE,CAAA;AACzB,IAAA,KAAK,CAACx+D,SAAS,CAACzF,MAAM,CAAC,CAAA;IACvB,MAAMmK,UAAU,GAAGhB,EAAE,CAACqwB,QAAQ,CAACrvB,UAAU,IAAIhB,EAAE,CAACgB,UAAU,CAAA;AAC1D,IAAA,IAAIA,UAAU,EAAE;MACZ,IAAIA,UAAU,YAAYkP,UAAU,EAAE;AAClClQ,QAAAA,EAAE,CAAC+6D,iBAAiB,CAAC/5D,UAAU,CAAC,CAAA;AACpC,OAAC,MACI;AACD,QAAA,MAAMuT,MAAM,GAAGb,EAAa,CAAC2E,SAAS,CAACrX,UAAU,CAAC,CAAA;AAClDuT,QAAAA,MAAM,IAAIvU,EAAE,CAAC+6D,iBAAiB,CAACxmD,MAAM,CAAC,CAAA;AAC1C,OAAA;AACJ,KAAA;AACA;AACAvU,IAAAA,EAAE,CAACqwB,QAAQ,CAAChsB,GAAG,CAAC;AAAEgW,MAAAA,WAAW,EAAG,uBAAuB;AAAE9V,MAAAA,OAAO,EAAGvE,EAAAA;AAAG,KAAC,CAAC,CAAA;IACxEA,EAAE,CAACg7D,UAAU,GAAG,IAAI,CAAA;AACxB,GAAA;AACAvtD,EAAAA,SAASA,GAAG;AACR,IAAA,IAAI,CAAC4iB,QAAQ,CAAC4qC,EAAE,CAAC,aAAa,EAAE,IAAI,CAACC,qBAAqB,EAAE,IAAI,CAAC,CAAA;IACjE,KAAK,CAACztD,SAAS,EAAE,CAAA;AACrB,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI0tD,mCAAmCA,CAACj5D,IAAI,EAAEk5D,QAAQ,EAAE7mD,MAAM,GAAG,IAAI,CAACvT,UAAU,EAAE;IAC1E,MACI;QACIqvB,QAAQ;AACRpsB,QAAAA,cAAAA;AACJ,OAAC,GAAG,IAAI;AACR,MAAA;AACIo3D,QAAAA,UAAAA;OACH,GAAG,IAAI,CAACv3D,KAAK;AACd,MAAA;QACIqO,QAAQ;QACRC,aAAa;QACbH,OAAO;QACPC,YAAY;AACZL,QAAAA,QAAAA;AACJ,OAAC,GAAG0C,MAAM;AACV;MACA+mD,MAAM,GAAMnpD,QAAQ,KAAKF,OAAO,IAAI3U,IAAI,CAACG,KAAK,CAACyU,YAAY,CAAC,KAAKA,YAAY,IAAI5U,IAAI,CAACG,KAAK,CAAC2U,aAAa,CAAC,KAAKA,aAAa;AAC5HmpD,MAAAA,QAAQ,GAAID,MAAM,GAAGppD,YAAY,GAAGE,aAAa;AACjDopD,MAAAA,QAAQ,GAAIF,MAAM,GAAGrpD,OAAO,GAAQE,QAAQ,CAAA;AAChD;AACA,IAAA,IAAIipD,QAAQ,EAAE;AACV,MAAA,MAAMK,QAAQ,GAAGn+D,IAAI,CAACo/C,IAAI,CAAC,CAACz4C,cAAc,GAAGo3D,UAAU,GAAIp3D,cAAc,GAAG,CAAE,IAAI4N,QAAQ,CAAC,CAAA;MAC3F,OAAO;QACHjY,SAAS,EAAGy2B,QAAQ,CAAC7S,SAAS,CAACrM,UAAE,CAAC7N,GAAG,CAACpB,IAAI,EAAE,CAACu5D,QAAQ,GAAGrpD,aAAa,EAAED,QAAQ,CAAC,EAAE,KAAK,EAAEqpD,QAAQ,EAAED,QAAQ,CAAC;QAC5G1hE,OAAO,EAAKw2B,QAAQ,CAAC5S,QAAQ,CAACtM,UAAE,CAAC7N,GAAG,CAACpB,IAAI,EAAEu5D,QAAQ,GAAGrpD,aAAa,EAAED,QAAQ,CAAC,EAAE,KAAK,EAAEqpD,QAAQ,EAAED,QAAQ,CAAA;OAC5G,CAAA;AACL,KAAA;AACA;SACK;MACD,MAAMG,aAAa,GAAGp+D,IAAI,CAACo/C,IAAI,CAACz4C,cAAc,GAAGo3D,UAAU,GAAGxpD,QAAQ,CAAC,CAAA;MACvE,OAAO;QACHjY,SAAS,EAAGy2B,QAAQ,CAAC7S,SAAS,CAACrM,UAAE,CAAC7N,GAAG,CAACpB,IAAI,EAAE,CAACw5D,aAAa,GAAGtpD,aAAa,EAAED,QAAQ,CAAC,EAAE,KAAK,EAAEqpD,QAAQ,EAAED,QAAQ,CAAC;AACjH1hE,QAAAA,OAAO,EAAKw2B,QAAQ,CAAC5S,QAAQ,CAACtM,UAAE,CAAC7N,GAAG,CAACpB,IAAI,EAAE5E,IAAI,CAACo/C,IAAI,CAAC,CAACz4C,cAAc,GAAG4N,QAAQ,GAAG6pD,aAAa,IAAItpD,aAAa,CAAC,EAAED,QAAQ,CAAC,EAAE,KAAK,EAAEqpD,QAAQ,EAAED,QAAQ,CAAA;OAC1J,CAAA;AACL,KAAA;AACJ,GAAA;AACA;AACJ;AACA;AACA;AACA;EACI,IAAIz4D,YAAYA,GAAG;IACf,OAAO,IAAI,CAAC64D,aAAa,CAAA;AAC7B,GAAA;EACA,IAAI74D,YAAYA,CAACjM,MAAM,EAAE;IACrB,IAAI,CAAC8kE,aAAa,GAAG9kE,MAAM,CAAA;AAC/B,GAAA;EACA,IAAIyZ,OAAOA,GAAG;IACV,OAAO,IAAI,CAACsrD,QAAQ,CAAA;AACxB,GAAA;EACA,IAAItrD,OAAOA,CAACA,OAAO,EAAE;AACjB,IAAA,IAAIA,OAAO,IAAIA,OAAO,CAACnW,MAAM,IAAImW,OAAO,CAACA,OAAO,CAACnW,MAAM,GAAG,CAAC,CAAC,CAAC0hE,aAAa,EAAE;AACxE,MAAA,MAAM,IAAIzhE,KAAK,CAAC,4GAA4G,CAAC,CAAA;AACjI,KAAA;IACA,IAAI,CAACwhE,QAAQ,GAAGtrD,OAAO,CAAA;AAC3B,GAAA;EACA,IAAIwrD,mBAAmBA,GAAG;AACtB,IAAA,OAAO,IAAI,CAAA;AACf,GAAA;AACA;AACA;AACA;AACJ;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACI;AACA;AACA;AACJ;AACA;AACA;AACA;AACA;EACI,IAAIz2C,YAAYA,GAAG;AACf,IAAA,OAAO,IAAI,CAACnY,IAAI,KAAK,UAAU,CAAA;AACnC,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;EACI,IAAI3M,UAAUA,GAAG;AACb,IAAA,OAAO,IAAI,CAAC2M,IAAI,KAAK,UAAU,CAAA;AACnC,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;EACI,IAAIwtD,QAAQA,CAACt8D,KAAK,EAAE;AAChB,IAAA,IAAIA,KAAK,KAAK,IAAI,CAAC29D,SAAS,EAAE;MAC1B,IAAI,CAACA,SAAS,GAAG39D,KAAK,CAAA;MACtB,IAAI,CAACkG,MAAM,EAAE,CAAA;AACjB,KAAA;AACJ,GAAA;AACA;AACA;EACA+V,WAAWA,CAACxjB,MAAM,EAAE;AAChB;IACA,IAAI,CAACyZ,OAAO,GAAG,IAAI,CAAA;AACnB;AACA,IAAA,IAAI,CAACs3B,SAAS,CAAC/wC,MAAM,CAAC,CAAA;AACtB,IAAA,IAAI,CAAC6M,OAAO,CAAC,aAAa,CAAC,CAAA;AAC/B,GAAA;AACAw3D,EAAAA,qBAAqBA,CAAC;AAAE/sD,IAAAA,MAAM,EAAGkiB,QAAQ;AAAE/V,IAAAA,eAAAA;AAAgB,GAAC,EAAE;AAC1D,IAAA,IAAI,IAAI,CAACtZ,UAAU,KAAKqvB,QAAQ,CAACrvB,UAAU,EAAE;AACzC,MAAA,IAAI,CAAC+5D,iBAAiB,CAAC1qC,QAAQ,CAACrvB,UAAU,CAAC,CAAA;AAC/C,KAAA;IACA,IAAI,CAACsZ,eAAe,IAAI+V,QAAQ,CAAC3pB,KAAK,GAAG,CAAC,EAAE;MACxC,IAAI,CAACpC,MAAM,EAAE,CAAA;AACjB,KAAA;AACJ,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACIA,MAAMA,CAACL,cAAc,EAAE+3D,MAAM,GAAG,KAAK,EAAEC,WAAW,GAAG,KAAK,EAAE;IACxD,MACIj8D,EAAE,GAAsB,IAAI;AAC5B,MAAA;QAAEqwB,QAAQ;AAAE/f,QAAAA,OAAAA;AAAQ,OAAC,GAAGtQ,EAAE;MAC1Bk8D,cAAc,GAAUj4D,cAAc,KAAK,CAAC,CAAA;AAChD;IACA,IAAIjE,EAAE,CAACsG,aAAa,IAAK41D,cAAc,IAAIl8D,EAAE,CAACm8D,eAAe,KAAKl4D,cAAe,EAAE;AAC/E,MAAA,IAAIg4D,WAAW,EAAE;AACbj8D,QAAAA,EAAE,CAAC0D,OAAO,CAAC,QAAQ,CAAC,CAAA;AACxB,OAAA;AACA,MAAA,OAAA;AACJ,KAAA;AACA1D,IAAAA,EAAE,CAACm8D,eAAe,GAAG7+D,IAAI,CAAC5B,GAAG,CAACuI,cAAc,IAAIjE,EAAE,CAACiE,cAAc,IAAI,CAAC,EAAE,CAAC,CAAC,CAAA;AAC1E,IAAA,IAAI,OAAOjE,EAAE,CAACiE,cAAc,KAAK,QAAQ,EAAE;AACvC,MAAA,MAAM,IAAI7J,KAAK,CAAC,mDAAmD,CAAC,CAAA;AACxE,KAAA;IACA4F,EAAE,CAAC8C,YAAY,GAAG,EAAE,CAAA;AACpB;AACA;AACA,IAAA,MAAM+O,QAAQ,GAAG7R,EAAE,CAAC8R,SAAS,GAAG9R,EAAE,CAACo8D,iBAAiB,CAACp8D,EAAE,CAAC46D,gBAAgB,CAAC,CAAA;IACzE,IAAI,OAAO/oD,QAAQ,KAAK,QAAQ,IAAIA,QAAQ,IAAI,CAAC,EAAE;AAC/C,MAAA,MAAM,IAAIzX,KAAK,CAAC,4BAA4B,CAAC,CAAA;AACjD,KAAA;AACA;AACA4F,IAAAA,EAAE,CAAC86D,iBAAiB,GAAG,EAAE,CAAA;AACzB;IACA96D,EAAE,CAACq8D,UAAU,GAAG,IAAI,CAAA;AACpB;AACA,IAAA,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAE;AAAEniE,QAAAA,MAAAA;OAAQ,GAAGmW,OAAO,EAAEgsD,GAAG,GAAGniE,MAAM,EAAEmiE,GAAG,EAAE,EAAE;AACzD,MAAA,MAAMprD,MAAM,GAAGZ,OAAO,CAACgsD,GAAG,CAAC,CAAA;MAC3B,IAAIprD,MAAM,CAAC2qD,aAAa,EAAE;AACtB,QAAA,MAAMU,WAAW,GAAGrrD,MAAM,CAAC2qD,aAAa,CAACn/D,IAAI,CAACsD,EAAE,EAAEqwB,QAAQ,CAACz2B,SAAS,EAAEy2B,QAAQ,CAACx2B,OAAO,CAAC,CAAA;AACvFmG,QAAAA,EAAE,CAAC8C,YAAY,CAACw5D,GAAG,CAAC,GAAGt8D,EAAE,CAACw8D,eAAe,CAACF,GAAG,EAAEprD,MAAM,EAAEqrD,WAAW,CAAC,CAAA;AACvE,OAAC,MACI;AACDv8D,QAAAA,EAAE,CAAC8C,YAAY,CAACw5D,GAAG,CAAC,GAAGt8D,EAAE,CAACw8D,eAAe,CAACF,GAAG,EAAEprD,MAAM,CAAC,CAAA;AAC1D,OAAA;AACJ,KAAA;IACA,IAAI,CAAC8qD,MAAM,EAAE;AACTh8D,MAAAA,EAAE,CAAC0D,OAAO,CAAC,QAAQ,CAAC,CAAA;AACxB,KAAA;AACJ,GAAA;AACA;AACA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACI+4D,EAAAA,uBAAuBA,CAACt8D,KAAK,EAAEC,GAAG,EAAE;AAChC,IAAA,OAAO,IAAI,CAAConB,mBAAmB,CAACpnB,GAAG,CAAC,GAAG,IAAI,CAAConB,mBAAmB,CAACrnB,KAAK,CAAC,CAAA;AAC1E,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;EACIu8D,sBAAsBA,CAACC,UAAU,EAAE;AAC/B,IAAA,OAAO,IAAI,CAACC,qBAAqB,CAAC,aAAa,CAAC,GAAGD,UAAU,CAAA;AACjE,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACIn1C,EAAAA,mBAAmBA,CAACtlB,IAAI,EAAEgK,OAAO,GAAG,EAAE,EAAE;IACpC,MAAMkR,IAAI,GAAG,IAAI,CAACy/C,aAAa,CAAC36D,IAAI,EAAEgK,OAAO,CAAC,CAAA;AAC9C,IAAA,IAAIkR,IAAI,KAAK,CAAC,CAAC,EAAE;AACb,MAAA,OAAO,CAAC,CAAC,CAAA;AACb,KAAA;IACA,OAAO,IAAI,CAACvL,QAAQ,IAAIuL,IAAI,GAAG,IAAI,CAACiT,QAAQ,CAAClX,gBAAgB,CAAC,CAAA;AAClE,GAAA;AACA;EACA0jD,aAAaA,CAAC36D,IAAI,EAAE;IAAE+rC,gBAAgB;IAAE6uB,kBAAkB;IAAE3uB,KAAK;IAAE1yC,GAAG;AAAEC,IAAAA,GAAAA;AAAI,GAAC,EAAE;IAC3E,MACI;AAAE20B,QAAAA,QAAAA;AAAS,OAAC,GAAQ,IAAI;AACxB,MAAA;QAAEtX,OAAO;AAAElb,QAAAA,IAAAA;AAAK,OAAC,GAAGwyB,QAAQ,CAAA;AAChC,IAAA,IAAIjT,IAAI,GAAGiT,QAAQ,CAAC7O,eAAe,CAACtf,IAAI,CAAC,CAAA;IACzC,IAAIkb,IAAI,KAAK,CAAC,CAAC,IAAI6wB,gBAAgB,IAAIl1B,OAAO,EAAE;MAC5C,IAAIgkD,WAAW,GAAG,KAAK,CAAA;AACvB;AACA;AACA,MAAA,IAAIhkD,OAAO,CAACikD,IAAI,IAAI7rD,UAAE,CAACiP,YAAY,CAACviB,IAAI,EAAE,MAAM,CAAC,GAAG,CAAC,IAAIA,IAAI,KAAK,KAAK,EAAE;QACrE,MACI;YAAEqiB,IAAI;YAAEC,EAAE;YAAEM,YAAY;AAAEG,YAAAA,MAAAA;WAAQ,GAAG7H,OAAO,CAACikD,IAAI;AACjD;AACAC,UAAAA,aAAa,GAAwB/6D,IAAI,CAACyc,QAAQ,EAAE;AACpD;AACAu+C,UAAAA,YAAY,GAAyB5/D,IAAI,CAAC7B,GAAG,CAAC6B,IAAI,CAAC5B,GAAG,CAACuhE,aAAa,EAAE/8C,IAAI,CAAC,EAAEC,EAAE,CAAC,CAAA;AACpF;AACA;AACA,QAAA,IAAI,CAAC28C,kBAAkB,IAAII,YAAY,KAAKD,aAAa,EAAE;AACvD,UAAA,OAAO,CAAC,CAAC,CAAA;AACb,SAAA;AACA,QAAA;AACI;UACAE,eAAe,GAAGD,YAAY,GAAGh7D,IAAI,CAACk7D,UAAU,EAAE,GAAG,EAAE;AACvD;UACAC,eAAe,GAAGz8C,MAAM,GAAGu8C,eAAe;AAC1C;AACAG,UAAAA,QAAQ,GAAU18C,MAAM,GAAGy8C,eAAe,GAAG58C,YAAY,CAAA;AAC7D;AACAve,QAAAA,IAAI,GAAGiP,UAAE,CAAC7N,GAAG,CAACpB,IAAI,EAAEo7D,QAAQ,GAAGL,aAAa,EAAE,GAAG,CAAC,CAAA;AAClDF,QAAAA,WAAW,GAAG,IAAI,CAAA;AACtB,OAAA;AACA,MAAA,IAAIhkD,OAAO,CAAC9C,GAAG,IAAI9E,UAAE,CAACiP,YAAY,CAACviB,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE;QACjD,MAAM;UAAEqiB,IAAI;UAAEC,EAAE;UAAEM,YAAY;AAAEG,UAAAA,MAAAA;SAAQ,GAAG7H,OAAO,CAAC9C,GAAG,CAAA;AACtD;AACA,QAAA,IAAIsnD,QAAQ,GAAGr7D,IAAI,CAACsc,MAAM,EAAE,CAAA;AAC5B;AACA,QAAA,IAAI2vB,KAAK,IAAIjsC,IAAI,CAACyc,QAAQ,EAAE,KAAK,CAAC,IAAIzc,IAAI,CAACk7D,UAAU,EAAE,KAAK,CAAC,IAAIl7D,IAAI,CAACs7D,UAAU,EAAE,KAAK,CAAC,IAAIt7D,IAAI,CAACu7D,eAAe,EAAE,KAAK,CAAC,EAAE;AACtH,UAAA,IAAI,EAAEF,QAAQ,GAAG,CAAC,EAAE;AAChBA,YAAAA,QAAQ,GAAG,CAAC,CAAA;AAChB,WAAA;AACJ,SAAA;QACA,IAAIG,OAAO,GAAG,CAAC,CAAA;AACf,QAAA,IAAIH,QAAQ,GAAGr9C,IAAI,IAAIq9C,QAAQ,IAAIp9C,EAAE,EAAE;AACnC;AACA,UAAA,IAAI28C,kBAAkB,EAAE;AACpB;AACA,YAAA,IAAI3uB,KAAK,EAAE;cACPuvB,OAAO,GAAG,CAACv9C,EAAE,GAAGo9C,QAAQ,GAAG,CAAC,IAAI,CAAC,CAAA;AACrC,aAAA;AACA;iBACK;cACDG,OAAO,GAAG,CAACx9C,IAAI,GAAGq9C,QAAQ,GAAG,CAAC,IAAI,CAAC,CAAA;AACvC,aAAA;YACAr7D,IAAI,GAAGiP,UAAE,CAAC7N,GAAG,CAACpB,IAAI,EAAEw7D,OAAO,EAAE,GAAG,CAAC,CAAA;YACjCx7D,IAAI,GAAGiP,UAAE,CAACuN,OAAO,CAACxc,IAAI,EAAE,GAAG,EAAE,KAAK,CAAC,CAAA;AACnC;AACA,YAAA,IACKxG,GAAG,IAAIwG,IAAI,CAACC,OAAO,EAAE,IAAIzG,GAAG,IAC5BD,GAAG,IAAIyG,IAAI,CAACC,OAAO,EAAE,IAAI1G,GAAI,EAChC;AACE,cAAA,OAAO,CAAC,CAAC,CAAA;AACb,aAAA;AACJ,WAAC,MACI;AACD;AACA,YAAA,OAAO,CAAC,CAAC,CAAA;AACb,WAAA;AACJ,SAAA;AACA;QACA,MACI;AAAEme,YAAAA,YAAAA;AAAa,WAAC,GAAGyW,QAAQ;AAC3B;UACAstC,WAAW,GAAQz7D,IAAI,CAACsc,MAAM,EAAE,KAAK,CAAC,GAAG,CAAC,GAAGoC,MAAM;AACnD;AACAg9C,UAAAA,aAAa,GAAM17D,IAAI,CAACsc,MAAM,EAAE,GAAGtc,IAAI,CAACyc,QAAQ,EAAE,GAAG,EAAE;AAAE;AACzD;UACAk/C,cAAc,GAAKF,WAAW,GAAGC,aAAa;AAC9C;AACAE,UAAAA,MAAM,GAAaH,WAAW,GAAGE,cAAc,GAAGp9C,YAAY,CAAA;AAClE;AACAve,QAAAA,IAAI,GAAGiP,UAAE,CAAC7N,GAAG,CAACpB,IAAI,EAAE47D,MAAM,GAAGF,aAAa,GAAGhkD,YAAY,EAAE,GAAG,CAAC,CAAA;AAC/DmjD,QAAAA,WAAW,GAAG,IAAI,CAAA;AACtB,OAAA;AACA;AACA,MAAA,IAAIA,WAAW,EAAE;AACb;AACA;AACA76D,QAAAA,IAAI,GAAGiP,UAAE,CAAC2U,SAAS,CAAC5jB,IAAI,EAAEmuB,QAAQ,CAACz2B,SAAS,EAAEy2B,QAAQ,CAACx2B,OAAO,CAAC,CAAA;AAC/D;AACAujB,QAAAA,IAAI,GAAGiT,QAAQ,CAAC7O,eAAe,CAACtf,IAAI,CAAC,CAAA;AACzC,OAAA;AACJ,KAAA;AACA,IAAA,OAAOkb,IAAI,CAAA;AACf,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIiK,mBAAmBA,CAACtmB,QAAQ,EAAEkhB,cAAc,EAAE87C,eAAe,GAAG,KAAK,EAAE;IACnE,MACI/9D,EAAE,GAAa,IAAI;AACnB,MAAA;AAAEqwB,QAAAA,QAAAA;AAAS,OAAC,GAAGrwB,EAAE;AACjBod,MAAAA,IAAI,GAAWpd,EAAE,CAACg+D,iBAAiB,CAACj9D,QAAQ,CAAC,GAAGf,EAAE,CAAC6R,QAAQ,GAAGwe,QAAQ,CAAClX,gBAAgB,CAAA;IAC3F,IAAIiE,IAAI,GAAG,CAAC,IAAIA,IAAI,GAAGiT,QAAQ,CAAC3pB,KAAK,EAAE;AACnC,MAAA,IAAIq3D,eAAe,EAAE;AACjB,QAAA,IAAIp2D,MAAM,CAAA;AACV;QACA,IAAIyV,IAAI,GAAG,CAAC,EAAE;AACVzV,UAAAA,MAAM,GAAGwJ,UAAE,CAAC7N,GAAG,CAAC+sB,QAAQ,CAACz2B,SAAS,EAAEwjB,IAAI,EAAEiT,QAAQ,CAACxyB,IAAI,CAAC,CAAA;AAC5D,SAAC,MACI;AACD;AACA8J,UAAAA,MAAM,GAAGwJ,UAAE,CAAC7N,GAAG,CAAC+sB,QAAQ,CAACx2B,OAAO,EAAEujB,IAAI,GAAGiT,QAAQ,CAAC3pB,KAAK,EAAE2pB,QAAQ,CAACxyB,IAAI,CAAC,CAAA;AAC3E,SAAA;AACA;AACA,QAAA,IAAIokB,cAAc,EAAE;UAChBta,MAAM,GAAG0oB,QAAQ,CAACpO,cAAc,GAAG,MAAM,CAAC,CAACta,MAAM,CAAC,CAAA;AACtD,SAAA;AACA,QAAA,OAAOA,MAAM,CAAA;AACjB,OAAA;AACA,MAAA,OAAO,IAAI,CAAA;AACf,KAAA;AACA,IAAA,OAAO0oB,QAAQ,CAACrO,eAAe,CAAC5E,IAAI,EAAE6E,cAAc,CAAC,CAAA;AACzD,GAAA;AACA;EACA+7C,iBAAiBA,CAACj9D,QAAQ,EAAE;IACxB,MAAM;MAAEgY,OAAO;MAAElb,IAAI;AAAE+b,MAAAA,YAAAA;KAAc,GAAG,IAAI,CAACyW,QAAQ,CAAA;AACrD;AACA,IAAA,IAAItX,OAAO,EAAE;AACT,MAAA,MAAMklD,QAAQ,GAAG,IAAI,CAACrB,qBAAqB,CAAC,KAAK,CAAC,CAAA;AAClD;AACA,MAAA,IAAI7jD,OAAO,CAAC9C,GAAG,IAAI9E,UAAE,CAACiP,YAAY,CAACviB,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE;QACjD,MAAM;YAAEqiB,IAAI;AAAEO,YAAAA,YAAAA;WAAc,GAAG1H,OAAO,CAAC9C,GAAG;AACtC;AACAioD,UAAAA,cAAc,GAAWn9D,QAAQ,IAAIk9D,QAAQ,GAAG,CAAC,CAAC;AAClD;UACAE,iBAAiB,GAAQp9D,QAAQ,GAAGm9D,cAAc,CAAA;AACtD;AACAn9D,QAAAA,QAAQ,GAAuBm9D,cAAc,GAAGz9C,YAAY,GAAG,CAACP,IAAI,GAAGtG,YAAY,IAAIqkD,QAAQ,GAAGE,iBAAiB,CAAA;AACvH,OAAA;AACA;AACA;AACA,MAAA,IAAIplD,OAAO,CAACikD,IAAI,IAAI7rD,UAAE,CAACiP,YAAY,CAACviB,IAAI,EAAE,MAAM,CAAC,GAAG,CAAC,IAAIA,IAAI,KAAK,KAAK,EAAE;QACrE,MAAM;YAAEqiB,IAAI;AAAES,YAAAA,gBAAAA;WAAkB,GAAG5H,OAAO,CAACikD,IAAI;AAC3CoB,UAAAA,SAAS,GAAoB,IAAI,CAACxB,qBAAqB,CAAC,MAAM,CAAC;AAC/D;UACAyB,aAAa,GAAgBt9D,QAAQ,GAAGk9D,QAAQ;AAChD;UACAK,gBAAgB,GAAav9D,QAAQ,GAAGs9D,aAAa,CAAA;AACzD;QACAt9D,QAAQ,GAA2Bs9D,aAAa,GAAG19C,gBAAgB,GAAGT,IAAI,GAAGk+C,SAAS,GAAGE,gBAAgB,CAAA;AAC7G,OAAA;AACJ,KAAA;AACA,IAAA,OAAOv9D,QAAQ,CAAA;AACnB,GAAA;AACA;AACJ;AACA;AACA;AACA;EACI67D,qBAAqBA,CAAC/+D,IAAI,EAAE;IACxB,MAAMmC,EAAE,GAAG,IAAI,CAAA;AACf,IAAA,OAAOA,EAAE,CAAC86D,iBAAiB,CAACj9D,IAAI,CAAC,KAAKmC,EAAE,CAAC86D,iBAAiB,CAACj9D,IAAI,CAAC,GAAGsT,UAAE,CAACuP,sBAAsB,CAAC1gB,EAAE,CAACqwB,QAAQ,CAACxyB,IAAI,EAAEA,IAAI,EAAE,IAAI,CAAC,GAAGmC,EAAE,CAAC6R,QAAQ,GAAG7R,EAAE,CAACqwB,QAAQ,CAAC5f,SAAS,CAAC,CAAA;AACrK,GAAA;AACA;AACJ;AACA;AACA;AACA;EACI,IAAI2iB,eAAeA,GAAG;IAClB,IAAI,IAAI,CAAChV,IAAI,EAAE;MACX,MAAM;AAAEhH,QAAAA,UAAAA;OAAY,GAAG,IAAI,CAACiZ,QAAQ,CAAA;AACpC,MAAA,OAAO,CAACjZ,UAAU,CAAC3G,SAAS,IAAI,CAAC,IAAI,IAAI,CAACmsD,qBAAqB,CAACxlD,UAAU,CAACvZ,IAAI,CAAC,CAAA;AACpF,KAAA;AACA,IAAA,OAAO,CAAC,CAAA;AACZ,GAAA;AACA;AACA;AACA;AACJ;AACA;AACA;AACA;AACA;EACI,IAAIgU,QAAQA,GAAG;IACX,OAAO,IAAI,CAACC,SAAS,CAAA;AACzB,GAAA;EACA,IAAID,QAAQA,CAAC/R,IAAI,EAAE;AACf,IAAA,IAAI,CAACy+D,WAAW,CAACz+D,IAAI,EAAE,KAAK,CAAC,CAAA;AACjC,GAAA;AACAy+D,EAAAA,WAAWA,CAACz+D,IAAI,EAAE0+D,aAAa,EAAE;AAC7B,IAAA,IAAI,CAAC1sD,SAAS,GAAG,IAAI,CAAC8oD,gBAAgB,GAAG96D,IAAI,CAAA;AAC7C,IAAA,IAAI,CAACwE,MAAM,CAAC6K,SAAS,EAAEqvD,aAAa,CAAC,CAAA;AACzC,GAAA;EACA,IAAIxtD,cAAcA,GAAG;AACjB,IAAA,OAAO,IAAI,CAACqf,QAAQ,CAACjZ,UAAU,CAAA;AACnC,GAAA;AACA;AACA;AACA;EACAglD,iBAAiBA,CAACqC,YAAY,EAAE;IAC5B,MACIz+D,EAAE,GAAoC,IAAI;AAC1C,MAAA;QAAE06D,QAAQ;QAAErqC,QAAQ;AAAEsqC,QAAAA,WAAAA;AAAY,OAAC,GAAG36D,EAAE;MACxC0+D,YAAY,GAA0BruC,QAAQ,CAACxyB,IAAI,CAAA;IACvD,IAAIiC,IAAI,GAAI,CAAC;MACT6+D,KAAK,GAAG,CAAC,CAAC;IACd,IAAI3+D,EAAE,CAACoe,IAAI,EAAE;AACT,MAAA,MAAMhH,UAAU,GAAGiZ,QAAQ,CAACjZ,UAAU,CAAA;AACtCunD,MAAAA,KAAK,GAAcxtD,UAAE,CAACuP,sBAAsB,CAACg+C,YAAY,EAAEtnD,UAAU,CAACvZ,IAAI,CAAC,GAAGuZ,UAAU,CAAC3G,SAAS,CAAA;AACtG,KAAA;IACA,IAAI,CAACkqD,WAAW,EAAE;MACd,MAAMiE,WAAW,GAAG5+D,EAAE,CAACiE,cAAc,GAAGosB,QAAQ,CAAC9O,mBAAmB,CAAA;MACpEzhB,IAAI,GAAI46D,QAAQ,IAAI+D,YAAY,GAAGG,WAAW,GAAIA,WAAW,GAAGH,YAAY,CAAA;MAC5E,IAAIE,KAAK,GAAG,CAAC,KAAK,CAACjE,QAAQ,IAAIiE,KAAK,GAAG,CAAC,CAAC,EAAE;AACvC7+D,QAAAA,IAAI,GAAGxC,IAAI,CAAC5B,GAAG,CAAC,CAAC,EAAEijE,KAAK,GAAG7+D,IAAI,CAAC,GAAG6+D,KAAK,CAAA;AAC5C,OAAA;AACJ,KAAC,MACI;AACD7+D,MAAAA,IAAI,GAAG2+D,YAAY,CAAA;AACvB,KAAA;AACA,IAAA,OAAO3+D,IAAI,CAAA;AACf,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;EACI,IAAI0O,SAASA,GAAG;AACZ;IACA,OAAO,IAAI,CAAC6tD,UAAU,KAAK,IAAI,CAACA,UAAU,GAAG/+D,IAAI,CAAC8L,KAAK,CAAC,IAAI,CAACyI,QAAQ,GAAG,IAAI,CAACwe,QAAQ,CAAC9O,mBAAmB,CAAC,CAAC,CAAA;AAC/G,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;EACI,IAAItd,cAAcA,GAAG;IACjB,OAAO,IAAI,CAACk4D,eAAe,CAAA;AAC/B,GAAA;EACA,IAAIl4D,cAAcA,CAAC46D,KAAK,EAAE;IACtB,MAAM7+D,EAAE,GAAG,IAAI,CAAA;AACf;AACA;IACAA,EAAE,CAACm8D,eAAe,GAAG7+D,IAAI,CAAC5B,GAAG,CAAC,CAAC,EAAEmjE,KAAK,CAAC,CAAA;AACvC,IAAA,IAAI7+D,EAAE,CAACm8D,eAAe,GAAG,CAAC,EAAE;MACxB,MAAM2C,WAAW,GAAG9+D,EAAE,CAACo8D,iBAAiB,CAACp8D,EAAE,CAAC46D,gBAAgB,CAAC,CAAA;MAC7D,IAAIkE,WAAW,GAAG,CAAC,IAAIA,WAAW,KAAK9+D,EAAE,CAAC6R,QAAQ,EAAE;QAChD7R,EAAE,CAACsE,MAAM,EAAE,CAAA;AACf,OAAA;AACJ,KAAA;AACJ,GAAA;AACA;AACA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACIy6D,EAAAA,QAAQA,CAAC9/D,KAAK,GAAG,IAAI,CAACuS,cAAc,EAAEwtD,eAAe,GAAG,KAAK,EAAE5lC,MAAM,GAAG,KAAK,EAAE;IAC3E,MACIp5B,EAAE,GAAc,IAAI;AACpBob,MAAAA,KAAK,GAAW,EAAE;AAClBq2B,MAAAA,aAAa,GAAGutB,eAAe,GAAGh/D,EAAE,CAACi/D,YAAY,GAAGhgE,KAAK;MACzDigE,UAAU,GAAMl/D,EAAE,CAACm/D,gBAAgB;AACnCC,MAAAA,SAAS,GAAOp/D,EAAE,CAACsQ,OAAO,IAAItQ,EAAE,CAACsQ,OAAO,CAACrR,KAAK,CAAC,CAACpB,IAAI;AACpDwhE,MAAAA,SAAS,GAAOH,UAAU,IAAI,IAAI,IAAIl/D,EAAE,CAACsQ,OAAO,IAAItQ,EAAE,CAACsQ,OAAO,CAAC4uD,UAAU,CAAC,CAACrhE,IAAI;AAC/EyhE,MAAAA,UAAU,GAAMJ,UAAU,IAAI,IAAI,IAAI/tD,UAAE,CAACouD,cAAc,CAACF,SAAS,EAAED,SAAS,CAAC;AAC7EI,MAAAA,YAAY,GAAI,CAAC,EAAEx/D,EAAE,CAACsQ,OAAO,IAAItQ,EAAE,CAACsQ,OAAO,CAACmhC,aAAa,CAAC,CAACoqB,aAAa,CAAC,CAAA;AAC7E,IAAA,IAAI2D,YAAY,EAAE;AACd,MAAA,MAAMngE,KAAK,GAAGW,EAAE,CAAC8C,YAAY,CAAC2uC,aAAa,CAAC,CAAA;AAC5C,MAAA,KAAK,IAAI9wC,CAAC,GAAG,CAAC,EAAEqrD,CAAC,GAAG3sD,KAAK,CAAClF,MAAM,EAAEwG,CAAC,GAAGqrD,CAAC,EAAErrD,CAAC,EAAE,EAAE;QAC1Cya,KAAK,CAACjkB,IAAI,CAAC;AAAE+K,UAAAA,IAAI,EAAG7C,KAAK,CAACsB,CAAC,CAAC,CAAC/G,SAAAA;AAAU,SAAC,CAAC,CAAA;AAC7C,OAAA;AACJ,KAAC,MACI;MACDoG,EAAE,CAACy/D,eAAe,CAAChuB,aAAa,EAAE,CAACtxC,KAAK,EAAEC,GAAG,KAAK;QAC9Cgb,KAAK,CAACjkB,IAAI,CAAC;AACP+K,UAAAA,IAAI,EAAMk3B,MAAM,GAAGh5B,GAAG,GAAGD,KAAK;AAC9B;AACA2xC,UAAAA,OAAO,EAAGotB,UAAU,KAAKjgE,KAAK,IAAIqgE,UAAU,IAAIt/D,EAAE,CAAC0/D,WAAW,CAACtmC,MAAM,GAAGh5B,GAAG,GAAGD,KAAK,CAAA;AACvF,SAAC,CAAC,CAAA;AACN,OAAC,CAAC,CAAA;AACN,KAAA;AACA,IAAA,OAAOib,KAAK,CAAA;AAChB,GAAA;EACA,IAAIs/C,QAAQA,GAAG;IACX,OAAO,IAAI,CAACqB,SAAS,CAAA;AACzB,GAAA;AACA;AACJ;AACA;AACA;AACA;EACI4D,mBAAmBA,CAACnB,aAAa,EAAE;AAC/B,IAAA,MAAMC,YAAY,GAAGnhE,IAAI,CAAC8L,KAAK,CAAC,IAAI,CAACnF,cAAc,GAAG,IAAI,CAACosB,QAAQ,CAAC9O,mBAAmB,CAAC,CAAA;AACxF,IAAA,IAAI,CAACg9C,WAAW,CAACE,YAAY,EAAED,aAAa,CAAC,CAAA;AACjD,GAAA;EACA,IAAIpgD,IAAIA,GAAG;IACP,OAAO,IAAI,CAACwhD,KAAK,CAAA;AACrB,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;EACI,IAAIxhD,IAAIA,CAAChgB,KAAK,EAAE;AACZ,IAAA,IAAIA,KAAK,KAAK,IAAI,CAACwhE,KAAK,EAAE;MACtB,IAAI,CAACA,KAAK,GAAGxhE,KAAK,CAAA;MAClB,IAAI,IAAI,CAAC48D,UAAU,EAAE;QACjB,IAAI,CAAC12D,MAAM,EAAE,CAAA;AACjB,OAAA;AACJ,KAAA;AACJ,GAAA;AACA;AACA;AACA;AACAk4D,EAAAA,eAAeA,CAACz7D,QAAQ,EAAE8+D,eAAe,EAAEtD,WAAW,EAAE;IACpD,MACIv8D,EAAE,GAA8B,IAAI;AACpCX,MAAAA,KAAK,GAA2B,EAAE;AAClC,MAAA;QAAEwC,KAAK;AAAED,QAAAA,aAAa,GAAG,EAAA;AAAG,OAAC,GAAGi+D,eAAe;MAC/CtF,KAAK,GAA2BppD,UAAE,CAACqpD,SAAS,CAAC,IAAIrgD,IAAI,EAAE,CAAC;AACxD,MAAA;AAAEkW,QAAAA,QAAAA;AAAS,OAAC,GAAoBrwB,EAAE;AAClC8/D,MAAAA,SAAS,GAAuB9/D,EAAE,CAACsQ,OAAO,CAACnW,MAAM,GAAG,CAAC;MACrD4lE,iBAAiB,GAAeA,CAAC5/D,KAAK,EAAEC,GAAG,EAAEO,CAAC,EAAEq/D,MAAM,EAAEpnE,IAAI,KAAK;QAC7D,IAAIwF,KAAK,GAAG+S,UAAE,CAAC+E,MAAM,CAAC/V,KAAK,EAAE0/D,eAAe,CAAC1qD,UAAU,CAAC,CAAA;AACxD,QAAA;AACI;AACA;AACA;AACA;AACA8qD,UAAAA,cAAc,GAAGt/D,CAAC,GAAG,CAAC,IAAI,CAACq/D,MAAM;AACjCE,UAAAA,QAAQ,GAAS;YACbr+D,KAAK;YACL1B,KAAK;YACLC,GAAG;AACHhC,YAAAA,KAAK,EAAGxF,IAAI,GAAGA,IAAI,CAACsY,MAAM,GAAG9S,KAAK;YAClCwD,aAAa;AACbU,YAAAA,KAAK,EAAGw9D,SAAS,KAAK/+D,QAAQ,IAAIf,EAAE,CAAC8D,KAAK,KAAKusB,QAAQ,CAACnU,SAAS,IAAI+jD,cAAc,CAAC,GAAGjgE,EAAE,CAAC8D,KAAK,CAAC+N,QAAQ,GAAG7R,EAAE,CAACy8D,uBAAuB,CAACt8D,KAAK,EAAEC,GAAG,CAAC;AACjJ2B,YAAAA,KAAK,EAAGpB,CAAAA;WACX,CAAA;AACL,QAAA,IAAIu/D,QAAQ,CAAC59D,KAAK,KAAK,CAAC,EAAE;AACtB,UAAA,OAAA;AACJ,SAAA;AACA;AACA49D,QAAAA,QAAQ,CAAC79D,KAAK,GAAGvC,IAAI,GAAG,CAAC,CAAA;QACzBA,IAAI,IAAIogE,QAAQ,CAAC59D,KAAK,CAAA;AACtBtC,QAAAA,EAAE,CAAC66D,iBAAiB,CAAC95D,QAAQ,CAAC,CAACZ,KAAK,CAACgC,OAAO,EAAE,CAAC,GAAG,CAAC,CAAA;QACnD,IAAI09D,eAAe,CAACjwD,QAAQ,EAAE;UAC1BxR,KAAK,GAAGyhE,eAAe,CAACjwD,QAAQ,CAAClT,IAAI,CAACmjE,eAAe,CAACt7D,OAAO,IAAIvE,EAAE,EAAEG,KAAK,EAAEC,GAAG,EAAE8/D,QAAQ,EAAEv/D,CAAC,CAAC,CAAA;UAC7Fu/D,QAAQ,CAAC9hE,KAAK,GAAGA,KAAK,IAAI,IAAI,GAAG,EAAE,GAAGA,KAAK,CAAA;AAC/C,SAAA;AACA;AACA,QAAA,IAAIyhE,eAAe,CAAChiE,IAAI,KAAK,KAAK,KAAK,CAACgiE,eAAe,CAACpvD,SAAS,IAAIovD,eAAe,CAACpvD,SAAS,KAAK,CAAC,CAAC,EAAE;UACnGyvD,QAAQ,CAACt+D,aAAa,IAAI,uBAAuB,GAAGzB,KAAK,CAACqe,MAAM,EAAE,CAAA;AAClE,UAAA,IAAIrN,UAAE,CAACqpD,SAAS,CAACr6D,KAAK,EAAE,IAAI,CAAC,GAAGo6D,KAAK,KAAK,CAAC,EAAE;YACzC2F,QAAQ,CAACt+D,aAAa,IAAI,4BAA4B,CAAA;AAC1D,WAAA;AACJ,SAAA;AACAvC,QAAAA,KAAK,CAAClI,IAAI,CAAC+oE,QAAQ,CAAC,CAAA;OACvB,CAAA;IACL,IAAIpgE,IAAI,GAAG,CAAC,CAAA;AACZE,IAAAA,EAAE,CAAC66D,iBAAiB,CAAC95D,QAAQ,CAAC,GAAG,EAAE,CAAA;AACnC,IAAA,IAAIw7D,WAAW,EAAE;AACbA,MAAAA,WAAW,CAAC5jE,OAAO,CAAC,CAACunE,QAAQ,EAAEv/D,CAAC,KAAKo/D,iBAAiB,CAACG,QAAQ,CAAC//D,KAAK,EAAE+/D,QAAQ,CAAC9/D,GAAG,EAAEO,CAAC,EAAEA,CAAC,KAAK47D,WAAW,CAACpiE,MAAM,GAAG,CAAC,EAAE+lE,QAAQ,CAAC,CAAC,CAAA;AACpI,KAAC,MACI;AACDlgE,MAAAA,EAAE,CAACy/D,eAAe,CAAC1+D,QAAQ,EAAEg/D,iBAAiB,CAAC,CAAA;AACnD,KAAA;AACA,IAAA,OAAO1gE,KAAK,CAAA;AAChB,GAAA;EACA,IAAI0S,UAAUA,GAAG;AACb,IAAA,OAAQ,iBAAiB,IAAI,IAAI,GAAI,IAAI,CAACzB,OAAO,CAAC,IAAI,CAACrP,eAAe,CAAC,GAAG,IAAI,CAAC6P,YAAY,CAAA;AAC/F,GAAA;EACA,IAAIA,YAAYA,GAAG;IACf,OAAO,IAAI,CAACR,OAAO,CAAC,IAAI,CAACA,OAAO,CAACnW,MAAM,GAAG,CAAC,CAAC,CAAA;AAChD,GAAA;EACA,IAAI8kE,YAAYA,GAAG;AACf,IAAA,OAAO,IAAI,CAAC3uD,OAAO,CAACnW,MAAM,GAAG,CAAC,CAAA;AAClC,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;EACI,IAAIglE,gBAAgBA,GAAG;IACnB,MAAM;AAAE7uD,MAAAA,OAAAA;AAAQ,KAAC,GAAG,IAAI,CAAA;AACxB,IAAA,IAAIA,OAAO,EAAE;MACT,OAAOhT,IAAI,CAAC5B,GAAG,CAAC4U,OAAO,CAACnW,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,CAAA;AAC1C,KAAA;AACA,IAAA,OAAO,IAAI,CAAA;AACf,GAAA;AACA;AACA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACIulE,WAAWA,CAACx9D,IAAI,EAAE;AACd,IAAA,MAAMi+D,SAAS,GAAG,IAAI,CAAChB,gBAAgB,CAAA;AACvC;AACA;IACA,OAAOgB,SAAS,IAAI,IAAI,IAAI,IAAI,CAACtF,iBAAiB,CAACsF,SAAS,CAAC,IAAI,IAAI,CAACtF,iBAAiB,CAACsF,SAAS,CAAC,CAACj+D,IAAI,CAACC,OAAO,EAAE,CAAC,IAAI,KAAK,CAAA;AAC/H,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIs9D,eAAeA,CAAC1+D,QAAQ,EAAEwiB,UAAU,EAAEhf,OAAO,GAAG,IAAI,EAAE;IAClD,MAAM;MAAE+L,OAAO;AAAE+f,MAAAA,QAAAA;AAAS,KAAC,GAAG,IAAI,CAAA;AAClC,IAAA,IAAI/f,OAAO,EAAE;AACT;AACA,MAAA,IAAIvP,QAAQ,KAAKuP,OAAO,CAACnW,MAAM,GAAG,CAAC,EAAE;AACjCk2B,QAAAA,QAAQ,CAAC13B,OAAO,CAAC,CAAC44D,CAAC,EAAExvD,KAAK,KACtBwhB,UAAU,CAAC7mB,IAAI,CAAC6H,OAAO,EAAEgtD,CAAC,CAAC33D,SAAS,EAAE23D,CAAC,CAAC13D,OAAO,EAAEkI,KAAK,EAAEA,KAAK,KAAKsuB,QAAQ,CAAC3pB,KAAK,GAAG,CAAC,CACxF,CAAC,CAAA;AACL,OAAA;AACA;WACK;AACD,QAAA,MAAMwK,MAAM,GAAGZ,OAAO,CAACvP,QAAQ,CAAC,CAAA;AAChCsvB,QAAAA,QAAQ,CAAC/M,kBAAkB,CAACpS,MAAM,CAACrT,IAAI,EAAEqT,MAAM,CAACT,SAAS,EAAE8S,UAAU,EAAEhf,OAAO,CAAC,CAAA;AACnF,OAAA;AACJ,KAAA;AACJ,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACI67D,EAAAA,mBAAmBA,CAAC78C,UAAU,EAAEhf,OAAO,EAAE;IACrC,IAAI,CAACk7D,eAAe,CAAC,IAAI,CAACx+D,eAAe,EAAEsiB,UAAU,EAAEhf,OAAO,CAAC,CAAA;AACnE,GAAA;AACA;AACA;EACAw2D,iBAAiBA,CAACxmD,MAAM,EAAE;IACtB,MAAMvU,EAAE,GAAG,IAAI,CAAA;AACf;IACAA,EAAE,CAACsQ,OAAO,GAAG,IAAI,CAAA;AACjBtQ,IAAAA,EAAE,CAAC6G,SAAS,CAAC,UAAU,CAAC,CAAA;AACxB;AACA;AACA;IACA7G,EAAE,CAACgB,UAAU,GAAGuT,MAAM,CAAA;AACtBhe,IAAAA,MAAM,CAACC,MAAM,CAACwJ,EAAE,EAAE;MACdsQ,OAAO,EAAWiE,MAAM,CAACjE,OAAO;MAChCkB,cAAc,EAAI+C,MAAM,CAAC/C,cAAc;MACvCvQ,eAAe,EAAGsT,MAAM,CAACtT,eAAe;MACxC6Q,SAAS,EAAS9R,EAAE,CAACqlB,YAAY,GAAG9Q,MAAM,CAAC3D,SAAS,GAAG2D,MAAM,CAAC1D,UAAAA;AAClE,KAAC,CAAC,CAAA;AACF7Q,IAAAA,EAAE,CAAC46D,gBAAgB,GAAG56D,EAAE,CAAC6R,QAAQ,CAAA;AACrC,GAAA;AACA;AACJ,CAAA;;AACA4oD,iBAAiB,CAAC17D,MAAM,GAAG,mBAAmB;;ACvxB9C;AACA,MAAMshE,QAAQ,GAAG,IAAIlmD,IAAI,EAAE,CAAA;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAey4B,CAAAA,MAAM,IAAI,MAAM0tB,kBAAkB,UAAU1tB,MAAM,IAAIx8C,MAAI,EAAE;EACvE,OAAO8E,KAAK,GAAG,oBAAoB,CAAA;AACnC,EAAA,OAAOsE,YAAY,GAAG;AAClB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ4e,IAAAA,IAAI,EAAG,KAAA;GACV,CAAA;AACD;EACAmiD,OAAOA,CAAC94C,CAAC,EAAE;AACP,IAAA,IAAI,IAAI,CAAC1jB,GAAG,IAAI,IAAI,CAACshB,YAAY,EAAE;AAC/BoC,MAAAA,CAAC,GAAG,IAAI,CAACtjB,iBAAiB,CAACqK,SAAS,GAAGiZ,CAAC,CAAA;AAC5C,KAAA;AACA,IAAA,OAAOA,CAAC,CAAA;AACZ,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIkJ,EAAAA,qBAAqBA,CAACzJ,UAAU,EAAEjF,cAAc,EAAEqX,KAAK,GAAG,IAAI,EAAEykC,eAAe,GAAG,KAAK,EAAEyC,SAAS,GAAG,KAAK,EAAE;IACxG,IAAI,CAAClnC,KAAK,EAAE;MACRpS,UAAU,GAAG,IAAI,CAACvX,kBAAkB,CAAC8wD,6BAA6B,CAACv5C,UAAU,CAAC,CAAA;AAClF,KAAA;AACA;IACA,IAAI,CAACs5C,SAAS,EAAE;AACZt5C,MAAAA,UAAU,GAAG,IAAI,CAACq5C,OAAO,CAACr5C,UAAU,CAAC,CAAA;AACzC,KAAA;IACA,OAAO,IAAI,CAAC/iB,iBAAiB,CAACkjB,mBAAmB,CAACH,UAAU,EAAEjF,cAAc,EAAE87C,eAAe,CAAC,CAAA;AAClG,GAAA;EACA1kC,gBAAgBA,CAACntB,OAAO,EAAE;IACtB,OAAO,IAAI,CAACykB,qBAAqB,CAACzkB,OAAO,CAAC7J,KAAK,EAAE6J,OAAO,CAAC+V,cAAc,EAAE/V,OAAO,CAACotB,KAAK,EAAEptB,OAAO,CAAC6xD,eAAe,EAAE7xD,OAAO,CAACs0D,SAAS,CAAC,CAAA;AACvI,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIr2C,EAAAA,aAAaA,CAACu2C,EAAE,EAAEz+C,cAAc,EAAEqX,KAAK,GAAG,IAAI,EAAEykC,eAAe,GAAG,KAAK,EAAE;AACrE,IAAA,OAAO,IAAI,CAACpuD,kBAAkB,CAACwa,aAAa,CAACu2C,EAAE,EAAEz+C,cAAc,EAAEqX,KAAK,EAAEykC,eAAe,CAAC,CAAA;AAC5F,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI3G,mBAAmBA,CAACR,CAAC,EAAE30C,cAAc,EAAE87C,eAAe,GAAG,KAAK,EAAE;AAC5D,IAAA,OAAO,IAAI,CAAC5zC,aAAa,CAAC,CAACysC,CAAC,CAACrmC,KAAK,EAAEqmC,CAAC,CAACnmC,KAAK,CAAC,EAAExO,cAAc,EAAE,KAAK,EAAE87C,eAAe,CAAC,CAAA;AACzF,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIzpC,6BAA6BA,CAACqsC,IAAI,EAAE1+C,cAAc,EAAEjlB,QAAQ,EAAE+gE,eAAe,GAAG,KAAK,EAAE;IACnF,MACI/9D,EAAE,GAAiB,IAAI;AACvB,MAAA;AAAEqlB,QAAAA,YAAAA;AAAa,OAAC,GAAGrlB,EAAE;MACrB+tC,QAAQ,GAAW1oB,YAAY,GAAGs7C,IAAI,CAACl5C,CAAC,GAAGk5C,IAAI,CAAClvD,GAAG;MACnDy8B,MAAM,GAAa7oB,YAAY,GAAGs7C,IAAI,CAACztC,KAAK,GAAGytC,IAAI,CAAChvD,MAAM,CAAA;IAC9D,IAAIxR,KAAK,EAAEC,GAAG,CAAA;AACd;IACA,IAAI2tC,QAAQ,IAAI,CAAC,IAAIG,MAAM,GAAGluC,EAAE,CAACmE,iBAAiB,CAACqK,SAAS,EAAE;MAC1DrO,KAAK,GAAGH,EAAE,CAAC2wB,qBAAqB,CAACod,QAAQ,EAAE9rB,cAAc,EAAE,IAAI,CAAC,CAAA;MAChE7hB,GAAG,GAAGJ,EAAE,CAAC2wB,qBAAqB,CAACud,MAAM,EAAEjsB,cAAc,EAAE,IAAI,CAAC,CAAA;AAChE,KAAA;AACA;AAAA,SACK,IAAI8rB,QAAQ,GAAG,CAAC,EAAE;AACnB3tC,MAAAA,GAAG,GAAGJ,EAAE,CAAC2wB,qBAAqB,CAACud,MAAM,EAAEjsB,cAAc,EAAE,IAAI,EAAE87C,eAAe,CAAC,CAAA;AAC7E59D,MAAAA,KAAK,GAAGC,GAAG,IAAIrC,UAAU,CAACuF,GAAG,CAAClD,GAAG,EAAE,CAACpD,QAAQ,EAAE,IAAI,CAAC,CAAA;AACvD,KAAA;AACA;SACK;AACDmD,MAAAA,KAAK,GAAGH,EAAE,CAAC2wB,qBAAqB,CAACod,QAAQ,EAAE9rB,cAAc,EAAE,IAAI,EAAE87C,eAAe,CAAC,CAAA;AACjF39D,MAAAA,GAAG,GAAGD,KAAK,IAAIpC,UAAU,CAACuF,GAAG,CAACnD,KAAK,EAAEnD,QAAQ,EAAE,IAAI,CAAC,CAAA;AACxD,KAAA;IACA,OAAO;MACHmD,KAAK;AAAEC,MAAAA,GAAAA;KACV,CAAA;AACL,GAAA;AACA;AACA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACIkpC,EAAAA,iBAAiBA,CAACzvC,OAAO,EAAED,SAAS,EAAE;AAClC,IAAA;AACI;AACAC,IAAAA,OAAO,CAAC8kB,QAAQ,EAAE,KAAK,CAAC,IAAI9kB,OAAO,CAACujE,UAAU,EAAE,KAAK,CAAC;AACtD;AACC,IAAA,CAACxjE,SAAS,IAAI,EAAEC,OAAO,CAAC+mE,OAAO,EAAE,KAAKhnE,SAAS,CAACgnE,OAAO,EAAE,IAAI/mE,OAAO,CAACmd,QAAQ,EAAE,KAAKpd,SAAS,CAACod,QAAQ,EAAE,IAAInd,OAAO,CAAC8lB,OAAO,EAAE,KAAK/lB,SAAS,CAAC+lB,OAAO,EAAE,CAAC,CAAC;AACxJ;IACA,CAAC5hB,UAAU,CAAC8iE,sBAAsB,CAAC,IAAI,CAACjsD,iBAAiB,CAAC,EAC5D;AACE;MACA/a,OAAO,GAAGkE,UAAU,CAACuF,GAAG,CAACzJ,OAAO,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,CAAA;AAChD,KAAA;AACA,IAAA,OAAOA,OAAO,CAAA;AAClB,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIm7B,EAAAA,mBAAmBA,CAACn7B,OAAO,EAAED,SAAS,EAAE;AACpC,IAAA,OAAO,IAAI,CAACk7B,gBAAgB,CAAC,IAAI,CAACwU,iBAAiB,CAACzvC,OAAO,EAAED,SAAS,CAAC,CAAC,CAAA;AAC5E,GAAA;AACA;AACA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIo0C,EAAAA,qBAAqBA,CAAC9rC,IAAI,EAAEgK,OAAO,GAAG,IAAI,EAAE;IACxC,MACIlM,EAAE,GAAsB,IAAI;AAC5B,MAAA;AAAEmE,QAAAA,iBAAAA;AAAkB,OAAC,GAAGnE,EAAE;AAC1B,MAAA;QACI2b,YAAY;QACZkC,OAAO;QACPE,KAAK;QACLnkB,SAAS;QACTC,OAAO;AACPgE,QAAAA,IAAAA;OACH,GAAuBmC,EAAE,CAACqwB,QAAQ;AACnC1O,MAAAA,MAAM,GAAkBzf,IAAI,CAAC4+D,OAAO,EAAE,CAAA;AAC1C;IACA,IAAI50D,OAAO,KAAK,IAAI,EAAE;AAClBA,MAAAA,OAAO,GAAG;AACNotB,QAAAA,KAAK,EAAG,IAAA;OACX,CAAA;AACL,KAAC,MACI,IAAI,CAACptB,OAAO,EAAE;AACfA,MAAAA,OAAO,GAAG;AACNotB,QAAAA,KAAK,EAAG,KAAA;OACX,CAAA;AACL,KAAC,MACI,IAAI,EAAE,OAAO,IAAIptB,OAAO,CAAC,EAAE;MAC5BA,OAAO,CAACotB,KAAK,GAAG,IAAI,CAAA;AACxB,KAAA;AACA,IAAA,IAAIgjC,GAAG,CAAA;AACP,IAAA,IAAI,EAAEp6D,IAAI,YAAYiY,IAAI,CAAC,EAAE;AACzBkmD,MAAAA,QAAQ,CAACU,OAAO,CAAC7+D,IAAI,CAAC,CAAA;AACtBA,MAAAA,IAAI,GAAGm+D,QAAQ,CAAA;AACnB,KAAA;AACA;AACA,IAAA,IAAI1kD,YAAY,IACZzZ,IAAI,CAACqd,iBAAiB,EAAE,KAAK3lB,SAAS,CAAC2lB,iBAAiB,EAAE,IAC1D3lB,SAAS,CAAC2lB,iBAAiB,EAAE,KAAK1lB,OAAO,CAAC0lB,iBAAiB,EAAE,IAC7DxhB,UAAU,CAAC2iB,sBAAsB,CAAC7iB,IAAI,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,EACvD;AACE,MAAA,IAAI8jB,MAAM,GAAG9D,OAAO,IAAI8D,MAAM,GAAG5D,KAAK,EAAE;AACpC,QAAA,OAAO,CAAC,CAAC,CAAA;AACb,OAAA;AACAu+C,MAAAA,GAAG,GAAG,CAAC36C,MAAM,GAAG9D,OAAO,KAAKE,KAAK,GAAGF,OAAO,CAAC,GAAG1Z,iBAAiB,CAACqK,SAAS,CAAA;AAC9E,KAAA;AACA;SACK;MACD8tD,GAAG,GAAGn4D,iBAAiB,CAACqjB,mBAAmB,CAACtlB,IAAI,EAAEgK,OAAO,CAAC,CAAA;AAC9D,KAAA;AACA;AACA,IAAA,IAAIlM,EAAE,CAAC+D,GAAG,IAAI/D,EAAE,CAACqlB,YAAY,EAAE;AAC3Bi3C,MAAAA,GAAG,GAAGn4D,iBAAiB,CAACqK,SAAS,GAAG8tD,GAAG,CAAA;AAC3C,KAAA;AACA,IAAA,IAAI,CAACpwD,OAAO,CAACotB,KAAK,EAAE;MAChBgjC,GAAG,GAAGt8D,EAAE,CAAC2P,kBAAkB,CAACqxD,yBAAyB,CAAC1E,GAAG,CAAC,CAAA;AAC9D,KAAA;AACA,IAAA,OAAOA,GAAG,CAAA;AACd,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACI2E,EAAAA,mBAAmBA,CAACrnE,SAAS,EAAEC,OAAO,EAAE;IACpC,OAAO,IAAI,CAACsK,iBAAiB,CAACs4D,uBAAuB,CAAC7iE,SAAS,EAAEC,OAAO,CAAC,CAAA;AAC7E,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,IAAIqnE,kBAAkBA,GAAG;IACrB,MAAM;MAAE7wC,QAAQ;AAAE8wC,MAAAA,gBAAAA;AAAiB,KAAC,GAAG,IAAI,CAAA;AAC3C;AACA;IACA,IAAI9wC,QAAQ,CAAC1U,YAAY,EAAE;AACvB;AACA,MAAA,MAAMylD,cAAc,GAAG,CAACD,gBAAgB,CAACpgE,QAAQ,GAAGogE,gBAAgB,CAACE,UAAU,GAAG,CAAC,IAAIF,gBAAgB,CAACG,UAAU,CAAA;AAClH,MAAA,OAAO,IAAInnD,IAAI,CAACkW,QAAQ,CAACxS,OAAO,GAAG,CAACwS,QAAQ,CAACtS,KAAK,GAAGsS,QAAQ,CAACxS,OAAO,IAAIujD,cAAc,CAAC,CAAA;AAC5F,KAAA;AACA,IAAA,OAAO,IAAI,CAACzwC,qBAAqB,CAACwwC,gBAAgB,CAACpgE,QAAQ,GAAGogE,gBAAgB,CAACE,UAAU,GAAG,CAAC,CAAC,CAAA;AAClG,GAAA;EACA,IAAIE,wBAAwBA,GAAG;IAC3B,OAAO,IAAI,CAACC,gBAAgB,KAAK,IAAI,CAACA,gBAAgB,GAAG,IAAI,CAACN,kBAAkB,CAAC,CAAA;AACrF,GAAA;AACA;AACA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,IAAIlwD,cAAcA,GAAG;AACjB,IAAA,OAAO,IAAI,CAACqf,QAAQ,CAACjZ,UAAU,CAAA;AACnC,GAAA;EACA,IAAIpG,cAAcA,CAACoG,UAAU,EAAE;IAC3B,IAAI,CAACiZ,QAAQ,CAACjZ,UAAU,GAAI,OAAOA,UAAU,KAAK,QAAQ,GAAI;AAC1D3G,MAAAA,SAAS,EAAG2G,UAAU;AACtBvZ,MAAAA,IAAI,EAAQ,IAAI,CAACwyB,QAAQ,CAACjZ,UAAU,CAACvZ,IAAAA;AACzC,KAAC,GAAGuZ,UAAU,CAAA;AAClB,GAAA;AACA;AACA;EACA,IAAIgH,IAAIA,GAAG;AAAA,IAAA,IAAAqjD,qBAAA,CAAA;AACP,IAAA,OAAO,CAAAA,CAAAA,qBAAA,GAAI,IAAA,CAAC5xD,kBAAkB,MAAA4xD,IAAAA,IAAAA,qBAAA,KAAvBA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,qBAAA,CAAyBrjD,IAAI,KAAI,IAAI,CAACwhD,KAAK,CAAA;AACtD,GAAA;EACA8B,UAAUA,CAACtjD,IAAI,EAAE;AACb,IAAA,IAAI,CAAC,IAAI,CAAC9X,aAAa,EAAE;AACrB,MAAA,IAAI,CAACnC,iBAAiB,CAACia,IAAI,GAAGA,IAAI,CAAA;MAClC,IAAI,CAACiS,QAAQ,CAACxW,cAAc,GAAGuE,IAAI,IAAI,IAAI,CAACiW,SAAS,CAAA;AACzD,KAAA;AACJ,GAAA;AACA;AACAqb,EAAAA,2BAA2BA,CAAC;IAAEjhC,OAAO;IAAEmnC,UAAU;AAAEoY,IAAAA,OAAAA;AAAQ,GAAC,EAAE;AAC1D;AACA,IAAA,IAAI,CAAC,IAAI,CAAC2T,iBAAiB,EAAE;MACzB,IAAI,CAACH,gBAAgB,GAAG,IAAI,CAAA;AAChC,KAAA;AACJ,GAAA;AACA;AACA;AACA;EACA,IAAI79D,WAAWA,GAAG,EAAC;AACvB,CAAC;;ACnTD;AACA;AACA;AACA,MAAM;AAAEgoD,EAAAA,YAAAA;AAAa,CAAC,GAAGnmD,WAAW,CAAA;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAeotC,CAAAA,MAAM,IAAI,MAAMgvB,iBAAiB,UAAUhvB,MAAM,IAAIx8C,MAAI,EAAE;AACtE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI,OAAO8E,KAAK,GAAG,mBAAmB,CAAA;AAClC;AACA,EAAA,OAAOsE,YAAY,GAAG;AAClB;AACR;AACA;AACA;AACA;AACA;AACQqiE,IAAAA,eAAe,EAAG;AACdj9D,MAAAA,OAAO,EAAG;AACN;AACA;AACAk9D,QAAAA,KAAKA,CAACC,EAAE,EAAEC,EAAE,EAAE;AACV;AACA;UACA,OAAO,CAAAD,EAAE,KAAA,IAAA,IAAFA,EAAE,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAFA,EAAE,CAAEhgE,KAAK,OAAKigE,EAAE,KAAA,IAAA,IAAFA,EAAE,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAFA,EAAE,CAAEjgE,KAAK,CAAA,IAC1B,CAAAggE,EAAE,KAAFA,IAAAA,IAAAA,EAAE,KAAFA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,EAAE,CAAEE,eAAe,OAAKD,EAAE,KAAFA,IAAAA,IAAAA,EAAE,uBAAFA,EAAE,CAAEC,eAAe,CAAA,IAC3C,EAAE,CAAC,CAAAF,EAAE,KAAFA,IAAAA,IAAAA,EAAE,KAAFA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,EAAE,CAAEG,aAAa,KAAI,CAAC,KAAK,CAAAF,EAAE,KAAA,IAAA,IAAFA,EAAE,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAFA,EAAE,CAAEE,aAAa,KAAI,CAAC,CAAC,CAAC,CAAA;AAC9D,SAAA;AACJ,OAAA;KACH;AACD;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQC,IAAAA,6BAA6B,EAAG,IAAA;GACnC,CAAA;AACD,EAAA,OAAOC,UAAU,GAAG;AAChBC,IAAAA,eAAe,EAAG;AACdjsB,MAAAA,WAAW,EAAG,qBAAqB;AACnC6D,MAAAA,SAAS,EAAK,qBAAqB;AACnCqoB,MAAAA,SAAS,EAAK,qBAAqB;AACnCC,MAAAA,OAAO,EAAO,qBAAqB;AACnC38D,MAAAA,KAAK,EAAS,qBAAqB;AACnCC,MAAAA,QAAQ,EAAM,qBAAqB;AACnCC,MAAAA,WAAW,EAAG,qBAAqB;AACnC6wD,MAAAA,SAAS,EAAK,qBAAqB;AACnCzc,MAAAA,QAAQ,EAAM,qBAAA;KACjB;AACDsoB,IAAAA,yBAAyB,EAAG;AACxBC,MAAAA,UAAU,EAAG,+BAA+B;AAC5CC,MAAAA,UAAU,EAAG,+BAA+B;AAC5C/8D,MAAAA,OAAO,EAAM,IAAA;AACjB,KAAA;GACH,CAAA;AACD,EAAA,OAAOsrC,SAAS,GAAG;AACf;AACA0xB,IAAAA,gBAAgB,EAAG,KAAA;GACtB,CAAA;AACD;AACAC,EAAAA,aAAa,GAAG,IAAIzuD,GAAG,EAAE,CAAA;AACzB;AACA;AACA;AACJ;AACA;AACA;AACA;AACI0uD,EAAAA,aAAaA,GAAG;IACZ,MACI7iE,EAAE,GAAG,IAAI;AACT,MAAA;QACIqiE,eAAe;AACfG,QAAAA,yBAAAA;AACJ,OAAC,GAAIxiE,EAAE,CAAA;AACX;IACAqiE,eAAe,CAACl/D,OAAO,GAAGq/D,yBAAyB,CAACr/D,OAAO,GAAGnD,EAAE,CAACumB,sBAAsB,CAAA;AACvF87C,IAAAA,eAAe,CAAC99D,OAAO,GAAGi+D,yBAAyB,CAACj+D,OAAO,GAAGvE,EAAE,CAAA;AAChEwF,IAAAA,WAAW,CAACC,EAAE,CAAC48D,eAAe,CAAC,CAAA;AAC/B78D,IAAAA,WAAW,CAACC,EAAE,CAAC+8D,yBAAyB,CAAC,CAAA;AACzC;AACA;AACA;AACA;AACA;IACA,IAAIxgC,aAAa,CAAC8gC,+BAA+B,EAAE;MAC/Ct9D,WAAW,CAACC,EAAE,CAAC;AACXtC,QAAAA,OAAO,EAAG+iB,QAAQ;AAClB0nC,QAAAA,MAAM,EAAI,kBAAkB;AAC5BjoD,QAAAA,OAAO,EAAG,IAAI;AACdpB,QAAAA,OAAO,EAAGvE,EAAAA;AACd,OAAC,CAAC,CAAA;AACN,KAAA;AACJ,GAAA;AACA;AACA;AACAs6C,EAAAA,2BAA2BA,CAACliB,YAAY,EAAEzsB,KAAK,EAAE;AAC7C,IAAA,MAAM,IAAIvR,KAAK,CAAC,uBAAuB,CAAC,CAAA;AAC5C,GAAA;AACA2oE,EAAAA,2BAA2BA,CAAC7C,QAAQ,EAAEv0D,KAAK,EAAE;AACzC,IAAA,MAAM,IAAIvR,KAAK,CAAC,uBAAuB,CAAC,CAAA;AAC5C,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;EACI4oE,mBAAmBA,CAACr3D,KAAK,EAAE;IACvB,MACI3L,EAAE,GAAgB,IAAI;AACtB6hE,MAAAA,eAAe,GAAG7hE,EAAE,CAACijE,uBAAuB,CAACt3D,KAAK,CAAC,CAAA;AACvD;AACA;IACA3L,EAAE,CAACmqC,gBAAgB,GAAGx+B,KAAK,CAAA;AAC3B;AACA,IAAA,IAAIk2D,eAAe,EAAE;AACjB;AACA;AACA7hE,MAAAA,EAAE,CAAC0D,OAAO,CAAE,CAAA,EAAEm+D,eAAe,CAACzpC,YAAY,GAAGp4B,EAAE,CAAC2oB,kBAAkB,GAAG,UAAW,GAAEgjC,YAAY,CAAChgD,KAAK,CAACxQ,IAAI,CAAC,IAAI0N,YAAY,CAACmD,UAAU,CAACL,KAAK,CAACxQ,IAAI,CAAE,CAAC,CAAA,EAAE0mE,eAAe,CAAC,CAAA;AACzK,KAAA;AACA;IACA7hE,EAAE,CAAC6hE,eAAe,GAAGA,eAAe,CAAA;AACxC,GAAA;EACAqB,6BAA6BA,CAACv3D,KAAK,EAAE;IACjC,IAAIA,KAAK,CAACE,MAAM,CAAC3I,aAAa,KAAK,IAAI,CAAC4pC,gBAAgB,EAAE;AACtD,MAAA,IAAI,CAACk2B,mBAAmB,CAACr3D,KAAK,CAAC,CAAA;AACnC,KAAA;AACJ,GAAA;AACA;AACJ;AACA;AACA;AACA;AACIg3D,EAAAA,gBAAgBA,CAAC;AAAE92D,IAAAA,MAAAA;AAAO,GAAC,EAAE;AAAA,IAAA,IAAAs3D,gBAAA,CAAA;IACzB,MAAMnjE,EAAE,GAAG,IAAI,CAAA;AACf;AACA;AACA;AACA;AACA,IAAA,IACI6L,MAAM,IAAI7L,EAAE,CAACmiE,6BAA6B,IAAI,EAAAgB,CAAAA,gBAAA,GAACnjE,EAAE,CAAC+rB,QAAQ,CAACoZ,GAAG,MAAAg+B,IAAAA,IAAAA,gBAAA,KAAfA,KAAAA,CAAAA,IAAAA,gBAAA,CAAiBC,QAAQ,CACxE,IAAA,CAACpjE,EAAE,CAACqjE,QAAQ,CAACtjD,IAAI,CAAC5H,CAAC,IAAA;AAAA,MAAA,IAAAmrD,eAAA,CAAA;AAAA,MAAA,OAAA,CAAAA,eAAA,GAAInrD,CAAC,CAAC4T,QAAQ,CAACoZ,GAAG,MAAA,IAAA,IAAAm+B,eAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAdA,eAAA,CAAgBF,QAAQ,CAAA;AAAA,KAAA,CAAC,KAC/Cv3D,MAAM,CAACu1B,QAAQ,CAACphC,EAAE,CAACmD,OAAO,CAAC,IAAInD,EAAE,CAACstC,WAAW,CAAClM,QAAQ,CAACv1B,MAAM,CAAC,CAAC,EAClE;MACE,MAAM;QAAEg2D,eAAe;AAAE13B,QAAAA,gBAAAA;AAAiB,OAAC,GAAGnqC,EAAE,CAAA;AAChD,MAAA,IAAI6hE,eAAe,EAAE;QAAA,IAAA0B,qBAAA,EAAAC,sBAAA,CAAA;AACjB,QAAA,MACI5gE,aAAa,GAAGyE,SAAS,CAACklB,gBAAgB,CAACs1C,eAAe,CAACtzC,QAAQ,CAAC+M,OAAO,EAAEumC,eAAe,CAACtzC,QAAQ,CAACgN,OAAO,CAAC;UAC9GkoC,YAAY,GAAI,IAAIzhC,aAAa,CAAC0hC,uBAAuB,CAAC,aAAa,EAAEv5B,gBAAgB,CAAC;AAC1Fw5B,UAAAA,UAAU,GAAM,IAAIC,UAAU,CAAC,WAAW,EAAEz5B,gBAAgB,CAAC,CAAA;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA5zC,QAAAA,MAAM,CAACkyC,cAAc,CAACg7B,YAAY,EAAE,WAAW,EAAE;UAC7CrlE,KAAK,EAAG,CAAAmlE,CAAAA,qBAAA,GAAAM,YAAY,CAACC,kBAAkB,MAAA,IAAA,IAAAP,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAA/BA,qBAAA,CAAiCQ,SAAS,MAAAP,CAAAA,sBAAA,GAAIK,YAAY,CAACG,YAAY,MAAAR,IAAAA,IAAAA,sBAAA,KAAzBA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,sBAAA,CAA2BS,UAAU,CAAI,IAAA,CAAA;AACnG,SAAC,CAAC,CAAA;AACF;AACAR,QAAAA,YAAY,CAACS,eAAe,GAAGP,UAAU,CAACO,eAAe,GAAG,IAAI,CAAA;AAChE;QACAthE,aAAa,KAAA,IAAA,IAAbA,aAAa,KAAbA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,aAAa,CAAEuhE,aAAa,CAACV,YAAY,CAAC,CAAA;QAC1C7gE,aAAa,KAAA,IAAA,IAAbA,aAAa,KAAbA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,aAAa,CAAEuhE,aAAa,CAACR,UAAU,CAAC,CAAA;AAC5C,OAAA;AACJ,KAAA;AACJ,GAAA;AACAS,EAAAA,qBAAqBA,CAACt6C,OAAO,EAAEu6C,UAAU,EAAE;AACvC;AACR;AACA;AACA;AACA;AACA;AACQ,IAAA,IAAI,CAAC3gE,OAAO,CAAC,uBAAuB,EAAE;MAAE2gE,UAAU;AAAEv6C,MAAAA,OAAAA;AAAQ,KAAC,CAAC,CAAA;IAC9D,IAAI,CAACA,OAAO,EAAE;AACV,MAAA,IAAI,CAACpmB,OAAO,CAAC,oBAAoB,CAAC,CAAA;AACtC,KAAA;AACJ,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIu/D,uBAAuBA,CAAC10C,QAAQ,EAAE;IAC9B,MACIvuB,EAAE,GAAa,IAAI;MACnBo4B,YAAY,GAAG7J,QAAQ,CAAC1iB,MAAM,CAACC,OAAO,CAAC9L,EAAE,CAACm0B,kBAAkB,CAAC;AAC7DmwC,MAAAA,WAAW,GAAItkE,EAAE,CAACukE,0BAA0B,CAACh2C,QAAQ,CAAC,CAAA;AAC1D,IAAA,IAAI+1C,WAAW,EAAE;MACb,MAAME,WAAW,GAAGxkE,EAAE,CAACo3D,mBAAmB,CAAC7oC,QAAQ,EAAE,OAAO,CAAC,CAAA;MAC7D,IAAI,CAACi2C,WAAW,EAAE;AACd,QAAA,OAAA;AACJ,OAAA;AACA,MAAA,MACItE,QAAQ,GAAMuE,YAAY,CAACxsE,GAAG,CAACqsE,WAAW,CAAC;AAC3CI,QAAAA,WAAW,GAAGtsC,YAAY,GAAGp4B,EAAE,CAACs6C,2BAA2B,CAACliB,YAAY,EAAE7J,QAAQ,CAAC,GAAGvuB,EAAE,CAAC+iE,2BAA2B,CAAC7C,QAAQ,EAAE3xC,QAAQ,CAAC,CAAA;MAC5I,IAAI,CAACm2C,WAAW,EAAE;AACd,QAAA,OAAA;AACJ,OAAA;MACA,MACI3iE,KAAK,GAAO/B,EAAE,CAACO,UAAU,GAAGP,EAAE,CAACyE,aAAa,CAAC89C,OAAO,CAACmiB,WAAW,CAACx6D,cAAc,CAAC,GAAGg2D,QAAQ,CAAClW,GAAG,CAAC2a,SAAS;QACzG7iE,SAAS,GAAG9B,EAAE,CAACqwB,QAAQ,CAAC7O,eAAe,CAACgjD,WAAW,CAAC;AACpDpnD,QAAAA,IAAI,GAAQpd,EAAE,CAACqwB,QAAQ,CAACxc,KAAK,CAACvW,IAAI,CAAC8L,KAAK,CAACtH,SAAS,CAAC,CAAC,CAAA;AACxD,MAAA,IAAIsb,IAAI,EAAE;QACN,OAAO;AACHwnD,UAAAA,iBAAiB,EAAG,IAAI;UACxBr2C,QAAQ;UACR6J,YAAY;UACZksC,WAAW;UACXviE,KAAK;UACLqb,IAAI;UACJtb,SAAS;AACTI,UAAAA,IAAI,EAAgBsiE,WAAW;UAC/BtC,aAAa,EAAO9kD,IAAI,CAACxjB,SAAS;UAClCirE,WAAW,EAASznD,IAAI,CAACvjB,OAAO;UAChCooE,eAAe,EAAK7kD,IAAI,CAAC0nD,WAAW;UACpC9a,GAAG,EAAiBkW,QAAQ,CAAClW,GAAG;AAChCr+C,UAAAA,KAAK,EAAe4iB,QAAQ;UAC5B,GAAGm2C,WAAAA;SACN,CAAA;AACL,OAAA;AACJ,KAAA;AACJ,GAAA;AACAH,EAAAA,0BAA0BA,CAAC;IAAE14D,MAAM;IAAE0vB,OAAO;AAAEpgC,IAAAA,IAAAA;AAAK,GAAC,EAAE;IAClD,MACI6E,EAAE,GAAa,IAAI;AACnB,MAAA;QACIO,UAAU;AACVusC,QAAAA,gBAAAA;AACJ,OAAC,GAAc9sC,EAAE;MACjBo4B,YAAY,GAAGvsB,MAAM,CAACC,OAAO,CAAC9L,EAAE,CAACymB,aAAa,CAAC,CAAA;AACnD;AACA,IAAA,IAAI2R,YAAY,EAAE;MACd,OAAOp4B,EAAE,CAAC+kE,OAAO,CAAC;AACd,QAAA,CAACxkE,UAAU,GAAG,KAAK,GAAG,QAAQ,GAAIA,UAAU,GAAG,CAAC,GAAGP,EAAE,CAACglE,gBAAgB,CAAC5sC,YAAY,CAAC;QACpF7wB,MAAM,EAA4BvH,EAAE,CAACovC,cAAAA;AACzC,OAAC,CAAC,CAAA;AACN,KAAA;AACA;AACA;AAAA,SACK,IAAItC,gBAAgB,CAAC1L,QAAQ,CAACv1B,MAAM,CAAC,EAAE;AACxC;AACA;AACA;AACA;AACA,MAAA,IAAIA,MAAM,KAAKihC,gBAAgB,IAAI3xC,IAAI,KAAK,WAAW,EAAE;AAAA,QAAA,IAAA8pE,qBAAA,CAAA;QACrD,OAAAA,CAAAA,qBAAA,GAAOjlE,EAAE,CAACuoB,UAAU,CAAC4hC,QAAQ,CAAC5uB,OAAO,EAAE,KAAK,CAAC,cAAA0pC,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAtCA,qBAAA,CAAwCF,OAAO,CAAC/kE,EAAE,CAACovC,cAAc,CAAC7kC,EAAE,CAAC,CAAA;AAChF,OAAA;AACJ,KAAC,MACI;AACD;AACA,MAAA,OAAOsB,MAAM,CAACigC,OAAO,CAAC,aAAa,CAAC,GAAGjgC,MAAM,CAAC8iC,iBAAiB,GAAG9iC,MAAM,CAACC,OAAO,CAAC9L,EAAE,CAACklE,gBAAgB,CAAC,CAAA;AACzG,KAAA;AACJ,GAAA;AACA;EACAx/B,iBAAiBA,CAACviC,OAAO,EAAE;AACvB,IAAA,OAAOA,OAAO,CAAC2I,OAAO,CAAC,IAAI,CAACo5D,gBAAgB,CAAC,CAAA;AACjD,GAAA;EACAC,yBAAyBA,CAACx5D,KAAK,EAAE;IAC7B,MAAMy5D,UAAU,GAAGz5D,KAAK,CAACE,MAAM,CAACC,OAAO,CAAC,6BAA6B,CAAC,CAAA;AACtE,IAAA,IAAIs5D,UAAU,EAAE;MACZ,MACIplE,EAAE,GAAa,IAAI;AACnBe,QAAAA,QAAQ,GAAOqkE,UAAU,CAACliE,aAAa,CAAC7B,OAAO,CAACE,cAAc;QAC9Dg7D,WAAW,GAAIv8D,EAAE,CAACmE,iBAAiB,CAACrB,YAAY,CAAC/B,QAAQ,CAAC;AAC1DgB,QAAAA,KAAK,GAAU/B,EAAE,CAACqwB,QAAQ,CAACvV,UAAU,GAAGyhD,WAAW,CAAC8I,SAAS,CAACjmE,IAAI,IAAIA,IAAI,CAAC2C,KAAK,IAAIqjE,UAAU,CAAC/jE,OAAO,CAACS,SAAS,CAAC,GAAGsjE,UAAU,CAAC/jE,OAAO,CAACS,SAAS;AAChJwjE,QAAAA,UAAU,GAAK/I,WAAW,CAACx6D,KAAK,CAAC;AACjCwjE,QAAAA,WAAW,GAAIvlE,EAAE,CAAC+rB,QAAQ,CAACw5C,WAAW,CAAA;AAC1C;MACA,IAAI,CAACA,WAAW,IAAI55D,KAAK,CAACxQ,IAAI,KAAKoqE,WAAW,CAACtN,YAAY,EAAE;AACzD,QAAA,IAAI,CAACv0D,OAAO,CAAE,CAAA,cAAA,EAAgBmF,YAAY,CAACmD,UAAU,CAACL,KAAK,CAACxQ,IAAI,CAAE,EAAC,EAAE;UACjEvB,SAAS,EAAG0rE,UAAU,CAACnlE,KAAK;UAC5BtG,OAAO,EAAKyrE,UAAU,CAACllE,GAAG;AAC1BuL,UAAAA,KAAAA;AACJ,SAAC,CAAC,CAAA;AACN,OAAA;AACJ,KAAA;AACJ,GAAA;EACA65D,kBAAkBA,CAAC75D,KAAK,EAAE;AACtB,IAAA,IAAI,CAACw5D,yBAAyB,CAACx5D,KAAK,CAAC,CAAA;AACrC,IAAA,KAAK,CAAC65D,kBAAkB,CAAC75D,KAAK,CAAC,CAAA;AACnC,GAAA;EACA6iD,cAAcA,CAAC7iD,KAAK,EAAE;AAClB,IAAA,IAAI,CAACw5D,yBAAyB,CAACx5D,KAAK,CAAC,CAAA;AACrC,IAAA,KAAK,CAAC6iD,cAAc,CAAC7iD,KAAK,CAAC,CAAA;AAC/B,GAAA;EACA8iD,iBAAiBA,CAAC9iD,KAAK,EAAE;AACrB,IAAA,IAAI,CAACw5D,yBAAyB,CAACx5D,KAAK,CAAC,CAAA;AACrC,IAAA,KAAK,CAAC8iD,iBAAiB,CAAC9iD,KAAK,CAAC,CAAA;AAClC,GAAA;EACAk7B,oBAAoBA,CAACl7B,KAAK,EAAE;AACxB,IAAA,IAAI,CAACw5D,yBAAyB,CAACx5D,KAAK,CAAC,CAAA;AACrC,IAAA,KAAK,CAACk7B,oBAAoB,CAACl7B,KAAK,CAAC,CAAA;AACrC,GAAA;AACA;AACJ;AACA;AACA;AACA;EACI+iD,kBAAkBA,CAAC/iD,KAAK,EAAE;AAAA,IAAA,IAAA85D,qBAAA,CAAA;AACtB,IAAA,KAAK,CAAC/W,kBAAkB,CAAC/iD,KAAK,CAAC,CAAA;IAC/B,MACI3L,EAAE,GAAkB,IAAI;AACxB,MAAA;AAAE6L,QAAAA,MAAAA;AAAO,OAAC,GAAUF,KAAK;AACzB,MAAA;AAAEi3D,QAAAA,aAAAA;AAAc,OAAC,GAAG5iE,EAAE,CAAA;AAC1B;IACA,IAAI6L,MAAM,CAACC,OAAO,CAAC9L,EAAE,CAACm0B,kBAAkB,CAAC,IAAI,EAAAsxC,CAAAA,qBAAA,GAACzlE,EAAE,CAAC+rB,QAAQ,CAAC47B,SAAS,MAAA,IAAA,IAAA8d,qBAAA,KAArBA,KAAAA,CAAAA,IAAAA,qBAAA,CAAuB/6C,UAAU,CAAE,EAAA;MAC7E,MAAM0N,YAAY,GAAGvsB,MAAM,CAACC,OAAO,CAAC9L,EAAE,CAACymB,aAAa,CAAC,CAAA;AACrD,MAAA,IAAI,CAACm8C,aAAa,CAAC7wB,GAAG,CAAC3Z,YAAY,CAAC,IAAI,CAACp4B,EAAE,CAAC0lE,cAAc,EAAE;AACxD9C,QAAAA,aAAa,CAACt/D,GAAG,CAAC80B,YAAY,CAAC,CAAA;QAC/BA,YAAY,CAACh1B,SAAS,CAACE,GAAG,CAACtD,EAAE,CAAC2lE,uBAAuB,CAAC,CAAA;QACtD,MAAMrW,MAAM,GAAGtvD,EAAE,CAACs6C,2BAA2B,CAACliB,YAAY,EAAEzsB,KAAK,CAAC,CAAA;AAClE,QAAA,IAAI2jD,MAAM,EAAE;AACR;AACA;UACAtvD,EAAE,CAAC0D,OAAO,CAAE,CAAE1D,EAAAA,EAAE,CAAC2oB,kBAAmB,CAAA,UAAA,CAAW,EAAE2mC,MAAM,CAAC,CAAA;AAC5D,SAAA;AACJ,OAAA;AACJ,KAAC,MACI,IAAIsT,aAAa,CAAC9iE,IAAI,EAAE;AACzBE,MAAAA,EAAE,CAAC4lE,UAAU,CAACj6D,KAAK,CAAC,CAAA;AACxB,KAAA;AACJ,GAAA;AACA;AACJ;AACA;AACA;AACA;EACIijD,iBAAiBA,CAACjjD,KAAK,EAAE;AAAA,IAAA,IAAAk6D,sBAAA,CAAA;AACrB,IAAA,KAAK,CAACjX,iBAAiB,CAACjjD,KAAK,CAAC,CAAA;IAC9B,MACI3L,EAAE,GAA0B,IAAI;AAChC,MAAA;QAAE6L,MAAM;AAAE4oC,QAAAA,aAAAA;AAAc,OAAC,GAAG9oC,KAAK;MACjCm6D,UAAU,GAAkBj6D,MAAM,CAACC,OAAO,CAAC9L,EAAE,CAACm0B,kBAAkB,CAAC;MACjE4xC,SAAS,GAAmBl6D,MAAM,CAACC,OAAO,CAAC9L,EAAE,CAACymB,aAAa,CAAC;AAC5DyO,MAAAA,cAAc,GAAcl1B,EAAE,CAAC25B,qBAAqB,CAAC9tB,MAAM,CAAC,CAAA;AAChE;IACA,IAAIi6D,UAAU,IAAI5wC,cAAc,IAAIl1B,EAAE,CAAC4iE,aAAa,CAAC7wB,GAAG,CAACg0B,SAAS,CAAC,IAAI,EAAAF,CAAAA,sBAAA,GAAC7lE,EAAE,CAAC+rB,QAAQ,CAAC47B,SAAS,MAAAke,IAAAA,IAAAA,sBAAA,KAArBA,KAAAA,CAAAA,IAAAA,sBAAA,CAAuBn7C,UAAU,CAAE,EAAA;AACvG;MACA,IAAI+pB,aAAa,IAAIptC,SAAS,CAACqtC,YAAY,CAACoxB,UAAU,EAAErxB,aAAa,CAAC,EAAE;AACpE,QAAA,OAAA;AACJ,OAAA;AACAz0C,MAAAA,EAAE,CAACk1C,OAAO,CAAC6wB,SAAS,EAAEp6D,KAAK,CAAC,CAAA;AAChC,KAAA;AACJ,GAAA;AACAupC,EAAAA,OAAOA,CAAC/xC,OAAO,EAAEwI,KAAK,EAAE;IACpB,MAAM3L,EAAE,GAAG,IAAI,CAAA;IACfmD,OAAO,CAACC,SAAS,CAACC,MAAM,CAACrD,EAAE,CAAC2lE,uBAAuB,CAAC,CAAA;AACpD3lE,IAAAA,EAAE,CAAC0D,OAAO,CAAE,CAAE1D,EAAAA,EAAE,CAAC2oB,kBAAmB,CAAA,UAAA,CAAW,EAAE3oB,EAAE,CAACs6C,2BAA2B,CAACn3C,OAAO,EAAEwI,KAAK,CAAC,CAAC,CAAA;AAChG3L,IAAAA,EAAE,CAAC4iE,aAAa,CAAClT,MAAM,CAACvsD,OAAO,CAAC,CAAA;AACpC,GAAA;EACAyiE,UAAUA,CAACj6D,KAAK,EAAE;AACd,IAAA,KAAK,MAAMxI,OAAO,IAAI,IAAI,CAACy/D,aAAa,EAAE;MACtC,CAACz/D,OAAO,CAAC6iE,UAAU,IAAI,CAAC7iE,OAAO,CAACC,SAAS,CAACg+B,QAAQ,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC8T,OAAO,CAAC/xC,OAAO,EAAEwI,KAAK,CAAC,CAAA;AACpG,KAAA;AACA;AACA,IAAA,IAAI,CAACi3D,aAAa,CAACzlD,KAAK,EAAE,CAAA;AAC9B,GAAA;AACA;AACA;AACA;AACA;EACA,IAAIxZ,WAAWA,GAAG,EAAC;AACvB,CAAC;;ACtaD;AACA;AACA;AACA,MACIsiE,WAAW,GAAGA,CAACC,EAAE,GAAG,CAAC,EAAEC,EAAE,GAAG,CAAC,KAAKA,EAAE,GAAGD,EAAE,CAAA;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAetzB,CAAAA,MAAM,IAAI,MAAMwzB,mBAAmB,UAAUxzB,MAAM,IAAIx8C,MAAI,EAAE;EACxE,WAAW8E,KAAKA,GAAG;AACf,IAAA,OAAO,qBAAqB,CAAA;AAChC,GAAA;AACA;EACA,WAAWsE,YAAYA,GAAG;IACtB,OAAO;AACH;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYwB,MAAAA,UAAU,EAAG,kBAAkB;AAC/B;AACZ;AACA;AACA;AACA;AACA;AACY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYiT,MAAAA,OAAO,EAAG,IAAI;AACd;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYW,MAAAA,iBAAiB,EAAG,IAAA;KACvB,CAAA;AACL,GAAA;AACA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;EACAyxD,aAAaA,CAACpyD,OAAO,EAAE;AACnB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,gBAAgB,CAACC,OAAO,CAAC,CAAA;AAC9C;AACA,IAAA,IAAIvE,MAAM,CAAC3G,UAAU,IAAI2G,MAAM,CAAC3G,UAAU,CAAC1F,IAAI,IAAI,CAACqM,MAAM,CAAC3G,UAAU,CAAC8S,IAAI,EAAE;AACxE,MAAA,OAAOnM,MAAM,CAAC3G,UAAU,CAAC1F,IAAI,CAAA;AACjC,KAAA;AACA,IAAA,OAAOqM,MAAM,CAAA;AACjB,GAAA;AACA;AACA;AACA;EACA,IAAIhE,WAAWA,GAAG,EAAC;AACvB,CAAC;;ACzaD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAeivC,CAAAA,MAAM,IAAI,MAAM81B,gBAAgB,UAAU91B,MAAM,IAAIx8C,MAAI,EAAE;EACrE,OAAO8E,KAAK,GAAG,kBAAkB,CAAA;AACjC,EAAA,OAAO2X,aAAa,GAAG;AACnB;AACR;AACA;AACA;AACA;AACA;AACQ81D,IAAAA,gBAAgB,EAAG,IAAI;AACvB;AACR;AACA;AACA;AACA;AACA;AACQzQ,IAAAA,yBAAyB,EAAG,IAAI;AAChC;AACR;AACA;AACA;AACA;AACA;AACQY,IAAAA,YAAY,EAAG,CAAC;AAChB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQC,IAAAA,YAAY,EAAG,IAAI;AACnB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQ6P,IAAAA,iBAAiB,EAAG,CAAC;AACrB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQC,IAAAA,yBAAyB,EAAG,IAAA;GAC/B,CAAA;AACD;AACA;EACAC,aAAa,GAAG,CAAC,CAAC,CAAA;EAClBC,gBAAgB,GAAG,CAAC,CAAC,CAAA;EACrBzs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AAQ,CAAC1T,KAAK,CAACC,MAAM,EAAE/e,IAAI,CAAC,CAAA;AACrC,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIkf,SAASA,CAACH,MAAM,EAAE;AACd,IAAA,IAAI,CAACyT,QAAQ,CAACtT,SAAS,CAACH,MAAM,CAAC,CAAA;AACnC,GAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACII,aAAaA,CAACJ,MAAM,EAAE;AAClB,IAAA,IAAI,CAACyT,QAAQ,CAACrT,aAAa,CAACJ,MAAM,CAAC,CAAA;AACvC,GAAA;AACA;AACA;AACA;EACA,IAAIjZ,WAAWA,GAAG,EAAC;AACvB,CAAC;;AC3tBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAAeivC,CAAAA,MAAM,IAAI,MAAM05B,sBAAsB,UAAU15B,MAAM,IAAIx8C,MAAI,EAAE;EAC3E,WAAW8E,KAAKA,GAAG;AACf,IAAA,OAAO,wBAAwB,CAAA;AACnC,GAAA;AACA;EACA,WAAW2X,aAAaA,GAAG;IACvB,OAAO;AACH05D,MAAAA,cAAc,EAAG,IAAI;AACrB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,kBAAkB,EAAG,IAAI;AACzB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,cAAc,EAAG,iBAAiB;AAClC;AACZ;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,QAAQ,EAAG,aAAa;AACxB;AACZ;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,aAAa,EAAG,kBAAkB;AAClC;AACZ;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,kBAAkB,EAAG,yBAAyB;AAC9C;AACZ;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,oBAAoB,EAAG,2BAA2B;AAClD;AACZ;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,aAAa,EAAG,mBAAmB;AACnC;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAM2hC,YAAY,SAASC,QAAQ,CAACt8C,KAAK,CACpDmqC,kBAAkB,EAClBsB,iBAAiB,EACjB0K,sBAAsB,EACtBoB,cAAc,EACdkD,aAAa,EACbxK,mBAAmB,EACnBsC,gBAAgB,EAChBgK,eACJ,CAAC,CAAC;AACE;EACA,WAAWx3E,KAAKA,GAAG;AACf,IAAA,OAAO,cAAc,CAAA;AACzB,GAAA;AACA;EACA,WAAWC,IAAIA,GAAG;AACd,IAAA,OAAO,cAAc,CAAA;AACzB,GAAA;AACA,EAAA,OAAOqE,YAAY,GAAG;AAClBmzE,IAAAA,oBAAoB,EAAG;AACnBv0E,MAAAA,KAAK,EAAG,CAAC,mBAAmB,EAAE,UAAU,EAAE,YAAY,CAAC;AACvDwG,MAAAA,OAAO,EAAG;AACN2Q,QAAAA,KAAK,EAAG,UAAA;AACZ,OAAA;KACH;AACD;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ3b,IAAAA,SAAS,EAAG;AACRgL,MAAAA,OAAO,EAAG;AACNk9D,QAAAA,KAAK,EAAG,MAAA;OACX;AACD1jE,MAAAA,KAAK,EAAG,IAAA;KACX;AACD;AACR;AACA;AACA;AACA;AACA;AACA;AACQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQvE,IAAAA,OAAO,EAAG;AACN+K,MAAAA,OAAO,EAAG;AACNk9D,QAAAA,KAAK,EAAG,MAAA;OACX;AACD1jE,MAAAA,KAAK,EAAG,IAAA;KACX;AACD;AACR;AACA;AACA;AACA;AACA;AACQkC,IAAAA,aAAa,EAAG,IAAI;AACpB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQsnE,IAAAA,WAAW,EAAG,IAAI;AAClB;AACR;AACA;AACA;AACA;AACA;AACQpmC,IAAAA,QAAQ,EAAG,IAAI;AACf;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQk5B,IAAAA,QAAQ,EAAG,KAAK;AAChB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQkY,IAAAA,QAAQ,EAAG,IAAA;GACd,CAAA;EACD,WAAW//D,aAAaA,GAAG;IACvB,OAAO;AACH;AACZ;AACA;AACA;AACA;AACA;AACY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYggE,MAAAA,WAAW,EAAG,IAAI;AAClB;AACZ;AACA;AACA;AACA;AACA;AACY;AACZ;AACA;AACA;AACA;AACA;AACA;AACYxiD,MAAAA,QAAQ,EAAG,IAAI;AACf;AACZ;AACA;AACA;AACA;AACA;AACA;AACYlsB,MAAAA,iBAAiB,EAAG,IAAI;AACxB;AACZ;AACA;AACA;AACA;AACA;AACA;AACY2uE,MAAAA,kBAAkB,EAAG,IAAI;AACzB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYh/C,MAAAA,4BAA4B,EAAG,KAAK;AACpC;AACZ;AACA;AACA;AACA;AACA;AACA;AACY6mC,MAAAA,WAAW,EAAG,KAAK;AACnB;AACZ;AACA;AACA;AACA;AACA;AACYoY,MAAAA,WAAW,EAAG,IAAI;AAClBpqD,MAAAA,kBAAkB,EAAG,IAAI;AACzB;AACA;AACZ;AACA;AACA;AACA;AACA;AACYg9C,MAAAA,uBAAuB,EAAG,IAAI;AAC9B;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"}