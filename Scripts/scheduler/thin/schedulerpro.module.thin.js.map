{"version":3,"file":"schedulerpro.module.thin.js","sources":["../../lib/SchedulerPro/column/ResourceCalendarColumn.js","../../lib/SchedulerPro/column/ScaleColumn.js","../../lib/SchedulerPro/model/EventModel.js","../../lib/SchedulerPro/data/EventStore.js","../../lib/SchedulerPro/eventlayout/ProHorizontalLayout.js","../../lib/SchedulerPro/eventlayout/ProHorizontalLayoutStack.js","../../lib/SchedulerPro/eventlayout/ProHorizontalLayoutPack.js","../../lib/SchedulerPro/feature/CalendarHighlight.js","../../lib/SchedulerPro/feature/DependencyEdit.js","../../lib/SchedulerPro/feature/EventBuffer.js","../../lib/SchedulerPro/feature/EventSegmentDrag.js","../../lib/SchedulerPro/feature/NestedEvents.js","../../lib/SchedulerPro/feature/ResourceNonWorkingTime.js","../../lib/SchedulerPro/feature/TimeSpanHighlight.js","../../lib/SchedulerPro/model/changelog/ChangeLogPropertyUpdate.js","../../lib/SchedulerPro/model/ProjectModel.js","../../lib/SchedulerPro/view/mixin/SchedulerProEventRendering.js","../../lib/SchedulerPro/view/orientation/ProHorizontalRendering.js","../../lib/SchedulerPro/view/orientation/ProVerticalRendering.js","../../lib/SchedulerPro/view/SchedulerProBase.js","../../lib/SchedulerPro/view/ResourceHistogram.js","../../lib/SchedulerPro/model/ResourceUtilizationModel.js","../../lib/SchedulerPro/data/ResourceUtilizationStore.js","../../lib/SchedulerPro/view/ResourceUtilization.js","../../lib/SchedulerPro/view/SchedulerPro.js","../../lib/SchedulerPro/widget/Timeline.js","../../lib/SchedulerPro/widget/VersionGrid.js"],"sourcesContent":["import Column from '../../Grid/column/Column.js';\nimport ColumnStore from '../../Grid/data/ColumnStore.js';\nimport AttachToProjectMixin from '../../Scheduler/data/mixin/AttachToProjectMixin.js';\nimport CalendarField from '../widget/CalendarField.js';\n\n/**\n * @module SchedulerPro/column/ResourceCalendarColumn\n */\n\n/**\n * A column that displays (and allows user to update) the current {@link SchedulerPro.model.CalendarModel calendar} of\n * the resource.\n *\n * Default editor is a {@link SchedulerPro.widget.CalendarField CalendarField}.\n *\n * {@inlineexample SchedulerPro/column/ResourceCalendarColumn.js}\n * @mixes Scheduler/data/mixin/AttachToProjectMixin\n * @extends Grid/column/Column\n * @classType resourceCalendar\n * @column\n */\nexport default class ResourceCalendarColumn extends Column.mixin(AttachToProjectMixin) {\n\n    //region Config\n\n    static get $name() {\n        return 'ResourceCalendarColumn';\n    }\n\n    static get type() {\n        return 'resourceCalendar';\n    }\n\n    static get defaults() {\n        return {\n            field  : 'calendar',\n            text   : 'Calendar',\n            editor : {\n                type         : CalendarField.type,\n                clearable    : true,\n                allowInvalid : false\n            }\n        };\n    }\n\n    //endregion\n\n    //region Init\n\n    attachToProject(project) {\n        if (project) {\n            // Store default calendar to filter out this value\n            this.defaultCalendar = project.defaultCalendar;\n\n            this.editor.store = project.calendarManagerStore;\n        }\n    }\n\n    attachToResourceStore(resourceStore) {\n        super.attachToResourceStore(resourceStore);\n\n        if (resourceStore) {\n            resourceStore.ion({\n                name    : 'resourceStore',\n                update  : 'onResourceUpdate',\n                thisObj : this\n            });\n        }\n    }\n\n    //endregion\n\n    //region Events\n\n    // Event rendering does not update cells when engine updates a resource, instead we do a minimal update here\n    onResourceUpdate({ record, changes }) {\n        const change = changes[this.field];\n\n        if (change) {\n            // Ignore \"normalization\" of id -> instance, won't affect our appearance\n            if (typeof change.oldValue === 'string' && change.value?.id === change.oldValue) {\n                return;\n            }\n            this.refreshCell(record);\n        }\n    }\n\n    //endregion\n\n    //region Render\n\n    renderer({ value }) {\n        if (value === this.defaultCalendar) {\n            return '';\n        }\n        else if (value && value.id) {\n            const record = this.editor.store.getById(value.id);\n            return record && record[this.editor.displayField] || '';\n        }\n        else {\n            return '';\n        }\n    }\n\n    //endregion\n\n}\n\nColumnStore.registerColumnType(ResourceCalendarColumn);\n","import Column from '../../Grid/column/Column.js';\nimport ColumnStore from '../../Grid/data/ColumnStore.js';\nimport Scale from '../../Core/widget/graph/Scale.js';\n\n/**\n * @module SchedulerPro/column/ScaleColumn\n */\n\n/**\n * An object representing a point on the scale displayed by {@link SchedulerPro.column.ScaleColumn}.\n *\n * @typedef {Object} ScalePoint\n * @property {Number} value Point value\n * @property {String} unit Point value unit\n * @property {String} text Point text label\n */\n\n/**\n * A specialised column showing a graduated scale from a defined array of values\n * and labels. This column is used in the {@link SchedulerPro.view.ResourceHistogram} and is not editable. Normally\n * you should not need to interact with this class directly.\n *\n * @extends Grid/column/Column\n * @classType scale\n * @column\n */\nexport default class ScaleColumn extends Column {\n\n    //region Config\n\n    static get $name() {\n        return 'ScaleColumn';\n    }\n\n    static get type() {\n        return 'scale';\n    }\n\n    static get isScaleColumn() {\n        return true;\n    }\n\n    static get fields() {\n        return [\n            'scalePoints'\n        ];\n    }\n\n    static get defaults() {\n        return {\n            text            : '\\xa0',\n            width           : 40,\n            minWidth        : 40,\n            cellCls         : 'b-scale-cell',\n            editor          : false,\n            sortable        : false,\n            groupable       : false,\n            filterable      : false,\n            alwaysClearCell : false,\n            scalePoints     : [\n                {\n                    value : 4\n                },\n                {\n                    value : 8,\n                    text  : 8\n                }\n            ]\n        };\n    }\n\n    //endregion\n\n    //region Constructor/Destructor\n\n    onDestroy() {\n        this.scaleWidget.destroy();\n    }\n\n    //endregion\n\n    //region Internal\n\n    set width(width) {\n        super.width = width;\n        this.scaleWidget.width = width;\n    }\n\n    get width() {\n        return super.width;\n    }\n\n    applyValue(useProp, key, value) {\n        // pass value to scaleWidget\n        if (key === 'scalePoints') {\n            this.scaleWidget[key] = value;\n        }\n\n        return super.applyValue(...arguments);\n    }\n\n    buildScaleWidget() {\n        const me = this;\n\n        const scaleWidget = new Scale({\n            owner         : me.grid,\n            appendTo      : me.grid.floatRoot,\n            cls           : 'b-hide-offscreen',\n            align         : 'right',\n            scalePoints   : me.scalePoints,\n            monitorResize : false\n        });\n\n        Object.defineProperties(scaleWidget, {\n            width : {\n                get() {\n                    return me.width;\n                },\n                set(width) {\n                    this.element.style.width = `${width}px`;\n                    this._width = me.width;\n                }\n            },\n            height : {\n                get() {\n                    return this._height;\n                },\n                set(height) {\n                    this.element.style.height = `${height}px`;\n                    this._height = height;\n                }\n            }\n        });\n\n        scaleWidget.width = me.width;\n\n        return scaleWidget;\n    }\n\n    get scaleWidget() {\n        const me = this;\n\n        if (!me._scaleWidget) {\n            me._scaleWidget = me.buildScaleWidget();\n        }\n\n        return me._scaleWidget;\n    }\n\n    //endregion\n\n    //region Render\n\n    renderer({ cellElement, scaleWidget = this.scaleWidget }) {\n        scaleWidget.height = this.grid.rowHeight;\n        scaleWidget.refresh();\n\n        // Clone the scale widget element since every row is supposed to have\n        // the same scale settings\n        const scaleCloneElement = scaleWidget.element.cloneNode(true);\n        scaleCloneElement.removeAttribute('id');\n        scaleCloneElement.classList.remove('b-hide-offscreen');\n\n        cellElement.innerHTML = '';\n        cellElement.appendChild(scaleCloneElement);\n    }\n\n    //endregion\n\n}\n\nColumnStore.registerColumnType(ScaleColumn);\n","import PartOfProject from '../data/mixin/PartOfProject.js';\nimport PercentDoneMixin from './mixin/PercentDoneMixin.js';\nimport { SchedulerProEvent } from '../../Engine/quark/model/scheduler_pro/SchedulerProEvent.js';\nimport Duration from '../../Core/data/Duration.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\nimport EventModelMixin from '../../Scheduler/model/mixin/EventModelMixin.js';\nimport TimeSpan from '../../Scheduler/model/TimeSpan.js';\nimport RecurringTimeSpan from '../../Scheduler/model/mixin/RecurringTimeSpan.js';\nimport EventSegmentModel from './EventSegmentModel.js';\n\n/**\n * @module SchedulerPro/model/EventModel\n */\n\n/**\n * This class represent a single event in your schedule, usually added to a {@link SchedulerPro.data.EventStore}.\n *\n * It is a subclass of the {@link Scheduler.model.TimeSpan}, which is in turn subclass of {@link Core.data.Model}.\n * Please refer to documentation of that class to become familiar with the base interface of the event.\n *\n * ## Async date calculations\n *\n * A record created from an `EventModel` is normally part of an `EventStore`, which in turn is part of a project. When\n * dates or the duration of an event is changed, the project performs async calculations to normalize the other fields.\n * For example if `duration` is change, it will calculate `endDate`.\n *\n * As a result of this being an async operation, the values of other fields are not guaranteed to be up to date\n * immediately after a change. To ensure data is up to date, await the calculations to finish.\n *\n * For example, `endDate` is not up to date after this operation:\n *\n * ```javascript\n * eventRecord.duration = 5;\n * // endDate not yet calculated\n * ```\n *\n * But if calculations are awaited it is up to date:\n *\n * ```javascript\n * eventRecord.duration = 5;\n * await eventRecord.project.commitAsync();\n * // endDate is calculated\n * ```\n *\n * As an alternative, you can also use `setAsync()` to trigger calculations directly after the change:\n *\n * ```javascript\n * await eventRecord.setAsync({ duration : 5});\n * // endDate is calculated\n * ```\n *\n * ## Subclassing the Event model class\n * The Event model has a few predefined fields as seen below. If you want to add new fields or change the options for\n * the existing fields, you can do that by subclassing this class (see example below).\n *\n * ```javascript\n * class MyEvent extends EventModel {\n *\n *     static get fields() {\n *         return [\n *            // Add new field\n *            { name: 'myField', type : 'number', defaultValue : 0 }\n *         ];\n *     },\n *\n *     myCheckMethod() {\n *         return this.myField > 0\n *     },\n *\n *     ...\n * });\n * ```\n *\n * If you in your data want to use other names for the startDate, endDate, resourceId and name fields you can configure\n * them as seen below:\n * ```javascript\n * class MyEvent extends EventModel {\n *\n *     static get fields() {\n *         return [\n *            { name: 'startDate', dataSource 'taskStart' },\n *            { name: 'endDate', dataSource 'taskEnd', format: 'YYYY-MM-DD' },\n *            { name: 'resourceId', dataSource 'userId' },\n *            { name: 'name', dataSource 'taskTitle' },\n *         ];\n *     },\n *     ...\n * });\n * ```\n *\n * Please refer to {@link Core.data.Model} for additional details.\n *\n * @extends Scheduler/model/TimeSpan\n * @mixes Scheduler/model/mixin/RecurringTimeSpan\n * @mixes Scheduler/model/mixin/EventModelMixin\n * @mixes SchedulerPro/model/mixin/PercentDoneMixin\n * @mixes SchedulerPro/data/mixin/PartOfProject\n *\n * @typings Scheduler/model/EventModel -> Scheduler/model/SchedulerEventModel\n */\nexport default class EventModel extends SchedulerProEvent.derive(TimeSpan).mixin(\n    RecurringTimeSpan,\n    PartOfProject,\n    EventModelMixin,\n    PercentDoneMixin\n) {\n\n    /**\n     * Returns the event store this event is part of.\n     *\n     * @member {SchedulerPro.data.EventStore} eventStore\n     * @readonly\n     * @typings Scheduler/model/TimeSpan:eventStore -> {Scheduler.data.EventStore||SchedulerPro.data.EventStore}\n     */\n\n    /**\n     * If given resource is assigned to this event, returns a {@link SchedulerPro.model.AssignmentModel} record.\n     * Otherwise returns `null`\n     *\n     * @method getAssignmentFor\n     * @param {SchedulerPro.model.ResourceModel} resource The instance of {@link SchedulerPro.model.ResourceModel}\n     *\n     * @returns {SchedulerPro.model.AssignmentModel|null}\n     */\n\n    /**\n     * This method assigns a resource to this event.\n     *\n     * Will cause the schedule to be updated - returns a `Promise`\n     *\n     * @method assign\n     * @param {SchedulerPro.model.ResourceModel} resource The instance of {@link SchedulerPro.model.ResourceModel}\n     * @param {Number} [units=100] The `units` field of the new assignment\n     *\n     * @async\n     * @propagating\n     */\n\n    /**\n     * This method unassigns a resource from this event.\n     *\n     * Will cause the schedule to be updated - returns a `Promise`\n     *\n     * @method unassign\n     * @param {SchedulerPro.model.ResourceModel} resource The instance of {@link SchedulerPro.model.ResourceModel}\n     *\n     * @async\n     * @propagating\n     */\n\n    /**\n     * Sets the calendar of the event. Will cause the schedule to be updated - returns a `Promise`\n     *\n     * @method setCalendar\n     * @param {SchedulerPro.model.CalendarModel} calendar The new calendar. Provide `null` to fall back to the project calendar.\n     * @async\n     * @propagating\n     */\n\n    /**\n     * Returns the event calendar.\n     *\n     * @method getCalendar\n     * @returns {SchedulerPro.model.CalendarModel} The event calendar.\n     */\n\n    /**\n     * Either activates or deactivates the task depending on the passed value.\n     * Will cause the schedule to be updated - returns a `Promise`\n     *\n     * @method setInactive\n     * @param {boolean} inactive `true` to deactivate the task, `false` to activate it.\n     * @async\n     * @propagating\n     */\n\n    /**\n     * Sets the start date of the event. Will cause the schedule to be updated - returns a `Promise`\n     *\n     * Note, that the actually set start date may be adjusted, according to the calendar, by skipping the non-working time forward.\n     *\n     * @method setStartDate\n     * @param {Date} date The new start date.\n     * @param {Boolean} [keepDuration=true] Whether to keep the duration (and update the end date), while changing the start date, or vice-versa.\n     * @async\n     * @propagating\n     */\n\n    /**\n     * Sets the end date of the event. Will cause the schedule to be updated - returns a `Promise`\n     *\n     * Note, that the actually set end date may be adjusted, according to the calendar, by skipping the non-working time backward.\n     *\n     * @method setEndDate\n     * @param {Date} date The new end date.\n     * @param {Boolean} [keepDuration=false] Whether to keep the duration (and update the start date), while changing the end date, or vice-versa.\n     * @async\n     * @propagating\n     */\n\n    /**\n     * Updates the duration (and optionally unit) of the event. Will cause the schedule to be updated - returns a `Promise`\n     *\n     * @method setDuration\n     * @param {Number} duration New duration value\n     * @param {String} [unit] New duration unit\n     * @async\n     * @propagating\n     */\n\n    /**\n     * Sets the constraint type and (optionally) constraining date to the event.\n     *\n     * @method setConstraint\n     * @param {'finishnoearlierthan'|'finishnolaterthan'|'mustfinishon'|'muststarton'|'startnoearlierthan'|'startnolaterthan'|null} constraintType\n     * Constraint type, please refer to the {@link #field-constraintType} for the valid\n     * values.\n     * @param {Date} [constraintDate] Constraint date.\n     * @async\n     * @propagating\n     */\n\n    /**\n     * Updates the {@link #field-effort} (and optionally {@link #field-effortUnit unit}) of the event.\n     * Will cause the schedule to be updated - returns a `Promise`\n     *\n     * @method setEffort\n     * @param {Number} effort New effort value\n     * @param {'millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year'} [unit] New effort\n     * unit\n     * @async\n     * @propagating\n     */\n\n    /**\n     * Sets {@link #field-segments} field value.\n     *\n     * @method\n     * @name setSegments\n     * @param {SchedulerPro.model.EventSegmentModel[]} segments Array of segments or null to make the event not segmented.\n     * @returns {Promise}\n     * @propagating\n     */\n\n    /**\n     * Splits the event into segments.\n     * @method splitToSegments\n     * @param {Date} from The date to split this event at.\n     * @param {Number} [lag=1] Split duration.\n     * @param {String} [lagUnit] Split duration unit.\n     * @returns {Promise}\n     * @propagating\n     */\n\n    /**\n     * Merges the event segments.\n     * The method merges two provided event segments (and all the segment between them if any).\n     * @method mergeSegments\n     * @param {SchedulerPro.model.EventSegmentModel} [segment1] First segment to merge.\n     * @param {SchedulerPro.model.EventSegmentModel} [segment2] Second segment to merge.\n     * @returns {Promise}\n     * @propagating\n     */\n\n    /**\n     * Sets the event {@link #field-ignoreResourceCalendar} field value and triggers rescheduling.\n     *\n     * @method setIgnoreResourceCalendar\n     * @param {Boolean} ignore Provide `true` to ignore the calendars of the assigned resources\n     * when scheduling the event. If `false` the event performs only when\n     * its own {@link #field-calendar} and some of the assigned\n     * resource calendars allow that.\n     * @async\n     * @propagating\n     */\n\n    /**\n     * Returns the event {@link #field-ignoreResourceCalendar} field value.\n     *\n     * @method getIgnoreResourceCalendar\n     * @returns {Boolean} The event {@link #field-ignoreResourceCalendar} field value.\n     */\n\n    /**\n     * The event first segment or null if the event is not segmented.\n     * @member {SchedulerPro.model.EventSegmentModel} firstSegment\n     */\n\n    /**\n     * The event last segment or null if the event is not segmented.\n     * @member {SchedulerPro.model.EventSegmentModel} lastSegment\n     */\n\n    //region Config\n\n    static get $name() {\n        return 'EventModel';\n    }\n\n    static isProEventModel = true;\n\n    static get fields() {\n        return [\n            /**\n             * This field is automatically set to `true` when the event is \"unscheduled\" - user has provided an empty\n             * string in one of the UI editors for start date, end date or duration. Such event is not rendered,\n             * and does not affect the schedule of its successors.\n             *\n             * To schedule the event back, enter one of the missing values, so that there's enough information\n             * to calculate start date, end date and duration.\n             *\n             * Note, that setting this field manually does nothing. This field should be persisted, but not updated\n             * manually.\n             *\n             * @field {Boolean} unscheduled\n              * @readonly\n              * @category Scheduling\n             */\n\n            /**\n             * Segments of the event that appear when the event gets {@link #function-splitToSegments}.\n             * @field {SchedulerPro.model.EventSegmentModel[]} segments\n             * @category Scheduling\n             */\n\n            /**\n             * The current status of a task, expressed as the percentage completed (integer from 0 to 100)\n             *\n             * UI fields representing this data field are disabled for summary events.\n             * See {@link #function-isEditable} for details.\n             *\n             * @field {Number} percentDone\n             * @category Scheduling\n             */\n\n            /**\n             * The start date of a time span (or Event / Task).\n             *\n             * Uses {@link Core/helper/DateHelper#property-defaultFormat-static DateHelper.defaultFormat} to convert a\n             * supplied string to a Date. To specify another format, either change that setting or subclass TimeSpan and\n             * change the dateFormat for this field.\n             *\n             * UI fields representing this data field are disabled for summary events\n             * except the {@link #field-manuallyScheduled manually scheduled} events.\n             * See {@link #function-isEditable} for details.\n             *\n             * Note that the field always returns a `Date`.\n             *\n             * @field {Date} startDate\n             * @accepts {String|Date}\n             * @category Scheduling\n             */\n\n            /**\n             * The end date of a time span (or Event / Task).\n             *\n             * Uses {@link Core/helper/DateHelper#property-defaultFormat-static DateHelper.defaultFormat} to convert a\n             * supplied string to a Date. To specify another format, either change that setting or subclass TimeSpan and\n             * change the dateFormat for this field.\n             *\n             * UI fields representing this data field are disabled for summary events\n             * except the {@link #field-manuallyScheduled manually scheduled} events.\n             * See {@link #function-isEditable} for details.\n             *\n             * Note that the field always returns a `Date`.\n             *\n             * @field {Date} endDate\n             * @accepts {String|Date}\n             * @category Scheduling\n             */\n\n            /**\n             * The numeric part of the timespan's duration (the number of units).\n             *\n             * UI fields representing this data field are disabled for summary events\n             * except the {@link #field-manuallyScheduled manually scheduled} events.\n             * See {@link #function-isEditable} for details.\n             *\n             * @field {Number} duration\n             * @category Scheduling\n             */\n\n            /**\n             * Field storing the event constraint alias or NULL if not constraint set.\n             * Valid values are:\n             * - \"finishnoearlierthan\"\n             * - \"finishnolaterthan\"\n             * - \"mustfinishon\"\n             * - \"muststarton\"\n             * - \"startnoearlierthan\"\n             * - \"startnolaterthan\"\n             *\n             * @field {'finishnoearlierthan'|'finishnolaterthan'|'mustfinishon'|'muststarton'|'startnoearlierthan'|'startnolaterthan'|null} constraintType\n             * @category Scheduling\n             */\n\n            /**\n             * Field defining the constraint boundary date, if applicable.\n             * @field {Date} constraintDate\n             * @category Scheduling\n             */\n\n            /**\n             * When set to `true`, the `startDate` of the event will not be changed by any of its incoming dependencies\n             * or constraints.\n             *\n             * @field {Boolean} manuallyScheduled\n             * @category Scheduling\n             */\n\n            /**\n             * When set to `true` the event becomes inactive and stops taking part in the project scheduling (doesn't\n             * affect linked events and affect its assigned resources allocation).\n             *\n             * @field {Boolean} inactive\n             * @category Scheduling\n             */\n\n            /**\n             * When set to `true` the calendars of the assigned resources\n             * are not taken into account when scheduling the event.\n             *\n             * By default the field value is `false` resulting in that the event performs only when\n             * its own {@link #field-calendar} and some of the assigned\n             * resource calendars allow that.\n\n             * @field {Boolean} ignoreResourceCalendar\n             * @category Scheduling\n             */\n\n            /**\n             * A calculated field storing the _early start date_ of the event.\n             * The _early start date_ is the earliest possible date the event can start.\n             * This value is calculated based on the earliest dates of the event predecessors and the event own constraints.\n             * If the event has no predecessors nor other constraints, its early start date matches the project start date.\n             *\n             * UI fields representing this data field are naturally disabled since the field is readonly.\n             * See {@link #function-isEditable} for details.\n             *\n             * @field {Date} earlyStartDate\n             * @calculated\n             * @readonly\n             * @category Scheduling\n             */\n\n            /**\n             * A calculated field storing the _early end date_ of the event.\n             * The _early end date_ is the earliest possible date the event can finish.\n             * This value is calculated based on the earliest dates of the event predecessors and the event own constraints.\n             * If the event has no predecessors nor other constraints, its early end date matches the project start date plus the event duration.\n             *\n             * UI fields representing this data field are naturally disabled since the field is readonly.\n             * See {@link #function-isEditable} for details.\n             *\n             * @field {Date} earlyEndDate\n             * @calculated\n             * @readonly\n             * @category Scheduling\n             */\n\n            /**\n             * The calendar, assigned to the entity. Allows you to set the time when entity can perform the work.\n             *\n             * All entities are by default assigned to the project calendar, provided as the {@link SchedulerPro.model.ProjectModel#field-calendar} option.\n             *\n             * @field {SchedulerPro.model.CalendarModel} calendar\n             * @category Scheduling\n             */\n\n            /**\n             * The numeric part of the event effort (the number of units).\n             *\n             * @field {Number} effort\n             * @category Scheduling\n             */\n\n            /**\n             * The unit part of the event effort, defaults to \"h\" (hours). Valid values are:\n             *\n             * - \"millisecond\" - Milliseconds\n             * - \"second\" - Seconds\n             * - \"minute\" - Minutes\n             * - \"hour\" - Hours\n             * - \"day\" - Days\n             * - \"week\" - Weeks\n             * - \"month\" - Months\n             * - \"quarter\" - Quarters\n             * - \"year\"- Years\n             *\n             * This field is readonly after creation, to change it use the {@link #function-setEffort} call.\n             * @field {'millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year'} effortUnit\n             * @default \"hour\"\n             * @category Scheduling\n             * @readonly\n             */\n\n            /**\n             * This field defines the event scheduling mode. Based on this field some fields of the event\n             * will be \"fixed\" (should be provided by the user) and some - computed.\n             *\n             * Possible values are:\n             *\n             * - `Normal` is the default (and backward compatible) mode. It means the event will be scheduled based on\n             * information about its start/end dates, event own calendar (project calendar if there's no one) and\n             * calendars of the assigned resources.\n             *\n             * - `FixedDuration` mode means, that event has fixed start and end dates, but its effort will be computed\n             * dynamically, based on the assigned resources information. When duration of such event increases,\n             * its effort is increased too. The mode tends to preserve user provided duration so changing effort\n             * results adjusting assignment units and vise-versa assignment changes adjusts effort.\n             *\n             * @field {'Normal'|'FixedDuration'} schedulingMode\n             * @category Scheduling\n             */\n\n            /**\n             * This boolean flag defines what part the data should be updated in the `FixedDuration` scheduling\n             * mode.\n             * If it is `true`, then {@link #field-effort} is kept intact when new duration is provided and\n             * assignment {@link SchedulerPro.model.AssignmentModel#field-units} is updated.\n             * If it is `false`, then assignment {@link SchedulerPro.model.AssignmentModel#field-units} is kept\n             * intact when new duration is provided and {@link #field-effort} is updated.\n             *\n             * @field {Boolean} effortDriven\n             * @default false\n             * @category Scheduling\n             */\n\n            /**\n             * The event effective calendar. Returns the\n             * {@link SchedulerPro.model.ProjectModel#field-calendar project calendar} if the event has no own\n             * {@link #field-calendar} provided.\n             * @member {SchedulerPro.model.CalendarModel} effectiveCalendar\n             */\n\n            /**\n             * Set this to true if this task should be shown in the Timeline widget\n             * @field {Boolean} showInTimeline\n             * @category Common\n             */\n            { name : 'showInTimeline', type : 'boolean', defaultValue : false },\n\n            /**\n             * Note about the event\n             * @field {String} note\n             * @category Common\n             */\n            'note',\n\n            /**\n             * Buffer time before event start. Specified in a human-friendly form as accepted by\n             * {@link Core.helper.DateHelper#function-parseDuration-static}:\n             * ```javascript\n             * // Create event model with a 30 minutes buffer time before the event start\n             * new EventModel({ startDate : '2020-01-01', endDate : '2020-01-02', preamble : '30 minutes' })\n             * ```\n             *\n             * Used by the {@link SchedulerPro.feature.EventBuffer} feature.\n             *\n             * @field {Core.data.Duration} preamble\n             * @accepts {String}\n             * @category Scheduling\n             */\n            {\n                name    : 'preamble',\n                convert : value => value ? new Duration(value) : null\n            },\n            /**\n             * Buffer time after event end. Specified in a human-friendly form as accepted by\n             * {@link Core.helper.DateHelper#function-parseDuration-static}:\n             * ```javascript\n             * // Create event model with a 1 hour buffer time after the event end\n             * new EventModel({ startDate : '2020-01-01', endDate : '2020-01-02', postamble : '1 hour' })\n             * ```\n             *\n             * Used by the {@link SchedulerPro.feature.EventBuffer} feature.\n             *\n             * @field {String} postamble\n             * @accepts {String}\n             * @category Scheduling\n             */\n            {\n                name    : 'postamble',\n                convert : value => value ? new Duration(value) : null\n            }\n        ];\n    }\n\n    getDefaultSegmentModelClass() {\n        return EventSegmentModel;\n    }\n\n    //endregion\n\n    //region EventBuffer\n\n    updateWrapDate(date, duration, forward = true) {\n        duration = new Duration(duration);\n\n        return new Date(date.getTime() + (forward ? 1 : -1) * duration.milliseconds);\n    }\n\n    get startDate() {\n        let dt;\n\n        if (this.isOccurrence) {\n            dt = this.get('startDate');\n        }\n        else {\n            // Micro optimization to avoid expensive super call. super will be hit in Scheduler Pro\n            dt = this._startDate ?? super.startDate;\n        }\n\n        if (this.allDay) {\n            dt = this.constructor.getAllDayStartDate(dt);\n        }\n\n        return dt;\n    }\n\n    set startDate(startDate) {\n        const me = this;\n\n        // Update children when parents startDate changes (ignoring initial data set)\n        // <remove-on-release>\n        // TODO: Handle in engine? Arcady is informed\n        // </remove-on-release>\n        if (me.generation && me.isParent && !me.$ignoreChange) {\n            const timeDiff = DateHelper.diff(me.startDate, startDate);\n\n            if (timeDiff) {\n                // Move all children same amount\n                for (const child of this.children) {\n                    child.startDate = DateHelper.add(child.startDate, timeDiff);\n                }\n            }\n        }\n\n        if (me.batching) {\n            me._startDate = startDate;\n            me.set({ startDate });\n        }\n        else {\n            super.startDate = startDate;\n\n            if (me.preamble) {\n                me.wrapStartDate = null;\n                me.wrapEndDate = null;\n            }\n        }\n    }\n\n    get endDate() {\n        let dt;\n\n        if (this.isOccurrence) {\n            dt = this.get('endDate');\n        }\n        else {\n            // Micro optimization to avoid expensive super call. super will be hit in Scheduler Pro\n            dt = this._endDate ?? super.endDate;\n        }\n\n        if (this.allDay) {\n            dt = this.constructor.getAllDayEndDate(dt);\n        }\n\n        return dt;\n    }\n\n    set endDate(endDate) {\n        const me = this;\n\n        if (me.batching) {\n            me._endDate = endDate;\n            me.set({ endDate });\n        }\n        else {\n            super.endDate = endDate;\n\n            if (me.postamble) {\n                me.wrapStartDate = null;\n                me.wrapEndDate = null;\n            }\n        }\n    }\n\n    /**\n     * Property which encapsulates the effort's magnitude and units.\n     *\n     * UI fields representing this property are disabled for summary events.\n     * See {@link #function-isEditable} for details.\n     *\n     * @property {Core.data.Duration}\n     */\n    get fullEffort() {\n        return new Duration({\n            unit      : this.effortUnit,\n            magnitude : this.effort\n        });\n    }\n\n    set fullEffort(effort) {\n        this.setEffort(effort.magnitude, effort.unit);\n    }\n\n    // Cannot use `convert` method because it might be disabled by `useRawData : true` and we always need to calculate\n    // that value\n    get wrapStartDate() {\n        const\n            me                      = this,\n            { preamble, startDate } = me,\n            wrapStartDate           = me._wrapStartDate;\n\n        let result;\n\n        if (wrapStartDate) {\n            result = wrapStartDate;\n        }\n        else {\n            if (preamble) {\n                result = me.updateWrapDate(startDate, preamble, false);\n                me._wrapStartDate = result;\n            }\n            else {\n                result = startDate;\n            }\n        }\n\n        return result;\n    }\n\n    set wrapStartDate(value) {\n        this._wrapStartDate = value;\n    }\n\n    get wrapEndDate() {\n        const\n            me                     = this,\n            { postamble, endDate } = me,\n            wrapEndDate            = me._wrapEndDate;\n\n        let result;\n\n        if (wrapEndDate) {\n            result = wrapEndDate;\n        }\n        else {\n            if (postamble) {\n                result = me.updateWrapDate(endDate, postamble, true);\n                me._wrapEndDate = result;\n            }\n            else {\n                result = endDate;\n            }\n        }\n\n        return result;\n    }\n\n    set wrapEndDate(value) {\n        this._wrapEndDate = value;\n    }\n\n    set(data) {\n        const isObject = typeof data === 'object';\n        if (data === 'preamble' || (isObject && 'preamble' in data)) {\n            this.wrapStartDate = null;\n        }\n        if (data === 'postamble' || (isObject && 'postamble' in data)) {\n            this.wrapEndDate = null;\n        }\n        return super.set(...arguments);\n    }\n\n    /**\n     * Returns event start date adjusted by {@link #field-preamble} (start date - duration).\n     * @property {Date}\n     * @readonly\n     */\n    get outerStartDate() {\n        return this.wrapStartDate;\n    }\n\n    /**\n     * Returns event end date adjusted by {@link #field-postamble} (end date + duration).\n     * @property {Date}\n     * @readonly\n     */\n    get outerEndDate() {\n        return this.wrapEndDate;\n    }\n\n    //endregion\n\n    /**\n     * Defines if the given event field should be manually editable in UI.\n     * You can override this method to provide your own logic.\n     *\n     * By default, the method defines:\n     * - {@link #field-earlyStartDate}, {@link #field-earlyEndDate} as not editable;\n     * - {@link #field-endDate}, {@link #field-duration} and {@link #field-fullDuration} fields\n     *   as not editable for summary events except the {@link #field-manuallyScheduled manually scheduled} ones;\n     * - {@link #field-percentDone} as not editable for summary events.\n     *\n     * @param {String} fieldName Name of the field\n     * @returns {Boolean} Returns `true` if the field is editable, `false` if it is not and `undefined` if the event has\n     * no such field.\n     */\n    isEditable(fieldName) {\n        switch (fieldName) {\n            // r/o fields\n            case 'earlyStartDate':\n            case 'earlyEndDate':\n                return false;\n\n            // disable percentDone editing for summary tasks\n            case 'percentDone' :\n            case 'renderedPercentDone' :\n                return this.isLeaf;\n\n            // end/duration is allowed to edit for leafs and manually scheduled summaries\n            case 'endDate' :\n            case 'duration' :\n            case 'fullDuration' :\n                return this.isLeaf || this.manuallyScheduled;\n        }\n\n        return super.isEditable(fieldName);\n    }\n\n    // Occurrences are not part of the project, when requesting their stm we retrieve it from the master event instead\n    get stm() {\n        return this.recurringEvent?.stm ?? super.stm;\n    }\n\n    set stm(stm) {\n        super.stm = stm;\n    }\n\n    //region Early render\n\n    get assigned() {\n        const\n            { project }  = this,\n            assigned     = super.assigned;\n\n        // Figure assigned events out before buckets are created  (if part of project)\n        if (project?.isDelayingCalculation && !assigned) {\n            return project.assignmentStore.storage.findItem('event', this);\n        }\n\n        return assigned;\n    }\n\n    set assigned(assigned) {\n        super.assigned = assigned;\n    }\n\n    //endregion\n\n    getCurrentConfig(options) {\n        const\n            { segments } = this,\n            result       = super.getCurrentConfig(options);\n\n        // include segments\n        if (result && segments) {\n            result.segments = segments.map(segment => segment.getCurrentConfig(options));\n        }\n\n        return result;\n    }\n\n}\n","import AjaxStore from '../../Core/data/AjaxStore.js';\nimport GetEventsMixin from '../../Scheduler/data/mixin/GetEventsMixin.js';\nimport DayIndexMixin from '../../Scheduler/data/mixin/DayIndexMixin.js';\nimport EventStoreMixin from '../../Scheduler/data/mixin/EventStoreMixin.js';\nimport SharedEventStoreMixin from '../../Scheduler/data/mixin/SharedEventStoreMixin.js';\nimport RecurringEventsMixin from '../../Scheduler/data/mixin/RecurringEventsMixin.js';\nimport EventModel from '../model/EventModel.js';\nimport PartOfProject from './mixin/PartOfProject.js';\nimport { ChronoEventStoreMixin } from '../../Engine/quark/store/ChronoEventStoreMixin.js';\n\n/**\n * @module SchedulerPro/data/EventStore\n */\n\n/**\n * A store holding all the {@link SchedulerPro.model.EventModel events} to be rendered into a {@link SchedulerPro.view.SchedulerPro Scheduler Pro}.\n *\n * This store only accepts a model class inheriting from {@link SchedulerPro.model.EventModel}.\n *\n * An EventStore is usually connected to a project, which binds it to other related stores (AssignmentStore,\n * ResourceStore and DependencyStore). The project also handles normalization/calculation of the data on the records in\n * the store. For example if a record is added with a `startDate` and an `endDate`, it will calculate the `duration`.\n *\n * The calculations happens async, records are not guaranteed to have up to date data until they are finished. To be\n * certain that calculations have finished, call `await project.commitAsync()` after store actions. Or use one of the\n * `xxAsync` functions, such as `loadDataAsync()`.\n *\n * Using `commitAsync()`:\n *\n * ```javascript\n * eventStore.data = [{ startDate, endDate }, ...];\n *\n * // duration of the record is not yet calculated\n *\n * await eventStore.project.commitAsync();\n *\n * // now it is\n * ```\n *\n * Using `loadDataAsync()`:\n *\n * ```javascript\n * await eventStore.loadDataAsync([{ startDate, endDate }, ...]);\n *\n * // duration is calculated\n * ```\n *\n * @mixes SchedulerPro/data/mixin/PartOfProject\n * @mixes Scheduler/data/mixin/SharedEventStoreMixin\n * @mixes Scheduler/data/mixin/GetEventsMixin\n * @mixes Scheduler/data/mixin/EventStoreMixin\n * @mixes Scheduler/data/mixin/RecurringEventsMixin\n * @extends Core/data/AjaxStore\n *\n * @typings Scheduler/data/EventStore -> Scheduler/data/SchedulerEventStore\n */\nexport default class EventStore extends PartOfProject(SharedEventStoreMixin(RecurringEventsMixin(GetEventsMixin(DayIndexMixin(EventStoreMixin(ChronoEventStoreMixin.derive(AjaxStore))))))) {\n\n    //region Config\n\n    static $name = 'EventStore';\n\n    static get defaultConfig() {\n        return {\n            modelClass : EventModel\n        };\n    }\n\n    //endregion\n\n}\n","import Base from '../../Core/Base.js';\n\nconst sortFn = (a, b) => {\n    if (a < b) {\n        return -1;\n    }\n    else if (a > b) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n};\n\n/**\n * @module SchedulerPro/eventlayout/ProHorizontalLayout\n */\n\n/**\n * Mixin for SchedulerPro horizontal layouts ({@link SchedulerPro.eventlayout.ProHorizontalLayoutPack} and\n * {@link SchedulerPro.eventlayout.ProHorizontalLayoutStack}). Should not be used directly, instead specify\n * {@link Scheduler.view.mixin.SchedulerEventRendering#config-eventLayout} in the SchedulerPro config (`stack`, `pack`\n * or `none`):\n *\n * ```javascript\n * new SchedulerPro({\n *   eventLayout: 'stack'\n * });\n * ```\n *\n * ## Grouping events\n *\n * By default events are not grouped and are laid out inside the row using start and end dates. Using\n * {@link #config-groupBy} config you can group events inside the resource row. Every group will be laid out on its own\n * band, as if layout was applied to each group of events separately.\n *\n * {@inlineexample SchedulerPro/eventlayout/ProHorizontalLayout.js}\n *\n * ### By field value\n *\n * You can specify field name to group events by. The following snippet would put *high* prio events at the top:\n *\n * ```javascript\n * new SchedulerPro({\n *     eventLayout : {\n *         type    : 'stack',\n *         groupBy : 'prio'\n *     },\n *     project : {\n *         eventsData : [\n *             { id : 1, startDate : '2017-02-08', duration : 1, prio : 'low' },\n *             { id : 2, startDate : '2017-02-09', duration : 1, prio : 'high' },\n *             { id : 3, startDate : '2017-02-10', duration : 1, prio : 'high' },\n *         ],\n *         resourcesData : [\n *             { id : 1, name : 'Resource 1' }\n *         ],\n *         assignmentsData : [\n *             { id : 1, resource : 1, event : 1 },\n *             { id : 2, resource : 1, event : 2 },\n *             { id : 3, resource : 1, event : 3 }\n *         ]\n *     }\n * })\n * ```\n *\n * ### Order of groups\n *\n * Groups are **always** sorted ascending. In the example above *high* prio events are above *low* prio events because:\n *\n * ```javascript\n * 'high' < 'low' // true\n * ```\n *\n * If you want to group events in a specific order, you can define it in a\n * special {@link #config-weights} config:\n *\n * ```javascript\n * new SchedulerPro({\n *     eventLayout : {\n *         type    : 'stack',\n *         weights : {\n *             low  : 100,\n *             high : 200\n *         },\n *         groupBy : 'prio'\n *     }\n * });\n * ```\n *\n * This will put *low* prio events at the top.\n *\n * The weight value defaults to `Infinity` unless specified in the weights config explicitly.\n *\n * ### Using a function\n *\n * You can use a custom function to group events. The group function receives an event record as a single argument and\n * is expected to return a non-null value for the group. This allows you to arrange events in any order you like,\n * including grouping by multiple properties at once.\n *\n * The snippet below groups events by duration and priority by creating 4 weights:\n *\n * |       | high prio | low prio |\n * |-------|-----------|----------|\n * | long  |     2     |    10    |\n * | short |     3     |    15    |\n *\n * ```javascript\n * new SchedulerPro({\n *     eventLayout : {\n *         type    : 'stack',\n *         groupBy : event => {\n *             return (event.duration > 2 ? 2 : 3) * (event.prio === 'high' ? 1 : 5);\n *         }\n *     }\n * })\n * ```\n *\n * This will divide events into 4 groups as seen in this demo:\n *\n * {@inlineexample SchedulerPro/eventlayout/ProHorizontalLayout2.js}\n *\n * ## Manual event layout\n *\n * You can provide a custom function to layout events inside the row and set the row size as required using\n * {@link #config-layoutFn}. The function is called with an array of {@link EventRenderData render data} objects. The\n * custom function can iterate over those objects and position them inside the row using `top` and `height` attributes.\n * The function should return the total row height in pixels.\n *\n * Please note that using a custom layout function makes {@link SchedulerPro.view.SchedulerPro#config-rowHeight}\n * obsolete.\n *\n * {@inlineexample SchedulerPro/eventlayout/ProHorizontalLayoutFn.js}\n *\n * ```javascript\n * new SchedulerPro({\n *     eventLayout : {\n *         layoutFn : items => {\n *             // Put event element at random top position\n *             item.top = 100 * Math.random();\n *         }\n *     }\n * });\n * ```\n *\n * @mixin\n */\nexport default Target => class ProHorizontalLayout extends (Target || Base) {\n    static get configurable() {\n        return {\n            /**\n             * Type of horizontal layout. Supported values are `stack`, `pack` and `none`.\n             * @config {'stack'|'pack'|'none'}\n             */\n            type : null,\n\n            /**\n             * The weights config allows you to specify order of the event groups inside the row. Higher weights are\n             * placed further down in the row. If field value is not specified in the weights object, it will be\n             * assigned `Infinity` value and pushed to the bottom.\n             *\n             * Only applicable when {@link #config-groupBy} config is not a function:\n             *\n             * ```javascript\n             * new SchedulerPro({\n             *     eventLayout : {\n             *         type    : 'stack',\n             *         weights : {\n             *             // Events with high prio will be placed at the top, then medium,\n             *             // then low prio events.\n             *             high   : 100,\n             *             medium : 150,\n             *             low    : 200\n             *         },\n             *         groupBy : 'prio'\n             *     }\n             * });\n             * ```\n             *\n             * Only explicitly defined groups are put in separate bands inside the row:\n             *\n             * ```javascript\n             * new SchedulerPro({\n             *     eventLayout : {\n             *         // Pack layout is also supported\n             *         type : 'pack',\n             *         weights : {\n             *             // Events with high prio will be placed at the top. All other\n             *             // events will be put to the same group at the bottom\n             *             high : 100\n             *         },\n             *         groupBy : 'prio'\n             *     }\n             * });\n             * ```\n             * @config {Object<String,Number>}\n             */\n            weights : null,\n\n            /**\n             * Specifies a way to group events inside the row. Can accept either a model field name or a function which\n             * is provided with event record as a single argument and is expected to return group for the event.\n             *\n             * @config {String|Function}\n             */\n            groupBy        : null,\n            groupByThisObj : null,\n\n            /**\n             * Supply a function to manually layout events. It accepts event layout data and should set `top`\n             * and `height` for every provided data item (left and width are calculated according to the event start\n             * date and duration). The function should return the total row height in pixels.\n             *\n             * For example, we can arrange events randomly in the row:\n             * ```javascript\n             * new SchedulerPro({\n             *     eventLayout : {\n             *         layoutFn : items => {\n             *             items.forEach(item => {\n             *                 item.top = Math.round(Math.random() * 100);\n             *                 item.height = Math.round(Math.random() * 100);\n             *             });\n             *\n             *             return 50;\n             *         }\n             *     }\n             * })\n             * ```\n             *\n             * If you need a reference to the scheduler pro instance, you can get that from the function scope (arrow\n             * function doesn't work here):\n             *\n             * ```javascript\n             * new SchedulerPro({\n             *     eventLayout : {\n             *         layoutFn(items) {\n             *             items.forEach(item => {\n             *                 item.top = Math.round(Math.random() * 100);\n             *                 item.height = Math.round(Math.random() * 100);\n             *             });\n             *\n             *             // note `scheduler`, not `schedulerPro`\n             *             return this.scheduler.rowHeight;\n             *         }\n             *     }\n             * })\n             * ```\n             *\n             * @config {Function}\n             * @param {EventRenderData[]} events Unordered array of event render data, sorting may be required\n             * @param {Scheduler.model.ResourceModel} resource The resource for which the events are being laid out.\n             * @returns {Number} Returns total row height\n             */\n            layoutFn : null\n        };\n    }\n\n    /**\n     * This method performs layout on an array of event render data and returns amount of _bands_. Band is a multiplier of a\n     * configured {@link Scheduler.view.Scheduler#config-rowHeight} to calculate total row height required to fit all\n     * events.\n     * This method should not be used directly, it is called by the Scheduler during the row rendering process.\n     * @method applyLayout\n     * @param {EventRenderData[]} events\n     * @param {Scheduler.model.ResourceModel} resource\n     * @returns {Number}\n     */\n\n    /**\n     * This method iterates over events and calculates top position for each of them. Default layouts calculate\n     * positions to avoid events overlapping horizontally (except for the 'none' layout). Pack layout will squeeze events to a single\n     * row by reducing their height, Stack layout will increase the row height and keep event height intact.\n     * This method should not be used directly, it is called by the Scheduler during the row rendering process.\n     * @method layoutEventsInBands\n     * @param {EventRenderData[]} events\n     */\n\n    /**\n     * Returns `true` if event {@link #config-groupBy grouper} is defined.\n     * @type {Boolean}\n     * @readonly\n     */\n    get grouped() {\n        return Boolean(this.groupBy);\n    }\n\n    /**\n     * Returns group for the passed event render data.\n     * @param {EventRenderData} layoutData\n     * @returns {*}\n     */\n    getGroupValue(layoutData) {\n        let result;\n\n        if (layoutData.group != null) {\n            result = layoutData.group;\n        }\n        else {\n            const\n                { groupBy, weights, groupByThisObj = this } = this,\n                { eventRecord }                             = layoutData;\n\n            if (typeof groupBy === 'function') {\n                result = groupBy.call(groupByThisObj, eventRecord);\n            }\n            else {\n                result = eventRecord[groupBy];\n\n                if (weights) {\n                    // If record value is null or undefined, use infinite weight to move record to the bottom\n                    result = weights[result] ?? Infinity;\n                }\n            }\n\n            layoutData.group = result;\n        }\n\n        return result;\n    }\n\n    /**\n     * Sorts events by group and returns ordered array of groups, or empty array if events are not grouped.\n     * @param {EventRenderData[]} events\n     * @returns {String[]}\n     */\n    getEventGroups(events) {\n        // If group fn is defined, we need to sort events array according to groups\n        if (this.grouped) {\n            const groups = new Set();\n\n            events.sort((a, b) => {\n                const\n                    aValue = this.getGroupValue(a),\n                    bValue = this.getGroupValue(b);\n\n                groups.add(aValue);\n                groups.add(bValue);\n\n                return sortFn(aValue, bValue);\n            });\n\n            return Array.from(groups).sort(sortFn);\n        }\n        else {\n            return [];\n        }\n    }\n};\n","import ProHorizontalLayout from './ProHorizontalLayout.js';\nimport HorizontalLayoutStack from '../../Scheduler/eventlayout/HorizontalLayoutStack.js';\n\n/**\n * @module SchedulerPro/eventlayout/ProHorizontalLayoutStack\n */\n\n/**\n * Handles layout of events within a row (resource) in horizontal mode. Stacks events, increasing row height to fit\n * all overlapping events.\n *\n * This layout is used by default in horizontal mode.\n *\n * This layout supports grouping events inside the resource row. See\n * {@link SchedulerPro.eventlayout.ProHorizontalLayout} for more info.\n *\n * @mixes SchedulerPro/eventlayout/ProHorizontalLayout\n */\nexport default class ProHorizontalLayoutStack extends HorizontalLayoutStack.mixin(ProHorizontalLayout) {\n    static get $name() {\n        return 'ProHorizontalLayoutStack';\n    }\n\n    /**\n     * @hideconfigs type, weights, groupBy, layoutFn\n     */\n\n    // heightRun is used when pre-calculating row heights, taking a cheaper path\n    layoutEventsInBands(events, heightRun = false) {\n        this.getEventGroups(events);\n\n        return super.layoutEventsInBands(events, heightRun);\n    }\n}\n","import ProHorizontalLayout from './ProHorizontalLayout.js';\nimport HorizontalLayoutPack from '../../Scheduler/eventlayout/HorizontalLayoutPack.js';\n\n/**\n * @module SchedulerPro/eventlayout/ProHorizontalLayoutPack\n */\n\n/**\n * Handles layout of events within a row (resource) in horizontal mode. Packs events (adjusts their height) to fit\n * available row height.\n *\n * This layout supports grouping events inside the resource row. See\n * {@link SchedulerPro.eventlayout.ProHorizontalLayout} for more info.\n *\n * @mixes SchedulerPro/eventlayout/ProHorizontalLayout\n */\nexport default class ProHorizontalLayoutPack extends HorizontalLayoutPack.mixin(ProHorizontalLayout) {\n    static get $name() {\n        return 'ProHorizontalLayoutPack';\n    }\n\n    /**\n     * @hideconfigs type, weights, groupBy, layoutFn\n     */\n\n    layoutEventsInBands(events) {\n        const\n            groups = this.getEventGroups(events),\n            // If we don't have any groups, treat it like we have a single group including all events\n            groupCount = groups.length || 1;\n\n        const result = this.packEventsInBands(events, (event, j, slot, slotSize) => {\n            const\n                size              = slotSize / groupCount,\n                groupIndex        = groupCount === 1 ? 0 : groups.indexOf(event.group),\n                adjustedSlotStart = groupIndex / groupCount;\n\n            // This height and top are used to position event in the grouped row\n            event.height = size;\n            event.top    = adjustedSlotStart + slot.start / groupCount + j * size;\n\n            // This height and top are used to layout events in the same band. They emulate a single row which is what\n            // pack logic expects\n            event.inBandHeight = slotSize;\n            event.inBandTop = slot.start + j * slotSize;\n        });\n\n        events.forEach(event => {\n            Object.assign(\n                event,\n                this.bandIndexToPxConvertFn.call(\n                    this.bandIndexToPxConvertThisObj || this,\n                    event.top,\n                    event.height,\n                    event.eventRecord,\n                    event.resourceRecord\n                )\n            );\n        });\n\n        return result;\n    }\n}\n","import ArrayHelper from '../../Core/helper/ArrayHelper.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport ResourceTimeRangesBase from '../../Scheduler/feature/base/ResourceTimeRangesBase.js';\nimport ResourceTimeRangeModel from '../../Scheduler/model/ResourceTimeRangeModel.js';\n\n/**\n * @module SchedulerPro/feature/CalendarHighlight\n */\n\nlet counter = 0;\n\nclass CalendarHighlightModel extends ResourceTimeRangeModel {\n    static get $name() {\n        return 'CalendarHighlightModel';\n    }\n\n    static domIdPrefix = 'calendarhighlight';\n\n    // For nicer DOM, since the records are transient we do not need a fancy UUID\n    static generateId() {\n        return ++counter;\n    }\n}\n\n/**\n * This feature temporarily visualizes {@link SchedulerPro/model/CalendarModel calendars} for the event or resource\n * calendar (controlled by the {@link #config-calendar} config). The calendars are highlighted while a user is creating,\n * dragging or resizing a task. Enabling this feature makes it easier for the end user to understand the underlying\n * rules of the schedule.\n *\n * {@inlineexample SchedulerPro/feature/CalendarHighlight.js}\n *\n * ## Example usage\n *\n * ```javascript\n * new SchedulerPro({\n *     features : {\n *         calendarHighlight : {\n *             // visualize resource calendars while interacting with events\n *             calendar : 'resource'\n *         }\n *     }\n * })\n * ```\n *\n * This feature is **disabled** by default.\n *\n * @extends Scheduler/feature/base/ResourceTimeRangesBase\n * @classtype calendarHighlight\n * @feature\n * @demo SchedulerPro/highlight-event-calendars\n */\nexport default class CalendarHighlight extends ResourceTimeRangesBase {\n\n    //region Config\n\n    static get $name() {\n        return 'CalendarHighlight';\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * A string defining which calendar(s) to highlight during drag drop, resize or create flows.\n             * Valid values are `event` or `resource`.\n             *\n             * @config {'event'|'resource'}\n             * @default\n             */\n            calendar : 'event',\n\n            /**\n             * A string defining which calendar(s) to highlight during drag drop, resize or create flows.\n             * Valid values are `event` or `resource`.\n             *\n             * @config {'event'|'resource'}\n             */\n            unhighlightOnDrop : null,\n\n            /**\n             * A callback function which is called when you interact with one or more events (e.g. drag drop) to\n             * highlight only available resources.\n             *\n             * ```javascript\n             * new SchedulerPro({\n             *     features : {\n             *         calendarHighlight : {\n             *             collectAvailableResources({ scheduler, eventRecords }) {\n             *                  const mainEvent = eventRecords[0];\n             *                  return scheduler.resourceStore.query(resource => resource.role === mainEvent.requiredRole || !mainEvent.requiredRole);\n             *              }\n             *         }\n             *     }\n             * });\n             * ```\n             *\n             * @param {Object} context A context object\n             * @param {SchedulerPro.view.SchedulerPro} context.scheduler The scheduler instance\n             * @param {Scheduler.model.EventModel[]} context.eventRecords The event records\n             * @returns {Scheduler.model.ResourceModel[]} An array with the available resource records\n             * @config {Function}\n             */\n            collectAvailableResources : null,\n\n            rangeCls                    : 'b-sch-highlighted-calendar-range',\n            resourceTimeRangeModelClass : CalendarHighlightModel,\n            inflate                     : 3\n        };\n    }\n\n    static get pluginConfig() {\n        const config  = super.pluginConfig;\n\n        config.assign = [\n            'highlightEventCalendars',\n            'highlightResourceCalendars',\n            'unhighlightCalendars'\n        ];\n\n        return config;\n    }\n\n    afterConstruct() {\n        super.afterConstruct();\n\n        this.client.ion({\n            eventDragStart   : 'onEventDragStart',\n            eventDragReset   : 'unhighlightCalendars',\n            eventResizeStart : 'onEventResizeStart',\n            eventResizeEnd   : 'unhighlightCalendars',\n            dragCreateStart  : 'onDragCreateStart',\n            afterDragCreate  : 'unhighlightCalendars',\n            thisObj          : this\n        });\n    }\n\n    //endregion\n\n    highlightCalendar(eventRecords, resourceRecords) {\n        eventRecords = ArrayHelper.asArray(eventRecords);\n        resourceRecords = ArrayHelper.asArray(resourceRecords);\n\n        if (this.calendar === 'event') {\n            this.highlightEventCalendars(eventRecords, resourceRecords);\n        }\n        else {\n            this.highlightResourceCalendars(resourceRecords);\n        }\n    }\n\n    // region public APIs\n    /**\n     * Highlights the time spans representing the calendars of the passed event records, and resource records.\n     * @on-owner\n     * @param {Scheduler.model.EventModel[]} eventRecords The event records\n     * @param {Scheduler.model.ResourceModel[]} [resourceRecords] The resource records\n     * @param {Boolean} [clearExisting] Provide `false` to leave previous highlight elements\n     */\n    highlightEventCalendars(eventRecords, resourceRecords, clearExisting = true) {\n        const\n            me                     = this,\n            { client }             = me,\n            { startDate, endDate } = client;\n\n        if (me.disabled) {\n            return;\n        }\n\n        if (clearExisting) {\n            me.unhighlightCalendars();\n        }\n\n        eventRecords = ArrayHelper.asArray(eventRecords);\n\n        if (!resourceRecords) {\n            resourceRecords = eventRecords.flatMap(event => event.$linkedResources);\n        }\n\n        me.highlight = new Map();\n\n        resourceRecords = ArrayHelper.asArray(resourceRecords);\n\n        eventRecords.forEach(eventRecord => {\n            if (!eventRecord.calendar) {\n                return;\n            }\n\n            const timespans = eventRecord.calendar\n                ?.getWorkingTimeRanges(startDate, endDate)\n                .map(timespan => new CalendarHighlightModel(timespan));\n\n            if (timespans) {\n                for (const resourceRecord of resourceRecords) {\n                    me.highlight.set(resourceRecord, timespans);\n                    client.currentOrientation.refreshEventsForResource(resourceRecord, true, false);\n                }\n                if (resourceRecords.length > 0) {\n                    client.currentOrientation.onRenderDone();\n                }\n            }\n        });\n    }\n\n    /**\n     * Highlights the time spans representing the working time calendars of the passed resource records.\n     * @on-owner\n     * @param {Scheduler.model.ResourceModel[]} resourceRecords The resource records\n     * @param {Boolean} [clearExisting] Provide `false` to leave previous highlight elements\n     */\n    highlightResourceCalendars(resourceRecords, clearExisting = true) {\n        const\n            me                                         = this,\n            { startDate, endDate, currentOrientation } = me.client;\n\n        if (me.disabled) {\n            return;\n        }\n\n        if (clearExisting) {\n            me.unhighlightCalendars();\n        }\n\n        // Highlight resource calendars\n        me.highlight = new Map();\n\n        for (const resourceRecord of resourceRecords) {\n            const timespans = resourceRecord.calendar\n                ?.getWorkingTimeRanges(startDate, endDate)\n                .map(timespan => new CalendarHighlightModel(timespan));\n\n            if (timespans) {\n                me.highlight.set(resourceRecord, timespans);\n                currentOrientation.refreshEventsForResource(resourceRecord, true, false);\n            }\n        }\n        if (resourceRecords.length > 0) {\n            currentOrientation.onRenderDone();\n        }\n    }\n\n    /**\n     * Removes all highlight elements.\n     * @on-owner\n     */\n    unhighlightCalendars() {\n        if (!this.highlight) {\n            // We're not highlighting anything, bail out\n            return;\n        }\n\n        const\n            { currentOrientation } = this.client,\n            resources              = this.highlight.keys();\n\n        this.highlight = null;\n\n        for (const resource of resources) {\n            currentOrientation.refreshEventsForResource(resource, true, false);\n        }\n\n        currentOrientation.onRenderDone();\n    }\n\n    // endregion\n\n    // region event listeners\n    onEventDragStart({ context }) {\n        if (this.disabled) {\n            return;\n        }\n\n        const\n            me               = this,\n            { client }       = me,\n            { eventRecords } = context,\n            resourceRecords  = context.availableResources =\n                client.features.eventDrag.constrainDragToResource\n                    ? [context.resourceRecord]\n                    : me.collectAvailableResources?.({\n                        scheduler : client,\n                        eventRecords\n                    }) ?? client.resourceStore.records;\n\n        me.highlightCalendar(eventRecords, resourceRecords);\n    }\n\n    onEventResizeStart({ eventRecord, resourceRecord }) {\n        if (!this.disabled) {\n            this.highlightCalendar(eventRecord, [resourceRecord]);\n        }\n    }\n\n    onDragCreateStart({ eventRecord, resourceRecord }) {\n        if (!this.disabled) {\n            this.highlightCalendar(eventRecord, [resourceRecord]);\n        }\n    }\n\n    // endregion\n\n    // Called on render of resources events to get events to render. Add any ranges\n    // (chained function from Scheduler)\n    getEventsToRender(resource, events) {\n        const timespans = this.highlight?.get(resource);\n\n        timespans && events.push(...timespans);\n\n        return events;\n    }\n\n    onEventDataGenerated(renderData) {\n        const { eventRecord } = renderData;\n\n        if (eventRecord.isCalendarHighlightModel) {\n            const { inflate } = this;\n\n            // Flag that we should fill entire row/col\n            renderData.fillSize = this.client.isVertical;\n            // Add our own cls\n            renderData.wrapperCls['b-sch-highlighted-calendar-range'] = 1;\n            // Add label\n            renderData.children.push({\n                className : 'b-sch-event-content',\n                html      : eventRecord.name,\n                dataset   : {\n                    taskBarFeature : 'content'\n                }\n            });\n\n            // Inflate\n            renderData.width += inflate * 2;\n            renderData.height += inflate * 2;\n            renderData.left -= inflate;\n            renderData.top -= inflate;\n\n            // Event data for DOMSync comparison, unique per calendar & resource combination\n            renderData.eventId = `${this.generateElementId(eventRecord)}-resource-${renderData.resourceRecord.id}`;\n        }\n    }\n\n    updateDisabled(disabled, was) {\n        super.updateDisabled(disabled, was);\n\n        if (disabled) {\n            this.unhighlightCalendars();\n        }\n    }\n\n    shouldInclude(eventRecord) {\n        return eventRecord.isCalendarHighlightModel;\n    }\n\n    // No classname on Scheduler's/Gantt's element\n    get featureClass() {}\n}\n\nGridFeatureManager.registerFeature(CalendarHighlight, false, 'SchedulerPro');\n","import GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport SchedulerDependencyEdit from '../../Scheduler/feature/DependencyEdit.js';\nimport '../../Core/widget/Checkbox.js';\n\n/**\n * @module SchedulerPro/feature/DependencyEdit\n */\n\n/**\n * Feature that displays a popup containing fields for editing dependency data.\n *\n * This feature is **off** by default. For info on enabling it, see {@link Grid/view/mixin/GridFeatures}.\n *\n * @extends Scheduler/feature/DependencyEdit\n * @inlineexample SchedulerPro/feature/DependencyEdit.js\n * @typings Scheduler/feature/DependencyEdit -> Scheduler/feature/SchedulerDependencyEdit\n * @demo SchedulerPro/dependencies/\n * @classtype dependencyEdit\n * @feature\n */\nexport default class DependencyEdit extends SchedulerDependencyEdit {\n    //region Config\n\n    static get $name() {\n        return 'DependencyEdit';\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * True to show the lag field for the dependency\n             * @config {Boolean}\n             * @default\n             * @category Editor widgets\n             */\n            showLagField : true,\n\n            editorConfig : {\n                items : {\n                    activeField : {\n                        type  : 'checkbox',\n                        name  : 'active',\n                        label : 'L{Active}'\n                    }\n                }\n            }\n        };\n    }\n    //endregion\n}\n\nGridFeatureManager.registerFeature(DependencyEdit, false);\n","import InstancePlugin from '../../Core/mixin/InstancePlugin.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport Tooltip from '../../Core/widget/Tooltip.js';\n\n/**\n * @module SchedulerPro/feature/EventBuffer\n */\n\n/**\n * Feature that allows showing additional time before & after an event, to visualize things like travel time - or the time you\n * need to prepare a room for a meeting + clean it up after.\n *\n * The feature relies on two model fields: {@link SchedulerPro.model.EventModel#field-preamble} and\n * {@link SchedulerPro.model.EventModel#field-postamble} which are used to calculate overall start and end dates used to\n * position the event. Buffer time overlaps the same way events overlap (as you can see in the inline demo below). It\n * should also be noted that buffer time is ignored for milestones.\n *\n * {@inlineexample SchedulerPro/feature/EventBuffer.js}\n *\n * This feature is **disabled** by default\n *\n * @extends Core/mixin/InstancePlugin\n * @classtype eventBuffer\n * @feature\n * @demo SchedulerPro/travel-time\n */\nexport default class EventBuffer extends InstancePlugin {\n    static get $name() {\n        return 'EventBuffer';\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * Show buffer duration labels\n             * @config {Boolean}\n             * @default\n             */\n            showDuration : true,\n\n            /**\n             * A function which receives data about the buffer time and returns a html string to show in a tooltip when\n             * hovering a buffer time element\n             * @param {Object} data Data\n             * @param {Core.data.Duration} data.duration Buffer time duration\n             * @param {Boolean} data.before `true` if this is a buffer time before the event start, `false` if after\n             * @param {SchedulerPro.model.EventModel} data.eventRecord The event record\n             * @config {Function}\n             */\n            tooltipTemplate : {\n                value   : null,\n                $config : 'nullify'\n            }\n        };\n    }\n\n    static get pluginConfig() {\n        return {\n            chain : ['onEventDataGenerated']\n        };\n    }\n\n    //region Chained methods\n\n    updateTooltipTemplate(tooltipTemplate) {\n        const me = this;\n\n        if (tooltipTemplate) {\n            me.tooltip = Tooltip.new({\n                forElement  : me.client.timeAxisSubGridElement,\n                forSelector : '.b-sch-event-buffer-before,.b-sch-event-buffer-after',\n                align       : {\n                    align  : 'b-t',\n                    offset : [0, 10]\n                },\n                getHtml({ activeTarget }) {\n                    const\n                        eventRecord = me.client.resolveEventRecord(activeTarget),\n                        before      = activeTarget.matches('.b-sch-event-buffer-before'),\n                        duration    = before ? eventRecord.preamble : eventRecord.postamble;\n\n                    return me.tooltipTemplate({ eventRecord, duration, before });\n                }\n            });\n        }\n        else {\n            me.tooltip?.destroy();\n        }\n    }\n\n    onEventDataGenerated({ useEventBuffer, bufferBeforeWidth, bufferAfterWidth, eventRecord, wrapperChildren }) {\n        if (this.enabled && useEventBuffer) {\n            const\n                { isHorizontal }        = this.client,\n                { showDuration }        = this,\n                { preamble, postamble } = eventRecord,\n                sizeProp                = isHorizontal ? 'width' : 'height';\n\n            // Buffer elements should always be there, otherwise animation might get wrong\n            wrapperChildren.push(\n                {\n                    className : {\n                        'b-sch-event-buffer'        : 1,\n                        'b-sch-event-buffer-before' : 1,\n                        'b-buffer-thin'             : !bufferBeforeWidth\n                    },\n                    style    : `${sizeProp}: ${bufferBeforeWidth}px`,\n                    children : (showDuration && preamble) ? [\n                        {\n                            tag       : 'span',\n                            className : 'b-buffer-label',\n                            html      : preamble.toString(true)\n                        }\n                    ] : undefined\n                },\n                {\n                    className : {\n                        'b-sch-event-buffer'       : 1,\n                        'b-sch-event-buffer-after' : 1,\n                        'b-buffer-thin'            : !bufferAfterWidth\n                    },\n                    style    : `${sizeProp}: ${bufferAfterWidth}px`,\n                    children : (showDuration && postamble) ? [\n                        {\n                            tag       : 'span',\n                            className : 'b-buffer-label',\n                            html      : postamble.toString(true)\n                        }\n                    ] : undefined\n                }\n            );\n        }\n    }\n\n    //endregion\n\n    updateShowDuration() {\n        if (!this.isConfiguring) {\n            this.client.refreshWithTransition();\n        }\n    }\n\n    doDisable(disable) {\n        super.doDisable(disable);\n\n        const { client } = this;\n\n        if (!client.isConfiguring && client.isPainted) {\n            // Add a special CSS class to disable certain transitions\n            client.element.classList.add('b-eventbuffer-transition');\n\n            client.refreshWithTransition();\n\n            client.waitForAnimations().then(() => {\n                client.element.classList.remove('b-eventbuffer-transition');\n            });\n        }\n    }\n}\n\nGridFeatureManager.registerFeature(EventBuffer, false, 'SchedulerPro');\n","import EventDrag from '../../Scheduler/feature/EventDrag.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\nimport Rectangle from '../../Core/helper/util/Rectangle.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\n\n/**\n * @module SchedulerPro/feature/EventSegmentDrag\n */\n\n/**\n * Allows user to drag and drop event segments within the row.\n *\n * {@inlineexample SchedulerPro/feature/EventSegments.js}\n *\n * This feature is **enabled** by default\n *\n * @extends Scheduler/feature/EventDrag\n * @classtype eventSegmentDrag\n * @feature\n */\nexport default class EventSegmentDrag extends EventDrag {\n    //region Config\n\n    static $name = 'EventSegmentDrag';\n\n    static get defaultConfig() {\n        return {\n            constrainDragToResource : true\n        };\n    }\n\n    static get configurable() {\n        return {\n            capitalizedEventName : 'EventSegment'\n        };\n    }\n\n    static get pluginConfig() {\n        return {\n            chain : ['onPaint', 'isEventElementDraggable']\n        };\n    }\n\n    //endregion\n\n    //region Events\n\n    /**\n     * Fired on the owning Scheduler to allow implementer to use asynchronous finalization by setting\n     * `context.async = true` in the listener, to show a confirmation popup etc.\n     * ```javascript\n     *  scheduler.on('beforeEventSegmentDropFinalize', ({ context }) => {\n     *      context.async = true;\n     *      setTimeout(() => {\n     *          // async code don't forget to call finalize\n     *          context.finalize();\n     *      }, 1000);\n     *  })\n     * ```\n     *\n     * For synchronous one-time validation, simply set `context.valid` to true or false.\n     * ```javascript\n     *  scheduler.on('beforeEventSegmentDropFinalize', ({ context }) => {\n     *      context.valid = false;\n     *  })\n     * ```\n     * @event beforeEventSegmentDropFinalize\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source Scheduler instance\n     * @param {Object} context\n     * @param {Boolean} context.async Set true to not finalize the drag-drop operation immediately (e.g. to wait for user confirmation)\n     * @param {Scheduler.model.EventModel[]} context.eventRecords Dragged segments\n     * @param {Boolean} context.valid Set this to `false` to abort the drop immediately.\n     * @param {Function} context.finalize Call this method after an **async** finalization flow, to finalize the drag-drop operation. This method accepts one\n     * argument: pass `true` to update records, or `false` to ignore changes\n     */\n\n    /**\n     * Fired on the owning Scheduler after an event segment is dropped\n     * @event afterEventSegmentDrop\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source\n     * @param {Scheduler.model.EventModel[]} eventRecords Dropped segments\n     * @param {Boolean} valid\n     * @param {Object} context\n     */\n\n    /**\n     * Fired on the owning Scheduler when an event segment is dropped\n     * @event eventSegmentDrop\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source\n     * @param {Scheduler.model.EventModel[]} eventRecords Dropped segments\n     */\n\n    /**\n     * Fired on the owning Scheduler before event segment dragging starts. Return `false` to prevent the action.\n     * @event beforeEventSegmentDrag\n     * @on-owner\n     * @preventable\n     * @param {Scheduler.view.Scheduler} source Scheduler instance\n     * @param {Scheduler.model.EventModel[]} eventRecords Segments to drag\n     * @param {MouseEvent} event Browser event\n     */\n\n    /**\n     * Fired on the owning Scheduler when event segment dragging starts\n     * @event eventSegmentDragStart\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source Scheduler instance\n     * @param {Scheduler.model.EventModel[]} eventRecords Dragged segments\n     * @param {MouseEvent} event Browser event\n     */\n\n    /**\n     * Fired on the owning Scheduler when event segments are dragged\n     * @event eventSegmentDrag\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source Scheduler instance\n     * @param {Scheduler.model.EventModel[]} eventRecords Dragged segments\n     * @param {Date} startDate Start date for the current location\n     * @param {Date} endDate End date for the current location\n     * @param {Object} context\n     * @param {Boolean} context.valid Set this to `false` to signal that the current drop position is invalid.\n     */\n\n    /**\n     * Fired on the owning Scheduler after an event segment drag operation has been aborted\n     * @event eventSegmentDragAbort\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source Scheduler instance\n     * @param {Scheduler.model.EventModel[]} eventRecords Dragged segments\n     */\n    /**\n     * Fired on the owning Scheduler after an event segment drag operation regardless of the operation being cancelled\n     * or not\n     * @event eventSegmentDragReset\n     * @on-owner\n     * @param {Scheduler.view.Scheduler} source Scheduler instance\n     */\n    //endregion\n\n    //region Drag events\n\n    getTriggerParams(dragData) {\n        const { assignmentRecords, eventRecords, resourceRecord, browserEvent: event } = dragData;\n\n        return {\n            // `context` is now private, but used in WebSocketHelper\n            context : dragData,\n            eventRecords,\n            resourceRecord,\n            assignmentRecords,\n            event\n        };\n    }\n\n    triggerEventDrag(dragData, start) {\n        this.scheduler.trigger('eventSegmentDrag', Object.assign(this.getTriggerParams(dragData), {\n            startDate : dragData.startDate,\n            endDate   : dragData.endDate\n        }));\n    }\n\n    triggerDragStart(dragData) {\n        this.scheduler.navigator.skipNextClick = true;\n\n        this.scheduler.trigger('eventSegmentDragStart', this.getTriggerParams(dragData));\n    }\n\n    triggerDragAbort(dragData) {\n        this.scheduler.trigger('eventSegmentDragAbort', this.getTriggerParams(dragData));\n    }\n\n    triggerDragAbortFinalized(dragData) {\n        this.scheduler.trigger('eventSegmentDragAbortFinalized', this.getTriggerParams(dragData));\n    }\n\n    triggerAfterDrop(dragData, valid) {\n        this.scheduler.trigger('afterEventSegmentDrop', Object.assign(this.getTriggerParams(dragData), {\n            valid\n        }));\n\n        if (!valid) {\n            // Edge cases:\n            // 1. If this drag was a no-op, and underlying data was changed while drag was ongoing (e.g. web socket\n            // push), we need to manually force a view refresh to ensure a correct render state\n            //\n            // or\n            // 2. Events were removed before we dropped at an invalid point\n            const\n                { assignmentStore, eventStore } = this.client,\n                needRefresh                     = this.dragData.initialAssignmentsState.find(({\n                    resource, assignment\n                }, i) => {\n                    return !assignmentStore.includes(assignment) ||\n                        !eventStore.includes(assignment.event) ||\n                        resource.id !== this.dragData.assignmentRecords[i]?.resourceId;\n                });\n\n            if (needRefresh) {\n                this.client.refresh();\n            }\n        }\n    }\n\n    //endregion\n\n    //region Update records\n\n    /**\n     * Update events being dragged.\n     * @private\n     * @param context Drag data.\n     * @async\n     */\n    async updateRecords(context) {\n        const\n            me             = this,\n            { client }     = me,\n            copyKeyPressed = false;\n\n        let result;\n\n        if (!context.externalDropTarget) {\n            client.eventStore.suspendAutoCommit();\n\n            result = await me.updateSegment(client, context, copyKeyPressed);\n\n            client.eventStore.resumeAutoCommit();\n        }\n\n        // Tell the world there was a successful drop\n        client.trigger('eventSegmentDrop', Object.assign(me.getTriggerParams(context), {\n            isCopy               : copyKeyPressed,\n            event                : context.browserEvent,\n            targetEventRecord    : context.targetEventRecord,\n            targetResourceRecord : context.newResource,\n            externalDropTarget   : context.externalDropTarget\n        }));\n\n        return result;\n    }\n\n    /**\n     * Update assignments being dragged\n     * @private\n     * @async\n     */\n    async updateSegment(client, context) {\n        // The code is written to emit as few store events as possible\n        const\n            me                  = this,\n            isVertical          = client.mode === 'vertical',\n            {\n                eventRecords,\n                assignmentRecords,\n                timeDiff\n            }                   = context;\n\n        client.suspendRefresh();\n\n        let updated = false;\n\n        if (isVertical) {\n            // <remove-on-release>\n            // TODO: Broken after merge, figure it out\n            // </remove-on-release>\n            eventRecords.forEach((draggedEvent, i) => {\n                const eventBar = context.eventBarEls[i];\n\n                delete draggedEvent.instanceMeta(client).hasTemporaryDragElement;\n\n                // If it was created by a call to scheduler.currentOrientation.addTemporaryDragElement\n                // then release it back to be available to DomSync next time the rendered event block\n                // is synced.\n                if (eventBar.dataset.transient) {\n                    eventBar.remove();\n                }\n            });\n        }\n\n        const\n            eventBarEls  = context.eventBarEls.slice(),\n            draggedEvent = context.eventRecord,\n            newStartDate = me.adjustStartDate(context.origStart, timeDiff);\n\n        if (!DateHelper.isEqual(draggedEvent.startDate, newStartDate)) {\n\n            client.endListeningForBatchedUpdates();\n\n            me.cancelBatchUpdate(draggedEvent);\n\n            draggedEvent.startDate = newStartDate;\n\n            updated = true;\n\n            await client.project.commitAsync();\n\n            me.endBatchUpdate?.(draggedEvent);\n        }\n\n        client.resumeRefresh();\n\n        if (assignmentRecords.length > 0) {\n            if (!updated) {\n                context.valid = false;\n            }\n            else {\n                // https://github.com/bryntum/support/issues/630\n                // Force re-render when using fillTicks. If date changed within same tick the element won't actually\n                // change and since we hijacked it for drag it won't be returned to its original position\n                if (client.fillTicks) {\n                    eventBarEls.forEach(el => delete el.lastDomConfig);\n                }\n\n                // Not doing full refresh above, to allow for animations\n                client.refreshWithTransition();\n            }\n        }\n    }\n\n    //endregion\n\n    //region Drag data\n\n    // Prevent event draggind when it starts over a resize handle\n    isEventElementDraggable(eventElement, eventRecord, el, event) {\n        const me = this;\n\n        // ALLOW event drag:\n        // - if segments dragging is disabled or event is not segmented\n        if (me.disabled || !(eventRecord.isEventSegment || eventRecord.segments)) {\n            return true;\n        }\n\n        // otherwise make sure EventDrag is not trying to handle a segment element drag\n        return !el.closest(me.drag.targetSelector);\n    }\n\n    buildDragHelperConfig() {\n        const config = super.buildDragHelperConfig();\n\n        config.targetSelector = '.b-sch-event-segment:not(.b-first)';\n\n        return config;\n    }\n\n    getMinimalDragData(info) {\n        const\n            me                = this,\n            { client }        = me,\n            element           = me.getElementFromContext(info),\n            eventRecord       = client.resolveEventRecord(element),\n            resourceRecord    = client.resolveResourceRecord(element),\n            assignmentRecord  = client.resolveAssignmentRecord(element),\n            assignmentRecords = assignmentRecord ? [assignmentRecord] : [],\n            eventRecords      = [eventRecord];\n\n        return {\n            eventRecord,\n            resourceRecord,\n            assignmentRecord,\n            eventRecords,\n            assignmentRecords\n        };\n    }\n\n    beginBatchUpdate(eventRecord) {\n        eventRecord.event.beginBatch();\n        eventRecord.beginBatch();\n    }\n\n    endBatchUpdate(eventRecord) {\n        // could be no \"event\" if segments got merged after dragging\n        eventRecord.event?.endBatch();\n        eventRecord.endBatch();\n    }\n\n    cancelBatchUpdate(eventRecord) {\n        eventRecord.event?.cancelBatch();\n        eventRecord.cancelBatch();\n    }\n\n    setupProductDragData(info) {\n        const\n            me            = this,\n            { client }    = me,\n            element       = me.getElementFromContext(info),\n            {\n                eventRecord,\n                resourceRecord\n            }             = me.getMinimalDragData(info),\n            eventBarEls   = [],\n            mainEventElement = client.getElementsFromEventRecord(eventRecord.event, resourceRecord, true)[0];\n\n        if (me.constrainDragToResource && !resourceRecord) {\n            throw new Error('Resource could not be resolved for event: ' + eventRecord.id);\n        }\n\n        // We tweak last segment drag in RTL mode so its X-ccordinate is always zero\n        // so we have to tell DragHelper to still process corresponding drop event though\n        // the coordinate hasn't changed\n        me.drag.ignoreSamePositionDrop = !client.rtl || eventRecord.nextSegment;\n\n        // During this batch we want the client's UI to update itself using the proposed changes\n        // Only if startDrag has not already done it\n        if (!client.listenToBatchedUpdates) {\n            client.beginListeningForBatchedUpdates();\n        }\n\n        // Do changes in batch mode while dragging\n        me.beginBatchUpdate(eventRecord);\n\n        const\n            dateConstraints    = me.getDateConstraints?.(resourceRecord, eventRecord),\n            constrainRectangle = me.constrainRectangle = me.getConstrainingRectangle(dateConstraints, resourceRecord, eventRecord),\n            eventRegion        = Rectangle.from(element, client.foregroundCanvas, true),\n            mainEventRegion    = Rectangle.from(mainEventElement, client.foregroundCanvas, true);\n\n        // For segment we shift constrainRectangle by the main event offset\n        constrainRectangle.translate(-mainEventRegion.x);\n\n        super.setupConstraints(\n            constrainRectangle,\n            eventRegion,\n            client.timeAxisViewModel.snapPixelAmount,\n            Boolean(dateConstraints.start)\n        );\n\n        eventBarEls.push(element);\n\n        return {\n            record          : eventRecord,\n            draggedEntities : [eventRecord],\n            dateConstraints : dateConstraints?.start ? dateConstraints : null,\n            eventBarEls,\n            mainEventElement\n        };\n    }\n\n    suspendRecordElementRedrawing() {}\n\n    suspendElementRedrawing() {}\n\n    getDateConstraints(resourceRecord, eventRecord) {\n        let { minDate, maxDate } = super.getDateConstraints(resourceRecord, eventRecord);\n\n        // A segment movement is constrained by its neighbour segments if any\n        if (eventRecord.previousSegment && (!minDate || minDate < eventRecord.previousSegment.endDate)) {\n            minDate = eventRecord.previousSegment.endDate;\n        }\n\n        if (eventRecord.nextSegment && (!maxDate || maxDate < eventRecord.nextSegment.startDate)) {\n            maxDate = eventRecord.nextSegment.startDate;\n        }\n\n        return {\n            start : minDate,\n            end   : maxDate\n        };\n    }\n\n    get tipId() {\n        return `${this.client.id}-segment-drag-tip`;\n    }\n\n    internalSnapToPosition(snapTo) {\n        super.internalSnapToPosition();\n\n        // for RTL we pin last segment to 0px offset ..the main event element will get updated\n        if (this.client.rtl && !this.dragData.eventRecord.nextSegment) {\n            snapTo.x = 0;\n        }\n    }\n\n    updateDragContext(context, event) {\n        super.updateDragContext(...arguments);\n\n        const\n            { client } = this,\n            {\n                dirty,\n                eventRecord,\n                endDate\n            } = this.dragData;\n\n        // If dragging the last segment update the main event width accordingly\n        // need this to update dependency properly while dragging\n        if (dirty && !eventRecord.nextSegment) {\n\n            const { enableEventAnimations } = client;\n\n            client.enableEventAnimations = false;\n\n            eventRecord.event.set('endDate', endDate);\n\n            if (client.features.eventBuffer?.enabled) {\n                eventRecord.event.wrapEndDate = endDate;\n            }\n\n            client.enableEventAnimations = enableEventAnimations;\n        }\n    }\n\n    //endregion\n}\n\nGridFeatureManager.registerFeature(EventSegmentDrag, true, 'SchedulerPro');\nGridFeatureManager.registerFeature(EventSegmentDrag, false, 'ResourceHistogram');\n","import ArrayHelper from '../../Core/helper/ArrayHelper.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\nimport DomHelper from '../../Core/helper/DomHelper.js';\nimport DomSync from '../../Core/helper/DomSync.js';\nimport Rectangle from '../../Core/helper/util/Rectangle.js';\nimport Delayable from '../../Core/mixin/Delayable.js';\nimport InstancePlugin from '../../Core/mixin/InstancePlugin.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport AttachToProjectMixin from '../../Scheduler/data/mixin/AttachToProjectMixin.js';\n\n/**\n * @module SchedulerPro/feature/NestedEvents\n */\n\nconst borderWidths     = {\n    border : 1,\n    hollow : 2\n};\n\n// Future improvements might include:\n// * Add info to EventTooltip, parent could display number of children, child could display parent name\n// * Add parent picker to EventEdit\n// * Handle reassigning in editor, what happens if you reassign to a resource that events parent is not assigned to...\n\n// <remove-on-release>\n// TODO: Fix dependencies between parents - needs arcady\n// </remove-on-release>\n\n/**\n * A feature that renders child events nested inside their parent. Requires Scheduler Pro to use a tree event store\n * (normally handled automatically when events in data has children) and it is limited to one level of nesting.\n *\n * {@inlineexample SchedulerPro/feature/NestedEvents.js}\n *\n * The feature has configs for {@link #config-eventLayout}, {@link #config-resourceMargin} and {@link #config-barMargin}\n * that are separate from those on Scheduler Pro and only affect nested events.\n *\n * You can by default drag nested events out of their parents and drop any event onto root level events to nest. The\n * drag and drop behaviour can be customized using the {@link #config-constrainDragToParent},\n * {@link #config-allowNestingOnDrop} and {@link #config-allowDeNestingOnDrop} configs.\n *\n * <div class=\"note\">Note that for a nested event to show up for a resource both the parent and the nested event has to\n * be assigned to that resource.</div>\n *\n * ## Parent / children scheduling\n *\n * Scheduler Pro uses a scheduling engine closely related to the one used by Gantt (a subset of it). It for example\n * schedules based on calendars, dependencies and constraints. Part of its default logic is that parent events start and\n * end dates (and thus duration) is defined by their children. This means that if you remove the latest scheduled child\n * of a parent, the parents end date and duration will be adjusted to match the new latest scheduled child.\n *\n * Depending on what you plan to use nested events for in your application, this might not be the desired behaviour. If\n * you want the parent element to keep its dates regardless of its children, you should flag it as\n * {@link SchedulerPro/model/EventModel#field-manuallyScheduled}.\n *\n * A parent defined like this will shrink / grow with its children:\n *\n * ```json\n * {\n *     \"id\"        : 1,\n *     \"startDate\" : \"2022-03-24\",\n *     \"children\"  : [\n *         ...\n *     ]\n * }\n * ```\n *\n * Try removing an event here to see what happens:\n *\n * {@inlineexample SchedulerPro/feature/NestedEventsNotManually.js}\n *\n * A parent with `manuallyScheduled : true` will **not** shrink / grow with is children:\n *\n * ```json\n * {\n *     \"id\"                : 1,\n *     \"startDate\"         : \"2022-03-24\",\n *     \"duration\"          : 10,\n *     \"manuallyScheduled\" : true\n *     \"children\"          : [\n *         ...\n *     ]\n * }\n * ```\n *\n * Try the same thing here:\n *\n * {@inlineexample SchedulerPro/feature/NestedEventsManually.js}\n *\n * <div class=\"note\">Note that this also makes resizing a parent event that is not manually scheduled useless, it would\n * only snap back to the dates defined by its children. To avoid confusion, resizing is therefor turned off for parent\n * events unless they have `manuallyScheduled: true`</div>\n *\n * ## Drag and drop for parent events\n *\n * Normally the dates of a parent event is defined by its children (as described above), with exception for when drag\n * dropping a parent event along the time axis. In this case the operation will update the dates of all the children,\n * which will thus also move the parent event in time.\n *\n * If a parent event is dragged to a new resource, all its children will also be assigned to that resource.\n *\n * ## Caveats\n *\n * Usage of the feature comes with some requirements/caveats:\n * * As already mentioned, it requires a tree event store\n * * Requires using an AssignmentStore, the legacy single assignment mode does not handle tree stores\n * * Scheduler must use stack or overlap {@link SchedulerPro/view/SchedulerPro#config-eventLayout}, pack not supported\n * * {@link Scheduler/feature/Dependencies} are not supported for nested events\n * * {@link Scheduler/feature/EventDragSelect} is not supported\n * * Multi event drag is not supported for nested events\n * * Cannot {@link Scheduler/feature/EventDragCreate} within parent events\n * * {@link Scheduler/feature/Labels} are not supported for nested events\n * * {@link SchedulerPro/feature/EventBuffer} won't work with nested events\n * * {@link SchedulerPro/feature/TaskEdit} does not allow assigning resources or dependencies to nested events\n *\n * This feature is **off** by default. For info on enabling it, see {@link Grid.view.mixin.GridFeatures}.\n *\n * @classtype nestedEvents\n * @feature\n */\nexport default class NestedEvents extends InstancePlugin.mixin(AttachToProjectMixin, Delayable) {\n    static $name = 'NestedEvents';\n\n    //region Config\n\n    static configurable = {\n        /**\n         * This config defines how to handle overlapping nested events. Valid values are:\n         * - `stack`, events use fixed height and stack on top of each other (not supported in vertical mode)\n         * - `pack`, adjusts event height\n         * - `none`, allows events to overlap\n         *\n         * <div class=\"note\">Note that stacking works differently for nested events as compared to normal events (and\n         * not at all in vertical mode). The height of the parent event will never change, all nested events use\n         * {@link #config-eventHeight fixed height} and will stack until all available space is consumed, after which\n         * they will overflow the parent.</div>\n         *\n         * <div class=\"note\">Also note that stacked nested events are clipped by the parent, making it scrollable on\n         * vertical overflow. This cannot be combined with sticky events. If stacking events in your app won't overflow\n         * the parent, you can specify `overflow: visible` on `.b-nested-events-container.b-nested-events-layout-stack`\n         * to not clip and make sticky events work.</div>\n         *\n         * @prp {'stack'|'pack'|'none'}\n         * @default\n         */\n        eventLayout : 'pack',\n\n        /**\n         * Vertical (horizontal in vertical mode) space between nested event bars, in px\n         * @prp {Number}\n         * @default\n         */\n        barMargin : 5,\n\n        /**\n         * Margin above first nested event bar and below last (or before / after in vertical mode), in px\n         * @prp {Number}\n         * @default\n         */\n        resourceMargin : 0,\n\n        /**\n         * Fixed event height (width in vertical mode) to use when configured with `eventLayout : 'stack'`.\n         * @prp {Number}\n         * @default\n         */\n        eventHeight : 30,\n\n        /**\n         * Space (in px) in a parent element reserved for displaying a title etc. Used to compute available space for\n         * the nested events container inside the parent.\n         *\n         * Setting this config updates the ` --schedulerpro-nested-event-header-height` CSS variable.\n         *\n         * @prp {Number}\n         * @default\n         */\n        headerHeight : 20,\n\n        /**\n         * Constrains dragging of nested events within their parent when configured as `true`, allows them to be\n         * dragged out of it when configured as `false` (the default).\n         * @prp {Boolean}\n         * @default\n         */\n        constrainDragToParent : false,\n\n        /**\n         * Allow an event to be dropped on another to nest it.\n         *\n         * Dropping an event on another will add the dropped event as a child of the target, turning the target into a\n         * parent if it was not already.\n         *\n         * Parent events dropped on another event are ignored.\n         *\n         * @prp {Boolean}\n         * @default\n         */\n        allowNestingOnDrop : true,\n\n        /**\n         * Allow dropping a nested event directly on a resource to de-nest it, turning it into an ordinary event.\n         *\n         * Requires {@link #config-constrainDragToParent} to be configured with `false` to be applicable.\n         *\n         * @prp {Boolean}\n         * @default\n         */\n        allowDeNestingOnDrop : true,\n\n        /**\n         * Constrains resizing of nested events to their parents start and end dates when configured as `true` (the\n         * default), preventing them from changing their parents dates.\n         *\n         * Configure as `false` if you want to allow resizing operations to extend the parents dates (only applies for\n         * parents not configured with `manuallyScheduled: true`).\n         *\n         * <div class=\"note\">Note that when using `eventLayout: stack` the nested events are clipped by the parent, the\n         * part extending outside if not constrained to parent will not be shown until it re-renders after resize. If\n         * stacking events in your app won't overflow the parent, you can specify `overflow: visible` on\n         * `.b-nested-events-container.b-nested-events-layout-stack` to not clip.</div>\n         *\n         * @prp {Boolean}\n         * @default\n         */\n        constrainResizeToParent : true\n    };\n\n    static pluginConfig = {\n        before : ['onEventStoreBatchedUpdate'],\n        chain  : [\n            'getEventsToRender', 'onEventDataGenerated', 'processEventDrop', 'processCrossSchedulerEventDrop',\n            'beforeEventDragStart', 'afterEventDragStart', 'afterEventDragAbortFinalized',\n            'checkEventDragValidity', 'afterEventResizeStart'\n        ],\n        override : [\n            'getResourceMargin', 'getBarMargin', 'getAppliedResourceHeight', 'getResourceWidth', 'getEventLayout',\n            'getElementFromAssignmentRecord', 'scheduleEvent'\n        ]\n    };\n\n    static delayable = {\n        refreshClient : 'raf'\n    };\n\n    //endregion\n\n    construct(client, config) {\n        super.construct(client, config);\n\n        // EventStore has to be a tree store for the feature to work.\n        // If it starts empty, it might not be flagged as such. Help it out.\n        this.client.eventStore.tree = true;\n    }\n\n    refreshClient() {\n        !this.client.isConfiguring && this.client.refreshWithTransition();\n    }\n\n    doDisable() {\n        this.refreshClient();\n    }\n\n    //region Props\n\n    updateEventLayout(layout) {\n        if (layout === 'stack' && this.client.isVertical) {\n            console.warn('Stacked nested events are not supported in vertical mode');\n        }\n\n        this.refreshClient();\n    }\n\n    updateBarMargin() {\n        this.refreshClient();\n    }\n\n    updateResourceMargin() {\n        this.refreshClient();\n    }\n\n    updateEventHeight() {\n        this.refreshClient();\n    }\n\n    updateHeaderHeight(height) {\n        this.client.element.style.setProperty('--schedulerpro-nested-event-header-height', `${height}px`);\n        this.refreshClient();\n    }\n\n    // Nested events has their own layout setting\n    getEventLayout(resourceRecord, parentEventRecord) {\n        if (parentEventRecord) {\n            return { type : this.eventLayout };\n        }\n\n        return this.overridden.getEventLayout(resourceRecord);\n    }\n\n    // Specific resource margin for nested events\n    getResourceMargin(resourceRecord, parentEventRecord) {\n        if (parentEventRecord && !parentEventRecord.isRoot) {\n            return this.resourceMargin;\n        }\n\n        return this.overridden.getResourceMargin(resourceRecord);\n    }\n\n    // Specific bar margin for nested events\n    getBarMargin(resourceRecord, parentEventRecord) {\n        if (parentEventRecord && !parentEventRecord.isRoot) {\n            return this.barMargin;\n        }\n\n        return this.overridden.getBarMargin(resourceRecord);\n    }\n\n    // Use height available inside the parent event\n    getAppliedResourceHeight(resourceRecord, parentEventRecord) {\n        const me = this;\n\n        if (parentEventRecord && !parentEventRecord.isRoot) {\n            if (me.eventLayout === 'stack') {\n                // Layout subtracts resourceMargin * 2, added here to get eventHeight correct after\n                return me.eventHeight + me.resourceMargin * 2;\n            }\n            else {\n                const borderWidth = borderWidths[me.client.getEventStyle(parentEventRecord, resourceRecord)] ?? 0;\n\n                return me.currentParentsHeight - me.headerHeight - borderWidth;\n            }\n        }\n\n        return me.overridden.getAppliedResourceHeight(resourceRecord);\n    }\n\n    getResourceWidth(resourceRecord, parentEventRecord) {\n        if (parentEventRecord && !parentEventRecord.isRoot) {\n            return this.currentParentsWidth - this.headerHeight;\n        }\n\n        return this.overridden.getResourceWidth(resourceRecord);\n    }\n\n    //endregion\n\n    //region CRUD listeners\n\n    attachToEventStore(eventStore) {\n        eventStore?.ion({\n            name    : 'eventStore',\n            change  : 'onEventStoreChange',\n            thisObj : this\n        });\n    }\n\n    onEventStoreChange({ records }) {\n        // Refresh if a nested event was changed\n        if (records?.some(r => r.parent && !r.parent.isRoot)) {\n            this.refreshClient();\n        }\n    }\n\n    onEventStoreBatchedUpdate({ records }) {\n        // Refresh if a nested event was changed, and we are listening for batched changes (resizing)\n        if (this.client.listenToBatchedUpdates && records?.some(r => r.parent && !r.parent.isRoot)) {\n            this.refreshClient();\n            // Prevent default handler\n            return false;\n        }\n    }\n\n    //endregion\n\n    //region Drag\n\n    // Move event element to foreground canvas during drag. Has to happen before drag starts for the feature to pick up\n    // correct coordinates to resolve resource by, transition back to on abort etc.\n    beforeEventDragStart(context, dragData) {\n        const\n            me                                 = this,\n            { client }                         = me,\n            { eventRecord, assignmentRecords } = dragData,\n            { parentElement }                  = context.element;\n\n        // Dragging nested events?\n        if (eventRecord.parent && parentElement !== client.foregroundCanvas) {\n            me.isDraggingNestedEvent = true;\n\n            // Remember origin to be able to restore on abort (success redraws so that will be covered anyway)\n            context.originalParentElement = parentElement;\n            context.originalBounds = [];\n\n            for (const assignment of assignmentRecords) {\n                const { event } = assignment;\n\n                // UI should not allow selecting nested events from different parents, but it is programmatically\n                // possible. We only include from the dragged events parent here, behaviour for mixed parents are for\n                // now undefined\n                if (event.parent === eventRecord.parent) {\n                    const eventElement = client.getElementFromAssignmentRecord(assignment, true);\n\n                    context.originalBounds.push({\n                        element : eventElement,\n                        bounds  : Rectangle.from(eventElement, parentElement)\n                    });\n\n                    if (!me.constrainDragToParent && client.features.eventDrag.constrainDragToTimeline) {\n                        // Pull nested events out\n                        const relativeBounds = Rectangle.from(eventElement, client.timeAxisSubGridElement);\n                        eventElement.style.top = `${relativeBounds.top}px`;\n                        eventElement.style.left = `${relativeBounds.left}px`;\n\n                        DomSync.addChild(client.foregroundCanvas, eventElement, assignment.id);\n                    }\n                }\n            }\n        }\n        else {\n            me.isDraggingNestedEvent = false;\n        }\n    }\n\n    // Setup constraints when drag starts if needed\n    afterEventDragStart(context, dragData) {\n        // Constrain to current parent?\n        if (this.isDraggingNestedEvent && this.constrainDragToParent) {\n            const\n                { eventDrag } = this.client.features,\n                { parent }    = dragData.eventRecord,\n                parentBounds  = context.originalParentElement.getBoundingClientRect();\n\n            // Constrain top / bottom\n            eventDrag.setYConstraint(0, parentBounds.height - context.originalBounds[0].bounds.height);\n\n            // For left / right we also have to constrain the dates, otherwise only the element will be constrained\n            eventDrag.setXConstraint(0, parentBounds.width - context.originalBounds[0].bounds.width);\n            dragData.dateConstraints = { start : parent.startDate, end : parent.endDate };\n        }\n    }\n\n    checkEventDragValidity({ targetEventRecord, eventRecord, timeDiff, newResource, resourceRecord }) {\n        const me = this;\n\n        // Disallow dropping on a blank space in a resource if configured to not allow de-nesting\n        // (ignore first round, targetEventRecord cannot be resolved until on next, which we determine here by checking\n        // timeDiff or resource change)\n        if (me.isDraggingNestedEvent && !me.allowDeNestingOnDrop && !targetEventRecord && (timeDiff || newResource !== resourceRecord)) {\n            return {\n                valid   : false,\n                message : me.L('L{deNestingNotAllowed}')\n            };\n        }\n\n        // Disallow dropping on a new parent if configured to not allow nesting\n        if (!me.allowNestingOnDrop && targetEventRecord && targetEventRecord !== eventRecord.parent) {\n            return {\n                valid   : false,\n                message : me.L('L{nestingNotAllowed}')\n            };\n        }\n    }\n\n    // Move event to new parent if dropped on a parent or moved out of one\n    processEventDrop({ context, toScheduler, eventRecord, resourceRecord, reassignedFrom, element, eventsToAdd, addedEvents, draggedAssignment }) {\n        const\n            { parent }            = eventRecord,\n            { targetEventRecord } = context;\n\n        let newParent = parent;\n\n        // targetEventRecord is resolved using mouse coords, it might be outside of parent when constrained thus\n        // we have to check if constrained here to not move it out by mistake\n        if (parent !== targetEventRecord && !this.constrainDragToParent && !eventRecord.children?.length) {\n            // Dropped on a new parent and allowed to nest\n            if (targetEventRecord && this.allowNestingOnDrop) {\n                newParent = targetEventRecord.parent.isRoot ? targetEventRecord : targetEventRecord.parent;\n                // We resolve resource and targetEventRecord differently (mouse vs element), might get next resource so\n                // we re-resolve here to be sure it is correct\n                const targetResource = this.client.resolveResourceRecord(context.browserEvent);\n                if (targetResource !== resourceRecord) {\n                    resourceRecord = draggedAssignment.resource = targetResource;\n                }\n            }\n            // Dropped directly on resource and allowed to de-nest (cant get here if not allowed, blocked in validation)\n            else {\n                newParent = toScheduler.eventStore.rootNode;\n            }\n\n            if (newParent && newParent !== parent) {\n                addedEvents.push(newParent.appendChild(eventRecord));\n                // Don't want to add it to root when dragging to another scheduler\n                ArrayHelper.remove(eventsToAdd, eventRecord);\n            }\n        }\n\n        // Moved parent to new resource, reassign all children assigned to its previous resource\n        if (parent?.isRoot && eventRecord.isParent && reassignedFrom && reassignedFrom !== resourceRecord) {\n            for (const child of eventRecord.children) {\n                const existingAssignment = child.assignments.find(a => a.resource === reassignedFrom);\n                if (existingAssignment) {\n                    existingAssignment.resource = resourceRecord;\n                }\n            }\n        }\n\n        // Add to new parent (or put back in old) matching outer position. If we don't do this element might get released\n        // on DomSync of foregroundCanvas (also this lets it transition within the parent)\n        if (newParent && !newParent.isRoot) {\n            const\n                newParentElement = this.client.getElementFromEventRecord(newParent, resourceRecord).syncIdMap.nestedEventsContainer,\n                intersection     = newParentElement && Rectangle.from(element, newParentElement);\n\n            // If dropped on a root level leaf it has no nested events container yet\n            if (newParentElement) {\n                element.style.top = `${intersection.top}px`;\n                element.style.left = `${intersection.left}px`;\n\n                // If dropped at the same position in a new parent it won't transition into place if it thinks nothing\n                // changed\n                element.lastDomConfig = null;\n\n                DomSync.addChild(newParentElement, element, element.dataset.syncId);\n            }\n        }\n    }\n\n    // Assign all children to same resource when dropping on another scheduler\n    processCrossSchedulerEventDrop({ eventRecord }) {\n        if (eventRecord.isParent) {\n            for (const child of eventRecord.children) {\n                child.resource = eventRecord.resource;\n            }\n        }\n    }\n\n    // Restore element after abort (back to original parent and position)\n    async afterEventDragAbortFinalized({ originalParentElement, originalBounds }) {\n        if (this.isDraggingNestedEvent) {\n            // Wait for any position transition\n            for (const animation of originalBounds[0].element.getAnimations()) {\n                if (animation.transitionProperty === 'top' || animation.transitionProperty === 'left') {\n                    await animation.finished;\n                }\n            }\n\n            for (const { element, bounds } of originalBounds) {\n                // Move it back\n                element.style.top = `${bounds.top}px`;\n                element.style.left = `${bounds.left}px`;\n                originalParentElement.appendChild(element);\n            }\n        }\n    }\n\n    // Limit resizing to parent bounds if configured to do so (it is the default)\n    afterEventResizeStart(context) {\n        if (this.constrainResizeToParent) {\n            const { parent } = context.timespanRecord;\n            if (parent && !parent.isRoot) {\n                let { startDate, endDate } = parent;\n\n                if (context.dateConstraints) {\n                    startDate = DateHelper.max(startDate, context.dateConstraints.start);\n                    endDate = DateHelper.min(endDate, context.dateConstraints.end);\n                }\n\n                context.dateConstraints = {\n                    start : startDate,\n                    end   : endDate\n                };\n            }\n        }\n    }\n\n    //endregion\n\n    //region Overrides to make scheduler work with nested events\n\n    // Let Scheduler resolve nested events too\n    getElementFromAssignmentRecord(assignmentRecord, returnWrapper) {\n        if (assignmentRecord?.event?.parent && !assignmentRecord.event.parent.isRoot) {\n            const parentElement = this.client.getElementFromEventRecord(assignmentRecord.event.parent, assignmentRecord.resource);\n            return DomSync.getChild(parentElement, `nestedEventsContainer.${assignmentRecord.id}${returnWrapper ? '' : '.event'}`);\n        }\n\n        return this.overridden.getElementFromAssignmentRecord(assignmentRecord, returnWrapper);\n    }\n\n    // Allow scheduling nested events by overriding Schedulers implementation\n    async scheduleEvent({ eventRecord, parentEventRecord, startDate, element }) {\n        // When passed a parent, append to it and assign to its resource\n        if (parentEventRecord) {\n            eventRecord.startDate = startDate;\n            eventRecord = parentEventRecord.appendChild(eventRecord);\n            eventRecord.assign(parentEventRecord.resource);\n\n            // When given an element, it is positioned inside the parent and adopted by DomSync, letting it transition\n            if (element) {\n                const\n                    parentElement = this.client.getElementFromEventRecord(parentEventRecord).syncIdMap.nestedEventsContainer,\n                    eventRect     = Rectangle.from(element, parentElement);\n\n                // Clear translate styles used by DragHelper\n                DomHelper.setTranslateXY(element, 0, 0);\n                DomHelper.setTopLeft(element, eventRect.y, eventRect.x);\n\n                DomSync.addChild(parentElement, element, eventRecord.assignments[0].id);\n            }\n\n            await this.client.project.commitAsync();\n        }\n        else {\n            return this.overridden.scheduleEvent(...arguments);\n        }\n    }\n\n    //endregion\n\n    //region Rendering\n\n    // Hook into event collection to filter out children, since they will be rendered inside their parents\n    getEventsToRender(resourceRecord, eventRecords) {\n        if (!this.disabled) {\n            // Only keep direct children of the root (?. in case someone tries to use a flat store)\n            ArrayHelper.remove(eventRecords, ...eventRecords.filter(eventRecord => eventRecord.isEventModel && !eventRecord.parent.isRoot));\n        }\n\n        return eventRecords;\n    }\n\n    // Hook into event render data generation to add nested events (by using mostly the same rendering path as normal\n    // events)\n    onEventDataGenerated({ eventRecord, resourceRecord, wrapperCls, height, width, children, left, top }) {\n        if (eventRecord.isParent) {\n            wrapperCls['b-nested-events-parent'] = 1;\n\n            const me = this;\n\n            me.currentParentsHeight = height;\n            me.currentParentsWidth = width;\n\n            const\n                {\n                    currentOrientation,\n                    isVertical\n                }                      = me.client,\n                assignedChildren       = eventRecord.children.filter(e => e.$linkedResources?.includes(resourceRecord)),\n                // This call uses the same render path as normal events, applying event layout etc. The layout is then\n                // as needed patched up below (to be relative to parent etc)\n                layouts                = currentOrientation.layoutEvents(resourceRecord, assignedChildren, false, eventRecord, me.overlappingEventSorter),\n                nestedEvents           = [];\n\n            let eventsData;\n\n            if (isVertical) {\n                eventsData = [];\n                for (const layout of Object.values(layouts)) {\n                    eventsData.push(layout.renderData);\n                }\n            }\n            else {\n                eventsData = layouts?.eventsData;\n            }\n\n            if (eventsData) {\n                for (const layout of eventsData) {\n                    // Positioned inside parent\n                    if (isVertical) {\n                        layout.left -= left;\n                        layout.top -= top;\n                        layout.absoluteTop = layout.top;\n                    }\n                    else {\n                        // Special handling for overlap, it does not use the same render path as other layouts\n                        if (me.eventLayout === 'none') {\n                            layout.top = 0;\n                            layout.height = me.getAppliedResourceHeight(resourceRecord, eventRecord);\n                        }\n                        // Stack also needs some special handling of height, since it uses fixed event height\n                        else if (me.eventLayout === 'stack') {\n                            layout.height = me.eventHeight;\n                        }\n\n                        layout.left -= left;\n                        layout.absoluteTop = layout.top;\n                    }\n\n                    const domConfig = currentOrientation.renderEvent(isVertical ? { renderData : layout } : layout, height);\n                    domConfig.className['b-nested-event'] = 1;\n                    nestedEvents.push(domConfig);\n                }\n            }\n\n            // Nested event DomConfig\n            children.push({\n                className : {\n                    'b-nested-events-container'                  : 1,\n                    [`b-nested-events-layout-${me.eventLayout}`] : 1\n                },\n                dataset : {\n                    taskBarFeature : 'nestedEventsContainer'\n                },\n                children    : nestedEvents,\n                syncOptions : {\n                    syncIdField      : 'syncId',\n                    releaseThreshold : 0\n                }\n            });\n        }\n    }\n\n    //endregion\n}\n\nGridFeatureManager.registerFeature(NestedEvents, false, 'SchedulerPro');\n","import GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport ResourceTimeRangesBase from '../../Scheduler/feature/base/ResourceTimeRangesBase.js';\nimport ResourceTimeRangeModel from '../../Scheduler/model/ResourceTimeRangeModel.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\n\n/**\n * @module SchedulerPro/feature/ResourceNonWorkingTime\n */\n\n/**\n * Feature that highlights the non-working intervals for resources based on their {@link SchedulerPro.model.ResourceModel#field-calendar}.\n * If a resource has no calendar defined, the project's calendar will be used. The non-working time interval can\n * also be recurring. You can find a live example showing how to achieve this in the [Resource Non-Working Time Demo](../examples/resource-non-working-time/).\n *\n * {@inlineexample SchedulerPro/feature/ResourceNonWorkingTime.js}\n *\n * ## Data structure\n * Example data defining calendars and assigning the resources a calendar:\n * ```javascript\n * {\n *   \"success\"   : true,\n *   \"calendars\" : {\n *       \"rows\" : [\n *           {\n *               \"id\"                       : \"day\",\n *               \"name\"                     : \"Day shift\",\n *               \"unspecifiedTimeIsWorking\" : false,\n *               \"cls\"                      : \"dayshift\",\n *               \"intervals\"                : [\n *                   {\n *                       \"recurrentStartDate\" : \"at 8:00\",\n *                       \"recurrentEndDate\"   : \"at 17:00\",\n *                       \"isWorking\"          : true,\n *                   }\n *               ]\n *           }\n *    ],\n *    \"resources\" : {\n *       \"rows\" : [\n *           {\n *               \"id\"         : 1,\n *               \"name\"       : \"George\",\n *               \"calendar\"   : \"day\",\n *               \"role\"       : \"Office\",\n *               \"eventColor\" : \"blue\"\n *           },\n *           {\n *               \"id\"         : 2,\n *               \"name\"       : \"Rob\",\n *               \"calendar\"   : \"day\",\n *               \"role\"       : \"Office\",\n *               \"eventColor\" : \"blue\"\n *           }\n *        ]\n *   [...]\n * ```\n *\n * ```javascript\n * const scheduler = new SchedulerPro({\n *   // A Project holding the data and the calculation engine for Scheduler Pro. It also acts as a CrudManager, allowing\n *   // loading data into all stores at once\n *   project : {\n *       autoLoad  : true,\n *       transport : {\n *           load : {\n *               url : './data/data.json'\n *           }\n *       }\n *   },\n *   features : {\n *       resourceNonWorkingTime : true\n *   },\n *   [...]\n * }):\n * ```\n *\n * ## Styling non-working time interval elements\n *\n * To style the elements representing the non-working time elements you can set the {@link SchedulerPro.model.CalendarModel#field-cls}\n * field in your data. This will add a CSS class to all non-working time elements for the calendar. You can also add\n * an {@link SchedulerPro.model.CalendarModel#field-iconCls} value specifying an icon to display inside the interval.\n *\n * ```javascript\n * {\n *   \"success\"   : true,\n *   \"calendars\" : {\n *       \"rows\" : [\n *           {\n *               \"id\"                       : \"day\",\n *               \"name\"                     : \"Day shift\",\n *               \"unspecifiedTimeIsWorking\" : false,\n *               \"cls\"                      : \"dayshift\",\n *               \"intervals\"                : [\n *                   {\n *                       \"recurrentStartDate\" : \"at 8:00\",\n *                       \"recurrentEndDate\"   : \"at 17:00\",\n *                       \"isWorking\"          : true\n *                   }\n *               ]\n *           }\n *       ]\n *    }\n * }\n * ```\n *\n * You can also add a `cls` value and an `iconCls` to **individual** intervals:\n *\n * ```javascript\n * {\n *   \"success\"   : true,\n *   \"calendars\" : {\n *       \"rows\" : [\n *           {\n *               \"id\"                       : \"day\",\n *               \"name\"                     : \"Day shift\",\n *               \"unspecifiedTimeIsWorking\" : true,\n *               \"intervals\"                : [\n *                   {\n *                      \"startDate\"          : \"2022-03-23T02:00\",\n *                      \"endDate\"            : \"2022-03-23T04:00\",\n *                      \"isWorking\"          : false,\n *                      \"cls\"                : \"factoryShutdown\",\n *                      \"iconCls\"            : \"warningIcon\"\n *                  }\n *               ]\n *           }\n *       ]\n *    }\n * }\n * ```\n *\n * This feature is **off** by default. For info on enabling it, see {@link Grid.view.mixin.GridFeatures}.\n *\n * @extends Scheduler/feature/base/ResourceTimeRangesBase\n * @demo SchedulerPro/resource-non-working-time\n * @classtype resourceNonWorkingTime\n * @feature\n */\nexport default class ResourceNonWorkingTime extends ResourceTimeRangesBase {\n\n    //region Config\n\n    static $name = 'ResourceNonWorkingTime';\n\n    static configurable = {\n        rangeCls : 'b-sch-resourcenonworkingtime',\n\n        /**\n         * The largest time axis unit to display non working ranges for ('hour' or 'day' etc).\n         * When zooming to a view with a larger unit, no non-working time elements will be rendered.\n         *\n         * **Note:** Be careful with setting this config to big units like 'year'. When doing this,\n         * make sure the timeline {@link Scheduler.view.TimelineBase#config-startDate start} and\n         * {@link Scheduler.view.TimelineBase#config-endDate end} dates are set tightly.\n         * When using a long range (for example many years) with non-working time elements rendered per hour,\n         * you will end up with millions of elements, impacting performance.\n         * When zooming, use the {@link Scheduler.view.mixin.TimelineZoomable#config-zoomKeepsOriginalTimespan} config.\n         * @config {'millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year'}\n         * @default\n         */\n        maxTimeAxisUnit : 'hour',\n\n        /**\n         * Set to `true` to allow mouse interactions with the rendered range elements. By default, the range elements\n         * are not reachable with the mouse, and only serve as a static background.\n         * @prp {Boolean}\n         * @default\n         */\n        enableMouseEvents : false,\n\n        /**\n         * The Model class to use for representing a {@link Scheduler.model.ResourceTimeRangeModel}\n         * @config {Function}\n         */\n        resourceTimeRangeModelClass : ResourceTimeRangeModel,\n\n        entityName : 'resourceNonWorkingTime'\n    };\n\n    // Cannot use `static properties = {}`, new Map would pollute the prototype\n    static get properties() {\n        return {\n            resourceMap : new Map()\n        };\n    };\n\n    //endregion\n\n    //region Constructor\n\n    construct() {\n        super.construct(...arguments);\n\n        this.resourceTimeRangeModelClass = class ResourceNonWorkingTimeModel extends this.resourceTimeRangeModelClass {\n            static $name = 'ResourceNonWorkingTimeModel';\n            static domIdPrefix = 'resourcenonworkingtimemodel';\n        };\n\n        this.client.timeAxis.ion({\n            name        : 'timeAxis',\n            reconfigure : 'onTimeAxisReconfigure',\n            // should trigger before event rendering chain\n            prio        : 100,\n            thisObj     : this\n        });\n    }\n\n    //endregion\n\n    //region Events\n\n    /**\n     * Triggered for mouse down ona resource nonworking time range. Only triggered if the ResourceNonWorkingTime feature is configured\n     * with `enableMouseEvents: true`.\n     * @event resourceNonWorkingTimeMouseDown\n     * @param {SchedulerPro.view.SchedulerPro} source This Scheduler\n     * @param {SchedulerPro.feature.ResourceNonWorkingTime} feature The ResourceNonWorkingTime feature\n     * @param {Scheduler.model.ResourceTimeRangeModel} resourceTimeRangeRecord Resource time range record\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {MouseEvent} domEvent Browser event\n     * @on-owner\n     */\n\n    /**\n     * Triggered for mouse up ona resource nonworking time range. Only triggered if the ResourceNonWorkingTime feature is configured\n     * with `enableMouseEvents: true`.\n     * @event resourceNonWorkingTimeMouseUp\n     * @param {SchedulerPro.view.SchedulerPro} source This Scheduler\n     * @param {SchedulerPro.feature.ResourceNonWorkingTime} feature The ResourceNonWorkingTime feature\n     * @param {Scheduler.model.ResourceTimeRangeModel} resourceTimeRangeRecord Resource time range record\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {MouseEvent} domEvent Browser event\n     * @on-owner\n     */\n\n    /**\n     * Triggered for click on a resource nonworking time range. Only triggered if the ResourceNonWorkingTime feature is configured with\n     * `enableMouseEvents: true`.\n     * @event resourceNonWorkingTimeClick\n     * @param {SchedulerPro.view.SchedulerPro} source This Scheduler\n     * @param {SchedulerPro.feature.ResourceNonWorkingTime} feature The ResourceNonWorkingTime feature\n     * @param {Scheduler.model.ResourceTimeRangeModel} resourceTimeRangeRecord Resource time range record\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {MouseEvent} domEvent Browser event\n     * @on-owner\n     */\n\n    /**\n     * Triggered for double-click on a resource nonworking time range. Only triggered if the ResourceNonWorkingTime feature is configured\n     * with `enableMouseEvents: true`.\n     * @event resourceNonWorkingTimeDblClick\n     * @param {SchedulerPro.view.SchedulerPro} source This Scheduler\n     * @param {SchedulerPro.feature.ResourceNonWorkingTime} feature The ResourceNonWorkingTime feature\n     * @param {Scheduler.model.ResourceTimeRangeModel} resourceTimeRangeRecord Resource time range record\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {MouseEvent} domEvent Browser event\n     * @on-owner\n     */\n\n    /**\n     * Triggered for right-click on a resource nonworking time range. Only triggered if the ResourceNonWorkingTime feature is configured\n     * with `enableMouseEvents: true`.\n     * @event resourceNonWorkingTimeContextMenu\n     * @param {SchedulerPro.view.SchedulerPro} source This Scheduler\n     * @param {SchedulerPro.feature.ResourceNonWorkingTime} feature The ResourceNonWorkingTime feature\n     * @param {Scheduler.model.ResourceTimeRangeModel} resourceTimeRangeRecord Resource time range record\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {MouseEvent} domEvent Browser event\n     * @on-owner\n     */\n\n    /**\n     * Triggered for mouse over on a resource nonworking time range. Only triggered if the ResourceNonWorkingTime feature is configured\n     * with `enableMouseEvents: true`.\n     * @event resourceNonWorkingTimeMouseOver\n     * @param {SchedulerPro.view.SchedulerPro} source This Scheduler\n     * @param {SchedulerPro.feature.ResourceNonWorkingTime} feature The ResourceNonWorkingTime feature\n     * @param {Scheduler.model.ResourceTimeRangeModel} resourceTimeRangeRecord Resource time range record\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {MouseEvent} domEvent Browser event\n     * @on-owner\n     */\n\n    /**\n     * Triggered for mouse out of a resource nonworking time range. Only triggered if the ResourceNonWorkingTime feature is configured\n     * with `enableMouseEvents: true`.\n     * @event resourceNonWorkingTimeMouseOut\n     * @param {SchedulerPro.view.SchedulerPro} source This Scheduler\n     * @param {SchedulerPro.feature.ResourceNonWorkingTime} feature The ResourceNonWorkingTime feature\n     * @param {Scheduler.model.ResourceTimeRangeModel} resourceTimeRangeRecord Resource time range record\n     * @param {Scheduler.model.ResourceModel} resourceRecord Resource record\n     * @param {MouseEvent} domEvent Browser event\n     * @on-owner\n     */\n\n    //endregion\n\n    //region Init\n\n    attachToResourceStore(resourceStore) {\n        super.attachToResourceStore(resourceStore);\n\n        resourceStore?.ion({\n            name            : 'resourceStore',\n            changePreCommit : 'onResourceChange',\n            thisObj         : this\n        });\n    }\n\n    attachToCalendarManagerStore(calendarManagerStore) {\n        super.attachToCalendarManagerStore(calendarManagerStore);\n\n        calendarManagerStore?.ion({\n            name            : 'calendarManagerStore',\n            changePreCommit : 'onCalendarChange',\n            thisObj         : this\n        });\n    }\n\n    //endregion\n\n    //region Events\n\n    onTimeAxisReconfigure() {\n        // reset ranges cache on timeAxis change\n        this.resourceMap.clear();\n    }\n\n    onResourceChange({ action, records, record, changes }) {\n        const me = this;\n\n        // Might need to redraw on update\n        if (action === 'update') {\n            const change = changes.calendar;\n\n            // Ignore calendar normalization\n            if (change && (typeof change.oldValue !== 'string' || change.value?.id !== change.oldValue)) {\n                me.resourceMap.delete(record.id);\n                // Redraw row in case calendar change did not affect any events\n                me.client.runWithTransition(() => {\n                    me.client.currentOrientation.refreshEventsForResource(record);\n                });\n            }\n        }\n\n        // Keep map up to date on removals (adds are handled through rendering in getEventsToRender)\n        if (action === 'remove') {\n            records.forEach(record => me.resourceMap.delete(record.id));\n        }\n\n        if (action === 'removeall') {\n            me.resourceMap.clear();\n        }\n    }\n\n    onCalendarChange({ action, records, record, changes }) {\n        this.resourceMap.clear();\n        this.client.refresh();\n    }\n\n    //endregion\n\n    //region Internal\n\n    // Called on render of resources events to get events to render. Add any ranges\n    // (chained function from Scheduler)\n    getEventsToRender(resource, events) {\n        const\n            me                      = this,\n            { resourceMap, client } = me,\n            { timeAxis }            = client,\n            shouldPaint             = !me.maxTimeAxisUnit || DateHelper.compareUnits(timeAxis.unit, me.maxTimeAxisUnit) <= 0;\n\n        if (!me.disabled && shouldPaint && resource.effectiveCalendar) {\n            if (!resourceMap.has(resource.id)) {\n                const\n                    ranges  = resource.effectiveCalendar.getNonWorkingTimeRanges(\n                        client.startDate,\n                        client.endDate\n                    ),\n                    records = ranges.map((range, i) => new me.resourceTimeRangeModelClass({\n                        id           : `r${resource.id}i${i}`,\n                        iconCls      : range.iconCls || resource.effectiveCalendar.iconCls || '',\n                        cls          : `${resource.effectiveCalendar.cls || ''} ${range.cls || ''}`,\n                        startDate    : range.startDate,\n                        endDate      : range.endDate,\n                        name         : range.name || '',\n                        resourceId   : resource.id,\n                        isNonWorking : true\n                    }));\n\n                resourceMap.set(resource.id, records);\n            }\n\n            events.push(...resourceMap.get(resource.id));\n        }\n\n        return events;\n    }\n\n    shouldInclude({ isNonWorking }) {\n        return isNonWorking;\n    }\n\n    /**\n     * Returns a resource nonworking time range record from the passed element\n     * @param {HTMLElement} rangeElement\n     * @returns {Scheduler.model.ResourceTimeRangeModel}\n     * @category DOM\n     */\n    resolveResourceNonWorkingTimeInterval(rangeElement) {\n        return rangeElement?.closest('.b-sch-resourcenonworkingtime')?.elementData.eventRecord;\n    }\n\n    //endregion\n\n}\n\n// No feature based styling needed, do not add a cls to Scheduler\nResourceNonWorkingTime.featureClass = '';\n\nGridFeatureManager.registerFeature(ResourceNonWorkingTime, false, 'SchedulerPro');\n","import InstancePlugin from '../../Core/mixin/InstancePlugin.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport DomHelper from '../../Core/helper/DomHelper.js';\nimport DomSync from '../../Core/helper/DomSync.js';\nimport EventHelper from '../../Core/helper/EventHelper.js';\n\n/**\n * @module SchedulerPro/feature/TimeSpanHighlight\n */\n\nconst\n    timespanDefaults = {\n        isHighlightConfig : true,\n        clearExisting     : false\n    };\n\n/**\n * An object describing the time span region to highlight.\n *\n * @typedef {Object} HighlightTimeSpan\n * @property {Date} startDate A start date constraining the region\n * @property {Date} endDate An end date constraining the region\n * @property {String} name A name to show in the highlight element\n * @property {Scheduler.model.ResourceModel} [resourceRecord] The resource record (applicable for Scheduler only)\n * @property {Core.data.Model} [taskRecord] The task record (applicable for Gantt only)\n * @property {String} [cls] A CSS class to add to the highlight element\n * @property {Boolean} [clearExisting=true] `false` to keep existing highlight elements\n * @property {String} [animationId] An id to enable animation of highlight elements\n * @property {Boolean} [surround=false] True to shade the time axis areas before and after the time span\n * (adds a `b-unavailable` CSS class which you can use for styling)\n * @property {Number} [padding] Inflates the non-timeaxis sides of the region by this many pixels\n */\n\n/**\n * This feature exposes methods on the owning timeline widget which you can use to highlight one or multiple time spans\n * in the schedule. Please see {@link #function-highlightTimeSpan} and {@link #function-highlightTimeSpans} to learn\n * more or try the demo below:\n *\n * {@inlineexample SchedulerPro/feature/TimeSpanHighlight.js}\n *\n * ## Example usage with Scheduler Pro\n *\n * ```javascript\n * const scheduler = new SchedulerPro({\n *     features : {\n *         timeSpanHighlight : true\n *     }\n * })\n *\n * scheduler.highlightTimeSpan({\n *      startDate : new Date(2022, 4, 1),\n *      endDate   : new Date(2022, 4, 5),\n *      name      : 'Time off'\n * });\n * ```\n *\n * ## Example usage with Gantt\n *\n * ```javascript\n * const gantt = new Gantt({\n *     features : {\n *         timeSpanHighlight : true\n *     }\n * })\n *\n * gantt.highlightTimeSpan({\n *      startDate : new Date(2022, 4, 1),\n *      endDate   : new Date(2022, 4, 5),\n *      padding   : 10, // Some \"air\" around the rectangle\n *      taskRecord, // You can also highlight an area specific to a Gantt task\n *      name      : 'Time off'\n * });\n * ```\n *\n * This feature is **disabled** by default.\n *\n * @extends Core/mixin/InstancePlugin\n * @classtype timeSpanHighlight\n * @feature\n * @demo SchedulerPro/highlight-time-spans\n */\nexport default class TimeSpanHighlight extends InstancePlugin {\n\n    //region Config\n    domConfigs = [];\n    configs = [];\n\n    static get $name() {\n        return 'TimeSpanHighlight';\n    }\n\n    static get configurable() {\n        return {\n            padding : 0\n        };\n    }\n\n    static get pluginConfig() {\n        return {\n            assign : [\n                'highlightTimeSpan',\n                'highlightTimeSpans',\n                'unhighlightTimeSpans'\n            ],\n            chain : [\n                'onTimeAxisViewModelUpdate'\n            ]\n        };\n    }\n\n    //endregion\n\n    construct() {\n        super.construct(...arguments);\n\n        this.client.rowManager.ion({\n            renderDone : this.onViewChanged,\n            thisObj    : this\n        });\n    }\n\n    /**\n     * Highlights the region representing the passed time span and optionally for a single certain resource.\n     * @on-owner\n     * @param {HighlightTimeSpan} options A single options object describing the time span to highlight.\n     */\n    highlightTimeSpan(config, draw = true) {\n        const\n            me         = this,\n            {\n                startDate,\n                endDate,\n                name,\n                surround,\n                padding       = me.padding,\n                clearExisting = true\n            }          = config,\n            { client } = me,\n            taskRecord = config.isTimeSpan ? config : config.taskRecord;\n\n        // The resource property allows an actual TaskRecord to be used as a config.\n        let resourceRecord  = config.resourceRecord || config.resource;\n        const { animationId } = config;\n\n        if (animationId) {\n            DomHelper.addTemporaryClass(client.element, 'b-transition-highlight', 500, client);\n        }\n\n        if (clearExisting) {\n            me.domConfigs.length = me.configs.length = 0;\n        }\n\n        if (me.disabled) {\n            // nothing to highlight\n            return;\n        }\n\n        if (surround) {\n            me.surroundTimeSpan(config);\n            return;\n        }\n\n        me.configs.push(config);\n\n        let rect;\n        if (client.isGanttBase) {\n            rect = client.getScheduleRegion(taskRecord, true, { start : startDate, end : endDate });\n        }\n        else {\n            if (resourceRecord) {\n                // Allows resolving link from original in TreeGrouped scheduler\n                resourceRecord = client.store.getById(resourceRecord);\n            }\n\n            rect = client.getScheduleRegion(resourceRecord, null, true, { start : startDate, end : endDate }, !resourceRecord);\n        }\n\n        if (!rect) {\n            // nothing to highlight\n            return;\n        }\n\n        if (padding) {\n            if (client.isHorizontal) {\n                rect.inflate(padding, 0, padding, 0);\n            }\n            else {\n                rect.inflate(0, padding, 0, padding);\n            }\n        }\n\n        me.domConfigs.push(\n            rect.visualize({\n                children : [\n                    {\n                        class : 'b-sch-highlighted-range-name',\n                        html  : name\n                    }\n                ],\n                dataset : {\n                    syncId : animationId\n                },\n                class : {\n                    'b-sch-highlighted-range'                           : 1,\n                    [config.cls]                                        : config.cls,\n                    [config.class || 'b-sch-highlighted-range-default'] : 1\n                }\n            }, true)\n        );\n\n        if (draw) {\n            me.draw();\n        }\n    }\n\n    draw() {\n        DomSync.sync({\n            targetElement : this.containerEl,\n            domConfig     : {\n                onlyChildren : true,\n                children     : this.domConfigs\n            }\n        });\n    }\n\n    surroundTimeSpan(timeSpan) {\n        this.highlightTimeSpans([\n            Object.assign({}, timeSpan, {\n                animationId : (timeSpan.animationId || '') + 'Before',\n                class       : 'b-unavailable',\n                surround    : false,\n                startDate   : this.client.startDate,\n                endDate     : timeSpan.startDate\n            }),\n            Object.assign({}, timeSpan, {\n                animationId : (timeSpan.animationId || '') + 'After',\n                class       : 'b-unavailable',\n                surround    : false,\n                startDate   : timeSpan.endDate,\n                endDate     : this.client.endDate\n            })\n        ], { clearExisting : timeSpan.clearExisting });\n    }\n\n    /**\n     * Highlights the regions representing the passed time spans.\n     * @on-owner\n     * @param {HighlightTimeSpan[]} timeSpans An array of objects with start/end dates describing the rectangle to highlight.\n     * @param {Object} [options] A single options object\n     * @param {Boolean} [options.clearExisting=true] Set to `false` to preserve previously highlighted elements\n     */\n    highlightTimeSpans(timeSpans, options = {}) {\n        const\n            me = this,\n            {\n                clearExisting = true\n            }  = options;\n\n        if (clearExisting) {\n            timeSpans = timeSpans.slice();\n            me.domConfigs.length = me.configs.length = 0;\n        }\n\n        if (me.disabled) {\n            return;\n        }\n\n        timeSpans.forEach(timeSpan => {\n            // If we are *re*drawing a set of configs, they will have the isHighlightConfig\n            // property, so we can pass them straight in. If its a config from the outside,\n            // then apply the defaults and the isHighlightConfig flag.\n            me.highlightTimeSpan(timeSpan.isHighlightConfig ? timeSpan : Object.setPrototypeOf(timespanDefaults, timeSpan), false);\n        });\n\n        me.draw();\n    }\n\n    /**\n     * Removes any highlighting elements.\n     * @param {Boolean} [fadeOut] `true` to fade out the highlight elements before removing\n     * @on-owner\n     */\n    async unhighlightTimeSpans(fadeOut = false) {\n        const\n            me         = this,\n            { client } = me;\n\n        if (fadeOut) {\n            DomHelper.addTemporaryClass(client.element, 'b-transition-highlight', 500, client);\n        }\n\n        Array.from(me.containerEl.children).forEach(element => {\n            if (fadeOut) {\n                element.style.opacity = 0;\n                me.fadeOutDetacher    = EventHelper.onTransitionEnd({\n                    element,\n                    property : 'opacity',\n                    thisObj  : client,\n                    handler  : () => {\n                        me.domConfigs.length = me.configs.length = 0;\n                        me.draw();\n                    }\n                });\n            }\n            else {\n                me.domConfigs.length = me.configs.length = 0;\n                me.draw();\n            }\n        });\n    }\n\n    get containerEl() {\n        if (!this._containerEl) {\n            this._containerEl = DomHelper.createElement({\n                parent        : this.client.foregroundCanvas,\n                retainElement : true,\n                class         : 'b-sch-highlight-container'\n            });\n        }\n\n        return this._containerEl;\n    }\n\n    onTimeAxisViewModelUpdate() {\n        this.onViewChanged();\n    }\n\n    onViewChanged() {\n        if (this.configs.length > 0) {\n            this.highlightTimeSpans(this.configs);\n        }\n    }\n\n    updateDisabled(disabled, was) {\n        if (disabled) {\n            this.unhighlightTimeSpans();\n        }\n\n        super.updateDisabled(disabled, was);\n    }\n\n    // No classname on Scheduler's/Gantt's element\n    get featureClass() {}\n}\n\nGridFeatureManager.registerFeature(TimeSpanHighlight, false, ['SchedulerPro', 'Gantt']);\n","/**\n * @module SchedulerPro/model/changelog/ChangeLogPropertyUpdate\n */\n\n/**\n * An immutable, serializable object that describes an update to a single object property from one value to another.\n */\nexport default class ChangeLogPropertyUpdate {\n\n    static $name = 'ChangeLogPropertyUpdate';\n\n    constructor({ property, before, after }) {\n        Object.assign(this, {\n            /**\n             * @member {String} property A descriptor for the entity (object) affected by this action.\n             * @readonly\n             * @category Common\n             */\n            property,\n\n            /**\n             * @member {String|Number|Object} before The property's value before the action.\n             * @readonly\n             * @immutable\n             * @category Common\n             */\n            before,\n\n            /**\n             * @member {String|Number|Object} after The property's value after the action.\n             * @readonly\n             * @immutable\n             * @category Common\n             */\n            after\n        });\n        Object.freeze(this);\n    }\n}\n","import { SchedulerProProjectMixin } from '../../Engine/quark/model/scheduler_pro/SchedulerProProjectMixin.js';\nimport ProjectModelMixin from '../../Scheduler/model/mixin/ProjectModelMixin.js';\nimport ProjectChangeHandlerMixin from './mixin/ProjectChangeHandlerMixin.js';\n\nimport ProjectCrudManager from '../data/mixin/ProjectCrudManager.js';\n\nimport AssignmentModel from './AssignmentModel.js';\nimport CalendarModel from './CalendarModel.js';\nimport DependencyModel from './DependencyModel.js';\nimport EventModel from './EventModel.js';\nimport ResourceModel from './ResourceModel.js';\n\nimport CalendarManagerStore from '../data/CalendarManagerStore.js';\nimport DependencyStore from '../data/DependencyStore.js';\nimport EventStore from '../data/EventStore.js';\nimport ResourceStore from '../data/ResourceStore.js';\nimport AssignmentStore from '../data/AssignmentStore.js';\nimport StateTrackingManager from '../data/stm/StateTrackingManager.js';\n\n/**\n * @module SchedulerPro/model/ProjectModel\n */\n\n/**\n * Scheduler Pro Project model class - a central place for all data.\n *\n * It holds and links the stores usually used by Scheduler Pro:\n *\n * - {@link SchedulerPro/data/EventStore}\n * - {@link SchedulerPro/data/ResourceStore}\n * - {@link SchedulerPro/data/AssignmentStore}\n * - {@link SchedulerPro/data/DependencyStore}\n * - {@link SchedulerPro/data/CalendarManagerStore}\n * - {@link Scheduler/data/ResourceTimeRangeStore}\n * - {@link #config-timeRangeStore TimeRangeStore}\n *\n * The project uses a scheduling engine to calculate dates, durations and such. It is also responsible for\n * handling references between models, for example to link an event via an assignment to a resource. These operations\n * are asynchronous, a fact that is hidden when working in the Scheduler Pro UI but which you must know about when\n * performing operations on the data level.\n *\n * When there is a change to data that requires something else to be recalculated, the project schedules a calculation\n * (a commit) which happens moments later. It is also possible to trigger these calculations directly. This flow\n * illustrates the process:\n *\n * 1. Something changes which requires the project to recalculate, for example adding a new task:\n *\n * ```javascript\n * const [event] = project.eventStore.add({ startDate, endDate });\n * ```\n *\n * 2. A recalculation is scheduled, thus:\n *\n * ```javascript\n * event.duration; // <- Not yet calculated\n * ```\n *\n * 3. Calculate now instead of waiting for the scheduled calculation\n *\n * ```javascript\n * await project.commitAsync();\n *\n * event.duration; // <- Now available\n * ```\n *\n * Please refer to [this guide](#SchedulerPro/guides/basics/project_data.md) for more information.\n *\n * ## Built in CrudManager\n *\n * Scheduler Pro's project has a {@link Scheduler/crud/AbstractCrudManagerMixin CrudManager} built in. Using it is the recommended\n * way of syncing data between Scheduler Pro and a backend. Example usage:\n *\n * ```javascript\n * const scheduler = new SchedulerPro({\n *     project : {\n *         // Configure urls used by the built in CrudManager\n *         transport : {\n *             load : {\n *                 url : 'php/load.php'\n *             },\n *             sync : {\n *                 url : 'php/sync.php'\n *             }\n *         }\n *     }\n * });\n *\n * // Load data from the backend\n * scheduler.project.load()\n * ```\n *\n * For more information on CrudManager, see Schedulers docs on {@link Scheduler/data/CrudManager}.\n * For a detailed description of the protocol used by CrudManager, see the [Crud manager guide](#Scheduler/guides/data/crud_manager.md)\n *\n * You can access the current Project data changes anytime using the {@link #property-changes} property.\n *\n * ## Working with inline data\n *\n * The project provides an {@link #property-inlineData} getter/setter that can\n * be used to manage data from all Project stores at once. Populating the stores this way can\n * be useful if you do not want to use the CrudManager for server communication but instead load data using Axios\n * or similar.\n *\n * ### Getting data\n * ```javascript\n * const data = scheduler.project.inlineData;\n *\n * // use the data in your application\n * ```\n *\n * ### Setting data\n * ```javascript\n * // Get data from server manually\n * const data = await axios.get('/project?id=12345');\n *\n * // Feed it to the project\n * scheduler.project.inlineData = data;\n * ```\n *\n * See also {@link #function-loadInlineData}\n *\n * ### Getting changed records\n *\n * You can access the changes in the current Project dataset anytime using the {@link #property-changes} property. It\n * returns an object with all changes:\n *\n * ```javascript\n * const changes = project.changes;\n *\n * console.log(changes);\n *\n * > {\n *   tasks : {\n *       updated : [{\n *           name : 'My task',\n *           id   : 12\n *       }]\n *   },\n *   assignments : {\n *       added : [{\n *           event      : 12,\n *           resource   : 7,\n *           units      : 100,\n *           $PhantomId : 'abc123'\n *       }]\n *     }\n * };\n * ```\n *\n * ## Monitoring data changes\n *\n * While it is possible to listen for data changes on the projects individual stores, it is sometimes more convenient\n * to have a centralized place to handle all data changes. By listening for the {@link #event-change change event} your\n * code gets notified when data in any of the stores changes. Useful for example to keep an external data model up to\n * date:\n *\n * ```javascript\n * const scheduler = new SchedulerPro({\n *     project: {\n *         listeners : {\n *             change({ store, action, records }) {\n *                 const { $name } = store.constructor;\n *\n *                 if (action === 'add') {\n *                     externalDataModel.add($name, records);\n *                 }\n *\n *                 if (action === 'remove') {\n *                     externalDataModel.remove($name, records);\n *                 }\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * ## Processing the data loaded from the server\n *\n * If you want to process the data received from the server after loading, you can use\n * the {@link #event-beforeLoadApply} or {@link #event-beforeSyncApply} events:\n *\n * ```javascript\n * const gantt = new Gantt({\n *     project: {\n *         listeners : {\n *             beforeLoadApply({ response }) {\n *                 // do something with load-response object before data is fed to the stores\n *             }\n *         }\n *     }\n * });\n * ```\n *\n * ## Built in StateTrackingManager\n *\n * The project also has a built in {@link Core/data/stm/StateTrackingManager} (STM for short), that\n * handles undo/redo for the project stores (additional stores can also be added). By default, it is only used while\n * editing tasks using the task editor, the editor updates tasks live and uses STM to rollback changes if canceled. But\n * you can enable it to track all project store changes:\n *\n * ```javascript\n * // Enable automatic transaction creation and start recording\n * project.stm.autoRecord = true;\n * project.stm.enable();\n *\n * // Undo a transaction\n * project.stm.undo();\n *\n * // Redo\n * project.stm.redo();\n * ```\n *\n * Check out the `undoredo` demo to see it in action.\n *\n * @mixes Core/mixin/Events\n * @mixes SchedulerPro/data/mixin/PartOfProject\n * @mixes SchedulerPro/data/mixin/ProjectCrudManager\n * @mixes SchedulerPro/model/mixin/ProjectChangeHandlerMixin\n *\n * @extends Scheduler/model/mixin/ProjectModelMixin\n *\n * @typings Scheduler/model/ProjectModel -> Scheduler/model/SchedulerProjectModel\n */\nexport default class ProjectModel extends ProjectChangeHandlerMixin(ProjectCrudManager(ProjectModelMixin(SchedulerProProjectMixin))) {\n    //region Events\n\n    /**\n     * Fired when the engine has finished its calculations and the results has been written back to the records.\n     *\n     * ```javascript\n     * scheduler.project.on({\n     *     dataReady() {\n     *        console.log('Calculations finished');\n     *     }\n     * });\n     *\n     * scheduler.eventStore.first.duration = 10;\n     *\n     * // At some point a bit later it will log 'Calculations finished'\n     * ```\n     *\n     * @event dataReady\n     * @param {SchedulerPro.model.ProjectModel} source The project\n     */\n\n    /**\n     * Fired during the Engine calculation if {@link #config-enableProgressNotifications enableProgressNotifications} config is `true`\n     * @event progress\n     * @param {Number} total The total number of operations\n     * @param {Number} remaining The number of remaining operations\n     * @param {'storePopulation'|'propagating'} phase The phase of the calculation, either 'storePopulation'\n     * when data is getting loaded, or 'propagating' when data is getting calculated\n     */\n\n    /**\n     * Fired when the Engine detects a computation cycle.\n     * @event cycle\n     * @param {Object} schedulingIssue Scheduling error describing the case:\n     * @param {Function} schedulingIssue.getDescription Returns the cycle description\n     * @param {Object} schedulingIssue.cycle Object providing the cycle info\n     * @param {Function} schedulingIssue.getResolutions Returns possible resolutions\n     * @param {Function} continueWithResolutionResult Function to call after a resolution is chosen to\n     * proceed with the Engine calculations:\n     * ```js\n     * project.on('cycle', ({ continueWithResolutionResult }) => {\n     *     // cancel changes in case of a cycle\n     *     continueWithResolutionResult(EffectResolutionResult.Cancel);\n     * })\n     * ```\n     */\n\n    /**\n     * Fired when the Engine detects a scheduling conflict.\n     * @event schedulingConflict\n     * @param {Object} schedulingIssue The conflict details:\n     * @param {Function} schedulingIssue.getDescription Returns the conflict description\n     * @param {Object[]} schedulingIssue.intervals Array of conflicting intervals\n     * @param {Function} schedulingIssue.getResolutions Function to get possible resolutions\n     * @param {Function} continueWithResolutionResult Function to call after a resolution is chosen to\n     * proceed with the Engine calculations:\n     * ```js\n     * project.on('schedulingConflict', ({ schedulingIssue, continueWithResolutionResult }) => {\n     *     // apply the first resolution and continue\n     *     schedulingIssue.getResolutions()[0].resolve();\n     *     continueWithResolutionResult(EffectResolutionResult.Resume);\n     * })\n     * ```\n     */\n\n    /**\n     * Fired when the Engine detects a calendar misconfiguration when the calendar does\n     * not provide any working periods of time which makes the calendar usage impossible.\n     * @event emptyCalendar\n     * @param {Object} schedulingIssue Scheduling error describing the case:\n     * @param {Function} schedulingIssue.getDescription Returns the error description\n     * @param {Function} schedulingIssue.getCalendar Returns the calendar that must be fixed\n     * @param {Function} schedulingIssue.getResolutions Returns possible resolutions\n     * @param {Function} continueWithResolutionResult Function to call after a resolution is chosen to\n     * proceed with the Engine calculations:\n     * ```js\n     * project.on('emptyCalendar', ({ schedulingIssue, continueWithResolutionResult }) => {\n     *     // apply the first resolution and continue\n     *     schedulingIssue.getResolutions()[0].resolve();\n     *     continueWithResolutionResult(EffectResolutionResult.Resume);\n     * })\n     * ```\n     */\n\n    //endregion\n\n    //region Config\n\n    static get $name() {\n        return 'ProjectModel';\n    }\n\n    /**\n     * Silences propagations caused by the project loading.\n     *\n     * Applying the loaded data to the project occurs in two basic stages:\n     *\n     * 1. Data gets into the engine graph which triggers changes propagation\n     * 2. The changes caused by the propagation get written to related stores\n     *\n     * Setting this flag to `true` makes the component perform step 2 silently without triggering events causing reactions on those changes\n     * (like sending changes back to the server if `autoSync` is enabled) and keeping stores in unmodified state.\n     *\n     * This is safe if the loaded data is consistent so propagation doesn't really do any adjustments.\n     * By default the system treats the data as consistent so this option is `true`.\n     *\n     * ```js\n     * new SchedulerPro{\n     *     project : {\n     *         // We want scheduling engine to recalculate the data properly\n     *         // so then we could save it back to the server\n     *         silenceInitialCommit : false,\n     *         ...\n     *     }\n     *     ...\n     * })\n     * ```\n     *\n     * @config {Boolean} silenceInitialCommit\n     * @default true\n     * @category Advanced\n     */\n\n    /**\n     * Maximum range the project calendars can iterate.\n     * The value is defined in milliseconds and by default equals `5 years` roughly.\n     * ```javascript\n     * new SchedulerPro({\n     *     project : {\n     *         // adjust calendar iteration limit to 10 years roughly:\n     *         // 10 years expressed in ms\n     *         maxCalendarRange : 10 * 365 * 24 * 3600000,\n     *         ...\n     *     }\n     * });\n     * ```\n     * @config {Number} maxCalendarRange\n     * @default 157680000000\n     * @category Advanced\n     */\n\n    /**\n     * When `true` the project manually scheduled tasks will adjust their proposed start/end dates\n     * to skip non working time.\n     *\n     * @field {Boolean} skipNonWorkingTimeWhenSchedulingManually\n     * @default false\n     */\n\n    /**\n     * When `true` the project's manually scheduled tasks adjust their duration by excluding the non-working time from it,\n     * according to the calendar. However, this may lead to inconsistencies, when moving an event which both starts\n     * and ends on the non-working time. For such cases you can disable this option.\n     *\n     * Default value is `true`\n     *\n     * IMPORTANT: Setting this option to `false` also forcefully sets the {@link #field-skipNonWorkingTimeWhenSchedulingManually} option\n     * to `false`.\n     * IMPORTANT: This option is going to be disabled by default from version 6.0.0.\n     *\n     * @field {Boolean} skipNonWorkingTimeInDurationWhenSchedulingManually\n     * @default true\n     */\n\n    /**\n     * This config manages DST correction in the scheduling engine. It only has effect when DST transition hour is\n     * working time. Usually DST transition occurs on Sunday, so with non working weekends the DST correction logic\n     * is not involved.\n     *\n     * If **true**, it will add/remove one hour when calculating end date. For example:\n     * Assume weekends are working and on Sunday, 2020-10-25 at 03:00 clocks are set back 1 hour. Assume there is an event:\n     *\n     * ```javascript\n     * {\n     *     startDate    : '2020-10-20',\n     *     duration     : 10 * 24 + 1,\n     *     durationUnit : 'hour'\n     * }\n     * ```\n     * It will end on 2020-10-30 01:00 (which is wrong) but duration will be reported correctly. Because of the DST\n     * transition the SchedulerPro project will add one more hour when calculating the end date.\n     *\n     * Also this may occur when day with DST transition is working but there are non-working intervals between that day\n     * and event end date.\n     *\n     * ```javascript\n     * {\n     *     calendar         : 1,\n     *     calendarsData    : [\n     *         {\n     *             id           : 1,\n     *             startDate    : '2020-10-26',\n     *             endDate      : '2020-10-27',\n     *             isWorking    : false\n     *         }\n     *     ],\n     *     eventsData       : [\n     *         {\n     *             id           : 1,\n     *             startDate    : '2020-10-20',\n     *             endDate      : '2020-10-30'\n     *         },\n     *         {\n     *             id           : 2,\n     *             startDate    : '2020-10-20',\n     *             duration     : 10 * 24 + 1,\n     *             durationUnit : 'hour'\n     *         }\n     *     ]\n     * }\n     * ```\n     *\n     * Event 1 duration will be incorrectly reported as 9 days * 24 hours, missing 1 extra hour added by DST transition.\n     * Event 2 end date will be calculated to 2020-10-30 01:00, adding one extra hour.\n     *\n     * If **false**, the SchedulerPro project will not add DST correction which fixes the quirk mentioned above.\n     * Event 1 duration will be correctly reported as 9 days * 24 hours + 1 hour. Event 2 end date will be calculated\n     * to 2020-10-30.\n     *\n     * Also, for those events days duration will be a floating point number due to extra (or missing) hour:\n     *\n     * ```javascript\n     * eventStore.getById(1).getDuration('day')  // 10.041666666666666\n     * eventStore.getById(1).getDuration('hour') // 241\n     * ```\n     *\n     * @config {Boolean} adjustDurationToDST\n     * @default false\n     */\n\n    // <remove-on-release>\n    // TODO: For 6.0. This config is introduced only to make behavior transition smooth. If nobody complains about it for\n    //  a couple of releases, it should be removed\n    // </remove-on-release>\n\n    /**\n     * The number of hours per day.\n     *\n     * **Please note:** the value **does not define** the amount of **working** time per day\n     * for that purpose one should use calendars.\n     *\n     * The value is used when converting the duration from one unit to another.\n     * So when user enters a duration of, for example, `5 days` the system understands that it\n     * actually means `120 hours` and schedules accordingly.\n     * @field {Number} hoursPerDay\n     * @default 24\n     */\n\n    /**\n     * The number of days per week.\n     *\n     * **Please note:** the value **does not define** the amount of **working** time per week\n     * for that purpose one should use calendars.\n     *\n     * The value is used when converting the duration from one unit to another.\n     * So when user enters a duration of, for example, `2 weeks` the system understands that it\n     * actually means `14 days` (which is then converted to {@link #field-hoursPerDay hours}) and\n     * schedules accordingly.\n     * @field {Number} daysPerWeek\n     * @default 7\n     */\n\n    /**\n     * The number of days per month.\n     *\n     * **Please note:** the value **does not define** the amount of **working** time per month\n     * for that purpose one should use calendars.\n     *\n     * The value is used when converting the duration from one unit to another.\n     * So when user enters a duration of, for example, `1 month` the system understands that it\n     * actually means `30 days` (which is then converted to {@link #field-hoursPerDay hours}) and\n     * schedules accordingly.\n     * @field {Number} daysPerMonth\n     * @default 30\n     */\n\n    /**\n     * The scheduling direction of the project events.\n     * Possible values are `Forward` and `Backward`. The `Forward` direction corresponds to the As-Soon-As-Possible scheduling (ASAP),\n     * `Backward` - to As-Late-As-Possible (ALAP).\n     * @field {'Forward'|'Backward'} direction\n     * @default 'Forward'\n     */\n\n    /**\n     * The source of the calendar for dependencies (the calendar used for taking dependencies lag into account).\n     * Possible values are:\n     *\n     * - `ToEvent` - successor calendar will be used (default);\n     * - `FromEvent` - predecessor calendar will be used;\n     * - `Project` - the project calendar will be used.\n     *\n     * @field {'ToEvent'|'FromEvent'|'Project'} dependenciesCalendar\n     * @default 'ToEvent'\n     */\n\n    /**\n     * The project calendar.\n     * @field {SchedulerPro.model.CalendarModel} calendar\n     * @accepts {String|CalendarModelConfig|SchedulerPro.model.CalendarModel}\n     */\n\n    /**\n     * Returns current Project changes as an object consisting of added/modified/removed arrays of records for every\n     * managed store. Returns `null` if no changes exist. Format:\n     *\n     * ```javascript\n     * {\n     *     resources : {\n     *         added    : [{ name : 'New guy' }],\n     *         modified : [{ id : 2, name : 'Mike' }],\n     *         removed  : [{ id : 3 }]\n     *     },\n     *     events : {\n     *         modified : [{  id : 12, name : 'Cool task' }]\n     *     },\n     *     ...\n     * }\n     * ```\n     *\n     * @member {Object} changes\n     * @readonly\n     * @category Models & Stores\n     */\n\n    /**\n     * Project changes (CRUD operations to records in its stores) are automatically committed on a buffer to the\n     * underlying graph based calculation engine. The engine performs it calculations async.\n     *\n     * By calling this function, the commit happens right away. And by awaiting it you are sure that project\n     * calculations are finished and that references between records are up to date.\n     *\n     * The returned promise is resolved with an object. If that object has `rejectedWith` set, there has been a conflict and the calculation failed.\n     *\n     * ```javascript\n     * // Move an event in time\n     * eventStore.first.shift(1);\n     *\n     * // Trigger calculations directly and wait for them to finish\n     * const result = await project.commitAsync();\n     *\n     * if (result.rejectedWith) {\n     *     // there was a conflict during the scheduling\n     * }\n     * ```\n     *\n     * @async\n     * @function commitAsync\n     * @category Common\n     */\n\n    /**\n     * Set to `true` to enable calculation progress notifications.\n     * When enabled the project fires {@link #event-progress progress} event.\n     *\n     * **Note**: Enabling progress notifications will impact calculation performance, since it needs to pause calculations to allow redrawing the UI.\n     * @config {Boolean} enableProgressNotifications\n     * @category Advanced\n     */\n    /**\n     * Enables/disables the calculation progress notifications.\n     * @member {Boolean} enableProgressNotifications\n     * @category Advanced\n     */\n\n    /**\n     * If this flag is set to `true` (default) when a start/end date is set on the event, a corresponding\n     * `start-no-earlier/later-than` constraint is added, automatically. This is done in order to\n     * keep the event \"attached\" to this date, according to the user intention.\n     *\n     * Depending on your use case, you might want to disable this behaviour.\n     *\n     * @field {Boolean} addConstraintOnDateSet\n     * @default true\n     */\n\n    static get defaultConfig() {\n        return {\n            /**\n             * @hideproperties project, taskStore\n             */\n\n            //region Inline data configs & properties\n\n            /**\n             * Get/set {@link #property-eventStore} data.\n             *\n             * Always returns an array of {@link SchedulerPro.model.EventModel EventModels} but also accepts an array of\n             * its configuration objects as input.\n             *\n             * @member {SchedulerPro.model.EventModel[]} events\n             * @accepts {SchedulerPro.model.EventModel[]|EventModelConfig[]}\n             * @category Inline data\n             */\n            /**\n             * Data use to fill the {@link #property-eventStore}. Should be an array of\n             * {@link SchedulerPro.model.EventModel EventModels} or its configuration objects.\n             *\n             * @config {SchedulerPro.model.EventModel[]|EventModelConfig[]} events\n             * @category Inline data\n             */\n\n            /**\n             * Get/set {@link #property-resourceStore} data.\n             *\n             * Always returns an array of {@link SchedulerPro.model.ResourceModel ResourceModels} but also accepts an\n             * array of its configuration objects as input.\n             *\n             * @member {SchedulerPro.model.ResourceModel[]} resources\n             * @accepts {SchedulerPro.model.ResourceModel[]|ResourceModelConfig[]}\n             * @category Inline data\n             */\n            /**\n             * Data use to fill the {@link #property-resourceStore}. Should be an array of\n             * {@link SchedulerPro.model.ResourceModel ResourceModels} or its configuration objects.\n             *\n             * @config {SchedulerPro.model.ResourceModel[]|ResourceModelConfig[]} resources\n             * @category Inline data\n             */\n\n            /**\n             * Get/set {@link #property-assignmentStore} data.\n             *\n             * Always returns an array of {@link SchedulerPro.model.AssignmentModel AssignmentModels} but also accepts\n             * an array of its configuration objects as input.\n             *\n             * @member {SchedulerPro.model.AssignmentModel[]} assignments\n             * @accepts {SchedulerPro.model.AssignmentModel[]|AssignmentModelConfig[]}\n             * @category Inline data\n             */\n            /**\n             * Data use to fill the {@link #property-assignmentStore}. Should be an array of\n             * {@link SchedulerPro.model.AssignmentModel AssignmentModels} or its configuration objects.\n             *\n             * @config {SchedulerPro.model.AssignmentModel[]|AssignmentModelConfig[]} assignments\n             * @category Inline data\n             */\n\n            /**\n             * Get/set {@link #property-dependencyStore} data.\n             *\n             * Always returns an array of {@link SchedulerPro.model.DependencyModel DependencyModels} but also accepts an\n             * array of its configuration objects as input.\n             *\n             * @member {SchedulerPro.model.DependencyModel[]} dependencies\n             * @accepts {SchedulerPro.model.DependencyModel[]|DependencyModelConfig[]}\n             * @category Inline data\n             */\n            /**\n             * Data use to fill the {@link #property-dependencyStore}. Should be an array of\n             * {@link SchedulerPro.model.DependencyModel DependencyModels} or its configuration objects.\n             *\n             * @config {SchedulerPro.model.DependencyModel[]|DependencyModelConfig[]} dependencies\n             * @category Inline data\n             */\n\n            /**\n             * Get/set {@link #property-timeRangeStore} data.\n             *\n             * Always returns an array of {@link Scheduler.model.TimeSpan TimeSpans} but also accepts an\n             * array of its configuration objects as input.\n             *\n             * @member {Scheduler.model.TimeSpan[]} timeRanges\n             * @accepts {Scheduler.model.TimeSpan[]|TimeSpanConfig[]}\n             * @category Inline data\n             */\n            /**\n             * Data use to fill the {@link #property-timeRangeStore}. Should be an array of\n             * {@link Scheduler.model.TimeSpan TimeSpans} or its configuration objects.\n             *\n             * @config {Scheduler.model.TimeSpan[]|TimeSpanConfig[]} timeRanges\n             * @category Inline data\n             */\n\n            /**\n             * Get/set {@link #property-resourceTimeRangeStore} data.\n             *\n             * Always returns an array of {@link Scheduler.model.ResourceTimeRangeModel ResourceTimeRangeModels} but\n             * also accepts an array of its configuration objects as input.\n             *\n             * @member {Scheduler.model.ResourceTimeRangeModel[]} resourceTimeRanges\n             * @accepts {Scheduler.model.ResourceTimeRangeModel[]|ResourceTimeRangeModelConfig[]}\n             * @category Inline data\n             */\n            /**\n             * Data use to fill the {@link #property-resourceTimeRangeStore}. Should be an array\n             * of {@link Scheduler.model.ResourceTimeRangeModel ResourceTimeRangeModels} or its configuration objects.\n             *\n             * @config {Scheduler.model.ResourceTimeRangeModel[]|ResourceTimeRangeModelConfig[]} resourceTimeRanges\n             * @category Inline data\n             */\n\n            //endregion\n\n            //region Legacy inline data configs & properties\n\n            /**\n             * The initial data, to fill the {@link #property-eventStore eventStore} with.\n             * Should be an array of {@link SchedulerPro.model.EventModel EventModels} or its configuration objects.\n             *\n             * @config {SchedulerPro.model.EventModel[]} eventsData\n             * @category Legacy inline data\n             */\n\n            /**\n             * The initial data, to fill the {@link #property-dependencyStore dependencyStore} with.\n             * Should be an array of {@link SchedulerPro.model.DependencyModel DependencyModels} or its configuration\n             * objects.\n             *\n             * @config {SchedulerPro.model.DependencyModel[]} [dependenciesData]\n             * @category Legacy inline data\n             */\n\n            /**\n             * The initial data, to fill the {@link #property-resourceStore resourceStore} with.\n             * Should be an array of {@link SchedulerPro.model.ResourceModel ResourceModels} or its configuration objects.\n             *\n             * @config {SchedulerPro.model.ResourceModel[]} [resourcesData]\n             * @category Legacy inline data\n             */\n\n            /**\n             * The initial data, to fill the {@link #property-assignmentStore assignmentStore} with.\n             * Should be an array of {@link SchedulerPro.model.AssignmentModel AssignmentModels} or its configuration\n             * objects.\n             *\n             * @config {SchedulerPro.model.AssignmentModel[]} [assignmentsData]\n             * @category Legacy inline data\n             */\n\n            //endregion\n\n            //region Store configs and properties\n\n            /**\n             * The {@link SchedulerPro.data.EventStore store} holding the event information.\n             *\n             * See also {@link SchedulerPro.model.EventModel}\n             *\n             * @member {SchedulerPro.data.EventStore} eventStore\n             * @category Models & Stores\n             */\n            /**\n             * An {@link SchedulerPro.data.EventStore} instance or a config object.\n             * @config {SchedulerPro.data.EventStore|EventStoreConfig} eventStore\n             * @category Models & Stores\n             */\n\n            /**\n             * The {@link SchedulerPro.data.DependencyStore store} holding the dependency information.\n             *\n             * See also {@link SchedulerPro.model.DependencyModel}\n             *\n             * @member {SchedulerPro.data.DependencyStore} dependencyStore\n             * @category Models & Stores\n             */\n            /**\n             * A {@link SchedulerPro.data.DependencyStore} instance or a config object.\n             * @config {SchedulerPro.data.DependencyStore|DependencyStoreConfig} dependencyStore\n             * @category Models & Stores\n             */\n\n            /**\n             * The {@link SchedulerPro.data.ResourceStore store} holding the resources that can be assigned to the\n             * events in the event store.\n             *\n             * See also {@link SchedulerPro.model.ResourceModel}\n             *\n             * @member {SchedulerPro.data.ResourceStore} resourceStore\n             * @category Models & Stores\n             */\n            /**\n             * A {@link SchedulerPro.data.ResourceStore} instance or a config object.\n             * @config {SchedulerPro.data.ResourceStore|ResourceStoreConfig} resourceStore\n             * @category Models & Stores\n             */\n\n            /**\n             * The {@link SchedulerPro.data.AssignmentStore store} holding the assignment information.\n             *\n             * See also {@link SchedulerPro.model.AssignmentModel}\n             *\n             * @member {SchedulerPro.data.AssignmentStore} assignmentStore\n             * @category Models & Stores\n             */\n            /**\n             * An {@link SchedulerPro.data.AssignmentStore} instance or a config object.\n             * @config {SchedulerPro.data.AssignmentStore|AssignmentStoreConfig} assignmentStore\n             * @category Models & Stores\n             */\n\n            /**\n             * The {@link SchedulerPro.data.CalendarManagerStore store} holding the calendar information.\n             *\n             * See also {@link SchedulerPro.model.CalendarModel}\n             * @member {SchedulerPro.data.CalendarManagerStore} calendarManagerStore\n             * @category Models & Stores\n             */\n            /**\n             * A {@link SchedulerPro.data.CalendarManagerStore} instance or a config object.\n             * @config {SchedulerPro.data.CalendarManagerStore|CalendarManagerStoreConfig} calendarManagerStore\n             * @category Models & Stores\n             */\n\n            //endregion\n\n            //region Model & store class configs\n\n            /**\n             * The constructor of the calendar model class, to be used in the project. Will be set as the\n             * {@link Core.data.Store#config-modelClass modelClass} property of the\n             * {@link #property-calendarManagerStore}\n             *\n             * @config {SchedulerPro.model.CalendarModel} [calendarModelClass]\n             * @typings {typeof CalendarModel}\n             * @category Models & Stores\n             */\n            calendarModelClass : CalendarModel,\n\n            /**\n             * The constructor of the dependency model class, to be used in the project. Will be set as the\n             * {@link Core.data.Store#config-modelClass modelClass} property of the {@link #property-dependencyStore}\n             *\n             * @config {SchedulerPro.model.DependencyModel}\n             * @typings {typeof DependencyModel}\n             * @category Models & Stores\n             */\n            dependencyModelClass : DependencyModel,\n\n            /**\n             * The constructor of the event model class, to be used in the project. Will be set as the\n             * {@link Core.data.Store#config-modelClass modelClass} property of the {@link #property-eventStore}\n             *\n             * @config {SchedulerPro.model.EventModel}\n             * @typings {typeof EventModel}\n             * @category Models & Stores\n             */\n            eventModelClass : EventModel,\n\n            /**\n             * The constructor of the assignment model class, to be used in the project. Will be set as the\n             * {@link Core.data.Store#config-modelClass modelClass} property of the {@link #property-assignmentStore}\n             *\n             * @config {SchedulerPro.model.AssignmentModel}\n             * @typings {typeof AssignmentModel}\n             * @category Models & Stores\n             */\n            assignmentModelClass : AssignmentModel,\n\n            /**\n             * The constructor of the resource model class, to be used in the project. Will be set as the\n             * {@link Core.data.Store#config-modelClass modelClass} property of the {@link #property-resourceStore}\n             *\n             * @config {SchedulerPro.model.ResourceModel}\n             * @typings {typeof ResourceModel}\n             * @category Models & Stores\n             */\n            resourceModelClass : ResourceModel,\n\n            /**\n             * The constructor to create a calendar store instance with. Should be a class, subclassing the\n             * {@link SchedulerPro.data.CalendarManagerStore}\n             * @config {SchedulerPro.data.CalendarManagerStore|Object}\n             * @typings {typeof CalendarManagerStore|object}\n             * @category Models & Stores\n             */\n            calendarManagerStoreClass : CalendarManagerStore,\n\n            /**\n             * The constructor to create a dependency store instance with. Should be a class, subclassing the\n             * {@link SchedulerPro.data.DependencyStore}\n             * @config {SchedulerPro.data.DependencyStore|Object}\n             * @typings {typeof DependencyStore|object}\n             * @category Models & Stores\n             */\n            dependencyStoreClass : DependencyStore,\n\n            /**\n             * The constructor to create an event store instance with. Should be a class, subclassing the\n             * {@link SchedulerPro.data.EventStore}\n             * @config {SchedulerPro.data.EventStore|Object}\n             * @typings {typeof EventStore|object}\n             * @category Models & Stores\n             */\n            eventStoreClass : EventStore,\n\n            /**\n             * The constructor to create an assignment store instance with. Should be a class, subclassing the\n             * {@link SchedulerPro.data.AssignmentStore}\n             * @config {SchedulerPro.data.AssignmentStore|Object}\n             * @typings {typeof AssignmentStore|object}\n             * @category Models & Stores\n             */\n            assignmentStoreClass : AssignmentStore,\n\n            /**\n             * The constructor to create a resource store instance with. Should be a class, subclassing the\n             * {@link SchedulerPro.data.ResourceStore}\n             * @config {SchedulerPro.data.ResourceStore|Object}\n             * @typings {typeof ResourceStore|object}\n             * @category Models & Stores\n             */\n            resourceStoreClass : ResourceStore,\n\n            //endregion\n\n            /**\n             * The initial data, to fill the {@link #property-calendarManagerStore} with.\n             * Should be an array of {@link SchedulerPro.model.CalendarModel} or it's configuration objects.\n             *\n             * @config {SchedulerPro.model.CalendarModel[]}\n             * @category Legacy inline data\n             */\n            calendarsData : null,\n\n            /**\n             * Set to `true` to reset the undo/redo queues of the internal {@link Core.data.stm.StateTrackingManager}\n             * after the Project has loaded. Defaults to `false`\n             * @config {Boolean} resetUndoRedoQueuesAfterLoad\n             * @category Advanced\n             */\n\n            supportShortSyncResponseNote : 'Note: Please consider enabling \"supportShortSyncResponse\" option to allow less detailed sync responses (https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/model/ProjectModel#config-supportShortSyncResponse)',\n\n            /**\n             * Enables early rendering in SchedulerPro, by postponing calculations to after the first refresh.\n             *\n             * Requires event data loaded to be pre-normalized to function as intended, since it will be used to render\n             * before engine has normalized the data. Given un-normalized data events will snap into place when\n             * calculations are finished.\n             *\n             * The Gantt chart will be read-only until the initial calculations are finished.\n             *\n             * @config {Boolean}\n             * @default\n             * @category Advanced\n             */\n            delayCalculation : true,\n\n            calendarManagerStore : {},\n\n            stmClass : StateTrackingManager\n        };\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * Get/set {@link #property-calendarManagerStore} data.\n             *\n             * Always returns a {@link SchedulerPro.model.CalendarModel} array but also accepts an array of\n             * its configuration objects as input.\n             *\n             * @member {SchedulerPro.model.CalendarModel[]} calendars\n             * @accepts {SchedulerPro.model.CalendarModel[]|CalendarModelConfig[]}\n             * @category Inline data\n             */\n            /**\n             * Data use to fill the {@link #property-eventStore}. Should be a {@link SchedulerPro.model.CalendarModel}\n             * array or its configuration objects.\n             *\n             * @config {SchedulerPro.model.CalendarModel[]|CalendarModelConfig[]} calendars\n             * @category Inline data\n             */\n            calendars : null\n        };\n    }\n\n    // For TaskBoard compatibility\n    get taskStore() {\n        return this.eventStore;\n    }\n\n    //endregion\n\n    //region Inline data\n\n    get calendars() {\n        return this.calendarManagerStore.allRecords;\n    }\n\n    updateCalendars(calendars) {\n        this.calendarManagerStore.data = calendars;\n    }\n\n    //endregion\n}\n","import Base from '../../../Core/Base.js';\nimport ProHorizontalLayoutStack from '../../eventlayout/ProHorizontalLayoutStack.js';\nimport ProHorizontalLayoutPack from '../../eventlayout/ProHorizontalLayoutPack.js';\n\n/**\n * @module SchedulerPro/view/mixin/SchedulerProEventRendering\n */\n\n/**\n * Config for event layout\n * @typedef {Object} EventLayoutConfig\n * @property {'stack'|'pack'|'mixed'|'none'} type Event layout type. Possible values for horizontal mode are\n * `stack`, `pack` and `none`. For vertical mode: `pack`, `mixed` and `none`.\n * @property {Function} layoutFn Horizontal mode only. This function allows to manually position events inside the row.\n * @property {Object} weights Horizontal mode only. Specifies groups order.\n * @property {String|Function} groupBy Horizontal mode only. Specifies a way to group events inside a row.\n */\n\n/**\n * Functions to handle event rendering in Scheduler Pro (EventModel -> dom elements).\n *\n * @mixin\n */\nexport default Target => class SchedulerProEventRendering extends (Target || Base) {\n    static get $name() {\n        return 'SchedulerProEventRendering';\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * This config defines how to handle overlapping events. Valid values are:\n             * - `stack`, adjusts row height (only horizontal)\n             * - `pack`, adjusts event height\n             * - `mixed`, allows two events to overlap, more packs (only vertical)\n             * - `none`, allows events to overlap\n             *\n             * You can also provide a configuration object accepted by\n             * {@link SchedulerPro.eventlayout.ProHorizontalLayout} to group events or even take control over the\n             * layout (i.e. vertical position and height):\n             *\n             * To group events:\n             *\n             * ```javascript\n             * new SchedulerPro({\n             *     eventLayout : {\n             *         type    : 'stack',\n             *         weights : {\n             *             high   : 100,\n             *             normal : 150,\n             *             low    : 200\n             *         },\n             *         groupBy : 'prio'\n             *     }\n             * });\n             * ```\n             *\n             * To take control over the layout:\n             *\n             * ```javascript\n             * new SchedulerPro({\n             *     eventLayout : {\n             *         layoutFn : items => {\n             *             items.forEach(item => {\n             *                 item.top = 100 * Math.random();\n             *                 item.height = 100 * Math.random();\n             *             });\n             *\n             *             return 100;\n             *         }\n             *     }\n             * });\n             * ```\n             *\n             * For more info on grouping and layout please refer to {@link SchedulerPro.eventlayout.ProHorizontalLayout}\n             * doc article.\n             *\n             * @prp {'stack'|'pack'|'mixed'|'none'|EventLayoutConfig}\n             * @default\n             * @category Scheduled events\n             */\n            eventLayout : 'stack',\n\n            /**\n             * The class responsible for the packing horizontal event layout process.\n             * Override this to take control over the layout process.\n             * @config {Scheduler.eventlayout.HorizontalLayout}\n             * @typings {typeof HorizontalLayout}\n             * @default\n             * @private\n             * @category Misc\n             */\n            horizontalLayoutPackClass : ProHorizontalLayoutPack,\n\n            /**\n             * The class name responsible for the stacking horizontal event layout process.\n             * Override this to take control over the layout process.\n             * @config {Scheduler.eventlayout.HorizontalLayout}\n             * @typings {typeof HorizontalLayout}\n             * @default\n             * @private\n             * @category Misc\n             */\n            horizontalLayoutStackClass : ProHorizontalLayoutStack\n        };\n    }\n\n    //region Config\n\n    updateInternalEventLayout(eventLayout, oldEventLayout) {\n        const me = this;\n\n        if (!me.isConfiguring) {\n            me.clearLayouts();\n        }\n\n        super.updateInternalEventLayout(eventLayout, oldEventLayout);\n    }\n\n    //endregion\n\n    getEventLayout(config) {\n        config = super.getEventLayout(config);\n\n        if ('layoutFn' in config) {\n            config.type = 'layoutFn';\n        }\n\n        return config;\n    }\n\n    clearLayouts() {\n        const me = this;\n\n        if (me.layouts) {\n            for (const key in me.layouts) {\n                me.layouts[key].destroy();\n                delete me.layouts[key];\n            }\n        }\n    }\n\n    /**\n     * Get event layout handler. The handler decides the vertical placement of events within a resource.\n     * Returns null if no eventLayout is used (if {@link #config-eventLayout} is set to \"none\")\n     * @internal\n     * @returns {Scheduler.eventlayout.HorizontalLayout}\n     * @readonly\n     * @category Scheduled events\n     */\n    getEventLayoutHandler(eventLayout) {\n        const me = this;\n\n        if (!me.isHorizontal) {\n            return null;\n        }\n\n        const { timeAxisViewModel, horizontal } = me;\n\n        if (!me.layouts) {\n            me.layouts = {};\n        }\n\n        const { layouts } = me;\n\n        switch (eventLayout.type) {\n            // stack, adjust row height to fit all events\n            case 'stack': {\n                if (!layouts.horizontalStack) {\n                    layouts.horizontalStack = me.horizontalLayoutStackClass.new({\n                        scheduler                   : me,\n                        timeAxisViewModel,\n                        bandIndexToPxConvertFn      : horizontal.layoutEventVerticallyStack,\n                        bandIndexToPxConvertThisObj : horizontal,\n                        groupByThisObj              : me\n                    }, eventLayout);\n                }\n\n                return layouts.horizontalStack;\n            }\n            // pack, fit all events in available height by adjusting their height\n            case 'pack': {\n                if (!layouts.horizontalPack) {\n                    layouts.horizontalPack = me.horizontalLayoutPackClass.new({\n                        scheduler                   : me,\n                        timeAxisViewModel,\n                        bandIndexToPxConvertFn      : horizontal.layoutEventVerticallyPack,\n                        bandIndexToPxConvertThisObj : horizontal,\n                        groupByThisObj              : me\n                    }, eventLayout);\n                }\n\n                return layouts.horizontalPack;\n            }\n            case 'layoutFn': {\n                // Both methods are called on a layout\n                return {\n                    type                : 'layoutFn',\n                    scheduler           : me,\n                    applyLayout         : eventLayout.layoutFn,\n                    layoutEventsInBands : eventLayout.layoutFn\n                };\n            }\n            default:\n                return null;\n        }\n    }\n\n    get widgetClass() {}\n};\n","import HorizontalRendering from '../../../Scheduler/view/orientation/HorizontalRendering.js';\n\n/**\n * @module SchedulerPro/view/orientation/ProHorizontalRendering\n */\n\n/**\n * Handles event rendering in Scheduler Pro horizontal mode. Populates render data with buffer duration.\n *\n * @internal\n */\nexport default class ProHorizontalRendering extends HorizontalRendering {\n\n    static $name = 'ProHorizontalRendering';\n\n    /**\n     * Populates render data with buffer data rendering.\n     * @param {HorizontalRenderData} renderData\n     * @returns {Boolean}\n     * @private\n     */\n    fillInnerSpanHorizontalPosition(renderData) {\n        const\n            me              = this,\n            { eventRecord } = renderData,\n            {\n                startMS    : innerStartMS,\n                endMS      : innerEndMS,\n                durationMS : innerDurationMS\n            }               = me.calculateMS(eventRecord, 'startDate', 'endDate'),\n            position        = me.calculateHorizontalPosition(renderData, innerStartMS, innerEndMS, innerDurationMS);\n\n        if (position) {\n            const { left, width } = position;\n\n            Object.assign(renderData, {\n                innerStartMS,\n                innerEndMS,\n                innerDurationMS,\n                bufferBeforeWidth : Math.max(left - renderData.left, 0),\n                // This could yield a really small number due to floating point accuracy, we can round the result\n                bufferAfterWidth  : Math.max(Math.floor(renderData.left + renderData.width - left - width), 0)\n            });\n\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n\n    getTimeSpanRenderData(timeSpan, rowRecord, includeOutside = false) {\n        const data = super.getTimeSpanRenderData(timeSpan, rowRecord, includeOutside);\n\n        if (data?.useEventBuffer) {\n            if (!this.fillInnerSpanHorizontalPosition(data)) {\n                return null;\n            }\n        }\n\n        return data;\n    }\n}\n","import VerticalRendering from '../../../Scheduler/view/orientation/VerticalRendering.js';\n\n/**\n * @module SchedulerPro/view/orientation/ProVerticalRendering\n */\n\n/**\n * Handles event rendering in Scheduler Pro horizontal mode. Populates render data with buffer duration.\n *\n * @internal\n */\nexport default class ProVerticalRendering extends VerticalRendering {\n\n    static $name = 'ProVerticalRendering';\n\n    /**\n     * Populates render data with buffer data rendering.\n     * @param {HorizontalRenderData} renderData\n     * @returns {Boolean}\n     * @private\n     */\n    fillInnerSpanVerticalPosition(renderData) {\n        const\n            me                  = this,\n            { scheduler }       = me,\n            { eventRecord }     = renderData,\n            { isBatchUpdating } = eventRecord,\n            startDate           = isBatchUpdating ? eventRecord.get('startDate') : eventRecord.startDate,\n            endDate             = isBatchUpdating ? eventRecord.get('endDate') : eventRecord.endDate,\n            top                 = scheduler.getCoordinateFromDate(startDate),\n            innerStartMS        = startDate.getTime(),\n            innerEndMS          = endDate.getTime(),\n            innerDurationMS     = innerEndMS - innerStartMS;\n\n        let bottom = scheduler.getCoordinateFromDate(endDate),\n            height = bottom - top;\n\n        // Below, estimate height\n        if (bottom === -1) {\n            height = Math.round(innerDurationMS * scheduler.timeAxisViewModel.getSingleUnitInPixels('millisecond'));\n            bottom = top + height;\n        }\n\n        Object.assign(renderData, {\n            innerStartMS,\n            innerEndMS,\n            innerDurationMS,\n            bufferBeforeWidth : top - renderData.top,\n            bufferAfterWidth  : renderData.top + renderData.height - top - height\n        });\n\n        return true;\n    }\n\n    getTimeSpanRenderData(timeSpan, rowRecord, includeOutside = false) {\n        const data = super.getTimeSpanRenderData(timeSpan, rowRecord, includeOutside);\n\n        if (data?.useEventBuffer) {\n            if (!this.fillInnerSpanVerticalPosition(data)) {\n                return null;\n            }\n        }\n\n        return data;\n    }\n}\n","import '../localization/En.js';\nimport DomHelper from '../../Core/helper/DomHelper.js';\nimport VersionHelper from '../../Core/helper/VersionHelper.js';\nimport SchedulingIssueResolution from './mixin/SchedulingIssueResolution.js';\nimport ProjectProgressMixin from './mixin/ProjectProgressMixin.js';\nimport SchedulerBase from '../../Scheduler/view/SchedulerBase.js';\nimport ProjectModel from '../model/ProjectModel.js';\nimport SchedulerProEventRendering from './mixin/SchedulerProEventRendering.js';\nimport ProHorizontalRendering from './orientation/ProHorizontalRendering.js';\nimport ProVerticalRendering from './orientation/ProVerticalRendering.js';\n\n/**\n * @module SchedulerPro/view/SchedulerProBase\n */\n\n/**\n * A thin base class for {@link SchedulerPro/view/SchedulerPro}. Includes fewer features by default, allowing smaller\n * custom built bundles if used in place of {@link SchedulerPro/view/SchedulerPro}.\n *\n * **NOTE:** In most scenarios you should use SchedulerPro instead of SchedulerProBase.\n *\n * @mixes SchedulerPro/view/mixin/SchedulerProEventRendering\n * @mixes SchedulerPro/view/mixin/ProjectProgressMixin\n *\n * @features SchedulerPro/feature/CalendarHighlight\n * @features SchedulerPro/feature/DependencyEdit\n * @features SchedulerPro/feature/EventBuffer\n * @features SchedulerPro/feature/EventResize\n * @features SchedulerPro/feature/EventSegmentDrag\n * @features SchedulerPro/feature/EventSegmentResize\n * @features SchedulerPro/feature/EventSegments\n * @features SchedulerPro/feature/NestedEvents\n * @features SchedulerPro/feature/PercentBar\n * @features SchedulerPro/feature/ResourceNonWorkingTime\n * @features SchedulerPro/feature/TaskEdit\n * @features SchedulerPro/feature/TimeSpanHighlight\n * @features SchedulerPro/feature/Versions\n *\n * @extends Scheduler/view/SchedulerBase\n * @mixes SchedulerPro/view/mixin/SchedulingIssueResolution\n * @widget\n */\nexport default class SchedulerProBase extends SchedulerBase.mixin(\n    ProjectProgressMixin,\n    SchedulingIssueResolution,\n    SchedulerProEventRendering\n) {\n\n    //region Config\n\n    static get $name() {\n        return 'SchedulerProBase';\n    }\n\n    static get type() {\n        return 'schedulerprobase';\n    }\n\n    static get configurable() {\n        return {\n            projectModelClass : ProjectModel,\n\n            /**\n             * A task field (id, wbsCode, sequenceNumber etc) that will be used when displaying and editing linked tasks.\n             * @config {String} dependencyIdField\n             * @default 'id'\n             */\n            dependencyIdField : 'id'\n        };\n    }\n\n    static get isSchedulerPro() {\n        return true;\n    }\n\n    //endregion\n\n    //region Store & model docs\n\n    // Configs\n\n    /**\n     * A {@link SchedulerPro.model.ProjectModel} instance or a config object. The project holds all SchedulerPro data.\n     * @config {SchedulerPro.model.ProjectModel|ProjectModelConfig} project\n     * @category Data\n     */\n\n    /**\n     * Inline events, will be loaded into the backing project's EventStore.\n     * @config {SchedulerPro.model.EventModel[]|Object[]} events\n     * @category Data\n     */\n\n    /**\n     * The {@link SchedulerPro.data.EventStore} holding the events to be rendered into the scheduler.\n     * @config {SchedulerPro.data.EventStore|EventStoreConfig} eventStore\n     * @category Data\n     */\n\n    /**\n     * Inline resources, will be loaded into the backing project's ResourceStore.\n     * @config {SchedulerPro.model.ResourceModel[]|ResourceModelConfig[]} resources\n     * @category Data\n     */\n\n    /**\n     * The {@link SchedulerPro.data.ResourceStore} holding the resources to be rendered into the scheduler.\n     * @config {SchedulerPro.data.ResourceStore|ResourceStoreConfig} resourceStore\n     * @category Data\n     */\n\n    // For some reason Typings won't accept AssignmentModelConfig here. Object will be turned into it though\n    /**\n     * Inline assignments, will be loaded into the backing project's AssignmentStore.\n     * @config {SchedulerPro.model.AssignmentModel[]|Object[]} assignments\n     * @category Data\n     */\n\n    /**\n     * The optional {@link SchedulerPro.data.AssignmentStore}, holding assignments between resources and events.\n     * Required for multi assignments.\n     * @config {SchedulerPro.data.AssignmentStore|AssignmentStoreConfig} assignmentStore\n     * @category Data\n     */\n\n    /**\n     * Inline dependencies, will be loaded into the backing project's DependencyStore.\n     * @config {SchedulerPro.model.DependencyModel[]|DependencyModelConfig[]} dependencies\n     * @category Data\n     */\n\n    /**\n     * The optional {@link SchedulerPro.data.DependencyStore}.\n     * @config {SchedulerPro.data.DependencyStore|DependencyStoreConfig} dependencyStore\n     * @category Data\n     */\n\n    /**\n     * Inline calendars, will be loaded into the backing project's CalendarManagerStore.\n     * @config {SchedulerPro.model.CalendarModel[]|CalendarModelConfig[]} calendars\n     * @category Data\n     */\n\n    // Properties\n\n    /**\n     * Get/set ProjectModel instance, containing the data visualized by the SchedulerPro.\n     * @member {SchedulerPro.model.ProjectModel} project\n     * @typings {ProjectModel}\n     * @category Data\n     */\n\n    /**\n     * Get/set events, applies to the backing project's EventStore.\n     * @member {SchedulerPro.model.EventModel[]} events\n     * @accepts {SchedulerPro.model.EventModel[]|EventModelConfig[]}\n     * @category Data\n     */\n\n    /**\n     * Get/set the event store instance of the backing project.\n     * @member {SchedulerPro.data.EventStore} eventStore\n     * @typings Scheduler/view/SchedulerBase:eventStore -> {Scheduler.data.EventStore||SchedulerPro.data.EventStore}\n     * @category Data\n     */\n\n    /**\n     * Get/set resources, applies to the backing project's ResourceStore.\n     * @member {SchedulerPro.model.ResourceModel[]} resources\n     * @accepts {SchedulerPro.model.ResourceModel[]|ResourceModelConfig[]}\n     * @category Data\n     */\n\n    /**\n     * Get/set the resource store instance of the backing project\n     * @member {SchedulerPro.data.ResourceStore} resourceStore\n     * @typings Scheduler/view/SchedulerBase:resourceStore -> {Scheduler.data.ResourceStore||SchedulerPro.data.ResourceStore}\n     * @category Data\n     */\n\n    // For some reason Typings won't accept AssignmentModelConfig here. Object will be turned into it though\n    /**\n     * Get/set assignments, applies to the backing project's AssignmentStore.\n     * @member {SchedulerPro.model.AssignmentModel[]} assignments\n     * @accepts {SchedulerPro.model.AssignmentModel[]|Object[]}\n     * @category Data\n     */\n\n    /**\n     * Get/set the event store instance of the backing project.\n     * @member {SchedulerPro.data.AssignmentStore} assignmentStore\n     * @typings Scheduler/view/SchedulerBase:assignmentStore -> {Scheduler.data.AssignmentStore||SchedulerPro.data.AssignmentStore}\n     * @category Data\n     */\n\n    /**\n     * Get/set dependencies, applies to the backing projects DependencyStore.\n     * @member {SchedulerPro.model.DependencyModel[]} dependencies\n     * @accepts {SchedulerPro.model.DependencyModel[]|DependencyModelConfig[]}\n     * @category Data\n     */\n\n    /**\n     * Get/set the dependencies store instance of the backing project.\n     * @member {SchedulerPro.data.DependencyStore} dependencyStore\n     * @typings Scheduler/view/SchedulerBase:dependencyStore -> {Scheduler.data.DependencyStore||SchedulerPro.data.DependencyStore}\n     * @category Data\n     */\n\n    /**\n     * Get/set calendars, applies to the backing projects CalendarManagerStore.\n     * @member {SchedulerPro.model.CalendarModel[]} calendars\n     * @accepts {SchedulerPro.model.CalendarModel[]|CalendarModelConfig[]}\n     * @category Data\n     */\n\n    //endregion\n\n    //region Overrides\n\n    onPaintOverride() {\n        // Internal procedure used for paint method overrides\n        // Not used in onPaint() because it may be chained on instance and Override won't be applied\n    }\n\n    //endregion\n\n    //region Inline data\n\n    // Pro specific extension of SchedulerStores\n\n    set calendars(calendars) {\n        this.project.calendars = calendars;\n    }\n\n    get calendars() {\n        return this.project.calendars;\n    }\n\n    //endregion\n\n    //region Mode\n\n    /**\n     * Get mode (horizontal/vertical)\n     * @property {'horizontal'|'vertical'}\n     * @readonly\n     * @category Common\n     */\n    get mode() {\n        return this._mode;\n    }\n\n    set mode(mode) {\n        const me = this;\n\n        me._mode = mode;\n\n        if (!me[mode]) {\n            me.element.classList.add(`b-sch-${mode}`);\n\n            if (mode === 'horizontal') {\n                me.horizontal = new ProHorizontalRendering(me);\n\n                if (me.isPainted) {\n                    me.horizontal.init();\n                }\n\n            }\n            else if (mode === 'vertical') {\n                me.vertical = new ProVerticalRendering(me);\n\n                if (me.rendered) {\n                    me.vertical.init();\n                }\n            }\n        }\n    }\n\n    //endregion\n\n    //region Internal\n\n    // Overrides grid to take project loading into account\n    toggleEmptyText() {\n        const\n            me = this;\n\n        if (me.bodyContainer && me.rowManager) {\n            DomHelper.toggleClasses(me.bodyContainer, 'b-grid-empty', !(me.rowManager.rowCount || me.project.isLoadingOrSyncing));\n        }\n    }\n\n    // Needed to work with Gantt features\n    get taskStore() {\n        return this.project.eventStore;\n    }\n\n    //endregion\n\n    createEvent(startDate, resourceRecord, row) {\n        // For resources with a calendar, ensure the date is inside a working time range\n        if (!resourceRecord.isWorkingTime(startDate)) {\n            return;\n        }\n\n        // If task editor is active dblclick will trigger number of async actions:\n        // store add which would schedule project commit\n        // editor cancel on next animation frame\n        // editor hide\n        // rejecting previous transaction\n        // and there is also dependency feature listening to transitionend on scheduler to draw lines after\n        // It can happen that user dblclicks too fast, then event will be added, then dependency will schedule itself\n        // to render, and then event will be removed as part of transaction rejection from editor. So we cannot add\n        // event before active transaction is done.\n        if (this.taskEdit && this.taskEdit.isEditing) {\n            this.ion({\n                aftertaskedit : () => super.createEvent(startDate, resourceRecord, row),\n                once          : true\n            });\n        }\n        else {\n            return super.createEvent(startDate, resourceRecord, row);\n        }\n    }\n\n}\n\nSchedulerProBase.initClass();\nVersionHelper.setVersion('schedulerpro', '5.3.7');\n","import StringHelper from '../../Core/helper/StringHelper.js';\nimport SchedulerProBase from './SchedulerProBase.js';\nimport '../column/ScaleColumn.js';\nimport '../../Scheduler/feature/NonWorkingTime.js';\n\nimport '../localization/En.js';\nimport '../../Scheduler/column/TimeAxisColumn.js';\n\n// Always required features\nimport '../../Grid/feature/Tree.js';\nimport '../../Grid/feature/RegionResize.js';\nimport Histogram from '../../Core/widget/graph/Histogram.js';\nimport { TimeUnit } from '../../Engine/scheduling/Types.js';\nimport { CalculatedValueGen } from '../../ChronoGraph/chrono/Identifier.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\nimport { BaseCalendarMixin } from '../../Engine/quark/model/scheduler_basic/BaseCalendarMixin.js';\nimport NumberFormat from '../../Core/helper/util/NumberFormat.js';\nimport Tooltip from '../../Core/widget/Tooltip.js';\n\n/**\n * @module SchedulerPro/view/ResourceHistogram\n */\n\nconst emptyFn = () => {};\n/**\n * An object representing a certain time interval.\n *\n * @typedef {Object} TickInfo\n * @property {Date} startDate The interval start date\n * @property {Date} endDate The interval end date\n */\n\n/**\n * An object containing info on the resource allocation in a certain time interval.\n *\n * The object is used when rendering interval bars and tooltips so it additionally provides a `rectConfig` property\n * which contains a configuration object for the `rect` SVG-element representing the interval bar.\n *\n * @typedef {Object} ResourceAllocationIntervalInfo\n * @property {SchedulerPro.model.ResourceModel} resource Resource model\n * @property {Set} assignments Set of ongoing assignments for the interval\n * @property {Map} assignmentIntervals Individual ongoing assignments allocation indexed by assignments\n * @property {Number} effort Resource effort in the interval (in milliseconds)\n * @property {Boolean} isOverallocated `true` if the interval contains a fact of the resource overallocation\n * @property {Boolean} isUnderallocated `true` if the resource is underallocated in the interval\n * @property {Number} maxEffort Maximum possible resource effort in the interval (in milliseconds)\n * @property {DomConfig} rectConfig The rectangle DOM configuration object\n * @property {TickInfo} tick The time interval\n * @property {Number} units Resource allocation in percents\n */\n\n/**\n * This widget displays a read-only timeline report of the workload for the resources in a\n * {@link SchedulerPro/model/ProjectModel project}. The resource allocation is visualized as bars along the time axis\n * with an optional line indicating the maximum available time for each resource. A {@link SchedulerPro/column/ScaleColumn}\n * is also added automatically.\n *\n * To create a standalone histogram, simply configure it with a Project instance:\n *\n * ```javascript\n * const project = new ProjectModel({\n *     autoLoad  : true,\n *     transport : {\n *         load : {\n *             url : 'examples/schedulerpro/view/data.json'\n *         }\n *     }\n * });\n *\n * const histogram = new ResourceHistogram({\n *     project,\n *     appendTo    : 'targetDiv',\n *     rowHeight   : 60,\n *     minHeight   : '20em',\n *     flex        : '1 1 50%',\n *     showBarTip  : true,\n *     columns     : [\n *         {\n *             width : 200,\n *             field : 'name',\n *             text  : 'Resource'\n *         }\n *     ]\n * });\n * ```\n *\n * {@inlineexample SchedulerPro/view/ResourceHistogram.js}\n *\n * ## Pairing the component\n *\n * You can also pair the histogram with other timeline views such as the Gantt or Scheduler,\n * using the {@link Scheduler/view/TimelineBase#config-partner} config.\n *\n * You can configure (or hide completely) the built-in scale column easily:\n *\n * ```javascript\n * const histogram = new ResourceHistogram({\n *    project,\n *    appendTo    : 'targetDiv',\n *    columns     : [\n *        {\n *            width : 200,\n *            field : 'name',\n *            text  : 'Resource'\n *        },\n *        // Hide the scale column (or add any other column configs)\n *        {\n *            type   : 'scale',\n *            hidden : true\n *        }\n *    ]\n * });\n * ```\n *\n * ## Changing displayed values\n *\n * To change the histogram bar texts, supply a {@link #config-getBarText} function.\n * Here for example the provided function displays resources time **left** instead of\n * allocated time\n *\n * ```javascript\n * new ResourceHistogram({\n *     getBarText(datum) {\n *         const resourceHistogram = this.owner;\n *\n *         // get default bar text\n *         let result = resourceHistogram.getBarTextDefault();\n *\n *         // and if some work is done in the tick\n *         if (result) {\n *\n *             const unit = resourceHistogram.getBarTextEffortUnit();\n *\n *             // display the resource available time\n *             result = resourceHistogram.getEffortText(datum.maxEffort - datum.effort, unit);\n *         }\n *\n *         return result;\n *     },\n * })\n * ```\n *\n * @extends SchedulerPro/view/SchedulerProBase\n * @classtype resourcehistogram\n * @widget\n */\nexport default class ResourceHistogram extends SchedulerProBase {\n\n    //region Config\n\n    static $name = 'ResourceHistogram';\n\n    static type = 'resourcehistogram';\n\n    /**\n     * @hideconfigs durationDisplayPrecision, resourceColumns, enableRecurringEvents, eventBarTextField,\n     * eventBodyTemplate, eventColor, eventLayout, eventRenderer, eventRendererThisObj, eventStyle,\n     * horizontalEventSorterFn, horizontalLayoutPackClass, horizontalLayoutStackClass, milestoneAlign,\n     * milestoneTextPosition, highlightPredecessors, highlightSuccessors, removeUnassignedEvent,\n     * eventAssignHighlightCls, eventCls, eventSelectedCls, fixedEventCls, overScheduledEventClass,\n     * timeZone\n     */\n\n    static configurable = {\n        sortFeatureStore      : 'store',\n        timeAxisColumnCellCls : 'b-sch-timeaxis-cell b-resourcehistogram-cell',\n\n        /**\n         * Effort value format string.\n         * Must be a template supported by {@link Core/helper/util/NumberFormat} class.\n         * @config {String}\n         * @default\n         */\n        effortFormat : '0.#',\n\n        /**\n         * Specifies whether effort values should display units or not.\n         * @config {Boolean}\n         * @default\n         */\n        showEffortUnit : true,\n\n        rowHeight : 50,\n\n        // <remove-on-release>\n        // TODO: docs + tests\n        // </remove-on-release>\n        useProjectTimeUnitsForScale : false,\n\n        /**\n         * Default time unit to display resources effort values.\n         * The value is used as default when displaying effort in tooltips and bars text.\n         * Yet the effective time unit used might change dynamically when zooming in the histogram\n         * so its ticks unit gets smaller than the default unit.\n         * Please use {@link #config-barTipEffortUnit} to customize default units for tooltips only\n         * and {@link #config-barTextEffortUnit} to customize default units in bar texts.\n         * @config {'millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year'}\n         * @default hour\n         */\n        effortUnit : TimeUnit.Hour,\n\n        /**\n         * Default time unit used for displaying resources effort in bars.\n         * Yet the effective time unit used might change dynamically when zooming in the histogram\n         * so its ticks unit gets smaller than the default unit.\n         * Please use {@link #config-barTipEffortUnit} to customize default units for tooltips\n         * (or {@link #config-effortUnit} to customize both texts and tooltips default units).\n         * @config {'millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year'}\n         * @default hour\n         */\n        barTextEffortUnit : null,\n\n        /**\n         * Default time unit used when displaying resources effort in tooltips.\n         * Yet the effective time unit used might change dynamically when zooming in the histogram\n         * so its ticks unit gets smaller than the default unit.\n         * Please use {@link #config-barTextEffortUnit} to customize default units for bar texts\n         * (or {@link #config-effortUnit} to customize both texts and tooltips default units).\n         * @config {'millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year'}\n         * @default hour\n         */\n        barTipEffortUnit : null,\n\n        /**\n         * Set to `true` if you want to display the maximum resource allocation line.\n         * @config {Boolean}\n         * @default\n         */\n        showMaxEffort : true,\n\n        /**\n         * Set to `true` if you want to display resources effort values in bars\n         * (for example: `24h`, `7d`, `60min` etc.).\n         * The text contents can be changed by providing {@link #config-getBarText} function.\n         * @config {Boolean}\n         */\n        showBarText : false,\n\n        /**\n         * Set to `true` if you want to display a tooltip when hovering an allocation bar. You can also pass a\n         * {@link Core/widget/Tooltip} config object.\n         * Please use {@link #config-barTooltipTemplate} function to customize the tooltip contents.\n         * @config {Boolean|TooltipConfig}\n         */\n        showBarTip : false,\n\n        barTooltip : null,\n\n        barTooltipClass : Tooltip,\n\n        series : {\n            maxEffort : {\n                type  : 'outline',\n                field : 'maxEffort'\n            },\n            effort : {\n                type  : 'bar',\n                field : 'effort'\n            }\n        },\n\n        /**\n         * A Function which returns a CSS class name to add to a rectangle element.\n         * The following parameters are passed:\n         * @param {Object} series - The series being rendered\n         * @param {DomConfig} rectConfig - The rectangle configuration object\n         * @param {Object} datum - The datum being rendered\n         * @param {Number} index - The index of the datum being rendered\n         * @config {Function}\n         */\n        getRectClass : null,\n\n        createEventOnDblClick : false,\n        readOnly              : true,\n\n        // <remove-on-release>\n        // TODO: get rid of getBarTip in 6.0\n        // </remove-on-release>\n        /**\n         * A Function which returns the tooltip text to display when hovering a bar.\n         * The following parameters are passed:\n         * @param {Object} series - The series being rendered\n         * @param {DomConfig} rectConfig - The rectangle configuration object\n         * @param {Object} datum - The datum being rendered\n         * @param {Number} index - The index of the datum being rendered\n         * @deprecated Since 5.0.0. Please use {@link #config-barTooltipTemplate}\n         * @config {Function}\n         */\n        getBarTip : null,\n\n        /**\n         * A Function which returns the tooltip text to display when hovering a bar.\n         * The following parameters are passed:\n         * @param {Object} context The tooltip context info\n         * @param {ResourceAllocationIntervalInfo} context.datum The histogram bar being hovered info\n         * @param {Core.widget.Tooltip} context.tip The tooltip instance\n         * @param {HTMLElement} context.element The Element for which the Tooltip is monitoring mouse movement\n         * @param {HTMLElement} context.activeTarget The target element that triggered the show\n         * @param {Event} context.event The raw DOM event\n         * @config {Function}\n         */\n        barTooltipTemplate({ datum }) {\n            let result = '';\n\n            const { effort, isGroup } = datum;\n\n            if (effort) {\n                if (isGroup) {\n                    result = this.getGroupBarTip(...arguments);\n                }\n                else {\n                    result = this.getResourceBarTip(...arguments);\n                }\n            }\n\n            return result;\n        },\n\n        /**\n         * A Function which returns the text to render inside a bar.\n         *\n         * Here for example the provided function displays resources time **left** instead of\n         * allocated time\n         *\n         * ```javascript\n         * new ResourceHistogram({\n         *     getBarText(datum) {\n         *         const resourceHistogram = this.owner;\n         *\n         *         const { showBarText } = resourceHistogram;\n         *\n         *         let result = '';\n         *\n         *         // respect existing API - show bar texts only when \"showBarText\" is true\n         *         // and if some work is done in the tick\n         *         if (showBarText && datum.effort) {\n         *\n         *             const unit = resourceHistogram.getBarTextEffortUnit();\n         *\n         *             // display the resource available time\n         *             result = resourceHistogram.getEffortText(datum.maxEffort - datum.effort, unit);\n         *         }\n         *\n         *         return result;\n         *     },\n         * })\n         * ```\n         *\n         * **Please note** that the function will be injected into the underlying\n         * {@link Core/widget/graph/Histogram} component that is used under the hood\n         * to render actual charts.\n         * So `this` will refer to the {@link Core/widget/graph/Histogram} instance, not\n         * this class instance.\n         * To access the view please use `this.owner` in the function:\n         *\n         * ```javascript\n         * new ResourceHistogram({\n         *     getBarText(datum) {\n         *         // \"this\" in the method refers core Histogram instance\n         *         // get the view instance\n         *         const resourceHistogram = this.owner;\n         *\n         *         .....\n         *     },\n         * })\n         * ```\n         * The following parameters are passed:\n         * @param {ResourceAllocationIntervalInfo} datum The datum being rendered\n         * @param {Number} index The index of the datum being rendered\n         * @returns {String} Tdxt to render inside the bar\n         * @config {Function}\n         */\n        getBarText : null,\n\n        getBarTextRenderData : undefined,\n\n        groupBarTipAssignmentLimit : 5,\n\n        histogramWidgetClass : Histogram,\n\n        histogramWidgetConfig : null,\n\n        /**\n         * Set to `true` to include inactive tasks allocation and `false` to not take such tasks into account.\n         * @config {Boolean}\n         * @default\n         */\n        includeInactiveEvents : false,\n\n        fixedRowHeight : true\n    };\n\n    // Cannot use `static properties = {}`, new Map would pollute the prototype\n    static get properties() {\n        return {\n            allocationReportByRecord   : new Map(),\n            allocationDataByRecord     : new Map(),\n            allocationObserverByRecord : new Map(),\n            resourceGroupsToUpdate     : new Set(),\n            resourceGroupsAllocation   : new Map()\n        };\n    }\n    //endregion\n\n    //region Constructor/Destructor\n\n    construct(config) {\n        super.construct(config);\n\n        const me = this;\n\n        // debounce refreshRows calls\n        me.scheduleRefreshRows = me.createOnFrame(me.refreshRows, [], me, true);\n\n        // <remove-on-release>\n        // TODO: hack to get rid of \"Horizontal\" store tracking approach.\n        //  It seems there is no need to use 99% of the \"Horizontal\" mode for the histogram\n        //  so ideally we need to make a special class for it.\n        // </remove-on-release>\n        me.horizontal.refreshResourcesWhenReady = me.horizontal.onAssignmentStoreChange = me.horizontal.renderer = function() {};\n\n        me.rowManager.ion({\n            beforeRowHeight : 'onBeforeRowHeight',\n            renderRow       : 'onRowManagerRenderRow',\n            thisObj         : me\n        });\n    }\n\n    get timeAxis() {\n        return super.timeAxis;\n    }\n\n    set timeAxis(timeAxis) {\n        const currentTimeAxis = this._timeAxis;\n\n        super.timeAxis = timeAxis;\n\n        if (this.partner && !timeAxis || (currentTimeAxis && currentTimeAxis === timeAxis)) {\n            return;\n        }\n\n        this._timeAxis.ion({\n            name           : 'timeAxis',\n            endReconfigure : 'onTimeAxisEndReconfigure',\n            thisObj        : this\n        });\n    }\n\n    async onRowManagerRenderRow({ record }) {\n        // render group level histogram and scale (when project is calculated)\n        if (record.isSpecialRow) {\n            const me = this;\n\n            if (me.project.isDelayingCalculation) {\n                await me.project.commitAsync();\n\n                if (me.isDestroyed) {\n                    return;\n                }\n            }\n\n            me.renderGroupHistogram(record);\n            me.renderGroupScale(record);\n        }\n    }\n\n    onDestroy() {\n        const me = this;\n\n        for (const [record, observer] of me.allocationObserverByRecord?.entries()) {\n            if (record.removeObserver) {\n                record.removeObserver(observer);\n                me.allocationObserverByRecord.delete(record);\n            }\n        }\n\n        for (const [record, entity] of me.allocationReportByRecord?.entries()) {\n            if (record.removeEntity) {\n                record.removeEntity?.(entity);\n                me.allocationReportByRecord.delete(entity);\n            }\n        }\n\n        me.allocationDataByRecord.clear();\n\n        me._histogramWidget?.destroy();\n        me._groupHistogramWidget?.destroy();\n        me.barTooltip = null;\n    }\n\n    //endregion\n\n    //region Project\n\n    updateProject(project) {\n        this.detachListeners('resourceHistogramProject');\n\n        project.ion({\n            name                  : 'resourceHistogramProject',\n            refresh               : 'internalOnProjectRefresh',\n            delayCalculationStart : 'onProjectDelayCalculationStart',\n            delayCalculationEnd   : 'onProjectDelayCalculationEnd',\n            repopulateReplica     : 'onRepopulateReplica',\n\n            thisObj : this\n        });\n\n        this.store = project.resourceStore;\n    }\n\n    //endregion\n\n    //region Internal\n\n    scheduleRefreshRows() {}\n\n    // <remove-on-release>\n    // TODO: hack to get rid of \"HorizontalRendering\" events rendering logic\n    // </remove-on-release>\n    getEventsToRender() {}\n\n    getRowHeight() {\n        return this.rowHeight;\n    }\n\n    convertEffortUnit(value, unit, toUnit) {\n        return this.project.run('$convertDuration', value, unit, toUnit);\n    }\n\n    updateUseProjectTimeUnitsForScale() {\n        const me = this;\n        // Below this.scalePoints assignment of doesn't work until ResourceHistogram is painted\n        // since ScaleWidget being constructed tries to read its rootElement which results:\n        // \"Floating Widgets must have \"rootElement\" to be ...\"\n        if (me.isPainted) {\n            // we need to regenerate ScaleColumn points according to new unit values\n            const eventParams = { scalePoints : me.generateScalePoints() };\n\n            /**\n             * Fires when the component generates points for the {@link #property-scaleColumn scale column}.\n             *\n             * Use a listeners to override the generated scale points:\n             *\n             * ```javascript\n             * new ResourceHistogram({\n             *     ...\n             *     listeners : {\n             *         generateScalePoints(params) {\n             *             // provide text for each scale point (if not provided already)\n             *             params.scalePoints.forEach(point => {\n             *                 point.text = point.text || point.value;\n             *             });\n             *         }\n             *     }\n             * })\n             * ```\n             *\n             * @param {SchedulerPro.view.ResourceHistogram} source The component instance\n             * @param {ScalePoint[]} scalePoints Array of objects representing scale points. Each entry can have properties:\n             * - `value` - point value\n             * - `unit` - point value unit\n             * - `text` - label text (if not provided the point will not have a label displayed)\n             * @event generateScalePoints\n             */\n            me.trigger('generateScalePoints', eventParams);\n\n            // allow to override the points in a listener\n            me._generatedScalePoints = me.scalePoints = eventParams.scalePoints;\n\n            me.scheduleRefreshRows();\n        }\n    }\n\n    get eventStore() {\n        return this.project?.eventStore;\n    }\n\n    set eventStore(eventStore) {\n        super.eventStore = eventStore;\n    }\n\n    /**\n     * The locked grid scale column reference.\n     * @member {SchedulerPro.column.ScaleColumn} scaleColumn\n     * @readonly\n     */\n    get scaleColumn() {\n        return this.columns.query(column => column.isScaleColumn)[0];\n    }\n\n    get scalePoints() {\n        return this._scalePoints;\n    }\n\n    set scalePoints(scalePoints) {\n        const\n            { histogramWidget, scaleColumn } = this,\n            lastPoint                                 = scalePoints[scalePoints.length - 1],\n            { value : scaleMax, unit : scaleUnit }    = lastPoint;\n\n        this.scaleUnit    = scaleUnit;\n        this._scalePoints = scalePoints;\n\n        let maxInScaleUnits = scaleMax;\n\n        if (scaleColumn) {\n            const { scaleWidget } = scaleColumn;\n\n            maxInScaleUnits += scaleWidget.scaleMaxPadding * scaleMax;\n        }\n\n        // Applying new maximum value to the histogram.\n        // We have to convert scale units to milliseconds since allocation report provides values in milliseconds.\n        histogramWidget.topValue = this.useProjectTimeUnitsForScale\n            ? this.convertEffortUnit(maxInScaleUnits, scaleUnit, TimeUnit.Millisecond)\n            : DateHelper.asMilliseconds(maxInScaleUnits, scaleUnit);\n\n        // Applying new points to the scale column\n        if (scaleColumn) {\n            scaleColumn.scalePoints = scalePoints;\n        }\n    }\n\n    buildScalePointText(scalePoint) {\n        return `${scalePoint.value}${DateHelper.getShortNameOfUnit(scalePoint.unit)}`;\n    }\n\n    /**\n     * Generates points for the {@link #property-scaleColumn scale column}.\n     *\n     * **Override the method to customize the scale column points.**\n     *\n     * @param {Number} [scaleMax] Maximum value for the scale. Uses current timeaxis increment if not provided.\n     * @param {'millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year'} [unit] Time\n     * unit `scaleMax` argument is expressed in.\n     * Uses current timeaxis unit if not provided.\n     * @returns {ScalePoint[]} Array of objects representing scale points. Each entry can have properties:\n     * - `value` - point value\n     * - `unit` - point value unit\n     * - `text` - label text (if not provided the point will not have a label displayed)\n     */\n    generateScalePoints(scaleMax, unit) {\n        // bail out if there is no project or it's not in the graph\n        if (!this.project?.graph) {\n            return;\n        }\n\n        const\n            { timeAxis } = this,\n            scalePoints           = [];\n\n        scaleMax = scaleMax || timeAxis.increment;\n        unit = unit || timeAxis.unit;\n\n        let scaleStep;\n\n        // If the ticks are defined as 1 unit let's break it down to smaller units\n        if (scaleMax === 1) {\n            // getting timeaxis tick sub-unit and number of them in a tick\n            unit     = DateHelper.getSmallerUnit(unit);\n            scaleMax = Math.round(\n                this.useProjectTimeUnitsForScale ? this.convertEffortUnit(scaleMax, timeAxis.unit, unit)\n                    : DateHelper.as(unit, scaleMax, timeAxis.unit)\n            );\n        }\n\n        // Let's try to guess how many points in the scale will work nicely\n        for (const factor of [7, 5, 4, 3, 2]) {\n            // unitsNumber is multiple of \"factor\" -> we generate \"factor\"-number of points\n            if (!(scaleMax % factor)) {\n                scaleStep = scaleMax / factor;\n                break;\n            }\n        }\n\n        // fallback to a single point equal to maximum value\n        if (!scaleStep) {\n            scaleStep = scaleMax;\n        }\n\n        for (let value = scaleStep; value <= scaleMax; value += scaleStep) {\n            scalePoints.push({\n                value\n            });\n        }\n\n        const lastPoint = scalePoints[scalePoints.length - 1];\n        // put unit and label to the last point\n        lastPoint.unit = unit;\n        lastPoint.text = this.buildScalePointText(lastPoint);\n\n        return scalePoints;\n    }\n\n    updateViewPreset(viewPreset) {\n        const me = this;\n\n        // Set a flag indicating that we're inside of `updateViewPreset` so our `onTimeAxisEndReconfigure` will skip its call.\n        // We call it here later.\n        me._updatingViewPreset = true;\n        super.updateViewPreset(...arguments);\n        me._updatingViewPreset = false;\n\n        // In `super,updateViewPreset` function `this.render` is called which checks if the engine is not dirty\n        // ..and we modify `ticksIdentifier` atom in `onTimeAxisEndReconfigure`\n        // so the engine state gets dirty and rendering gets delayed which ends up an exception.\n        // So we call `onTimeAxisEndReconfigure` after super `updateViewPreset` code\n        // to keep the engine non-dirty while zooming/setting a preset.\n        // This scenario is covered w/ SchedulerPro/tests/pro/view/ResourceHistogramZoom.t.js\n        if (me.project.isInitialCommitPerformed && me.isPainted) {\n            me.onTimeAxisEndReconfigure();\n        }\n    }\n\n    onPaint({ firstPaint }) {\n        super.onPaint({ firstPaint });\n\n        if (firstPaint && this.showBarTip) {\n            this.barTooltip = {};\n        }\n    }\n\n    updateGetBarTip(value) {\n        // reset barTooltipTemplate if custom getBarTip function is provided\n        if (value) {\n            this.barTooltipTemplate = null;\n        }\n\n        return value;\n    }\n\n    changeBarTooltip(tooltip, oldTooltip) {\n        oldTooltip?.destroy();\n\n        if (tooltip) {\n            return tooltip.isTooltip ? tooltip : this.barTooltipClass.new({\n                forElement  : this.timeAxisSubGridElement,\n                forSelector : '.b-histogram rect',\n                hoverDelay  : 0,\n                trackMouse  : false,\n                cls         : 'b-celltooltip-tip',\n                getHtml     : this.getTipHtml.bind(this)\n            }, this.showBarTip, tooltip);\n        }\n\n        return null;\n    }\n\n    onRepopulateReplica() {\n        this.ticksIdentifier = null;\n        this.allocationReportByRecord.clear();\n        this.allocationDataByRecord.clear();\n        this.allocationObserverByRecord.clear();\n    }\n\n    getTipHtml(args) {\n        const\n            { activeTarget } = args,\n            index         = activeTarget.dataset.index,\n            record        = this.getRecordFromElement(activeTarget),\n            histogramData = this.allocationDataByRecord.get(record);\n\n        args = Object.assign({}, args);\n\n        args.index = parseInt(index, 10);\n        args.datum = histogramData[args.index];\n\n        return this.barTooltipTemplate?.(args);\n    }\n\n    buildTicksIdentifier() {\n        const\n            me    = this,\n            graph = me.project.getGraph();\n\n        if (!me.ticksIdentifier) {\n            me.ticksIdentifier = graph.addIdentifier(CalculatedValueGen.new());\n        }\n\n        me.ticksIdentifier.writeToGraph(graph, new BaseCalendarMixin({\n            unspecifiedTimeIsWorking : false,\n            intervals                : me.timeAxis.ticks.map(tick => {\n                return {\n                    startDate : tick.startDate,\n                    endDate   : tick.endDate,\n                    isWorking : true\n                };\n            })\n        }));\n\n        // process ticks to detect if their widths are monotonous\n        // or some tick has a different width value\n        me.collectTicksWidth();\n\n        return me.ticksIdentifier;\n    }\n\n    collectTicksWidth() {\n        const\n            { ticks }     = this.timeAxis,\n            prevDuration  = ticks[0].endDate - ticks[0].startDate,\n            tickDurations = { 0 : prevDuration };\n\n        let\n            totalDuration = prevDuration,\n            isMonotonous  = true;\n\n        for (let i = 1, { length } = ticks; i < length; i++) {\n            const\n                tick   = ticks[i],\n                duration = tick.endDate - tick.startDate;\n\n            // the ticks width is different -> reset isMonotonous flag\n            if (prevDuration !== duration) {\n                isMonotonous = false;\n            }\n\n            totalDuration    += duration;\n            tickDurations[i] = duration;\n        }\n\n        // if the ticks widths are not monotonous we need to calculate\n        // each bar width to provide it to the histogram widget later\n        if (!isMonotonous) {\n            const ticksWidth = {};\n            for (let i = 0, { length } = ticks; i < length; i++) {\n                ticksWidth[i] = tickDurations[i] / totalDuration;\n            }\n            this.ticksWidth = ticksWidth;\n        }\n        else {\n            this.ticksWidth = null;\n        }\n    }\n\n    onProjectDelayCalculationStart() {\n        this.suspendRefresh();\n    }\n\n    onProjectDelayCalculationEnd() {\n        this.resumeRefresh(true);\n    }\n\n    projectUnitsHasChanged() {\n        const { project } = this;\n\n        return project.daysPerMonth !== this._projectDaysPerMonth ||\n            project.daysPerWeek !== this._projectDaysPerWeek ||\n            project.hoursPerDay !== this._projectHoursPerDay;\n    }\n\n    internalOnProjectRefresh({ source, isCalculated }) {\n        if (isCalculated) {\n            const me = this;\n\n            if (!me.ticksIdentifier) {\n                me.onTimeAxisEndReconfigure();\n            }\n\n            // if project units has changed and we use them for scale points\n            if (me.useProjectTimeUnitsForScale && me.projectUnitsHasChanged()) {\n                me._projectDaysPerMonth = source.daysPerMonth;\n                me._projectDaysPerWeek = source.daysPerWeek;\n                me._projectHoursPerDay = source.hoursPerDay;\n\n                // regenerate scale points\n                const eventParams = { scalePoints : me.generateScalePoints() };\n\n                me.trigger('generateScalePoints', eventParams);\n\n                // allow to override the points in a listener\n                me._generatedScalePoints = me.scalePoints = eventParams.scalePoints;\n            }\n        }\n    }\n\n    relayStoreDataChange(event) {\n        super.relayStoreDataChange(event);\n\n        if (this.store.count === 0) {\n            // To clear histogram when no rows to refresh\n            this.histogramWidget.data = [];\n            this.histogramWidget.refresh();\n        }\n    }\n\n    get columns() {\n        return super.columns;\n    }\n\n    set columns(columns) {\n        const me = this;\n\n        super.columns = columns;\n\n        if (!me.isDestroying) {\n            me.timeAxisColumn.renderer = me.renderResourceHistogram;\n            me.timeAxisColumn.cellCls = me.timeAxisColumnCellCls;\n\n            // Unless provided from outside, insert the scale column in the correct place\n            if (!columns.some(col => col.type === 'scale')) {\n                me.insertScaleColumn();\n            }\n        }\n    }\n\n    insertScaleColumn() {\n        this.columns.rootNode.insertChild({\n            type : 'scale'\n        }, this.timeAxisColumn);\n    }\n\n    buildHistogramWidget(config) {\n        const me = this;\n\n        if (me.getBarTextRenderData && !config.getBarTextRenderData) {\n            config.getBarTextRenderData = me.getBarTextRenderData;\n        }\n\n        const histogramWidget = me.histogramWidgetClass.new({\n            owner              : me,\n            appendTo           : me.element,\n            cls                : 'b-hide-offscreen b-resourcehistogram-histogram',\n            height             : me.rowHeight,\n            width              : me.timeAxisColumn?.width || 0,\n            omitZeroHeightBars : true,\n            data               : [],\n            getBarTip          : !me.barTooltipTemplate && me.getBarTip || emptyFn,\n            getRectClass       : me.getRectClass || me.getRectClassDefault,\n            getBarText         : me.getBarText || me.getBarTextDefault,\n            series             : me.series\n        }, me.histogramWidgetConfig, config);\n\n        me.getBarTextDefault.bind(histogramWidget);\n\n        return histogramWidget;\n    }\n\n    get histogramWidget() {\n        const me = this;\n\n        if (!me._histogramWidget) {\n\n            const series = me.series;\n\n            if (!me.showMaxEffort && series.maxEffort) {\n                series.maxEffort = false;\n            }\n\n            me._histogramWidget = me.buildHistogramWidget();\n        }\n\n        return me._histogramWidget;\n    }\n\n    // Injectable method.\n    getRectClassDefault(series, rectConfig, datum) {\n        if (series.id === 'effort') {\n            switch (true) {\n                case datum.isOverallocated :\n                    return 'b-overallocated';\n\n                case datum.isUnderallocated :\n                    return 'b-underallocated';\n            }\n        }\n\n        return '';\n    }\n\n    get effortFormatter() {\n        const\n            me     = this,\n            format = me.effortFormat;\n\n        let formatter = me._effortFormatter;\n\n        if (!formatter || me._effortFormat !== format) {\n            formatter = NumberFormat.get(me._lastFormat = format);\n\n            me._effortFormatter = formatter;\n        }\n\n        return formatter;\n    }\n\n    /**\n     * Formats effort value to display in the component bars and tooltips.\n     * @param {Number} effort Effort value\n     * @param {'millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year'} unit Effort value unit\n     * @param {Boolean} [showEffortUnit=this.showEffortUnit] Provide `true` to include effort unit. If not provided\n     * uses {@link #config-showEffortUnit} value.\n     * @returns {String} Formatted effort value.\n     */\n    getEffortText(effort, unit, showEffortUnit = this.showEffortUnit) {\n        // bail out if there is no project or it's not in the graph\n        if (!this.project?.graph) {\n            return;\n        }\n\n        const { scaleUnit, effortFormatter } = this;\n\n        unit = unit || scaleUnit;\n\n        const\n            localizedUnit = DateHelper.getShortNameOfUnit(unit),\n            effortInUnits = this.convertEffortUnit(effort, TimeUnit.Millisecond, unit);\n\n        return effortFormatter.format(effortInUnits) + (showEffortUnit ? localizedUnit : '');\n    }\n\n    getBarTipEffortUnit() {\n        const\n            { effortUnit, barTipEffortUnit, timeAxis } = this,\n            defaultUnit                                = barTipEffortUnit || effortUnit;\n\n        return DateHelper.compareUnits(timeAxis.unit, defaultUnit) < 0 ? timeAxis.unit : defaultUnit;\n    }\n\n    getGroupBarTip({ datum }) {\n        const\n            me                       = this,\n            { showBarTip, timeAxis } = me;\n\n        let result = '';\n\n        if (showBarTip && datum.effort) {\n            const\n                unit          = me.getBarTipEffortUnit(...arguments),\n                allocated     = me.getEffortText(datum.effort, unit),\n                available     = me.getEffortText(datum.maxEffort, unit),\n                assignmentTpl = me.L('L{groupBarTipAssignment}');\n\n            let\n                dateFormat        = 'L',\n                resultFormat      = me.L('L{groupBarTipInRange}'),\n                assignmentsSuffix = '';\n\n            if (DateHelper.compareUnits(timeAxis.unit, TimeUnit.Day) === 0) {\n                resultFormat = me.L('L{groupBarTipOnDate}');\n            }\n            else if (DateHelper.compareUnits(timeAxis.unit, TimeUnit.Second) <= 0) {\n                dateFormat = 'HH:mm:ss A';\n            }\n            else if (DateHelper.compareUnits(timeAxis.unit, TimeUnit.Hour) <= 0) {\n                dateFormat = 'LT';\n            }\n\n            let assignmentsArray = [...datum.resourceAllocation.entries()]\n                .filter(([resource, data]) => data.effort)\n                .sort(([key1, value1], [key2, value2]) => value1.effort > value2.effort ? -1 : 1);\n\n            if (assignmentsArray.length > me.groupBarTipAssignmentLimit) {\n                assignmentsSuffix = '<br>' + me.L('L{plusMore}').replace('{value}', assignmentsArray.length - me.groupBarTipAssignmentLimit);\n                assignmentsArray = assignmentsArray.slice(0, this.groupBarTipAssignmentLimit);\n            }\n\n            const assignments = assignmentsArray.map(([resource, info]) => {\n\n                return assignmentTpl.replace('{resource}', StringHelper.encodeHtml(resource.name))\n                    .replace('{allocated}', me.getEffortText(info.effort, unit))\n                    .replace('{available}', me.getEffortText(info.maxEffort, unit))\n                    .replace('{cls}', info.isOverallocated ? 'b-overallocated' : info.isUnderallocated ? 'b-underallocated' : '');\n\n            }).join('<br>') + assignmentsSuffix;\n\n            // <remove-on-release>\n            // TODO: we need smth like sprintf(\"has {0} of {1} items\", cnt, total)\n            //  to be able to test localizable strings\n            // </remove-on-release>\n            result = resultFormat\n                .replace('{assignments}', assignments)\n                .replace('{startDate}', DateHelper.format(datum.tick.startDate, dateFormat))\n                .replace('{endDate}', DateHelper.format(datum.tick.endDate, dateFormat))\n                .replace('{allocated}', allocated)\n                .replace('{available}', available)\n                .replace('{cls}', datum.isOverallocated ? 'b-overallocated' : datum.isUnderallocated ? 'b-underallocated' : '');\n\n            result = `<div class=\"b-histogram-bar-tooltip\">${result}</div>`;\n        }\n\n        return result;\n    }\n\n    getResourceBarTip({ datum }) {\n        const\n            me                       = this,\n            { showBarTip, timeAxis } = me;\n\n        let result = '';\n\n        if (showBarTip && datum.effort) {\n            const\n                unit       = me.getBarTipEffortUnit(),\n                allocated  = me.getEffortText(datum.effort, unit),\n                available  = me.getEffortText(datum.maxEffort, unit);\n\n            let\n                dateFormat   = 'L',\n                resultFormat = me.L('L{barTipInRange}');\n\n            if (DateHelper.compareUnits(timeAxis.unit, TimeUnit.Day) === 0) {\n                resultFormat = me.L('L{barTipOnDate}');\n            }\n            else if (DateHelper.compareUnits(timeAxis.unit, TimeUnit.Second) <= 0) {\n                dateFormat = 'HH:mm:ss A';\n            }\n            else if (DateHelper.compareUnits(timeAxis.unit, TimeUnit.Hour) <= 0) {\n                dateFormat = 'LT';\n            }\n\n            // <remove-on-release>\n            // TODO: we need smth like sprintf(\"has {0} of {1} items\", cnt, total)\n            //  to be able to test localizable strings\n            // </remove-on-release>\n            result = resultFormat\n                .replace('{startDate}', DateHelper.format(datum.tick.startDate, dateFormat))\n                .replace('{endDate}', DateHelper.format(datum.tick.endDate, dateFormat))\n                .replace('{allocated}', allocated)\n                .replace('{available}', available)\n                .replace('{cls}', datum.isOverallocated ? 'b-overallocated' : datum.isUnderallocated ? 'b-underallocated' : '');\n\n            if (datum.resource) {\n                result = result\n                    .replace('{resource}', StringHelper.encodeHtml(datum.resource.name));\n            }\n\n            result = `<div class=\"b-histogram-bar-tooltip\">${result}</div>`;\n        }\n\n        return result;\n    }\n\n    /**\n     * Returns unit to display effort values in when rendering the histogram bars.\n     * The method by default returns {@link #config-barTextEffortUnit} value if provided\n     * and if not falls back to {@link #config-effortUnit} value.\n     * But it also takes zooming into account and when\n     * the timeaxis ticks unit gets smaller than the default value the ticks unit is returned.\n     *\n     * @returns {'millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year'} Time unit to display\n     * effort values in.\n     */\n    getBarTextEffortUnit() {\n        const\n            { effortUnit, barTextEffortUnit, timeAxis } = this,\n            defaultUnit                                 = barTextEffortUnit || effortUnit;\n\n        return DateHelper.compareUnits(timeAxis.unit, defaultUnit) < 0 ? timeAxis.unit : defaultUnit;\n    }\n\n    /**\n     * The default method that returns the text to render inside a bar if no\n     * {@link #config-getBarText} function was provided.\n     *\n     * The method can be used in a {@link #config-getBarText} function\n     * to invoke the default implementation:\n     *\n     * ```javascript\n     * new ResourceHistogram({\n     *     getBarText(datum) {\n     *         const resourceHistogram = this.owner;\n     *\n     *         // get default bar text\n     *         let result = resourceHistogram.getBarTextDefault();\n     *\n     *         // if the resource is overallocated in that tick display \"Overallocated! \" string\n     *         // before the allocationvalue\n     *         if (result && datum.maxEffort < datum.effort) {\n     *             result = 'Overallocated! ' + result;\n     *         }\n     *\n     *         return result;\n     *     },\n     * })\n     * ```\n     * The following parameters are passed:\n     * @param {ResourceAllocationIntervalInfo} datum The data of the bar being rendered\n     * @param {Number} index The index of the datum being rendered\n     * @returns {String} Tdxt to render inside the bar\n     */\n    getBarTextDefault(datum, index) {\n        const { showBarText } = this.owner;\n\n        let result = '';\n\n        if (showBarText && datum.effort) {\n            const unit = this.owner.getBarTextEffortUnit();\n            result     = this.owner.getEffortText(datum.effort, unit);\n        }\n\n        return result;\n    }\n\n    updateShowBarText(value) {\n        this.scheduleRefreshRows();\n    }\n\n    updateShowBarTip(value) {\n        this.barTooltip = value;\n    }\n\n    updateShowMaxEffort(value) {\n        const me = this;\n\n        me._showMaxEffort = value;\n\n        let needsRefresh = false;\n\n        [me._histogramWidget, me._groupHistogramWidget].forEach(widget => {\n            // bail out in case there is no widget constructed yet\n            if (!widget) {\n                return;\n            }\n\n            const { series } = widget;\n\n            if (!value) {\n                if (series.maxEffort) {\n                    widget._seriesMaxEffort = series.maxEffort;\n                    delete series.maxEffort;\n                }\n            }\n            else if (typeof value === 'object') {\n                series.maxEffort = value;\n            }\n            else if (typeof widget._seriesMaxEffort === 'object') {\n                series.maxEffort = widget._seriesMaxEffort;\n            }\n            else {\n                series.maxEffort = {\n                    type  : 'outline',\n                    field : 'maxEffort'\n                };\n                series.maxEffort.id = 'maxEffort';\n            }\n\n            needsRefresh = true;\n        });\n\n        if (needsRefresh) {\n            me.scheduleRefreshRows();\n        }\n    }\n\n    updateIncludeInactiveEvents(value) {\n        // update collected reports wih new includeInactiveEvents flag state\n        this.allocationReportByRecord.forEach(allocationReport => allocationReport.includeInactiveEvents = value);\n    }\n\n    //endregion\n\n    //region Events\n\n    onTimeAxisEndReconfigureInternal() {\n        const me = this;\n\n        // Skip call triggered by viewPreset setting we have `updateViewPreset` method overridden where we call `onTimeAxisEndReconfigure` later\n        if (!me._updatingViewPreset) {\n            const { unit, increment } = me.timeAxis;\n\n            // re-generate scale point on zooming in/out\n            if (unit !== me._lastTimeAxisUnit || increment !== me._lastTimeAxisIncrement) {\n                // remember last used unit & increment to distinguish zooming from timespan changes\n                me._lastTimeAxisUnit = unit;\n                me._lastTimeAxisIncrement = increment;\n\n                // regenerate scale points\n                const\n                    scalePoints = me.generateScalePoints(),\n                    eventParams = { scalePoints };\n\n                // allow to override the points in a listener\n                me.trigger('generateScalePoints', eventParams);\n\n                me._generatedScalePoints = me.scalePoints = eventParams.scalePoints;\n            }\n\n            me.buildTicksIdentifier();\n        }\n    }\n\n    onTimeAxisEndReconfigure() {\n        const me = this;\n\n        // Skip call triggered by viewPreset setting we have `updateViewPreset` method overridden where we call `onTimeAxisEndReconfigure` later\n        if (!me._updatingViewPreset) {\n            if (me.project.graph) {\n                me.onTimeAxisEndReconfigureInternal();\n            }\n            // In delayed calculation mode (the default) we might not be in graph yet, postpone buildTicksIdentifier until we are\n            else {\n                me.project.ion({\n                    graphReady() {\n                        me.onTimeAxisEndReconfigureInternal();\n                    },\n                    thisObj : me,\n                    once    : true\n                });\n            }\n        }\n    }\n\n    onBeforeRowHeight({ height }) {\n        // <remove-on-release>\n        // TODO: histogramWidget getter requests timeAxisColumn column too early which causes an infinite cycle\n        // </remove-on-release>\n        if (this._timeAxisColumn) {\n            for (const widget of [this._histogramWidget, this._groupHistogramWidget]) {\n                if (!widget) continue;\n\n                widget.height = height;\n                widget.onElementResize(widget.element);\n            }\n        }\n    }\n\n    onTimeAxisViewModelUpdate() {\n        super.onTimeAxisViewModelUpdate(...arguments);\n\n        for (const widget of [this._histogramWidget, this._groupHistogramWidget]) {\n            if (!widget) continue;\n\n            widget.width = this.timeAxisViewModel.totalSize;\n            widget.onElementResize(widget.element);\n        }\n    }\n\n    //endregion\n\n    //region Render\n\n    getRecordAllocationInfoRenderData(record, allocation, cellElement, histogramWidget = null) {\n        allocation = Array.isArray(allocation) ? allocation : allocation.total;\n\n        // if ticks widths are not monotonous\n        // we provide width for each bar since in that case the histogram widget won't be able to calculate widths properly\n        if (this.ticksWidth) {\n            for (let i = 0, { length } = allocation; i < length; i++) {\n                allocation[i].width = this.ticksWidth[i];\n            }\n        }\n\n        return allocation;\n    }\n\n    renderRecordAllocationInfo(record, allocation, cellElement, histogramWidget = null) {\n        // histogram pattern\n        histogramWidget = histogramWidget || this.histogramWidget;\n\n        const data = this.getRecordAllocationInfoRenderData(record, allocation, cellElement, histogramWidget);\n\n        // skip render attempts if allocation is not collected yet\n        if (!data) {\n            return;\n        }\n\n        this.allocationDataByRecord.set(record, data);\n\n        histogramWidget.data = data;\n\n        histogramWidget.refresh();\n\n        const histogramCloneElement = histogramWidget.element.cloneNode(true);\n        histogramCloneElement.removeAttribute('id');\n        histogramCloneElement.classList.remove('b-hide-offscreen');\n\n        cellElement.innerHTML = '';\n        cellElement.appendChild(histogramCloneElement);\n    }\n\n    renderRows() {\n        const me = this;\n\n        if (!me.ticksIdentifier && me.project.isInitialCommitPerformed) {\n            // If we render rows but have no ticksIdentifier means data loading and 1st commit\n            // happened before the histogram was created.\n            // Handle timeaxis settings to build ticksIdentifier and scale column points.\n            me.onTimeAxisEndReconfigure();\n\n            // If timeView range is not defined then the timeaxis header looks empty so fill it in here (it triggers the column refresh)\n            if (!me.timeView.startDate || !me.timeView.endDate) {\n                me.timeView.range = {\n                    startDate : me.startDate,\n                    endDate   : me.endDate\n                };\n            }\n        }\n\n        return super.renderRows(...arguments);\n    }\n\n    onRecordAllocationCalculated(record, allocation, allocationReport) {\n        const me = this;\n\n        if (!me.isDestroying) {\n            const cell = me.getCell({ record, columnId : me.timeAxisColumn.id });\n\n            if (cell) {\n                me.renderRecordAllocationInfo(record, allocation, cell);\n            }\n\n            // announce resource allocation got calculated\n            me.trigger('allocationChange', { record, allocation });\n\n            const groupParent = me.getResourceGroupParent(record);\n\n            if (groupParent) {\n                // reset cached allocation for the resource group\n                me.resourceGroupsAllocation.delete(groupParent);\n\n                // schedule updating of resource group histograms\n                me.scheduleGroupRender(groupParent);\n            }\n        }\n    }\n\n    buildResourceAllocationReport(resource) {\n        return this.project.resourceAllocationInfoClass.new({\n            includeInactiveEvents : this.includeInactiveEvents,\n            ticks                 : this.ticksIdentifier,\n            resource\n        });\n    }\n\n    registerRecordAllocationReport(record) {\n        const\n            me               = this,\n            graph            = me.project.getGraph(),\n            allocationReport = me.buildResourceAllocationReport(record);\n\n        // store resource allocation report reference\n        me.allocationReportByRecord.set(record, allocationReport);\n\n        record.addEntity(allocationReport);\n\n        // track allocation report changes\n        const allocationObserver = graph.observe(\n            function * () {\n                return yield allocationReport.$.allocation;\n            },\n            allocation => me.onRecordAllocationCalculated(record, allocation, allocationReport)\n        );\n\n        me.allocationObserverByRecord.set(record, allocationObserver);\n\n        // trigger rendering on allocation report changes\n        record.addObserver(allocationObserver);\n\n        return allocationReport;\n    }\n\n    renderResourceHistogram({ grid : me, cellElement, record }) {\n        const { project } = me;\n\n        // No drawing before engine's initial commit\n        // Skip special rows, e.g. group records\n        if (me.ticksIdentifier && project.isInitialCommitPerformed && !record.isSpecialRow) {\n            const { allocationReportByRecord, allocationObserverByRecord } = me;\n\n            let allocationReport = allocationReportByRecord.get(record);\n\n            // If we have no allocation report built for the resource yet\n            // let's initialize it here\n            if (!allocationReport) {\n                allocationReport = me.registerRecordAllocationReport(record);\n            }\n\n            // rendering was triggered by not allocation report change so we render based on existing \"resource.allocation\"\n            if (allocationReport?.allocation) {\n                if (allocationReport.graph) {\n                    me.renderRecordAllocationInfo(record, allocationReport.allocation, cellElement);\n                }\n                // allocation data had left the graph probably after the resource was removed\n                else {\n                    allocationReportByRecord.delete(record);\n                    me.allocationDataByRecord.delete(record);\n                    allocationObserverByRecord.delete(record);\n                }\n\n                const groupParent = me.getResourceGroupParent(record);\n\n                // if grouped - schedule updating of the resource group histograms\n                if (groupParent && me.store.includes(groupParent)) {\n                    me.scheduleGroupRender(groupParent);\n                }\n            }\n        }\n    }\n\n    renderScheduledGroups() {\n        // Clone set to avoid infinite cycle when we add new entry to this.resourceGroupsToUpdate\n        // in this.renderGroupHistogram() call\n        for (const groupParent of Array.from(this.resourceGroupsToUpdate)) {\n            this.renderGroupHistogram(groupParent);\n        }\n        this.clearTimeout(this.renderScheduledGroupTimer);\n    }\n\n    scheduleGroupRender(groupParent) {\n        this.resourceGroupsToUpdate.add(groupParent);\n\n        this.renderScheduledGroupTimer = this.setTimeout({\n            fn                : 'renderScheduledGroups',\n            delay             : 10,\n            cancelOutstanding : true\n        });\n    }\n\n    getResourceGroupParent(resource) {\n        const instanceMeta = resource.instanceMeta(this.project.resourceStore.id);\n\n        return instanceMeta?.groupParent;\n    }\n\n    calculateResourceGroupAllocation(groupParent) {\n        const\n            me                           = this,\n            { allocationReportByRecord } = me,\n            { groupChildren }            = groupParent,\n            allocationReports            = groupChildren.map(resource => allocationReportByRecord.get(resource)),\n            newAllocation                = allocationReports[0]?.allocation?.total,\n            newAllocationLength          = newAllocation?.length;\n\n        // All child resource allocations are calculated (their lengths should be equal)\n        if (newAllocation && allocationReports.every(allocationInfo => allocationInfo?.allocation && allocationInfo.allocation.total.length === newAllocationLength)) {\n\n            const combinedAllocation = [];\n\n            // Iterate over the group resources\n            // and aggregate resource allocations to show the group level histogram\n            allocationReports.forEach(({ allocation }) => {\n                // iterate over ticks\n                allocation.total.forEach((a, index) => {\n                    let combined = combinedAllocation[index];\n\n                    if (!combined) {\n                        combined = combinedAllocation[index] = {\n                            tick               : a.tick,\n                            effort             : 0,\n                            maxEffort          : 0,\n                            units              : 0,\n                            isGroup            : true,\n                            resourceAllocation : new Map()\n                        };\n                    }\n\n                    combined.resourceAllocation.set(a.resource, {\n                        effort           : a.effort,\n                        maxEffort        : a.maxEffort,\n                        units            : a.units,\n                        isOverallocated  : a.effort > a.maxEffort,\n                        isUnderallocated : a.effort < a.maxEffort\n                    });\n\n                    combined.isOverallocated  = combined.isOverallocated || a.isOverallocated;\n                    combined.isUnderallocated = combined.isUnderallocated || a.isUnderallocated;\n                    combined.effort           += a.effort;\n                    combined.maxEffort        += a.maxEffort;\n\n                    if (a.assignments) {\n                        if (combined.assignments) {\n                            a.assignments.forEach(assignment => combined.assignments.add(assignment));\n                        }\n                        else {\n                            combined.assignments = new Set(a.assignments);\n                        }\n                    }\n                });\n            });\n\n            return combinedAllocation;\n        }\n    }\n\n    renderGroupHistogram(groupParent) {\n        const me = this;\n\n        me.resourceGroupsToUpdate.delete(groupParent);\n\n        // if the group is not in the store\n        if (!me.store.includes(groupParent)) {\n            me.resourceGroupsAllocation.delete(groupParent);\n        }\n\n        const combinedAllocation = me.resourceGroupsAllocation.get(groupParent) || me.calculateResourceGroupAllocation(groupParent);\n\n        if (combinedAllocation) {\n            // cache calculated allocation\n            me.resourceGroupsAllocation.set(groupParent, combinedAllocation);\n\n            const { groupChildren } = groupParent;\n\n            let scalePoints = me.generateScalePoints(me.timeAxis.increment * groupChildren.length);\n\n            const eventParams = { scalePoints, groupParent, isCalculatingTopValue : true };\n\n            me.trigger('generateScalePoints', eventParams);\n\n            scalePoints = eventParams.scalePoints;\n\n            const\n                lastPoint         = scalePoints[scalePoints.length - 1],\n                scaleMax          = me.useProjectTimeUnitsForScale\n                    ? me.convertEffortUnit(lastPoint.value, lastPoint.unit, TimeUnit.Millisecond)\n                    : DateHelper.asMilliseconds(lastPoint.value, lastPoint.unit),\n                topValue          = scaleMax + (me.scaleColumn?.scaleWidget.scaleMaxPadding || 0) * scaleMax,\n                widget            = me._groupHistogramWidget || me.buildHistogramWidget({ topValue }),\n                cellElement       = me.getCell({ id : groupParent.id, columnId : me.timeAxisColumn.id });\n\n            // if we have group level histogram widget cached - update its topValue\n            if (me._groupHistogramWidget) {\n                widget.topValue          = topValue;\n            }\n            // cache constructed histogram widget\n            else {\n                me._groupHistogramWidget = widget;\n            }\n\n            // render the group histogram\n            if (cellElement) {\n                me.renderRecordAllocationInfo(groupParent, combinedAllocation, cellElement, widget);\n                me.trigger('groupRendered', { groupParent });\n            }\n        }\n        // if some allocations are not recalculated yet - reschedule this group update\n        else if (me.store.includes(groupParent)) {\n            me.scheduleGroupRender(groupParent);\n        }\n    }\n\n    renderGroupScale(groupParent) {\n        const\n            me              = this,\n            { scaleColumn } = me;\n\n        // Render scale only if scale column is there\n        if (scaleColumn) {\n            const\n                { groupChildren } = groupParent,\n                scalePoints       = me.generateScalePoints(me.timeAxis.increment * groupChildren.length),\n                cellElement       = me.getCell({ id : groupParent.id, columnId : scaleColumn.id }),\n                eventParams       = { scalePoints, groupParent };\n\n            if (!cellElement) {\n                return;\n            }\n\n            let scaleWidget = me._groupScaleWidget;\n\n            if (!scaleWidget) {\n                scaleWidget = me._groupScaleWidget = scaleColumn.buildScaleWidget();\n            }\n\n            me.trigger('generateScalePoints', eventParams);\n\n            scaleWidget.scalePoints = eventParams.scalePoints;\n\n            return scaleColumn.renderer({ cellElement, scaleWidget });\n        }\n    }\n\n    //endregion\n\n    //region Localization\n\n    updateLocalization() {\n        const me = this;\n\n        // Translate scale points if we have them (update localization on construction step is called too early)\n        // and the scale points is generated by the histogram which means their labels use localized unit abbreviations\n        if (me._generatedScalePoints === me.scalePoints && me.scalePoints) {\n            me.scalePoints.forEach(scalePoint => {\n                // if the point is labeled let's rebuild its text using new locale\n                if (scalePoint.text && scalePoint.unit) {\n                    scalePoint.text = me.buildScalePointText(scalePoint);\n                }\n            });\n        }\n\n        super.updateLocalization(...arguments);\n    }\n\n    //endregion\n\n}\n\nResourceHistogram.initClass();\n","import Model from '../../Core/data/Model.js';\n\n/**\n * @module SchedulerPro/model/ResourceUtilizationModel\n */\n\n/**\n * A model representing a {@link SchedulerPro/view/ResourceUtilization} view row.\n * The view rows are of two possible types __resources__ and __assignments__.\n * The model wraps either a resource or an assignment model. And each wrapped resource keeps its corresponding\n * wrapped assignments as its __children__.\n *\n * **NOTE:** You don't normally need to construct this class instances. The view does that automatically\n * by processing the project resources and assignments, wrapping them with this model instances and\n * putting them to its {@link SchedulerPro/view/ResourceUtilization#property-store}.\n *\n * The wrapped model is provided to {@link #config-origin} config and can be retrieved from it:\n *\n * ```javascript\n * // get the real resource representing the first row of the view\n * resourceUtilizationView.store.first.origin\n * ```\n *\n * @extends Core/data/Model\n */\n\nexport default class ResourceUtilizationModel extends Model {\n\n    static $name = 'ResourceUtilizationModel';\n\n    static fields = [\n        /**\n         * Name of the represented resource or the assigned event.\n         * If the model represents an assignment the field value is\n         * automatically set to the assigned event {@link SchedulerPro/model/EventModel#field-name}.\n         * @field {String} name\n         * @category Common\n         */\n        'name',\n        /**\n         * Icon for the corresponding row.\n         * If the model represents an assignment the field value is\n         * automatically set to the assigned event {@link SchedulerPro/model/EventModel#field-iconCls}.\n         * @field {String} iconCls\n         * @category Styling\n         */\n        'iconCls'\n    ];\n\n    /**\n     * A resource or an assignment wrapped by this model.\n     *\n     * ```javascript\n     * // get the real resource representing the first row of the view\n     * resourceUtilizationView.store.first.origin\n     * ```\n     * @config {SchedulerPro.model.ResourceModel|SchedulerPro.model.AssignmentModel} origin\n     */\n\n    construct(data, ...args) {\n        this._childrenIndex = new Map();\n\n        // copy some field values from origin to this model\n        if (data.origin) {\n            Object.assign(data, this.mapOriginValues(data.origin));\n        }\n\n        super.construct(data, ...args);\n\n        if (this.origin) {\n            this.fillChildren();\n        }\n    }\n\n    mapOriginValues(origin) {\n        const result = {};\n\n        if (origin.isResourceModel) {\n            result.name = origin.name;\n        }\n        else if (origin.isAssignmentModel) {\n            result.name    = origin.event?.name;\n            result.iconCls = origin.event?.iconCls;\n        }\n\n        return result;\n    }\n\n    fillChildren() {\n        const\n            me           = this,\n            { children } = me,\n            toRemove     = new Set(children),\n            toAdd        = [];\n\n        if (me.origin?.isResourceModel) {\n            const { assigned } = me.origin;\n\n            for (const assignment of assigned) {\n                if (!me._childrenIndex.has(assignment)) {\n                    toAdd.push(me.constructor.new({ origin : assignment }));\n                }\n                else {\n                    toRemove.delete(me._childrenIndex.get(assignment));\n                }\n            }\n        }\n\n        if (toRemove.size) {\n            this.removeChild([...toRemove]);\n        }\n\n        if (toAdd.length) {\n            this.appendChild(toAdd);\n        }\n    }\n\n    afterRemoveChild(records) {\n        records.forEach(record => this._childrenIndex.delete(record.origin));\n    }\n\n    insertChild(...args) {\n        let added = super.insertChild(...args);\n\n        if (added) {\n            const { stores } = this;\n\n            if (!Array.isArray(added)) {\n                added = [added];\n            }\n\n            if (this.origin?.isResourceModel) {\n                for (const record of added) {\n                    if (record.origin && !this._childrenIndex.has(record.origin)) {\n                        this._childrenIndex.set(record.origin, record);\n                    }\n                }\n            }\n\n            // if the model is already in a store\n            // fill the store real_model -> wrapper_model map\n            if (stores?.length) {\n                for (const store of stores) {\n                    for (const record of added) {\n                        record.traverse(node => store.setModelByOrigin(node.origin, node));\n                    }\n                }\n            }\n        }\n\n        return added;\n    }\n\n    getChildByOrigin(origin) {\n        return this._childrenIndex.get(origin);\n    }\n}\n\nResourceUtilizationModel.exposeProperties();\n","import AjaxStore from '../../Core/data/AjaxStore.js';\nimport ResourceUtilizationModel from '../model/ResourceUtilizationModel.js';\nimport { AbstractPartOfProjectStoreMixin } from '../../Engine/quark/store/mixin/AbstractPartOfProjectStoreMixin.js';\n\n/**\n * @module SchedulerPro/data/ResourceUtilizationStore\n */\n\n/**\n * A store representing {@link SchedulerPro/view/ResourceUtilization} view records.\n * This store accepts a model class inheriting from {@link SchedulerPro/model/ResourceUtilizationModel}.\n *\n * The store is a tree of nodes representing resources on the root level with\n * sub-nodes representing corresponding resource assignments.\n * The store tracks changes made in the {@link #config-project} stores and rebuilds its content automatically.\n * Thus the project config is mandatory and has to be provided.\n *\n * @extends Core/data/AjaxStore\n */\nexport default class ResourceUtilizationStore extends AbstractPartOfProjectStoreMixin.derive(AjaxStore) {\n\n    static configurable = {\n        modelClass : ResourceUtilizationModel,\n\n        /**\n         * Project instance to retrieve resources and assignments data from.\n         * @config {SchedulerPro.model.ProjectModel} project\n         */\n        project : null,\n\n        tree : true\n    };\n\n    // Cannot use `static properties = {}`, new Map would pollute the prototype\n    static get properties() {\n        return {\n            _modelByOrigin : new Map()\n        };\n    }\n\n    updateProject(project) {\n        this.setResourceStore(project?.resourceStore);\n        this.setAssignmentStore(project?.assignmentStore);\n        this.setEventStore(project?.eventStore);\n\n        this.fillStoreFromProject();\n    }\n\n    setResourceStore(store) {\n        this.detachListeners('resourceStore');\n\n        // <remove-on-release>\n        // TODO: track assignments & events changes\n        // </remove-on-release>\n        store?.ion({\n            name    : 'resourceStore',\n            change  : this.onResourceStoreDataChanged,\n            thisObj : this\n        });\n    }\n\n    setEventStore(store) {\n        this.detachListeners('eventStore');\n\n        // <remove-on-release>\n        // TODO: track assignments & events changes\n        // </remove-on-release>\n        store?.ion({\n            name    : 'eventStore',\n            update  : this.onEventUpdate,\n            thisObj : this\n        });\n    }\n\n    setAssignmentStore(store) {\n        this.detachListeners('assignmentStore');\n\n        // <remove-on-release>\n        // TODO: track assignments & events changes\n        // </remove-on-release>\n        store?.ion({\n            name    : 'assignmentStore',\n            change  : this.onAssignmentsChange,\n            refresh : this.onAssignmentsRefresh,\n            add     : this.onAssignmentsAdd,\n            update  : this.onAssignmentUpdate,\n            remove  : this.onAssignmentsRemove,\n            thisObj : this\n        });\n    }\n\n    onResourceStoreDataChanged(event) {\n        // 'move' action triggers a remove event first, we wait for the 'add' - no need to fill twice\n        if (event.isMove && event.action === 'remove') {\n            return;\n        }\n\n        this.fillStoreFromProject();\n    }\n\n    onAssignmentsChange() {\n        this.forEach(resourceWrapper => resourceWrapper.fillChildren());\n    }\n\n    onAssignmentsRefresh(event) {\n        if (event.action === 'batch') {\n            this.forEach(resourceWrapper => resourceWrapper.fillChildren());\n        }\n    }\n\n    onAssignmentsAdd({ records }) {\n        records.forEach(record => {\n            const resourceWrapper = this.getModelByOrigin(record?.resource);\n\n            resourceWrapper?.fillChildren();\n        });\n    }\n\n    onAssignmentUpdate({ record, changes }) {\n        // if assignment moved to another resource\n        if ('resource' in changes) {\n            const\n                // get assignment wrapper record\n                assignmentWrapper = this.getModelByOrigin(record),\n                // get new resource wrapper record\n                newResourceWrapper = this.getModelByOrigin(record?.resource);\n\n            // move assignment wrapper to new resource wrapper\n            if (assignmentWrapper && newResourceWrapper) {\n                newResourceWrapper.appendChild(assignmentWrapper);\n            }\n        }\n    }\n\n    onAssignmentsRemove({ records }) {\n        this.remove(records.map(record => this.getModelByOrigin(record)));\n    }\n\n    onEventUpdate({ record, changes }) {\n        if ('name' in changes) {\n            for (const assignment of record.assigned) {\n                const assignmentWrapper = this.getModelByOrigin(assignment);\n\n                assignmentWrapper.set('name', record.name);\n            }\n        }\n    }\n\n    fillStoreFromProject() {\n        const toAdd = [];\n\n        this._project?.resourceStore.forEach(resource => {\n            if (!resource.isSpecialRow) {\n                toAdd.push(this.modelClass.new({ origin : resource }));\n            }\n        });\n\n        this.removeAll();\n        this.add(toAdd);\n\n        /**\n         * Fires when store completes synchronization with original (Event/Resource/Assignment) stores\n         * @event fillFromProject\n         * @internal\n         */\n        this.trigger('fillFromProject');\n    }\n\n    remove() {\n        const removed = super.remove(...arguments);\n\n        // sanitize internal origin->wrapper Map\n        removed?.forEach(record => {\n            this._modelByOrigin.delete(record.origin);\n        });\n\n        return removed;\n    }\n\n    removeAll() {\n        super.removeAll(...arguments);\n\n        this._modelByOrigin.clear();\n    }\n\n    getModelByOrigin(origin) {\n        return this._modelByOrigin.get(origin);\n    }\n\n    setModelByOrigin(origin, model) {\n        return this._modelByOrigin.set(origin, model);\n    }\n}\n","import StringHelper from '../../Core/helper/StringHelper.js';\nimport ResourceHistogram from './ResourceHistogram.js';\nimport ResourceUtilizationStore from '../data/ResourceUtilizationStore.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\nimport { TimeUnit } from '../../Engine/scheduling/Types.js';\nimport '../../Grid/column/TreeColumn.js';\nimport GridFeatureManager from '../../Grid/feature/GridFeatureManager.js';\nimport Tree from '../../Grid/feature/Tree.js';\n\n/**\n * @module SchedulerPro/view/ResourceUtilization\n */\n\n/**\n * An object containing info on the assignment effort in a certain time interval.\n *\n * The object is used when rendering interval bars and tooltips so it additionally provides a `rectConfig` property\n * which contains a configuration object for the`rect` SVG-element representing the interval bar.\n *\n * @typedef {Object} AssignmentAllocationIntervalInfo\n * @property {SchedulerPro.model.AssignmentModel} assignment The assignment which allocation is displayed.\n * @property {Number} effort Amount of work performed by the assigned resource in the interval\n * @property {TickInfo} tick The interval of time the allocation is collected for\n * @property {Number} units Assignment {@link SchedulerPro.model.AssignmentModel#field-units} value\n * @property {Object} rectConfig The rectangle DOM configuration object\n */\n\n/**\n * Widget showing the utilization levels of the project resources.\n * The resources are displayed in a summary list where each row can\n * be expanded to show the events assigned for the resource.\n *\n * This demo shows the Resource utilization widget:\n * {@inlineexample SchedulerPro/view/ResourceUtilization.js}\n *\n * The view requires a {@link #config-project Project instance} to be provided:\n *\n * ```javascript\n * const project = new ProjectModel({\n *     autoLoad  : true,\n *     transport : {\n *         load : {\n *             url : 'examples/schedulerpro/view/data.json'\n *         }\n *     }\n * });\n *\n * const resourceUtilization = new ResourceUtilization({\n *     project,\n *     appendTo    : 'targetDiv',\n *     rowHeight   : 60,\n *     minHeight   : '20em',\n *     flex        : '1 1 50%',\n *     showBarTip  : true\n * });\n * ```\n *\n * ## Pairing the component\n *\n * You can also pair the view with other timeline views such as the Gantt or Scheduler,\n * using the {@link #config-partner} config.\n *\n  * ## Changing displayed values\n *\n * To change the displayed bar texts, supply a {@link #config-getBarText} function.\n * Here for example the provided function displays resources time **left** instead of\n * allocated time\n *\n * ```javascript\n * new ResourceUtilization({\n *     getBarText(datum) {\n *         const view = this.owner;\n *\n *         // get default bar text\n *         let result = view.getBarTextDefault();\n *\n *         // For resource records we will display the time left for allocation\n *         if (result && datum.resource) {\n *\n *             const unit = view.getBarTextEffortUnit();\n *\n *             // display the resource available time\n *             result = view.getEffortText(datum.maxEffort - datum.effort, unit);\n *         }\n *\n *         return result;\n *     },\n * })\n * ```\n *\n * @extends SchedulerPro/view/ResourceHistogram\n * @classtype resourceutilization\n * @widget\n */\n\nexport default class ResourceUtilization extends ResourceHistogram {\n\n    //region Config\n\n    static $name = 'ResourceUtilization';\n\n    static type = 'resourceutilization';\n\n    static configurable = {\n        /**\n         * @hideconfigs crudManager, crudManagerClass, assignments, resources, events, dependencies, assignmentStore,\n         * resourceStore, eventStore, dependencyStore, data, timeZone\n         */\n\n        /**\n         * A Function which returns the text to render inside a bar.\n         *\n         * Here for example the provided function displays resources time **left** instead of\n         * allocated time\n         *\n         * ```javascript\n         * new ResourceUtilization({\n         *     getBarText(datum) {\n         *         const resourceUtilization = this.owner;\n         *\n         *         // get default bar text\n         *         let result = view.getBarTextDefault();\n         *\n         *         // For resource records we will display the time left for allocation\n         *         if (result && datum.resource) {\n         *\n         *             const unit = resourceUtilization.getBarTextEffortUnit();\n         *\n         *             // display the resource available time\n         *             result = resourceUtilization.getEffortText(datum.maxEffort - datum.effort, unit);\n         *         }\n         *\n         *         return result;\n         *     },\n         * })\n         * ```\n         *\n         * **Please note** that the function will be injected into the underlying\n         * {@link Core/widget/graph/Histogram} component that is used under the hood\n         * to render actual charts.\n         * So `this` in the function will refer to the {@link Core/widget/graph/Histogram} instance.\n         * To access the `ResourceUtilization` instance please use `this.owner` in the function body:\n         *\n         * ```javascript\n         * new ResourceUtilization({\n         *     getBarText(datum) {\n         *         // \"this\" in the method refers core Histogram instance\n         *         // get the view instance\n         *         const view = this.owner;\n         *\n         *         .....\n         *     },\n         * })\n         * ```\n         * The following parameters are passed:\n         * @param {ResourceAllocationIntervalInfo|AssignmentAllocationIntervalInfo} datum The datum being rendered.\n         * Either {@link SchedulerPro.view.ResourceHistogram#typedef-ResourceAllocationIntervalInfo} object for resource records (root level records)\n         * or {@link #typedef-AssignmentAllocationIntervalInfo}object  for assignment records\n         * @param {Number} index - The index of the datum being rendered\n         * @returns {String} Tdxt to render inside the bar\n         * @config {Function} getBarText\n         */\n\n        /* */\n\n        timeAxisColumnCellCls : 'b-sch-timeaxis-cell b-resourceutilization-cell',\n\n        /**\n         * A ProjectModel instance (or a config object) to display resource allocation of.\n         *\n         * Note: This config is mandatory.\n         * @config {ProjectModelConfig|SchedulerPro.model.ProjectModel} project\n         */\n\n        rowHeight : 30,\n\n        showEffortUnit : false,\n\n        /**\n         * @config {Boolean} showMaxEffort\n         * @hide\n         */\n\n        showMaxEffort : false,\n\n        /**\n         * Set to `true` if you want to display resources effort values in bars\n         * (for example: `24h`, `7d`, `60min` etc.).\n         * The text contents can be changed by providing {@link #config-getBarText} function.\n         * @config {Boolean}\n         * @default\n         */\n        showBarText : true,\n\n        /**\n         * A Function which returns the tooltip text to display when hovering a bar.\n         * The following parameters are passed:\n         * @param {Object} data - The backing data of the histogram rectangle\n         * @param {Object} data.rectConfig - The rectangle configuration object\n         * @param {Object} data.datum - The datum being rendered\n         * @param {Number} data.index - The index of the datum being rendered\n         * @config {Function}\n         */\n        barTooltipTemplate({ effort, isGroup, resource, assignment }) {\n            let result = '';\n\n            // const barTip = this.callback('getBarTextTip', me, [renderData, data[index], index]);\n            if (effort) {\n                if (resource) {\n                    result = this.getResourceBarTip(...arguments);\n                }\n                else if (assignment) {\n                    result = this.getAssignmentBarTip(...arguments);\n                }\n                else if (isGroup) {\n                    result = this.getGroupBarTip(...arguments);\n                }\n            }\n\n            return result;\n        },\n\n        series : {\n            effort : {\n                type  : 'bar',\n                field : 'effort'\n            }\n        },\n\n        readOnly : true,\n\n        columns : [\n            {\n                type        : 'tree',\n                field       : 'name',\n                text        : 'L{nameColumnText}',\n                localeClass : this\n            }\n        ]\n    };\n\n    //endregion\n\n    /**\n     * @event generateScalePoints\n     * @hide\n     */\n\n    /**\n     * @function generateScalePoints\n     * @hide\n     */\n\n    /**\n     * @member {SchedulerPro.column.ScaleColumn} scaleColumn\n     * @hide\n     */\n\n    updateProject(project) {\n        super.updateProject(project);\n\n        this.store = this.buildStore(project);\n    }\n\n    buildStore(project) {\n        return ResourceUtilizationStore.new({ project });\n    }\n\n    insertScaleColumn() {}\n\n    //region Render\n\n    getTipHtml({ activeTarget }) {\n        const\n            index          = activeTarget.dataset.index,\n            record         = this.getRecordFromElement(activeTarget),\n            allocationData = this.allocationDataByRecord.get(record.origin),\n            data           = allocationData[parseInt(index, 10)];\n\n        return this.barTooltipTemplate(data);\n    }\n\n    registerRecordAllocationReport(record) {\n        if (record.isResourceModel) {\n            return super.registerRecordAllocationReport(record);\n        }\n\n        if (record.isAssignmentModel) {\n            return this.registerAssignmentAllocationReport(record);\n        }\n    }\n\n    onDestroy() {\n        const me = this;\n\n        // destroy observers & entities made for assignments displayed by this view\n\n        for (const [record, observer] of me.allocationObserverByRecord?.entries()) {\n            if (record.isAssignmentModel) {\n                record.resource.removeObserver(observer);\n                me.allocationObserverByRecord.delete(record);\n            }\n        }\n\n        for (const [record, entity] of me.allocationReportByRecord?.entries()) {\n            if (record.isAssignmentModel) {\n                record.resource.removeEntity(entity);\n                me.allocationReportByRecord.delete(entity);\n            }\n        }\n\n        if (me.destroyStores) {\n            me.store?.destroy();\n        }\n\n        super.onDestroy();\n    }\n\n    registerAssignmentAllocationReport(record) {\n        const\n            me               = this,\n            graph            = me.project.getGraph(),\n            allocationReport = me.allocationReportByRecord.get(record.resource);\n\n        if (allocationReport) {\n            // store resource allocation report reference\n            me.allocationReportByRecord.set(record, allocationReport);\n\n            // track allocation report changes\n            const allocationObserver = graph.observe(\n                function * () {\n                    return yield allocationReport.$.allocation;\n                },\n                allocation => me.onRecordAllocationCalculated(record, allocation, allocationReport)\n            );\n\n            me.allocationObserverByRecord.set(record, allocationObserver);\n\n            // trigger rendering on allocation report changes\n            record.resource.addObserver(allocationObserver);\n        }\n\n        return allocationReport;\n    }\n\n    onRecordAllocationCalculated(record, allocation, allocationReport) {\n        // if that's an assignment row\n        if (record.isAssignmentModel) {\n            if (allocation.byAssignments.get(record)) {\n                super.onRecordAllocationCalculated(record, allocation, allocationReport);\n            }\n            // If allocation report is calculated w/o the assignment\n            // it means that the assignment was moved to another resource.\n            // Then we drop linkage of that assignment to that allocation report\n            else {\n                // remove reference of the assignment to the allocation repoort\n                this.allocationReportByRecord.delete(record);\n\n                const observer = this.allocationObserverByRecord.get(record);\n\n                // remove the allcation report observer that tracks changes and refreshes the assignment row\n                if (observer) {\n                    allocationReport.resource.removeObserver(observer);\n                    this.allocationObserverByRecord.delete(record);\n                }\n            }\n        }\n        else {\n            super.onRecordAllocationCalculated(record, allocation, allocationReport);\n        }\n    }\n\n    onRowManagerRenderRow({ row, record }) {\n        // indicate row kinds\n        row.assignCls({\n            'b-resource-row'   : record.origin?.isResourceModel,\n            'b-assignment-row' : record.origin?.isAssignmentModel\n        });\n    }\n\n    getResourceGroupParent(resource) {\n        const instanceMeta = resource.instanceMeta(this.store);\n\n        return instanceMeta?.groupParent;\n    }\n\n    renderResourceHistogram(data) {\n        const { project } = data.grid;\n\n        if (project.isInitialCommitPerformed && !data.record.isSpecialRow) {\n            // renderResourceHistogram() expects a real resource model\n            // so get it from its wrapper model\n            data.record = data.record.origin;\n\n            return super.renderResourceHistogram(data);\n        }\n    }\n\n    getCell(data) {\n        // if real resource or assignment is provided\n        if (data.record?.isResourceModel || data.record?.isAssignmentModel) {\n            // use its wrapper record to find proper cell\n            data.record = this.store.getModelByOrigin(data.record);\n        }\n\n        return super.getCell(data);\n    }\n\n    buildHistogramWidget(config = {}, ...args) {\n        if (!this.getBarTextRenderData && !config?.getBarTextRenderData) {\n            config.getBarTextRenderData = this.getBarTextRenderDataDefault;\n        }\n\n        config.cls = 'b-hide-offscreen b-resourceutilization-histogram';\n\n        config.height = this.rowHeight;\n\n        return super.buildHistogramWidget(config, ...args);\n    }\n\n    getBarTextRenderDataDefault(renderData, datum, index) {\n        // place effort text centered vertically\n        renderData.y = '50%';\n\n        return renderData;\n    }\n\n    getRecordAllocationInfoRenderData(record, allocation, cellElement, histogramWidget = null) {\n        let data;\n\n        if (record.isResourceModel) {\n            data = allocation.total;\n        }\n        else if (record.isAssignmentModel) {\n            data = allocation.byAssignments.get(record);\n        }\n\n        // if allocation is collected\n        if (data) {\n            // we don't want the histogram bar heights based on effort\n            // so set heights to 1 here to fit row heights fully\n            for (let i = 0, { length } = data; i < length; i++) {\n                if (data[i].effort) data[i].height = 1;\n            }\n        }\n\n        return data;\n    }\n\n    //endregion\n\n    getResourceBarTip(datum) {\n        const\n            me                       = this,\n            { showBarTip, timeAxis } = me;\n\n        let result = '';\n\n        if (showBarTip && datum.effort) {\n            const\n                unit          = me.getBarTipEffortUnit(...arguments),\n                allocated     = me.getEffortText(datum.effort, unit, true),\n                available     = me.getEffortText(datum.maxEffort, unit, true),\n                assignmentTpl = me.L('L{groupBarTipAssignment}');\n\n            let\n                dateFormat        = 'L',\n                resultFormat      = me.L('L{groupBarTipInRange}'),\n                assignmentsSuffix = '';\n\n            if (DateHelper.compareUnits(timeAxis.unit, TimeUnit.Day) === 0) {\n                resultFormat = me.L('L{groupBarTipOnDate}');\n            }\n            else if (DateHelper.compareUnits(timeAxis.unit, TimeUnit.Second) <= 0) {\n                dateFormat = 'HH:mm:ss A';\n            }\n            else if (DateHelper.compareUnits(timeAxis.unit, TimeUnit.Hour) <= 0) {\n                dateFormat = 'LT';\n            }\n\n            let assignmentsArray = [...datum.assignmentIntervals.entries()]\n                .filter(([assignment, data]) => data.effort)\n                .sort(([key1, value1], [key2, value2]) => value1.effort > value2.effort ? -1 : 1);\n\n            if (assignmentsArray.length > me.groupBarTipAssignmentLimit) {\n                assignmentsSuffix = '<br>' + me.L('L{plusMore}').replace('{value}', assignmentsArray.length - me.groupBarTipAssignmentLimit);\n                assignmentsArray = assignmentsArray.slice(0, this.groupBarTipAssignmentLimit);\n            }\n\n            const assignments = assignmentsArray.map(([assignment, info]) => {\n\n                return assignmentTpl.replace('{event}', StringHelper.encodeHtml(assignment.event.name))\n                    .replace('{allocated}', me.getEffortText(info.effort, unit, true))\n                    .replace('{available}', me.getEffortText(info.maxEffort, unit, true))\n                    .replace('{cls}', info.isOverallocated ? 'b-overallocated' : info.isUnderallocated ? 'b-underallocated' : '');\n\n            }).join('<br>') + assignmentsSuffix;\n\n            // <remove-on-release>\n            // TODO: we need smth like sprintf(\"has {0} of {1} items\", cnt, total)\n            //  to be able to test localizable strings\n            // </remove-on-release>\n            result = resultFormat\n                .replace('{assignments}', assignments)\n                .replace('{startDate}', DateHelper.format(datum.tick.startDate, dateFormat))\n                .replace('{endDate}', DateHelper.format(datum.tick.endDate, dateFormat))\n                .replace('{allocated}', allocated)\n                .replace('{available}', available)\n                .replace('{cls}', datum.isOverallocated ? 'b-overallocated' : datum.isUnderallocated ? 'b-underallocated' : '');\n\n            result = `<div class=\"b-histogram-bar-tooltip\">${result}</div>`;\n        }\n\n        return result;\n    }\n\n    getAssignmentBarTip(datum) {\n        const\n            me                       = this,\n            { showBarTip, timeAxis } = me;\n\n        let result = '';\n\n        if (showBarTip && datum.effort) {\n            const\n                unit      = me.getBarTipEffortUnit(...arguments),\n                allocated = me.getEffortText(datum.effort, unit, true),\n                available = me.getEffortText(datum.maxEffort, unit, true);\n\n            let\n                dateFormat   = 'L',\n                resultFormat = me.L('L{barTipInRange}');\n\n            if (DateHelper.compareUnits(timeAxis.unit, TimeUnit.Day) === 0) {\n                resultFormat = me.L('L{barTipOnDate}');\n            }\n            else if (DateHelper.compareUnits(timeAxis.unit, TimeUnit.Second) <= 0) {\n                dateFormat = 'HH:mm:ss A';\n            }\n            else if (DateHelper.compareUnits(timeAxis.unit, TimeUnit.Hour) <= 0) {\n                dateFormat = 'LT';\n            }\n\n            // <remove-on-release>\n            // TODO: we need smth like sprintf(\"has {0} of {1} items\", cnt, total)\n            //  to be able to test localizable strings\n            // </remove-on-release>\n            result = resultFormat\n                .replace('{startDate}', DateHelper.format(datum.tick.startDate, dateFormat))\n                .replace('{endDate}', DateHelper.format(datum.tick.endDate, dateFormat))\n                .replace('{allocated}', allocated)\n                .replace('{available}', available)\n                .replace('{cls}', datum.cls || '');\n\n            if (datum.assignment) {\n                result = result.replace('{event}', StringHelper.encodeHtml(datum.assignment.event.name));\n            }\n\n            result = `<div class=\"b-histogram-bar-tooltip\">${result}</div>`;\n        }\n\n        return result;\n    }\n\n}\n\nResourceUtilization.initClass();\n\n// enable tree feature for the utilization panel by default\nGridFeatureManager.registerFeature(Tree, true, 'ResourceUtilization');\n","import SchedulerProBase from './SchedulerProBase.js';\n\n// Since SchedulerPro is based on thin XXBase classes, default features needs to be pulled in here\nimport '../../Scheduler/feature/ColumnLines.js';\nimport '../../Scheduler/feature/Dependencies.js';\nimport '../../Scheduler/feature/EventCopyPaste.js';\nimport '../../Scheduler/feature/EventDrag.js';\nimport '../../Scheduler/feature/EventDragCreate.js';\nimport '../../Scheduler/feature/EventFilter.js';\nimport '../../Scheduler/feature/EventMenu.js';\nimport '../../Scheduler/feature/EventTooltip.js';\nimport '../../Scheduler/feature/NonWorkingTime.js';\nimport '../../Scheduler/feature/ScheduleMenu.js';\nimport '../../Scheduler/feature/ScheduleTooltip.js';\nimport '../../Scheduler/feature/StickyEvents.js';\nimport '../../Scheduler/feature/TimeAxisHeaderMenu.js';\n\nimport '../../Grid/feature/CellEdit.js';\nimport '../../Grid/feature/CellMenu.js';\nimport '../../Grid/feature/ColumnDragToolbar.js';\nimport '../../Grid/feature/ColumnPicker.js';\nimport '../../Grid/feature/ColumnReorder.js';\nimport '../../Grid/feature/ColumnResize.js';\nimport '../../Grid/feature/Filter.js';\nimport '../../Grid/feature/FilterBar.js';\nimport '../../Grid/feature/Group.js';\nimport '../../Grid/feature/HeaderMenu.js';\nimport '../../Grid/feature/Sort.js';\nimport '../../Grid/feature/Stripe.js';\n// For checkbox selection mode\nimport '../../Grid/column/CheckColumn.js';\n\nimport '../feature/DependencyEdit.js';\nimport '../feature/EventResize.js';\nimport '../feature/TaskEdit.js';\nimport '../feature/EventSegmentDrag.js';\nimport '../feature/EventSegmentResize.js';\nimport '../feature/EventSegments.js';\n\n/**\n * @module SchedulerPro/view/SchedulerPro\n */\n\n/**\n * ## Intro\n *\n * The Scheduler Pro is an extension of the [Bryntum Scheduler](#Scheduler/view/Scheduler), and combines the visualisation capabilities\n * of the Scheduler with the powerful scheduling engine from the Gantt. This means it can manage {@link SchedulerPro/model/ProjectModel project} data composed by\n * tasks, dependencies, resources, assignments and calendars (for working / non-working time). If you have inter-task dependencies,\n * task updates will be propagated to any successors after a task is moved. The engine will reschedule tasks\n * according to the constraints, dependencies and calendars defined in the project. To familiarize yourself with the various APIs and data structures\n * of the Scheduler Pro, we recommend starting with these resources:\n *\n * * [Project data model guide](#SchedulerPro/guides/basics/project_data.md)\n * * [Bryntum Scheduler API docs](#Scheduler/view/Scheduler)\n * * [Bryntum Grid API docs](#Grid/view/Grid)\n * * [Localization](#SchedulerPro/guides/customization/localization.md)\n *\n * ## Basic setup\n *\n * To create an instance of this class, simply configure it with:\n *\n * * The {@link Grid/column/Column columns} you want\n * * The {@link Grid/view/Grid#config-features} you want, quite a lot to choose from, and you can build your own too\n * * A {@link SchedulerPro/model/ProjectModel Project} instance:\n * * A {@link Scheduler/preset/ViewPreset viewPreset} identifier, specifying the granularity of the time axis.\n *\n * ```javascript\n * const scheduler = new SchedulerPro({\n *    // A Project holds the data and the calculation engine for Scheduler Pro. It also acts as a CrudManager, allowing\n *    // loading data into all stores at once\n *    project : {\n *        autoLoad  : true,\n *        transport : {\n *            load : {\n *                url : './data/data.json'\n *            }\n *       }\n *    },\n *\n *    adopt             : 'container',\n *    startDate         : '2020-05-01',\n *    endDate           : '2020-09-30',\n *    resourceImagePath : '../_shared/images/users/',\n *    viewPreset        : 'dayAndWeek'\n *    features : {\n *       columnLines  : false,\n *       dependencies : true\n *   },\n *\n *   columns : [\n *       {\n *           type           : 'resourceInfo',\n *           text           : 'Worker',\n *           showEventCount : true\n *       }\n *   ]\n * });\n * ```\n *\n * {@inlineexample SchedulerPro/view/SchedulerPro.js}\n *\n * ## Inheriting from Bryntum Grid\n * Bryntum Scheduler Pro inherits from Bryntum Grid, meaning that most features available in the grid are also available\n * for the scheduler. Common features include columns, cell editing, context menus, row grouping, sorting and more.\n * Note: If you want to use the Grid component standalone, e.g. to use drag-from-grid functionality, you need a separate\n * license for the Grid component.\n *\n * ## Customisation\n *\n * You can style any aspect of the Scheduler using plain CSS or modify our themes using our built-in SASS variables.\n * Using the {@link Scheduler/view/mixin/SchedulerEventRendering#config-eventRenderer} you can customize the HTML output for\n * each event bar. The Scheduler comes with a few different {@link #config-eventStyle event styles} which you can\n * define globally on the Scheduler, in the resource data, or on individual events.\n *\n * {@inlineexample SchedulerPro/view/EventStyles.js}\n *\n * For more information about styling, please refer to the [styling guide](#SchedulerPro/guides/customization/styling.md).\n *\n * ## Partnering with other timeline widgets\n *\n * You can also pair the Scheduler Pro with other timeline based widgets such as the {@link SchedulerPro/view/ResourceHistogram histogram widget}\n * to view resource allocation levels, using the {@link #config-partner} config.\n *\n * {@inlineexample SchedulerPro/view/ResourceHistogram.js}\n *\n * ### Differences between Scheduler and Scheduler Pro\n * Scheduler Pro extends Scheduler and schedules tasks based on the Project, Resource and Event calendars, while also taking into account\n * dependencies and constraints. Scheduler Pro also comes with more demos showing off advanced use cases. Below is a list\n * of technical differences between the two versions:\n *\n * - Scheduler uses an EventStore, ResourceStore (optionally an AssignmentStore and a DependencyStore), whereas Scheduler Pro always\n * uses an AssignmentStore to manage event assignments.\n * - Scheduler Pro uses the same data model as the Gantt and can visualise a Project side by side with the Gantt.\n * - Scheduler supports showing dependencies but they are just visual elements, they do not impact scheduling. In Scheduler Pro,\n * adding a dependency between two tasks will affect the scheduling of the successor task.\n * - Scheduler Pro supports visualising a task completion progress bar.\n * - Scheduler Pro includes a Timeline widget and a Resource Histogram widget.\n *\n * @extends SchedulerPro/view/SchedulerProBase\n * @classType schedulerpro\n * @widget\n */\nexport default class SchedulerPro extends SchedulerProBase {\n\n    //region Config\n\n    static get $name() {\n        return 'SchedulerPro';\n    }\n\n    static get type() {\n        return 'schedulerpro';\n    }\n\n    //endregion\n\n}\n\nSchedulerPro.initClass();\n","import ObjectHelper from '../../Core/helper/ObjectHelper.js';\nimport SchedulerBase from '../../Scheduler/view/SchedulerBase.js';\nimport '../../Scheduler/feature/TimeRanges.js';\nimport Store from '../../Core/data/Store.js';\nimport { SchedulerProProjectMixin } from '../../Engine/quark/model/scheduler_pro/SchedulerProProjectMixin.js';\n\n/**\n * @module SchedulerPro/widget/Timeline\n */\n\n/**\n * A visual component showing an overview timeline of events having the {@link SchedulerPro.model.EventModel#field-showInTimeline showInTimeline}\n * field set to true. The timeline component subclasses the {@link Scheduler.view.Scheduler Scheduler} and to use it,\n * simply provide it with a {@link SchedulerPro.model.ProjectModel}:\n *\n * ```javascript\n * const timeline = new Timeline({\n *     appendTo  : 'container',\n *     project   : project\n * });\n * ```\n *\n * {@inlineexample SchedulerPro/widget/Timeline.js}\n *\n * @extends Scheduler/view/Scheduler\n * @classType timeline\n * @widget\n */\nexport default class Timeline extends SchedulerBase {\n\n    static get $name() {\n        return 'Timeline';\n    }\n\n    // Factoryable type name\n    static get type() {\n        return 'timeline';\n    }\n\n    static get configurable() {\n        return {\n            /**\n             * Project config object or a Project instance\n             *\n             * @config {SchedulerPro.model.ProjectModel|ProjectModelConfig} project\n             */\n\n            /**\n             * @hideconfigs timeZone\n             */\n\n            height      : '13em',\n            eventLayout : 'pack',\n            barMargin   : 1,\n\n            // We need timeline width to be exact, because with `overflow: visible` content will look awful.\n            // Flow is like this:\n            // 1. zoomToFit is trying to set timespan to eventStore total time span. Assume start in on tuesday and end is on friday\n            // 2. zooming mixin is calculating tick width, which is e.g. 37px to fit all the ticks to the available space\n            // 3. timeAxis is configured with this new time span. By default it adjusts start and end to monday.\n            // 4. since timespan was increased, it now overflows with original tick size of 37. It requires smth smaller, like 34.\n            // 5. timeAxisViewModel is calculating fitting size. Which is correct value of 34, but value is ignored unless `forceFit` is true\n            // But apparently forceFit + zoomToSpan IS NOT SUPPORTED. So alternative approach is to disable autoAdjust\n            // on time axis to prevent increased size in #3. But then time axis start/end won't be even date, it could be\n            // smth random like `Thu Feb 07 2019 22:13:20`.\n            //\n            // On the other hand, without force-fit content might overflow and timeline is styled to show overflowing content.\n            // And that would require more additional configs\n            forceFit : true,\n            timeAxis : { autoAdjust : false },\n\n            readOnly                  : true,\n            zoomOnMouseWheel          : false,\n            zoomOnTimeAxisDoubleClick : false,\n            // eventColor                : null,\n            // eventStyle                : null,\n            rowHeight                 : 48,\n            displayDateFormat         : 'L',\n\n            // A fake resource\n            resources : [\n                {\n                    id : 1\n                }\n            ],\n\n            columns : []\n        };\n    }\n\n    static get delayable() {\n        return {\n            fillFromTaskStore : 100\n        };\n    }\n\n    construct(config = {}) {\n        const me = this;\n\n        me.startDateLabel           = document.createElement('label');\n        me.startDateLabel.className = 'b-timeline-startdate';\n        me.endDateLabel             = document.createElement('label');\n        me.endDateLabel.className   = 'b-timeline-enddate';\n\n        let initialCommitPerformed = true;\n\n        if ('project' in config) {\n            if (!config.project) {\n                throw new Error('You need to configure the Timeline with a Project');\n            }\n            // In case instance of project is provided, just take store right away and delete config, falling back to\n            // default\n            else if (config.project instanceof SchedulerProProjectMixin) {\n                me.taskStore = config.project.eventStore;\n\n                if (!config.project.isInitialCommitPerformed) {\n                    initialCommitPerformed = false;\n\n                    // For schedulerpro it is important to listen to first project commit\n                    config.project.ion({\n                        name : 'initialCommit',\n                        refresh({ isInitialCommit }) {\n                            if (isInitialCommit) {\n                                me.fillFromTaskStore();\n                                me.detachListeners('initialCommit');\n                            }\n                        },\n                        thisObj : me\n                    });\n                }\n\n                delete config.project;\n            }\n        }\n\n        // Despite the fact Timeline extends SchedulerBase, we still need to disable all these features.\n        // Because in case timeline gets into the same scope as scheduler or gantt, some features might be enabled\n        // by default. SchedulerBase jut means that we don't import anything extra. But other components might.\n        config.features = ObjectHelper.assign({\n            cellEdit            : false,\n            cellMenu            : false,\n            columnAutoWidth     : false,\n            columnLines         : false,\n            columnPicker        : false,\n            columnReorder       : false,\n            columnResize        : false,\n            contextMenu         : false,\n            eventContextMenu    : false,\n            eventDrag           : false,\n            eventDragCreate     : false,\n            eventEdit           : false,\n            eventFilter         : false,\n            eventMenu           : false,\n            eventResize         : false,\n            eventTooltip        : false,\n            group               : false,\n            headerMenu          : false,\n            regionResize        : false,\n            scheduleContextMenu : false,\n            scheduleMenu        : false,\n            scheduleTooltip     : false,\n            sort                : false,\n            timeAxisHeaderMenu  : false,\n            timeRanges          : false\n        }, config.features);\n\n        super.construct(config);\n\n        if (me.features.timeRanges) {\n            // We don't want to show timeRanges relating to Project\n            me.features.timeRanges.store = new Store();\n        }\n\n        // If original project is not committed by this time, we should not try to fill timeline from the task store,\n        // because project listener will do it itself. And also to not do extra suspendRefresh which would break project\n        // refresh event listener behavior.\n        // https://github.com/bryntum/support/issues/2665\n        initialCommitPerformed && me.fillFromTaskStore.now();\n\n        me.taskStore.ion({\n            refreshPreCommit : me.fillFromTaskStore,\n            changePreCommit  : me.onTaskStoreChange,\n            thisObj          : me\n        });\n\n        me.ion({\n            resize  : me.onSizeChanged,\n            thisObj : me\n        });\n\n        me.bodyContainer.appendChild(me.startDateLabel);\n        me.bodyContainer.appendChild(me.endDateLabel);\n    }\n\n    onSizeChanged({ width, oldWidth }) {\n        const\n            me    = this,\n            reFit = width !== oldWidth;\n\n        // Save a refresh, will come from fit. Don't suspend if we won't re-fit, we need the refresh for events\n        // to not disappear (since updating row height clears cache)\n        reFit && me.suspendRefresh();\n\n        me.updateRowHeight();\n\n        if (reFit) {\n            me.resumeRefresh();\n\n            me.fitTimeline();\n        }\n    }\n\n    updateRowHeight() {\n        if (this.bodyContainer.isConnected) {\n            this.rowHeight = this.bodyContainer.offsetHeight;\n        }\n    }\n\n    fitTimeline() {\n        if (this.eventStore.count > 0) {\n            this.forceFit = false;\n            this.zoomToFit(\n                {\n                    leftMargin  : 50,\n                    rightMargin : 50\n                }\n            );\n            this.forceFit = true;\n        }\n\n        this.updateStartEndLabels();\n    }\n\n    updateStartEndLabels() {\n        const me                    = this;\n        me.startDateLabel.innerHTML = me.getFormattedDate(me.startDate);\n        me.endDateLabel.innerHTML   = me.getFormattedDate(me.endDate);\n    }\n\n    async onTaskStoreChange({ action, record, records, changes, isCollapse }) {\n        const\n            me         = this,\n            eventStore = me.eventStore;\n\n        let needsFit;\n\n        switch (action) {\n            case 'add':\n                records.forEach(task => {\n                    if (task.showInTimeline) {\n                        eventStore.add(me.cloneTask(task));\n                        needsFit = true;\n                    }\n                });\n                break;\n            case 'remove':\n                if (!isCollapse) {\n                    records.forEach(task => {\n                        if (task.showInTimeline) {\n                            eventStore.remove(task.id);\n                            needsFit = true;\n                        }\n                    });\n                }\n                break;\n            case 'removeall':\n                me.fillFromTaskStore.now();\n                break;\n\n            case 'update': {\n                const task = record;\n\n                if (changes.showInTimeline) {\n                    // Add or remove from our eventStore\n                    if (task.showInTimeline) {\n                        eventStore.add(me.cloneTask(task));\n                    }\n                    else {\n                        const timelineEvent = eventStore.getById(task.id);\n\n                        if (timelineEvent) {\n                            eventStore.remove(timelineEvent);\n                        }\n                    }\n                    needsFit = true;\n                }\n                else if (task.showInTimeline) {\n                    // Just sync with existing clone\n                    const clone = eventStore.getById(task.id);\n\n                    if (clone) {\n                        // Fields might have been remapped\n                        clone.set(me.cloneTask(task));\n                        needsFit = true;\n                    }\n                }\n                break;\n            }\n        }\n\n        if (needsFit) {\n            me.fitTimeline();\n        }\n    }\n\n    cloneTask(task) {\n        return {\n            id         : task.id,\n            resourceId : 1,\n            name       : task.name,\n            startDate  : task.startDate,\n            endDate    : task.endDate,\n            cls        : task.cls\n        };\n    }\n\n    render() {\n        super.render(...arguments);\n\n        this.updateRowHeight();\n    }\n\n    async fillFromTaskStore() {\n        const\n            me            = this,\n            timelineTasks = [];\n\n        me.taskStore.traverse(task => {\n            if (task.showInTimeline && task.isScheduled) {\n                timelineTasks.push(me.cloneTask(task));\n            }\n        });\n\n        me.events = timelineTasks;\n        await me.project.commitAsync();\n\n        if (me.isDestroyed) {\n            return;\n        }\n\n        me.fitTimeline();\n    }\n\n    onLocaleChange() {\n        this.updateStartEndLabels();\n        super.onLocaleChange();\n    }\n};\n\n// Register this widget type with its Factory\nTimeline.initClass();\n","import StringHelper from '../../Core/helper/StringHelper.js';\nimport DateHelper from '../../Core/helper/DateHelper.js';\nimport GridRowModel from '../../Grid/data/GridRowModel.js';\nimport TreeGrid from '../../Grid/view/TreeGrid.js';\nimport ArrayHelper from '../../Core/helper/ArrayHelper.js';\nimport ObjectHelper from '../../Core/helper/ObjectHelper.js';\n\n/**\n * @module SchedulerPro/widget/VersionGrid\n */\n\nconst\n    EMPTY_ARRAY = [],\n    actionTypeOrder = { remove : 1, add : 2, update : 3 },\n    entityTypeOrder = { TaskModel : 1, DependencyModel : 2, AssignmentModel : 3, ProjectModel : 4 },\n    // For moves, describe the former and current locations\n    describePosition = ({ parent, index }) => `${parent.name}[${index}]`,\n    knownEntityTypes = {\n        AssignmentModel : 'Assignment',\n        DependencyModel : 'Dependency'\n    };\n\nclass VersionGridRow extends GridRowModel {\n    static fields = [\n        {\n            name : 'description',\n            type : 'string'\n        }, {\n            name : 'occurredAt',\n            type : 'date'\n        }, {\n            name : 'versionModel'\n        }, {\n            name : 'transactionModel'\n        }, {\n            name : 'propertyUpdate'\n        }, {\n            name : 'action'\n        }\n    ];\n}\n\n/**\n * Displays a list of versions and the transactions they contain. For use with the {@link SchedulerPro.feature.Versions}\n * feature.\n *\n * Configure the VersionGrid with a {@link SchedulerPro.model.ProjectModel} using the {@link #config-project} config.\n *\n * @extends Grid/view/TreeGrid\n * @classType versiongrid\n * @widget\n */\nexport default class VersionGrid extends TreeGrid {\n    static $name = 'VersionGrid';\n\n    static type = 'versiongrid';\n\n    static configurable = {\n\n        store : {\n            tree       : true,\n            modelClass : VersionGridRow,\n            sorters    : [\n                {\n                    field     : 'occurredAt',\n                    ascending : false\n                },\n                VersionGrid.sortActionRows\n            ],\n            reapplySortersOnAdd : true\n        },\n\n        /**\n         * The {@link SchedulerPro.model.ProjectModel} whose versions and changes are being observed in this grid.\n         * @config {SchedulerPro.model.ProjectModel}\n         */\n        project : null,\n\n        /**\n         * Whether to display transactions not yet associated with a version.\n         * @prp {Boolean}\n         */\n        showUnattachedTransactions : true,\n\n        /**\n         * Whether to show only versions that have been assigned a specific name.\n         * @prp {Boolean}\n         */\n        showNamedVersionsOnly : false,\n\n        /**\n         * Whether to include version rows in the display.\n         * @prp {Boolean}\n         */\n        showVersions : true,\n\n        /**\n         * The id of the version currently being compared, if any.\n         * @prp {Boolean}\n         */\n        comparingVersionId : null,\n\n        flex : 0,\n\n        features : {\n            group : {\n                field : 'id'\n            },\n\n            cellEdit : {\n                continueEditingOnCellClick : false,\n                editNextOnEnterPress       : false\n            },\n\n            cellMenu : {\n                items : {\n                    removeRow    : false,\n                    cut          : false,\n                    copy         : false,\n                    paste        : false,\n                    renameButton : {\n                        text   : 'L{VersionGrid.rename}',\n                        icon   : 'b-icon b-icon-edit',\n                        onItem : ({ record, source : grid }) => {\n                            grid.startEditing({\n                                id     : record.id,\n                                column : grid.columns.get('description')\n                            });\n                        }\n                    },\n                    restoreButton : {\n                        text   : 'L{VersionGrid.restore}',\n                        icon   : 'b-icon b-icon-undo',\n                        onItem : ({ record, source : grid }) => {\n                            grid.triggerRestore(record.versionModel);\n                        }\n                    },\n                    compareButton : {\n                        text   : 'L{VersionGrid.compare}',\n                        icon   : 'b-icon b-icon-compare',\n                        onItem : ({ record, source : grid }) => {\n                            grid.triggerCompare(record.versionModel);\n                        }\n                    },\n                    stopComparingButton : {\n                        text   : 'L{VersionGrid.stopComparing}',\n                        onItem : ({ record, source : grid }) => {\n                            grid.triggerStopCompare();\n                        }\n                    }\n                }\n            },\n\n            rowCopyPaste : false\n        },\n\n        columns : [\n            { type : 'tree', text : 'L{VersionGrid.description}', field : 'description', flex : 4, groupable : false, renderer : ({ grid, ...rest }) => grid.renderDescription({ grid, ...rest }), autoHeight : true },\n            { text : 'L{VersionGrid.occurredAt}', field : 'occurredAt', type : 'date', flex : 1, groupable : false }\n        ],\n\n        /**\n         * The date format used for displaying date values in change actions.\n         * @config {String}\n         */\n        dateFormat : 'M/D/YY h:mm a',\n\n        internalListeners : {\n            beforeCellEditStart({ editorContext : { column, record } }) {\n                // Only version descriptions are editable\n                if (!(column.field === 'description' && record.versionModel)) {\n                    return false;\n                }\n            },\n\n            finishCellEdit({ editorContext : { record, value } }) {\n                record.versionModel.name = (value != null && value.trim()) ? value : null;\n            },\n\n            cellMenuBeforeShow({ source, record, items }) {\n                items.stopComparingButton.disabled = !source.comparingVersionId;\n                return Boolean(record.versionModel);\n            },\n\n            toggleNode({ record, collapse }) {\n                this._expandedById.set(record.id, !collapse);\n            }\n        }\n    };\n\n    static delayable = {\n        processUpdates : {\n            type              : 'raf',\n            cancelOutstanding : true\n        }\n    };\n\n    // Bookkeeping fields\n    static get properties() {\n        return {\n            _rowsByUnderlyingRecord : new WeakMap(),\n            _expandedById           : new Map()\n        };\n    };\n\n    _transactionChanges = [];\n    _versionChanges = [];\n    comparingRowCls = `b-${VersionGrid.type}-comparing`;\n\n    construct(config) {\n        super.construct({\n            ...config,\n            features : ObjectHelper.merge({}, VersionGrid.configurable.features, config.features)\n        });\n    }\n\n    afterConstruct() {\n        if (!this.project) {\n            throw new Error(`${VersionGrid.$name} requires the project config.`);\n        }\n        this.refreshGrid();\n    }\n\n    updateDateFormat(newDateFormat) {\n        const occurredAtColumn = this.columns.get('occurredAt');\n        if (occurredAtColumn) {\n            occurredAtColumn.format = newDateFormat;\n        }\n    }\n\n    updateProject(newProject) {\n        const me = this;\n\n        me.detachListeners('storeChange');\n\n        me._versionStore = newProject.getCrudStore('versions');\n        me._transactionStore = newProject.getCrudStore('changelogs');\n\n        me._versionStore.ion({\n            name    : 'storeChange',\n            change  : me.onVersionStoreChange,\n            thisObj : me\n        });\n        me._transactionStore.ion({\n            name    : 'storeChange',\n            change  : me.onTransactionStoreChange,\n            thisObj : me\n        });\n    }\n\n    updateShowNamedVersionsOnly() {\n        if (this.isPainted) {\n            this.refreshGrid();\n        }\n    }\n\n    updateShowUnattachedTransactions() {\n        if (this.isPainted) {\n            this.refreshGrid();\n        }\n    }\n\n    updateShowVersions() {\n        if (this.isPainted) {\n            this.refreshGrid();\n        }\n    }\n\n    updateComparingVersionId(newVersionId, oldVersionId) {\n        const [oldHighlightedRow, newHighlightedRow] = [oldVersionId, newVersionId].map(versionId =>\n            this.store.getById(`v-${versionId}`));\n        if (oldHighlightedRow) {\n            oldHighlightedRow.cls = '';\n            oldHighlightedRow.iconCls = 'b-icon b-icon-version';\n        }\n        if (newHighlightedRow) {\n            newHighlightedRow.cls = this.comparingRowCls;\n            newHighlightedRow.iconCls = 'b-icon b-icon-compare';\n        }\n    }\n\n    onVersionStoreChange({ action, records }) {\n        this._versionChanges.push({ action, records });\n        this.processUpdates();\n    }\n\n    onTransactionStoreChange({ action, records }) {\n        this._transactionChanges.push({ action, records });\n        this.processUpdates();\n    }\n\n    /**\n     * This is an optimization to more efficiently replace grid rows when the underlying stores change.\n     * We wait a tick, then replace the set of rows corresponding to the modified records with the new\n     * projected rowset.\n     *\n     * The code below does not handle record remove, or updating transactions without their version in the\n     * same tick. (Versions can be updated without their transactions, as when renamed.)\n     * @private\n     */\n    processUpdates() {\n        const\n            me = this,\n            versions = ArrayHelper.unique(me._versionChanges.flatMap(({ records }) => records)),\n            // <remove-on-release>\n            // TODO: why is version.id integer but txn.versionId string using websockets?\n            // </remove-on-release>\n            versionIds = new Set(versions.map(version => String(version.id))),\n            transactions = ArrayHelper.unique(\n                me._transactionChanges.flatMap(({ records }) => records)\n                    // Expand to all transactions for incoming versions\n                    .concat(versions.length === 0 ? []\n                        : me._transactionStore.query(txn => versionIds.has(txn.versionId))));\n        // Expand to all versions for incoming transaction\n        for (const transaction of transactions) {\n            if (transaction.versionId && !versionIds.has(transaction.versionId)) {\n                versions.push(me._versionStore.getById(transaction.versionId));\n                versionIds.add(transaction.versionId);\n            }\n        }\n        me.replaceRows(ArrayHelper.unique(versions), transactions);\n        me._transactionChanges = [];\n        me._versionChanges = [];\n    }\n\n    replaceRows(versions, transactions) {\n        const\n            me = this,\n            { showNamedVersionsOnly, showUnattachedTransactions, store } = me,\n            rowsToReplaceSet = new Set(),\n            transactionsByVersionId = ArrayHelper.groupBy(transactions, 'versionId'),\n            allRecords = transactions.concat(versions),\n            versionsToShow = showNamedVersionsOnly\n                ? versions.filter(version => version.name != null)\n                : versions;\n        for (const record of allRecords) {\n            for (const row of me._rowsByUnderlyingRecord.get(record) ?? EMPTY_ARRAY) {\n                rowsToReplaceSet.add(row);\n            }\n        }\n\n        me.suspendRefresh();\n\n        store.remove(Array.from(rowsToReplaceSet));\n        for (const version of versionsToShow) {\n            const newRows = store.add(me.getGridRows(version, transactionsByVersionId[version.id]));\n            me._rowsByUnderlyingRecord.set(version, newRows);\n        }\n        if (showUnattachedTransactions) {\n            for (const transaction of transactions.filter(txn => txn.versionId == null)) {\n                const newRows = store.add(me.getGridRows(null, [transaction]));\n                me._rowsByUnderlyingRecord.set(transaction, newRows);\n            }\n        }\n\n        me.resumeRefresh();\n\n        store.sort(store.sorters);\n    }\n\n    /**\n     * Does a full replace of all rows in the grid using all records currently in the two stores.\n     * @private\n     */\n    refreshGrid() {\n        this.replaceRows(this._versionStore.records, this._transactionStore.records);\n    }\n\n    /**\n     * Transform a set of transactions (and optional parent version) into tree structure needed by grid\n     * @private\n     */\n    getGridRows(version, transactions) {\n        const\n            me = this,\n            { showVersions, comparingVersionId } = me,\n            transactionRows = transactions?.map(transaction => {\n                const id = `t-${transaction.id}`;\n                return {\n                    id,\n                    expanded         : Boolean(me._expandedById?.get(id)),\n                    description      : transaction.description,\n                    occurredAt       : transaction.occurredAt,\n                    transactionModel : transaction,\n                    rootVersionModel : version,\n                    children         : transaction.actions.map((action, index) => {\n                        const id = `a-${transaction.id}-${index}`;\n                        return {\n                            id,\n                            expanded         : Boolean(me._expandedById?.get(id)),\n                            action,\n                            rootVersionModel : version,\n                            children         : action.propertyUpdates?.map(propertyUpdate => ({\n                                rootVersionModel : version,\n                                propertyUpdate\n                            })) ?? []\n                        };\n                    })\n                };\n            }) || [],\n            id = `v-${version?.id}`;\n        return version && showVersions ? {\n            id,\n            expanded     : Boolean(me._expandedById.get(id)),\n            description  : version.description,\n            occurredAt   : version.savedAt,\n            children     : transactionRows,\n            versionModel : version,\n            iconCls      : 'b-icon-version',\n            cls          : version.id === comparingVersionId ? me.comparingRowCls : null\n        } : transactionRows;\n    }\n\n    renderDescription(event) {\n        const { record } = event;\n        if (record.propertyUpdate) {\n            return this.renderPropertyUpdate(record.propertyUpdate);\n        }\n        else if (record.action) {\n            return this.renderActionDescription(record.action);\n        }\n        return record.description;\n    }\n\n    renderPropertyUpdate(propertyUpdate) {\n        const\n            clsPrefix = VersionGrid.type,\n            { property, before, after } = propertyUpdate;\n        return {\n            children : [{\n                tag      : 'div',\n                class    : `b-${clsPrefix}-property-update-desc`,\n                children : [\n                    {\n                        tag   : 'span',\n                        class : `b-${clsPrefix}-property-name`,\n                        html  : `${this.formatPropertyName(property)}`\n                    },\n                    this.renderPropertyValue(before, 'before'),\n                    {\n                        tag   : 'i',\n                        class : 'b-icon b-icon-right'\n                    },\n                    this.renderPropertyValue(after, 'after')\n                ]\n            }]\n        };\n    }\n\n    /**\n     * Return DomConfig for an individual data value.\n     * @param {*} value\n     * @param {'before'|'after'} side\n     * @returns {DomConfig}\n     * @private\n     */\n    renderPropertyValue(value, side) {\n        return {\n            tag   : 'span',\n            class : [\n                `b-${VersionGrid.type}-property-${side}`,\n                value == null && `b-${VersionGrid.type}-empty-value`\n            ],\n            html : value == null ? this.L('L{Versions.nullValue}') : this.formatValueString(value) ?? ``\n        };\n    }\n\n    /**\n     * Convert an individual data value to a string.\n     * @param {*} value The raw data value\n     * @returns {String} A string representing the value, for display\n     * @private\n     */\n    formatValueString(value) {\n        if (DateHelper.isDate(value)) {\n            return DateHelper.format(value, this.dateFormat);\n        }\n        else if (typeof (value) === 'number') {\n            return value.toFixed(2);\n        }\n        return value;\n    }\n\n    /**\n     * Format a property name in the change log to a displayable string. By default,\n     * converts e.g. \"camelCase\" to \"Camel case\".\n     * @param {String} propertyName The raw field name\n     * @returns {String} A string formatted for display\n     * @private\n     */\n    formatPropertyName(propertyName) {\n        return StringHelper.separate(propertyName);\n    }\n\n    getAssignmentTextTokens(assignmentChange) {\n        return {\n            event    : assignmentChange.event.name,\n            resource : assignmentChange.resource.name\n        };\n    }\n\n    getDependencyTextTokens(dependencyChange) {\n        return {\n            from : dependencyChange.fromTask.name,\n            to   : dependencyChange.toTask.name\n        };\n    }\n\n    /**\n     * Produces a text description to show in the description column for an 'action' row.\n     * @param {SchedulerPro.model.changelog.ChangeLogAction} action The action to describe\n     * @returns DomConfig of description text with highlightable entity names\n     * @private\n     */\n    renderActionDescription(action) {\n        const\n            me = this,\n            { actionType, entity } = action,\n            entityNames = me.L(`L{Versions.entityNames}`);\n        let description,\n            tokens = {\n                type : entityNames[entity.type],\n                name : entity.name\n            };\n        if (actionType === 'move') {\n            tokens.from = describePosition(action.from);\n            tokens.to = describePosition(action.to);\n        }\n\n        // Concatenate action and entity type to get description pattern from localizations\n        // e.g. 'L{Versions.addDependency}' | 'L{Versions.updateEntity}'\n        description = me.L(`L{Versions.${actionType}${knownEntityTypes[entity.type] ?? 'Entity'}}`);\n\n        if (entity.type === 'DependencyModel') {\n            tokens = me.getDependencyTextTokens(entity);\n        }\n        else if (entity.type === 'AssignmentModel') {\n            tokens = me.getAssignmentTextTokens(entity);\n        }\n\n        description = description.replace(/\\{(\\w+)\\}/g, (_, variable) => tokens[variable] ?? variable);\n        if (action.isUser) {\n            description = `[!] ${description}`;\n        }\n        return me.renderHighlightedTextElements(StringHelper.capitalize(description), tokens);\n    }\n\n    /**\n     * Sorts the actions within a transaction using precedence heuristic to show most \"significant\"\n     * actions first.\n     * @param {SchedulerPro.model.changelog.ChangeLogAction[]} actions\n     */\n    static sortActionRows(row1, row2) {\n        if (row1.parent === row2.parent && row1.action && row2.action) {\n            const\n                isUser1 = Boolean(row1.action.isUser),\n                isUser2 = Boolean(row2.action.isUser),\n                { actionType : type1, entity : { type : entityType1 } } = row1.action,\n                { actionType : type2, entity : { type : entityType2 } } = row2.action;\n\n            // Initial user actions first\n            if (isUser1 !== isUser2) {\n                return isUser1 ? -1 : 1;\n            }\n\n            // Adds/removes first, then updates; within those groups, tasks first\n            return Math.sign(actionTypeOrder[type1] - actionTypeOrder[type2]) ||\n                Math.sign(entityTypeOrder[entityType1] - entityTypeOrder[entityType2]) ||\n                0;\n        }\n        return 0;\n    }\n\n    triggerRestore(version) {\n        /**\n         * Fires when the user chooses to restore a selected version.\n         * @event restore\n         * @param {SchedulerPro.model.VersionModel} version The {@link SchedulerPro.model.VersionModel} being restored\n         */\n        this.trigger('restore', { version });\n    }\n\n    triggerCompare(version) {\n        /**\n         * Fires when the user chooses to compare a selected version.\n         * @event compare\n         * @param {SchedulerPro.model.VersionModel} version The {@link SchedulerPro.model.VersionModel} being restored\n         */\n        this.trigger('compare', { version });\n    }\n\n    triggerStopCompare(version) {\n        /**\n         * Fires when the user chooses to stop comparing a currently compared version.\n         * @event stopCompare\n         */\n        this.trigger('stopCompare');\n    }\n\n    /**\n     * Produce a DomConfig for cell text where **-delimited tokens are replaced by specified values. Used to\n     * allow CSS styling of replaced tokens (e.g. task names) in the changelog.\n     *\n     * @param {String} text Text string containing optional **delimited tokens**, taken from localizations\n     * @returns {DomConfig} DomConfig with text string broken into <span>s and tokens replaced\n     * @internal\n     */\n    renderHighlightedTextElements(text) {\n        const clsPrefix = this.constructor.type;\n        return {\n            children : [{\n                tag      : 'span',\n                class    : `b-${clsPrefix}-highlighted-text`,\n                children : text.split(/\\*\\*/g).reduce((out, chunk) => {\n                    out.children.push({\n                        tag   : 'span',\n                        text  : chunk,\n                        class : out.isEntity ? `b-${clsPrefix}-highlighted-entity` : null\n                    });\n                    out.isEntity = !out.isEntity;\n                    return out;\n                }, { children : [], isEntity : false }).children\n            }]\n        };\n    }\n\n}\n\nVersionGrid.initClass();\n"],"names":["ResourceCalendarColumn","Column","mixin","AttachToProjectMixin","$name","type","defaults","field","text","editor","CalendarField","clearable","allowInvalid","attachToProject","project","defaultCalendar","store","calendarManagerStore","attachToResourceStore","resourceStore","ion","name","update","thisObj","onResourceUpdate","record","changes","change","_change$value","oldValue","value","id","refreshCell","renderer","getById","displayField","ColumnStore","registerColumnType","_$name","ScaleColumn","isScaleColumn","fields","width","minWidth","cellCls","sortable","groupable","filterable","alwaysClearCell","scalePoints","onDestroy","scaleWidget","destroy","applyValue","useProp","key","arguments","buildScaleWidget","me","Scale","owner","grid","appendTo","floatRoot","cls","align","monitorResize","Object","defineProperties","get","set","element","style","_width","height","_height","_scaleWidget","cellElement","rowHeight","refresh","scaleCloneElement","cloneNode","removeAttribute","classList","remove","innerHTML","appendChild","EventModel","SchedulerProEvent","derive","TimeSpan","RecurringTimeSpan","PartOfProject","EventModelMixin","PercentDoneMixin","isProEventModel","defaultValue","convert","Duration","getDefaultSegmentModelClass","EventSegmentModel","updateWrapDate","date","duration","forward","Date","getTime","milliseconds","startDate","dt","isOccurrence","_startDate","allDay","constructor","getAllDayStartDate","generation","isParent","$ignoreChange","timeDiff","DateHelper","diff","child","children","add","batching","preamble","wrapStartDate","wrapEndDate","endDate","_endDate","getAllDayEndDate","postamble","fullEffort","unit","effortUnit","magnitude","effort","setEffort","_wrapStartDate","result","_wrapEndDate","data","isObject","outerStartDate","outerEndDate","isEditable","fieldName","isLeaf","manuallyScheduled","stm","_this$recurringEvent","recurringEvent","assigned","isDelayingCalculation","assignmentStore","storage","findItem","getCurrentConfig","options","segments","map","segment","EventStore","SharedEventStoreMixin","RecurringEventsMixin","GetEventsMixin","DayIndexMixin","EventStoreMixin","ChronoEventStoreMixin","AjaxStore","defaultConfig","modelClass","sortFn","a","b","Target","ProHorizontalLayout","Base","configurable","weights","groupBy","groupByThisObj","layoutFn","grouped","Boolean","getGroupValue","layoutData","group","eventRecord","call","Infinity","getEventGroups","events","groups","Set","sort","aValue","bValue","Array","from","ProHorizontalLayoutStack","HorizontalLayoutStack","layoutEventsInBands","heightRun","ProHorizontalLayoutPack","HorizontalLayoutPack","groupCount","length","packEventsInBands","event","j","slot","slotSize","size","groupIndex","indexOf","adjustedSlotStart","top","start","inBandHeight","inBandTop","forEach","assign","bandIndexToPxConvertFn","bandIndexToPxConvertThisObj","resourceRecord","counter","CalendarHighlightModel","ResourceTimeRangeModel","domIdPrefix","generateId","CalendarHighlight","ResourceTimeRangesBase","calendar","unhighlightOnDrop","collectAvailableResources","rangeCls","resourceTimeRangeModelClass","inflate","pluginConfig","config","afterConstruct","client","eventDragStart","eventDragReset","eventResizeStart","eventResizeEnd","dragCreateStart","afterDragCreate","highlightCalendar","eventRecords","resourceRecords","ArrayHelper","asArray","highlightEventCalendars","highlightResourceCalendars","clearExisting","disabled","unhighlightCalendars","flatMap","$linkedResources","highlight","Map","_eventRecord$calendar","timespans","getWorkingTimeRanges","timespan","currentOrientation","refreshEventsForResource","onRenderDone","_resourceRecord$calen","resources","keys","resource","onEventDragStart","context","_me$collectAvailableR","availableResources","features","eventDrag","constrainDragToResource","scheduler","records","onEventResizeStart","onDragCreateStart","getEventsToRender","_this$highlight","push","onEventDataGenerated","renderData","isCalendarHighlightModel","fillSize","isVertical","wrapperCls","className","html","dataset","taskBarFeature","left","eventId","generateElementId","updateDisabled","was","shouldInclude","featureClass","GridFeatureManager","registerFeature","DependencyEdit","SchedulerDependencyEdit","showLagField","editorConfig","items","activeField","label","EventBuffer","InstancePlugin","showDuration","tooltipTemplate","$config","chain","updateTooltipTemplate","tooltip","Tooltip","new","forElement","timeAxisSubGridElement","forSelector","offset","getHtml","activeTarget","resolveEventRecord","before","matches","_me$tooltip","useEventBuffer","bufferBeforeWidth","bufferAfterWidth","wrapperChildren","enabled","isHorizontal","sizeProp","tag","toString","undefined","updateShowDuration","isConfiguring","refreshWithTransition","doDisable","disable","isPainted","waitForAnimations","then","EventSegmentDrag","EventDrag","capitalizedEventName","getTriggerParams","dragData","assignmentRecords","browserEvent","triggerEventDrag","trigger","triggerDragStart","navigator","skipNextClick","triggerDragAbort","triggerDragAbortFinalized","triggerAfterDrop","valid","eventStore","needRefresh","initialAssignmentsState","find","assignment","i","_this$dragData$assign","includes","resourceId","updateRecords","copyKeyPressed","externalDropTarget","suspendAutoCommit","updateSegment","resumeAutoCommit","isCopy","targetEventRecord","targetResourceRecord","newResource","mode","suspendRefresh","updated","draggedEvent","eventBar","eventBarEls","instanceMeta","hasTemporaryDragElement","transient","slice","newStartDate","adjustStartDate","origStart","isEqual","_me$endBatchUpdate","endListeningForBatchedUpdates","cancelBatchUpdate","commitAsync","endBatchUpdate","resumeRefresh","fillTicks","el","lastDomConfig","isEventElementDraggable","eventElement","isEventSegment","closest","drag","targetSelector","buildDragHelperConfig","getMinimalDragData","info","getElementFromContext","resolveResourceRecord","assignmentRecord","resolveAssignmentRecord","beginBatchUpdate","beginBatch","_eventRecord$event","endBatch","_eventRecord$event2","cancelBatch","setupProductDragData","_me$getDateConstraint","mainEventElement","getElementsFromEventRecord","Error","ignoreSamePositionDrop","rtl","nextSegment","listenToBatchedUpdates","beginListeningForBatchedUpdates","dateConstraints","getDateConstraints","constrainRectangle","getConstrainingRectangle","eventRegion","Rectangle","foregroundCanvas","mainEventRegion","translate","x","setupConstraints","timeAxisViewModel","snapPixelAmount","draggedEntities","suspendRecordElementRedrawing","suspendElementRedrawing","minDate","maxDate","previousSegment","end","tipId","internalSnapToPosition","snapTo","updateDragContext","dirty","_client$features$even","enableEventAnimations","eventBuffer","borderWidths","border","hollow","NestedEvents","Delayable","eventLayout","barMargin","resourceMargin","eventHeight","headerHeight","constrainDragToParent","allowNestingOnDrop","allowDeNestingOnDrop","constrainResizeToParent","override","delayable","refreshClient","construct","tree","updateEventLayout","layout","console","warn","updateBarMargin","updateResourceMargin","updateEventHeight","updateHeaderHeight","setProperty","getEventLayout","parentEventRecord","overridden","getResourceMargin","isRoot","getBarMargin","getAppliedResourceHeight","borderWidth","getEventStyle","currentParentsHeight","getResourceWidth","currentParentsWidth","attachToEventStore","onEventStoreChange","some","r","parent","onEventStoreBatchedUpdate","beforeEventDragStart","parentElement","isDraggingNestedEvent","originalParentElement","originalBounds","getElementFromAssignmentRecord","bounds","constrainDragToTimeline","relativeBounds","DomSync","addChild","afterEventDragStart","parentBounds","getBoundingClientRect","setYConstraint","setXConstraint","checkEventDragValidity","message","L","processEventDrop","toScheduler","reassignedFrom","eventsToAdd","addedEvents","draggedAssignment","_eventRecord$children","newParent","targetResource","rootNode","existingAssignment","assignments","newParentElement","getElementFromEventRecord","syncIdMap","nestedEventsContainer","intersection","syncId","processCrossSchedulerEventDrop","afterEventDragAbortFinalized","animation","getAnimations","transitionProperty","finished","afterEventResizeStart","timespanRecord","max","min","returnWrapper","_assignmentRecord$eve","getChild","scheduleEvent","eventRect","DomHelper","setTranslateXY","setTopLeft","y","filter","isEventModel","assignedChildren","e","_e$$linkedResources","layouts","layoutEvents","overlappingEventSorter","nestedEvents","eventsData","values","absoluteTop","domConfig","renderEvent","syncOptions","syncIdField","releaseThreshold","ResourceNonWorkingTime","maxTimeAxisUnit","enableMouseEvents","entityName","properties","resourceMap","ResourceNonWorkingTimeModel","timeAxis","reconfigure","prio","changePreCommit","attachToCalendarManagerStore","onTimeAxisReconfigure","clear","onResourceChange","action","delete","runWithTransition","onCalendarChange","shouldPaint","compareUnits","effectiveCalendar","has","ranges","getNonWorkingTimeRanges","range","iconCls","isNonWorking","resolveResourceNonWorkingTimeInterval","rangeElement","_rangeElement$closest","elementData","timespanDefaults","isHighlightConfig","TimeSpanHighlight","domConfigs","configs","padding","rowManager","renderDone","onViewChanged","highlightTimeSpan","draw","surround","taskRecord","isTimeSpan","animationId","addTemporaryClass","surroundTimeSpan","rect","isGanttBase","getScheduleRegion","visualize","class","sync","targetElement","containerEl","onlyChildren","timeSpan","highlightTimeSpans","timeSpans","setPrototypeOf","unhighlightTimeSpans","fadeOut","opacity","fadeOutDetacher","EventHelper","onTransitionEnd","property","handler","_containerEl","createElement","retainElement","onTimeAxisViewModelUpdate","ChangeLogPropertyUpdate","after","freeze","ProjectModel","ProjectChangeHandlerMixin","ProjectCrudManager","ProjectModelMixin","SchedulerProProjectMixin","calendarModelClass","CalendarModel","dependencyModelClass","DependencyModel","eventModelClass","assignmentModelClass","AssignmentModel","resourceModelClass","ResourceModel","calendarManagerStoreClass","CalendarManagerStore","dependencyStoreClass","DependencyStore","eventStoreClass","assignmentStoreClass","AssignmentStore","resourceStoreClass","ResourceStore","calendarsData","supportShortSyncResponseNote","delayCalculation","stmClass","StateTrackingManager","calendars","taskStore","allRecords","updateCalendars","SchedulerProEventRendering","horizontalLayoutPackClass","horizontalLayoutStackClass","updateInternalEventLayout","oldEventLayout","clearLayouts","getEventLayoutHandler","horizontal","horizontalStack","layoutEventVerticallyStack","horizontalPack","layoutEventVerticallyPack","applyLayout","widgetClass","ProHorizontalRendering","HorizontalRendering","fillInnerSpanHorizontalPosition","startMS","innerStartMS","endMS","innerEndMS","durationMS","innerDurationMS","calculateMS","position","calculateHorizontalPosition","Math","floor","getTimeSpanRenderData","rowRecord","includeOutside","ProVerticalRendering","VerticalRendering","fillInnerSpanVerticalPosition","isBatchUpdating","getCoordinateFromDate","bottom","round","getSingleUnitInPixels","SchedulerProBase","SchedulerBase","ProjectProgressMixin","SchedulingIssueResolution","projectModelClass","dependencyIdField","isSchedulerPro","onPaintOverride","_mode","init","vertical","rendered","toggleEmptyText","bodyContainer","toggleClasses","rowCount","isLoadingOrSyncing","createEvent","row","isWorkingTime","taskEdit","isEditing","aftertaskedit","once","initClass","VersionHelper","setVersion","emptyFn","ResourceHistogram","sortFeatureStore","timeAxisColumnCellCls","effortFormat","showEffortUnit","useProjectTimeUnitsForScale","TimeUnit","Hour","barTextEffortUnit","barTipEffortUnit","showMaxEffort","showBarText","showBarTip","barTooltip","barTooltipClass","series","maxEffort","getRectClass","createEventOnDblClick","readOnly","getBarTip","barTooltipTemplate","datum","isGroup","getGroupBarTip","getResourceBarTip","getBarText","getBarTextRenderData","groupBarTipAssignmentLimit","histogramWidgetClass","Histogram","histogramWidgetConfig","includeInactiveEvents","fixedRowHeight","allocationReportByRecord","allocationDataByRecord","allocationObserverByRecord","resourceGroupsToUpdate","resourceGroupsAllocation","scheduleRefreshRows","createOnFrame","refreshRows","refreshResourcesWhenReady","onAssignmentStoreChange","beforeRowHeight","renderRow","currentTimeAxis","_timeAxis","partner","endReconfigure","onRowManagerRenderRow","isSpecialRow","isDestroyed","renderGroupHistogram","renderGroupScale","_me$_histogramWidget","_me$_groupHistogramWi","observer","_me$allocationObserve","entries","removeObserver","entity","_me$allocationReportB","removeEntity","_record$removeEntity","_histogramWidget","_groupHistogramWidget","updateProject","detachListeners","delayCalculationStart","delayCalculationEnd","repopulateReplica","getRowHeight","convertEffortUnit","toUnit","run","updateUseProjectTimeUnitsForScale","eventParams","generateScalePoints","_generatedScalePoints","_this$project","scaleColumn","columns","query","column","_scalePoints","histogramWidget","lastPoint","scaleMax","scaleUnit","maxInScaleUnits","scaleMaxPadding","topValue","Millisecond","asMilliseconds","buildScalePointText","scalePoint","getShortNameOfUnit","_this$project2","graph","increment","scaleStep","getSmallerUnit","as","factor","updateViewPreset","viewPreset","_updatingViewPreset","isInitialCommitPerformed","onTimeAxisEndReconfigure","onPaint","firstPaint","updateGetBarTip","changeBarTooltip","oldTooltip","isTooltip","hoverDelay","trackMouse","getTipHtml","bind","onRepopulateReplica","ticksIdentifier","args","_this$barTooltipTempl","index","getRecordFromElement","histogramData","parseInt","buildTicksIdentifier","getGraph","addIdentifier","CalculatedValueGen","writeToGraph","BaseCalendarMixin","unspecifiedTimeIsWorking","intervals","ticks","tick","isWorking","collectTicksWidth","prevDuration","tickDurations","totalDuration","isMonotonous","ticksWidth","onProjectDelayCalculationStart","onProjectDelayCalculationEnd","projectUnitsHasChanged","daysPerMonth","_projectDaysPerMonth","daysPerWeek","_projectDaysPerWeek","hoursPerDay","_projectHoursPerDay","internalOnProjectRefresh","source","isCalculated","relayStoreDataChange","count","isDestroying","timeAxisColumn","renderResourceHistogram","col","insertScaleColumn","insertChild","buildHistogramWidget","_me$timeAxisColumn","omitZeroHeightBars","getRectClassDefault","getBarTextDefault","rectConfig","isOverallocated","isUnderallocated","effortFormatter","format","formatter","_effortFormatter","_effortFormat","NumberFormat","_lastFormat","getEffortText","_this$project3","localizedUnit","effortInUnits","getBarTipEffortUnit","defaultUnit","allocated","available","assignmentTpl","dateFormat","resultFormat","assignmentsSuffix","Day","Second","assignmentsArray","resourceAllocation","key1","value1","key2","value2","replace","StringHelper","encodeHtml","join","getBarTextEffortUnit","updateShowBarText","updateShowBarTip","updateShowMaxEffort","_showMaxEffort","needsRefresh","widget","_seriesMaxEffort","updateIncludeInactiveEvents","allocationReport","onTimeAxisEndReconfigureInternal","_lastTimeAxisUnit","_lastTimeAxisIncrement","graphReady","onBeforeRowHeight","_timeAxisColumn","onElementResize","totalSize","getRecordAllocationInfoRenderData","allocation","isArray","total","renderRecordAllocationInfo","histogramCloneElement","renderRows","timeView","onRecordAllocationCalculated","cell","getCell","columnId","groupParent","getResourceGroupParent","scheduleGroupRender","buildResourceAllocationReport","resourceAllocationInfoClass","registerRecordAllocationReport","addEntity","allocationObserver","observe","$","addObserver","_allocationReport","renderScheduledGroups","clearTimeout","renderScheduledGroupTimer","setTimeout","fn","delay","cancelOutstanding","calculateResourceGroupAllocation","_allocationReports$","_allocationReports$$a","groupChildren","allocationReports","newAllocation","newAllocationLength","every","allocationInfo","combinedAllocation","combined","units","_me$scaleColumn","isCalculatingTopValue","_groupScaleWidget","updateLocalization","ResourceUtilizationModel","Model","_childrenIndex","origin","mapOriginValues","fillChildren","isResourceModel","isAssignmentModel","_origin$event","_origin$event2","_me$origin","toRemove","toAdd","removeChild","afterRemoveChild","added","_this$origin","stores","traverse","node","setModelByOrigin","getChildByOrigin","exposeProperties","ResourceUtilizationStore","AbstractPartOfProjectStoreMixin","_modelByOrigin","setResourceStore","setAssignmentStore","setEventStore","fillStoreFromProject","onResourceStoreDataChanged","onEventUpdate","onAssignmentsChange","onAssignmentsRefresh","onAssignmentsAdd","onAssignmentUpdate","onAssignmentsRemove","isMove","resourceWrapper","getModelByOrigin","assignmentWrapper","newResourceWrapper","_this$_project","_project","removeAll","removed","model","ResourceUtilization","getAssignmentBarTip","localeClass","buildStore","allocationData","registerAssignmentAllocationReport","destroyStores","_me$store","byAssignments","_record$origin","_record$origin2","assignCls","_data$record","_data$record2","getBarTextRenderDataDefault","assignmentIntervals","Tree","SchedulerPro","Timeline","forceFit","autoAdjust","zoomOnMouseWheel","zoomOnTimeAxisDoubleClick","displayDateFormat","fillFromTaskStore","startDateLabel","document","endDateLabel","initialCommitPerformed","isInitialCommit","ObjectHelper","cellEdit","cellMenu","columnAutoWidth","columnLines","columnPicker","columnReorder","columnResize","contextMenu","eventContextMenu","eventDragCreate","eventEdit","eventFilter","eventMenu","eventResize","eventTooltip","headerMenu","regionResize","scheduleContextMenu","scheduleMenu","scheduleTooltip","timeAxisHeaderMenu","timeRanges","Store","now","refreshPreCommit","onTaskStoreChange","resize","onSizeChanged","oldWidth","reFit","updateRowHeight","fitTimeline","isConnected","offsetHeight","zoomToFit","leftMargin","rightMargin","updateStartEndLabels","getFormattedDate","isCollapse","needsFit","task","showInTimeline","cloneTask","timelineEvent","clone","render","timelineTasks","isScheduled","onLocaleChange","EMPTY_ARRAY","actionTypeOrder","entityTypeOrder","TaskModel","describePosition","knownEntityTypes","VersionGridRow","GridRowModel","VersionGrid","TreeGrid","sorters","ascending","sortActionRows","reapplySortersOnAdd","showUnattachedTransactions","showNamedVersionsOnly","showVersions","comparingVersionId","flex","continueEditingOnCellClick","editNextOnEnterPress","removeRow","cut","copy","paste","renameButton","icon","onItem","startEditing","restoreButton","triggerRestore","versionModel","compareButton","triggerCompare","stopComparingButton","triggerStopCompare","rowCopyPaste","rest","renderDescription","autoHeight","internalListeners","beforeCellEditStart","editorContext","finishCellEdit","trim","cellMenuBeforeShow","toggleNode","collapse","_expandedById","processUpdates","_rowsByUnderlyingRecord","WeakMap","_transactionChanges","_versionChanges","comparingRowCls","merge","refreshGrid","updateDateFormat","newDateFormat","occurredAtColumn","newProject","_versionStore","getCrudStore","_transactionStore","onVersionStoreChange","onTransactionStoreChange","updateShowNamedVersionsOnly","updateShowUnattachedTransactions","updateShowVersions","updateComparingVersionId","newVersionId","oldVersionId","oldHighlightedRow","newHighlightedRow","versionId","versions","unique","versionIds","version","String","transactions","concat","txn","transaction","replaceRows","rowsToReplaceSet","transactionsByVersionId","versionsToShow","newRows","getGridRows","transactionRows","_me$_expandedById","expanded","description","occurredAt","transactionModel","rootVersionModel","actions","_me$_expandedById2","_action$propertyUpdat","propertyUpdates","propertyUpdate","savedAt","renderPropertyUpdate","renderActionDescription","clsPrefix","formatPropertyName","renderPropertyValue","side","formatValueString","isDate","toFixed","propertyName","separate","getAssignmentTextTokens","assignmentChange","getDependencyTextTokens","dependencyChange","fromTask","to","toTask","actionType","entityNames","tokens","_","variable","isUser","renderHighlightedTextElements","capitalize","row1","row2","isUser1","isUser2","type1","entityType1","type2","entityType2","sign","split","reduce","out","chunk","isEntity"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMA,sBAAsB,SAASC,MAAM,CAACC,KAAK,CAACC,oBAAoB,CAAC,CAAC;AACnF;EACA,WAAWC,KAAKA,GAAG;AACf,IAAA,OAAO,wBAAwB,CAAA;AACnC,GAAA;EACA,WAAWC,IAAIA,GAAG;AACd,IAAA,OAAO,kBAAkB,CAAA;AAC7B,GAAA;EACA,WAAWC,QAAQA,GAAG;IAClB,OAAO;AACHC,MAAAA,KAAK,EAAI,UAAU;AACnBC,MAAAA,IAAI,EAAK,UAAU;AACnBC,MAAAA,MAAM,EAAG;QACLJ,IAAI,EAAWK,aAAa,CAACL,IAAI;AACjCM,QAAAA,SAAS,EAAM,IAAI;AACnBC,QAAAA,YAAY,EAAG,KAAA;AACnB,OAAA;KACH,CAAA;AACL,GAAA;AACA;AACA;EACAC,eAAeA,CAACC,OAAO,EAAE;AACrB,IAAA,IAAIA,OAAO,EAAE;AACT;AACA,MAAA,IAAI,CAACC,eAAe,GAAGD,OAAO,CAACC,eAAe,CAAA;AAC9C,MAAA,IAAI,CAACN,MAAM,CAACO,KAAK,GAAGF,OAAO,CAACG,oBAAoB,CAAA;AACpD,KAAA;AACJ,GAAA;EACAC,qBAAqBA,CAACC,aAAa,EAAE;AACjC,IAAA,KAAK,CAACD,qBAAqB,CAACC,aAAa,CAAC,CAAA;AAC1C,IAAA,IAAIA,aAAa,EAAE;MACfA,aAAa,CAACC,GAAG,CAAC;AACdC,QAAAA,IAAI,EAAM,eAAe;AACzBC,QAAAA,MAAM,EAAI,kBAAkB;AAC5BC,QAAAA,OAAO,EAAG,IAAA;AACd,OAAC,CAAC,CAAA;AACN,KAAA;AACJ,GAAA;AACA;AACA;AACA;AACAC,EAAAA,gBAAgBA,CAAC;IAAEC,MAAM;AAAEC,IAAAA,OAAAA;AAAQ,GAAC,EAAE;AAClC,IAAA,MAAMC,MAAM,GAAGD,OAAO,CAAC,IAAI,CAACnB,KAAK,CAAC,CAAA;AAClC,IAAA,IAAIoB,MAAM,EAAE;AAAA,MAAA,IAAAC,aAAA,CAAA;AACR;MACA,IAAI,OAAOD,MAAM,CAACE,QAAQ,KAAK,QAAQ,IAAI,CAAAD,CAAAA,aAAA,GAAAD,MAAM,CAACG,KAAK,MAAA,IAAA,IAAAF,aAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAZA,aAAA,CAAcG,EAAE,MAAKJ,MAAM,CAACE,QAAQ,EAAE;AAC7E,QAAA,OAAA;AACJ,OAAA;AACA,MAAA,IAAI,CAACG,WAAW,CAACP,MAAM,CAAC,CAAA;AAC5B,KAAA;AACJ,GAAA;AACA;AACA;AACAQ,EAAAA,QAAQA,CAAC;AAAEH,IAAAA,KAAAA;AAAM,GAAC,EAAE;AAChB,IAAA,IAAIA,KAAK,KAAK,IAAI,CAACf,eAAe,EAAE;AAChC,MAAA,OAAO,EAAE,CAAA;AACb,KAAC,MACI,IAAIe,KAAK,IAAIA,KAAK,CAACC,EAAE,EAAE;AACxB,MAAA,MAAMN,MAAM,GAAG,IAAI,CAAChB,MAAM,CAACO,KAAK,CAACkB,OAAO,CAACJ,KAAK,CAACC,EAAE,CAAC,CAAA;MAClD,OAAON,MAAM,IAAIA,MAAM,CAAC,IAAI,CAAChB,MAAM,CAAC0B,YAAY,CAAC,IAAI,EAAE,CAAA;AAC3D,KAAC,MACI;AACD,MAAA,OAAO,EAAE,CAAA;AACb,KAAA;AACJ,GAAA;AACA;AACJ,CAAA;;AACAC,WAAW,CAACC,kBAAkB,CAACrC,sBAAsB,CAAC,CAAA;AACtDA,sBAAsB,CAACsC,MAAM,GAAG,wBAAwB;;ACpFxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMC,WAAW,SAAStC,MAAM,CAAC;AAC5C;EACA,WAAWG,KAAKA,GAAG;AACf,IAAA,OAAO,aAAa,CAAA;AACxB,GAAA;EACA,WAAWC,IAAIA,GAAG;AACd,IAAA,OAAO,OAAO,CAAA;AAClB,GAAA;EACA,WAAWmC,aAAaA,GAAG;AACvB,IAAA,OAAO,IAAI,CAAA;AACf,GAAA;EACA,WAAWC,MAAMA,GAAG;IAChB,OAAO,CACH,aAAa,CAChB,CAAA;AACL,GAAA;EACA,WAAWnC,QAAQA,GAAG;IAClB,OAAO;AACHE,MAAAA,IAAI,EAAc,MAAM;AACxBkC,MAAAA,KAAK,EAAa,EAAE;AACpBC,MAAAA,QAAQ,EAAU,EAAE;AACpBC,MAAAA,OAAO,EAAW,cAAc;AAChCnC,MAAAA,MAAM,EAAY,KAAK;AACvBoC,MAAAA,QAAQ,EAAU,KAAK;AACvBC,MAAAA,SAAS,EAAS,KAAK;AACvBC,MAAAA,UAAU,EAAQ,KAAK;AACvBC,MAAAA,eAAe,EAAG,KAAK;AACvBC,MAAAA,WAAW,EAAO,CACd;AACInB,QAAAA,KAAK,EAAG,CAAA;AACZ,OAAC,EACD;AACIA,QAAAA,KAAK,EAAG,CAAC;AACTtB,QAAAA,IAAI,EAAI,CAAA;OACX,CAAA;KAER,CAAA;AACL,GAAA;AACA;AACA;AACA0C,EAAAA,SAASA,GAAG;AACR,IAAA,IAAI,CAACC,WAAW,CAACC,OAAO,EAAE,CAAA;AAC9B,GAAA;AACA;AACA;EACA,IAAIV,KAAKA,CAACA,KAAK,EAAE;IACb,KAAK,CAACA,KAAK,GAAGA,KAAK,CAAA;AACnB,IAAA,IAAI,CAACS,WAAW,CAACT,KAAK,GAAGA,KAAK,CAAA;AAClC,GAAA;EACA,IAAIA,KAAKA,GAAG;IACR,OAAO,KAAK,CAACA,KAAK,CAAA;AACtB,GAAA;AACAW,EAAAA,UAAUA,CAACC,OAAO,EAAEC,GAAG,EAAEzB,KAAK,EAAE;AAC5B;IACA,IAAIyB,GAAG,KAAK,aAAa,EAAE;AACvB,MAAA,IAAI,CAACJ,WAAW,CAACI,GAAG,CAAC,GAAGzB,KAAK,CAAA;AACjC,KAAA;AACA,IAAA,OAAO,KAAK,CAACuB,UAAU,CAAC,GAAGG,SAAS,CAAC,CAAA;AACzC,GAAA;AACAC,EAAAA,gBAAgBA,GAAG;IACf,MAAMC,EAAE,GAAG,IAAI,CAAA;AACf,IAAA,MAAMP,WAAW,GAAG,IAAIQ,KAAK,CAAC;MAC1BC,KAAK,EAAWF,EAAE,CAACG,IAAI;AACvBC,MAAAA,QAAQ,EAAQJ,EAAE,CAACG,IAAI,CAACE,SAAS;AACjCC,MAAAA,GAAG,EAAa,kBAAkB;AAClCC,MAAAA,KAAK,EAAW,OAAO;MACvBhB,WAAW,EAAKS,EAAE,CAACT,WAAW;AAC9BiB,MAAAA,aAAa,EAAG,KAAA;AACpB,KAAC,CAAC,CAAA;AACFC,IAAAA,MAAM,CAACC,gBAAgB,CAACjB,WAAW,EAAE;AACjCT,MAAAA,KAAK,EAAG;AACJ2B,QAAAA,GAAGA,GAAG;UACF,OAAOX,EAAE,CAAChB,KAAK,CAAA;SAClB;QACD4B,GAAGA,CAAC5B,KAAK,EAAE;UACP,IAAI,CAAC6B,OAAO,CAACC,KAAK,CAAC9B,KAAK,GAAI,CAAEA,EAAAA,KAAM,CAAG,EAAA,CAAA,CAAA;AACvC,UAAA,IAAI,CAAC+B,MAAM,GAAGf,EAAE,CAAChB,KAAK,CAAA;AAC1B,SAAA;OACH;AACDgC,MAAAA,MAAM,EAAG;AACLL,QAAAA,GAAGA,GAAG;UACF,OAAO,IAAI,CAACM,OAAO,CAAA;SACtB;QACDL,GAAGA,CAACI,MAAM,EAAE;UACR,IAAI,CAACH,OAAO,CAACC,KAAK,CAACE,MAAM,GAAI,CAAEA,EAAAA,MAAO,CAAG,EAAA,CAAA,CAAA;UACzC,IAAI,CAACC,OAAO,GAAGD,MAAM,CAAA;AACzB,SAAA;AACJ,OAAA;AACJ,KAAC,CAAC,CAAA;AACFvB,IAAAA,WAAW,CAACT,KAAK,GAAGgB,EAAE,CAAChB,KAAK,CAAA;AAC5B,IAAA,OAAOS,WAAW,CAAA;AACtB,GAAA;EACA,IAAIA,WAAWA,GAAG;IACd,MAAMO,EAAE,GAAG,IAAI,CAAA;AACf,IAAA,IAAI,CAACA,EAAE,CAACkB,YAAY,EAAE;AAClBlB,MAAAA,EAAE,CAACkB,YAAY,GAAGlB,EAAE,CAACD,gBAAgB,EAAE,CAAA;AAC3C,KAAA;IACA,OAAOC,EAAE,CAACkB,YAAY,CAAA;AAC1B,GAAA;AACA;AACA;AACA3C,EAAAA,QAAQA,CAAC;IAAE4C,WAAW;IAAE1B,WAAW,GAAG,IAAI,CAACA,WAAAA;AAAY,GAAC,EAAE;AACtDA,IAAAA,WAAW,CAACuB,MAAM,GAAG,IAAI,CAACb,IAAI,CAACiB,SAAS,CAAA;IACxC3B,WAAW,CAAC4B,OAAO,EAAE,CAAA;AACrB;AACA;IACA,MAAMC,iBAAiB,GAAG7B,WAAW,CAACoB,OAAO,CAACU,SAAS,CAAC,IAAI,CAAC,CAAA;AAC7DD,IAAAA,iBAAiB,CAACE,eAAe,CAAC,IAAI,CAAC,CAAA;AACvCF,IAAAA,iBAAiB,CAACG,SAAS,CAACC,MAAM,CAAC,kBAAkB,CAAC,CAAA;IACtDP,WAAW,CAACQ,SAAS,GAAG,EAAE,CAAA;AAC1BR,IAAAA,WAAW,CAACS,WAAW,CAACN,iBAAiB,CAAC,CAAA;AAC9C,GAAA;AACA;AACJ,CAAA;;AACA5C,WAAW,CAACC,kBAAkB,CAACE,WAAW,CAAC,CAAA;AAC3CA,WAAW,CAACD,MAAM,GAAG,aAAa;;ACjIlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMiD,UAAU,SAASC,iBAAiB,CAACC,MAAM,CAACC,QAAQ,CAAC,CAACxF,KAAK,CAC5EyF,iBAAiB,EACjBC,aAAa,EACbC,eAAe,EACfC,gf,IAAA,OAAO,YAAY,CAAA;AACvB,GAAA;EACA,OAAO2F,eAAe,GAAG,IAAI,CAAA;EAC7B,WAAWtD,MAAMA,GAAG;IAChpB,MAAAA,IAAI,EAAG,gBAAgB;AAAEhB,MAAAA,IAAI,EAAG,SAAS;AAAE2F,MAAAA,YAAY,EAAG,KAAA;KAAO;AACnE;AACZ;AACA;AACA;AACA;IACY,MAAM;AACN;AACZ;AACA;AAC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,CAAC,CAAA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAeC,CAAAA,MAAM,IAAI,MAAMC,mBAAmB,UAAUD,MAAM,IAAIE,IAAI,EAAE;EACxE,WAAWC,YAAYA,GAAG;IACtB,OAAO;AACH;AACZ;AACA;AACA;AACY7K,MAAAA,IAAI,EAAG,IAAI;AACX;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY8K,MAAAA,OAAO,EAAG,IAAI;AACd;AACZ;AACA;AACA;AACA;AACA;AACYC,MAAAA,OAAO,EAAU,IAAI;AACrBC,MAAAA,cAAc,EAAG,IAAI;AACrB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMC,YAAY,SAAS3J,cAAc,CAACzT,KAAK,CAACC,oBAAoB,EAAEod,SAAS,CAAC,CAAC;EAC5F,OAAOnd,KAAK,GAAG,cAAc,CAAA;AAC7B;AACA,EAAA,OAAO8K,YAAY,GAAG;AAClB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQsS,IAAAA,WAAW,EAAG,MAAM;AACpB;AACR;AACA;AACA;AACA;AACQC,IAAAA,SAAS,EAAG,CAAC;AACb;AACR;AACA;AACA;AACA;AACQC,IAAAA,cAAc,EAAG,CAAC;AAClB;AACR;AACA;AACA;AACA;AACQC,IAAAA,WAAW,EAAG,EAAE;AAChB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQC,IAAAA,YAAY,EAAG,EAAE;AACjB;AACR;AACA;AACA;AACA;AACA;AACQC,IAAAA,qBAAqB,EAAG,KAAK;AAC7B;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQC,IAAAA,kBAAkB,EAAG,IAAI;AACzB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACQC,IAAAA,oBAAoB,EAAG,IAAI;AAC3B;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQC,IAAAA,uBAAuB,EAAG,IAAA;GAC7B,CAAA;AACD,EAAA,OAAOjP,YAAY,GAAG;IAClB4F,MAAM,EAAG,CAAC,2BAA2B,CAAC;AACtCZ,IAAAA,KAAK,EAAI,CACL,mBAAmB,EAAE,sBAAsB,EAAE,kBAAkB,EAAE,gCAAgC,EACjG,sBAAsB,EAAE,qBAAqB,EAAE,8BAA8B,EAC7E,wBAAwB,EAAE,uBAAuB,CACpD;AACDkK,IAAAA,QAAQ,EAAG,CACP,mBAAmB,EAAE,cAA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CnB1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMinB,YAAY,SAASC,yBAAyB,CAACC,kBAAkB,CAACC,iBAAiB,CAACC,wBAAwB,CAAC,CAAC,CAAC,CAAC;AACjI;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;EACA,WAAWvpB,KAAKA,GAAG;AACf,IAAA,OAAO,cAAc,CAAA;AACzsK,aAAaA,GAAG;IACvkf,MAAAA,kBAAkB,EAAGC,aAAa;AAClC;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,oBAAoB,EAAGC,eAAe;AACtC;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,eAAe,EAAGzkB,UAAU;AAC5B;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACY0kB,MAAAA,oBAAoB,EAAGC,eAAe;AACtC;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,kBAAkB,EAAGC,aAAa;AAClC;AACZ;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,yBAAyB,EAAGC,oBAAoB;AAChD;AACZ;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,oBAAoB,EAAGC,eAAe;AACtC;AACZ;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,eAAe,EAAGvgB,UAAU;AAC5B;AACZ;AACA;AACA;AACA;AACA;AACA;AACYwgB,MAAAA,oBAAoB,EAAGC,eAAe;AACtC;AACZ;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,kBAAkB,EAAGC,aAAa;AAClC;AACA;AACZ;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,aAAa,EAAG,IAAI;AACpB;AACZ;AACA;AACA;AACA;AACA;AACYC,MAAAA,4BAA4B,EAAG,6NAA6N;AAC5P;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYC,MAAAA,gBAAgB,EAAG,IAAI;MACvB/pB,oBAAoB,EAAG,EAAE;AACzBgqB,MAAAA,QAAQ,EAAGC,oBAAAA;KACd,CAAA;AACL,GAAA;EACA,WAAWhgB,YAAYA,GAAG;IACtB,OAAO;AACH;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY;AACZ;AACA;AACA;AACA;AACA;AACA;AACYigB,MAAAA,SAAS,EAAG,IAAA;KACf,CAAA;AACL,GAAA;AACA;EACA,IAAIC,SAASA,GAAG;IACZ,OAAO,IAAI,CAACpU,UAAU,CAAA;AAC1B,GAAA;AACA;AACA;EACA,IAAImU,SAASA,GAAG;AACZ,IAAA,OAAO,IAAI,CAAClqB,oBAAoB,CAACoqB,UAAU,CAAA;AAC/C,GAAA;EACAC,eAAeA,CAACH,SAAS,EAAE;AACvB,IAAA,IAAI,CAAClqB,oBAAoB,CAAC4H,IAAI,GAAGsiB,SAAS,CAAA;AAC9C,GAAA;AACA;AACJ,CAAA;;AACA5B,YAAY,CAACjnB,MAAM,GAAG,cAAc;;ACh6BpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAeyI,CAAAA,MAAM,IAAI,MAAMwgB,0BAA0B,UAAUxgB,MAAM,IAAIE,IAAI,EAAE;EAC/E,WAAW7K,KAAKA,GAAG;AACf,IAAA,OAAO,4BAA4B,CAAA;AACvC,GAAA;EACA,WAAW8K,YAAYA,GAAG;IACtB,OAAO;AACH;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYsS,MAAAA,WAAW,EAAG,OAAO;AACrB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AA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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMghC,mBAAmB,SAAS5T,iBAAiB,CAAC;AAC/D;EACA,OAAOtvB,KAAK,GAAG,qBAAqB,CAAA;EACpC,OAAOC,IAAI,GAAG,qBAAqB,CAAA;AACnC,EAAA,OAAO6K,YAAY,GAAG;AAClB;AACR;AACA;AACA;AACQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ;AACA0kB,IAAAA,qBAAqB,EAAG,gDAAgD;AACxE;AACR;AACA;AACA;AACA;AACA;AACQ9qB,IAAAA,SAAS,EAAG,EAAE;AACdgrB,IAAAA,cAAc,EAAG,KAAK;AACtB;AACR;AACA;AACA;AACQM,IAAAA,aAAa,EAAG,KAAK;AACrB;AACR;AACA;AACA;AACA;AACA;AACA;AACQC,IAAAA,WAAW,EAAG,IAAI;AAClB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQU,IAAAA,kBAAkBA,CAAC;MAAEvoB,MAAM;MAAEyoB,OAAO;MAAEhgB,QAAQ;AAAEmG,MAAAA,UAAAA;AAAW,KAAC,EAAE;MAC1D,IAAIzO,MAAM,GAAG,EAAE,CAAA;AACf;AACA,MAAA,IAAIH,MAAM,EAAE;AACR,QAAA,IAAIyI,QAAQ,EAAE;AACVtI,UAAAA,MAAM,GAAG,IAAI,CAA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"}